"bundle";
System.registerDynamic("npm:babel-plugin-syntax-decorators@6.13.0.json", [], true, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib": "./lib/index.js"
    }
  };
});

System.registerDynamic("npm:babel-plugin-syntax-decorators@6.13.0/lib/index.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  exports.default = function () {
    return {
      manipulateOptions: function manipulateOptions(opts, parserOpts) {
        parserOpts.plugins.push("decorators");
      }
    };
  };

  module.exports = exports["default"];
});
System.registerDynamic('npm:lodash@4.17.4/cloneDeep.js', ['./_baseClone'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseClone = $__require('./_baseClone');

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_SYMBOLS_FLAG = 4;

  /**
   * This method is like `_.clone` except that it recursively clones `value`.
   *
   * @static
   * @memberOf _
   * @since 1.0.0
   * @category Lang
   * @param {*} value The value to recursively clone.
   * @returns {*} Returns the deep cloned value.
   * @see _.clone
   * @example
   *
   * var objects = [{ 'a': 1 }, { 'b': 2 }];
   *
   * var deep = _.cloneDeep(objects);
   * console.log(deep[0] === objects[0]);
   * // => false
   */
  function cloneDeep(value) {
    return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
  }

  module.exports = cloneDeep;
});
System.registerDynamic("npm:lodash@4.17.4/_baseHas.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * The base implementation of `_.has` without support for deep paths.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {Array|string} key The key to check.
   * @returns {boolean} Returns `true` if `key` exists, else `false`.
   */
  function baseHas(object, key) {
    return object != null && hasOwnProperty.call(object, key);
  }

  module.exports = baseHas;
});
System.registerDynamic('npm:lodash@4.17.4/_isKey.js', ['./isArray', './isSymbol'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var isArray = $__require('./isArray'),
      isSymbol = $__require('./isSymbol');

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/;

  /**
   * Checks if `value` is a property name and not a property path.
   *
   * @private
   * @param {*} value The value to check.
   * @param {Object} [object] The object to query keys on.
   * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
   */
  function isKey(value, object) {
    if (isArray(value)) {
      return false;
    }
    var type = typeof value;
    if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
  }

  module.exports = isKey;
});
System.registerDynamic('npm:lodash@4.17.4/memoize.js', ['./_MapCache'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var MapCache = $__require('./_MapCache');

  /** Error message constants. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /**
   * Creates a function that memoizes the result of `func`. If `resolver` is
   * provided, it determines the cache key for storing the result based on the
   * arguments provided to the memoized function. By default, the first argument
   * provided to the memoized function is used as the map cache key. The `func`
   * is invoked with the `this` binding of the memoized function.
   *
   * **Note:** The cache is exposed as the `cache` property on the memoized
   * function. Its creation may be customized by replacing the `_.memoize.Cache`
   * constructor with one whose instances implement the
   * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
   * method interface of `clear`, `delete`, `get`, `has`, and `set`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Function
   * @param {Function} func The function to have its output memoized.
   * @param {Function} [resolver] The function to resolve the cache key.
   * @returns {Function} Returns the new memoized function.
   * @example
   *
   * var object = { 'a': 1, 'b': 2 };
   * var other = { 'c': 3, 'd': 4 };
   *
   * var values = _.memoize(_.values);
   * values(object);
   * // => [1, 2]
   *
   * values(other);
   * // => [3, 4]
   *
   * object.a = 2;
   * values(object);
   * // => [1, 2]
   *
   * // Modify the result cache.
   * values.cache.set(object, ['a', 'b']);
   * values(object);
   * // => ['a', 'b']
   *
   * // Replace `_.memoize.Cache`.
   * _.memoize.Cache = WeakMap;
   */
  function memoize(func, resolver) {
    if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function () {
      var args = arguments,
          key = resolver ? resolver.apply(this, args) : args[0],
          cache = memoized.cache;

      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result) || cache;
      return result;
    };
    memoized.cache = new (memoize.Cache || MapCache)();
    return memoized;
  }

  // Expose `MapCache`.
  memoize.Cache = MapCache;

  module.exports = memoize;
});
System.registerDynamic('npm:lodash@4.17.4/_memoizeCapped.js', ['./memoize'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var memoize = $__require('./memoize');

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /**
   * A specialized version of `_.memoize` which clears the memoized function's
   * cache when it exceeds `MAX_MEMOIZE_SIZE`.
   *
   * @private
   * @param {Function} func The function to have its output memoized.
   * @returns {Function} Returns the new memoized function.
   */
  function memoizeCapped(func) {
    var result = memoize(func, function (key) {
      if (cache.size === MAX_MEMOIZE_SIZE) {
        cache.clear();
      }
      return key;
    });

    var cache = result.cache;
    return result;
  }

  module.exports = memoizeCapped;
});
System.registerDynamic('npm:lodash@4.17.4/_stringToPath.js', ['./_memoizeCapped'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var memoizeCapped = $__require('./_memoizeCapped');

  /** Used to match property names within property paths. */
  var reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Converts `string` to a property path array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the property path array.
   */
  var stringToPath = memoizeCapped(function (string) {
    var result = [];
    if (reLeadingDot.test(string)) {
      result.push('');
    }
    string.replace(rePropName, function (match, number, quote, string) {
      result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);
    });
    return result;
  });

  module.exports = stringToPath;
});
System.registerDynamic('npm:lodash@4.17.4/_castPath.js', ['./isArray', './_isKey', './_stringToPath', './toString'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var isArray = $__require('./isArray'),
      isKey = $__require('./_isKey'),
      stringToPath = $__require('./_stringToPath'),
      toString = $__require('./toString');

  /**
   * Casts `value` to a path array if it's not one.
   *
   * @private
   * @param {*} value The value to inspect.
   * @param {Object} [object] The object to query keys on.
   * @returns {Array} Returns the cast property path array.
   */
  function castPath(value, object) {
    if (isArray(value)) {
      return value;
    }
    return isKey(value, object) ? [value] : stringToPath(toString(value));
  }

  module.exports = castPath;
});
System.registerDynamic('npm:lodash@4.17.4/_toKey.js', ['./isSymbol'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var isSymbol = $__require('./isSymbol');

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /**
   * Converts `value` to a string key if it's not a string or symbol.
   *
   * @private
   * @param {*} value The value to inspect.
   * @returns {string|symbol} Returns the key.
   */
  function toKey(value) {
    if (typeof value == 'string' || isSymbol(value)) {
      return value;
    }
    var result = value + '';
    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
  }

  module.exports = toKey;
});
System.registerDynamic('npm:lodash@4.17.4/_hasPath.js', ['./_castPath', './isArguments', './isArray', './_isIndex', './isLength', './_toKey'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var castPath = $__require('./_castPath'),
      isArguments = $__require('./isArguments'),
      isArray = $__require('./isArray'),
      isIndex = $__require('./_isIndex'),
      isLength = $__require('./isLength'),
      toKey = $__require('./_toKey');

  /**
   * Checks if `path` exists on `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @param {Function} hasFunc The function to check properties.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   */
  function hasPath(object, path, hasFunc) {
    path = castPath(path, object);

    var index = -1,
        length = path.length,
        result = false;

    while (++index < length) {
      var key = toKey(path[index]);
      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }
      object = object[key];
    }
    if (result || ++index != length) {
      return result;
    }
    length = object == null ? 0 : object.length;
    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
  }

  module.exports = hasPath;
});
System.registerDynamic('npm:lodash@4.17.4/has.js', ['./_baseHas', './_hasPath'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseHas = $__require('./_baseHas'),
      hasPath = $__require('./_hasPath');

  /**
   * Checks if `path` is a direct property of `object`.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   * @example
   *
   * var object = { 'a': { 'b': 2 } };
   * var other = _.create({ 'a': _.create({ 'b': 2 }) });
   *
   * _.has(object, 'a');
   * // => true
   *
   * _.has(object, 'a.b');
   * // => true
   *
   * _.has(object, ['a', 'b']);
   * // => true
   *
   * _.has(other, 'a');
   * // => false
   */
  function has(object, path) {
    return object != null && hasPath(object, path, baseHas);
  }

  module.exports = has;
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/hub.js", ["babel-runtime/helpers/classCallCheck", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _classCallCheck2 = $__require("babel-runtime/helpers/classCallCheck");

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var Hub = function Hub(file, options) {
    (0, _classCallCheck3.default)(this, Hub);

    this.file = file;
    this.options = options;
  };

  exports.default = Hub;
  module.exports = exports["default"];
});
System.registerDynamic("npm:ms@2.0.0.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:ms@2.0.0/index.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Helpers.
   */

  var s = 1000;
  var m = s * 60;
  var h = m * 60;
  var d = h * 24;
  var y = d * 365.25;

  /**
   * Parse or format the given `val`.
   *
   * Options:
   *
   *  - `long` verbose formatting [false]
   *
   * @param {String|Number} val
   * @param {Object} [options]
   * @throws {Error} throw an error if val is not a non-empty string or a number
   * @return {String|Number}
   * @api public
   */

  module.exports = function (val, options) {
    options = options || {};
    var type = typeof val;
    if (type === 'string' && val.length > 0) {
      return parse(val);
    } else if (type === 'number' && isNaN(val) === false) {
      return options.long ? fmtLong(val) : fmtShort(val);
    }
    throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));
  };

  /**
   * Parse the given `str` and return milliseconds.
   *
   * @param {String} str
   * @return {Number}
   * @api private
   */

  function parse(str) {
    str = String(str);
    if (str.length > 100) {
      return;
    }
    var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
    if (!match) {
      return;
    }
    var n = parseFloat(match[1]);
    var type = (match[2] || 'ms').toLowerCase();
    switch (type) {
      case 'years':
      case 'year':
      case 'yrs':
      case 'yr':
      case 'y':
        return n * y;
      case 'days':
      case 'day':
      case 'd':
        return n * d;
      case 'hours':
      case 'hour':
      case 'hrs':
      case 'hr':
      case 'h':
        return n * h;
      case 'minutes':
      case 'minute':
      case 'mins':
      case 'min':
      case 'm':
        return n * m;
      case 'seconds':
      case 'second':
      case 'secs':
      case 'sec':
      case 's':
        return n * s;
      case 'milliseconds':
      case 'millisecond':
      case 'msecs':
      case 'msec':
      case 'ms':
        return n;
      default:
        return undefined;
    }
  }

  /**
   * Short format for `ms`.
   *
   * @param {Number} ms
   * @return {String}
   * @api private
   */

  function fmtShort(ms) {
    if (ms >= d) {
      return Math.round(ms / d) + 'd';
    }
    if (ms >= h) {
      return Math.round(ms / h) + 'h';
    }
    if (ms >= m) {
      return Math.round(ms / m) + 'm';
    }
    if (ms >= s) {
      return Math.round(ms / s) + 's';
    }
    return ms + 'ms';
  }

  /**
   * Long format for `ms`.
   *
   * @param {Number} ms
   * @return {String}
   * @api private
   */

  function fmtLong(ms) {
    return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';
  }

  /**
   * Pluralization helper.
   */

  function plural(ms, n, name) {
    if (ms < n) {
      return;
    }
    if (ms < n * 1.5) {
      return Math.floor(ms / n) + ' ' + name;
    }
    return Math.ceil(ms / n) + ' ' + name + 's';
  }
});
System.registerDynamic('npm:debug@2.6.9/src/debug.js', ['ms'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;

  /**
   * This is the common logic for both the Node.js and web browser
   * implementations of `debug()`.
   *
   * Expose `debug()` as the module.
   */

  exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
  exports.coerce = coerce;
  exports.disable = disable;
  exports.enable = enable;
  exports.enabled = enabled;
  exports.humanize = $__require('ms');

  /**
   * The currently active debug mode names, and names to skip.
   */

  exports.names = [];
  exports.skips = [];

  /**
   * Map of special "%n" handling functions, for the debug "format" argument.
   *
   * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
   */

  exports.formatters = {};

  /**
   * Previous log timestamp.
   */

  var prevTime;

  /**
   * Select a color.
   * @param {String} namespace
   * @return {Number}
   * @api private
   */

  function selectColor(namespace) {
    var hash = 0,
        i;

    for (i in namespace) {
      hash = (hash << 5) - hash + namespace.charCodeAt(i);
      hash |= 0; // Convert to 32bit integer
    }

    return exports.colors[Math.abs(hash) % exports.colors.length];
  }

  /**
   * Create a debugger with the given `namespace`.
   *
   * @param {String} namespace
   * @return {Function}
   * @api public
   */

  function createDebug(namespace) {

    function debug() {
      // disabled?
      if (!debug.enabled) return;

      var self = debug;

      // set `diff` timestamp
      var curr = +new Date();
      var ms = curr - (prevTime || curr);
      self.diff = ms;
      self.prev = prevTime;
      self.curr = curr;
      prevTime = curr;

      // turn the `arguments` into a proper Array
      var args = new Array(arguments.length);
      for (var i = 0; i < args.length; i++) {
        args[i] = arguments[i];
      }

      args[0] = exports.coerce(args[0]);

      if ('string' !== typeof args[0]) {
        // anything else let's inspect with %O
        args.unshift('%O');
      }

      // apply any `formatters` transformations
      var index = 0;
      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
        // if we encounter an escaped % then don't increase the array index
        if (match === '%%') return match;
        index++;
        var formatter = exports.formatters[format];
        if ('function' === typeof formatter) {
          var val = args[index];
          match = formatter.call(self, val);

          // now we need to remove `args[index]` since it's inlined in the `format`
          args.splice(index, 1);
          index--;
        }
        return match;
      });

      // apply env-specific formatting (colors, etc.)
      exports.formatArgs.call(self, args);

      var logFn = debug.log || exports.log || console.log.bind(console);
      logFn.apply(self, args);
    }

    debug.namespace = namespace;
    debug.enabled = exports.enabled(namespace);
    debug.useColors = exports.useColors();
    debug.color = selectColor(namespace);

    // env-specific initialization logic for debug instances
    if ('function' === typeof exports.init) {
      exports.init(debug);
    }

    return debug;
  }

  /**
   * Enables a debug mode by namespaces. This can include modes
   * separated by a colon and wildcards.
   *
   * @param {String} namespaces
   * @api public
   */

  function enable(namespaces) {
    exports.save(namespaces);

    exports.names = [];
    exports.skips = [];

    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
    var len = split.length;

    for (var i = 0; i < len; i++) {
      if (!split[i]) continue; // ignore empty strings
      namespaces = split[i].replace(/\*/g, '.*?');
      if (namespaces[0] === '-') {
        exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
      } else {
        exports.names.push(new RegExp('^' + namespaces + '$'));
      }
    }
  }

  /**
   * Disable debug output.
   *
   * @api public
   */

  function disable() {
    exports.enable('');
  }

  /**
   * Returns true if the given mode name is enabled, false otherwise.
   *
   * @param {String} name
   * @return {Boolean}
   * @api public
   */

  function enabled(name) {
    var i, len;
    for (i = 0, len = exports.skips.length; i < len; i++) {
      if (exports.skips[i].test(name)) {
        return false;
      }
    }
    for (i = 0, len = exports.names.length; i < len; i++) {
      if (exports.names[i].test(name)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Coerce `val`.
   *
   * @param {Mixed} val
   * @return {Mixed}
   * @api private
   */

  function coerce(val) {
    if (val instanceof Error) return val.stack || val.message;
    return val;
  }
});
System.registerDynamic("npm:debug@2.6.9.json", [], true, function() {
  return {
    "main": "src/browser.js",
    "format": "cjs",
    "map": {
      "./node.js": {
        "browser": "./src/browser.js"
      }
    }
  };
});

System.registerDynamic('npm:debug@2.6.9/src/browser.js', ['./debug'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * This is the web browser implementation of `debug()`.
   *
   * Expose `debug()` as the module.
   */

  exports = module.exports = $__require('./debug');
  exports.log = log;
  exports.formatArgs = formatArgs;
  exports.save = save;
  exports.load = load;
  exports.useColors = useColors;
  exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();

  /**
   * Colors.
   */

  exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];

  /**
   * Currently only WebKit-based Web Inspectors, Firefox >= v31,
   * and the Firebug extension (any Firefox version) are known
   * to support "%c" CSS customizations.
   *
   * TODO: add a `localStorage` variable to explicitly enable/disable colors
   */

  function useColors() {
    // NB: In an Electron preload script, document will be defined but not fully
    // initialized. Since we know we're in Chrome, we'll just detect this case
    // explicitly
    if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
      return true;
    }

    // is webkit? http://stackoverflow.com/a/16459606/376773
    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
    return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 ||
    // double check webkit in userAgent just in case we are in a worker
    typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
  }

  /**
   * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
   */

  exports.formatters.j = function (v) {
    try {
      return JSON.stringify(v);
    } catch (err) {
      return '[UnexpectedJSONParseError]: ' + err.message;
    }
  };

  /**
   * Colorize log arguments if enabled.
   *
   * @api public
   */

  function formatArgs(args) {
    var useColors = this.useColors;

    args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);

    if (!useColors) return;

    var c = 'color: ' + this.color;
    args.splice(1, 0, c, 'color: inherit');

    // the final "%c" is somewhat tricky, because there could be other
    // arguments passed either before or after the %c, so we need to
    // figure out the correct index to insert the CSS into
    var index = 0;
    var lastC = 0;
    args[0].replace(/%[a-zA-Z%]/g, function (match) {
      if ('%%' === match) return;
      index++;
      if ('%c' === match) {
        // we only are interested in the *last* %c
        // (the user may have provided their own)
        lastC = index;
      }
    });

    args.splice(lastC, 0, c);
  }

  /**
   * Invokes `console.log()` when available.
   * No-op when `console.log` is not a "function".
   *
   * @api public
   */

  function log() {
    // this hackery is required for IE8/9, where
    // the `console.log` function doesn't have 'apply'
    return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
  }

  /**
   * Save `namespaces`.
   *
   * @param {String} namespaces
   * @api private
   */

  function save(namespaces) {
    try {
      if (null == namespaces) {
        exports.storage.removeItem('debug');
      } else {
        exports.storage.debug = namespaces;
      }
    } catch (e) {}
  }

  /**
   * Load `namespaces`.
   *
   * @return {String} returns the previously persisted debug modes
   * @api private
   */

  function load() {
    var r;
    try {
      r = exports.storage.debug;
    } catch (e) {}

    // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
    if (!r && typeof process !== 'undefined' && 'env' in process) {
      r = process.env.DEBUG;
    }

    return r;
  }

  /**
   * Enable namespaces listed in `localStorage.debug` initially.
   */

  exports.enable(load());

  /**
   * Localstorage attempts to return the localstorage.
   *
   * This is necessary because safari throws
   * when a user disables cookies/localstorage
   * and you attempt to access it.
   *
   * @return {LocalStorage}
   * @api private
   */

  function localstorage() {
    try {
      return window.localStorage;
    } catch (e) {}
  }
});
System.registerDynamic("npm:invariant@2.2.2.json", [], true, function() {
  return {
    "main": "invariant.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./invariant.js": {
        "browser": "./browser.js"
      }
    }
  };
});

System.registerDynamic('npm:invariant@2.2.2/browser.js', ['process'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   */

  'use strict';

  /**
   * Use invariant() to assert state which your program assumes to be true.
   *
   * Provide sprintf-style format (only %s is supported) and arguments
   * to provide information about what broke and what you were
   * expecting.
   *
   * The invariant message will be stripped in production, but the invariant
   * will remain to ensure logic does not differ in production.
   */

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var invariant = function (condition, format, a, b, c, d, e, f) {
    if ('production' !== 'production') {
      if (format === undefined) {
        throw new Error('invariant requires an error message argument');
      }
    }

    if (!condition) {
      var error;
      if (format === undefined) {
        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1; // we don't care about invariant's own frame
      throw error;
    }
  };

  module.exports = invariant;
});
System.registerDynamic('npm:lodash@4.17.4/assign.js', ['./_assignValue', './_copyObject', './_createAssigner', './isArrayLike', './_isPrototype', './keys'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var assignValue = $__require('./_assignValue'),
      copyObject = $__require('./_copyObject'),
      createAssigner = $__require('./_createAssigner'),
      isArrayLike = $__require('./isArrayLike'),
      isPrototype = $__require('./_isPrototype'),
      keys = $__require('./keys');

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Assigns own enumerable string keyed properties of source objects to the
   * destination object. Source objects are applied from left to right.
   * Subsequent sources overwrite property assignments of previous sources.
   *
   * **Note:** This method mutates `object` and is loosely based on
   * [`Object.assign`](https://mdn.io/Object/assign).
   *
   * @static
   * @memberOf _
   * @since 0.10.0
   * @category Object
   * @param {Object} object The destination object.
   * @param {...Object} [sources] The source objects.
   * @returns {Object} Returns `object`.
   * @see _.assignIn
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   * }
   *
   * function Bar() {
   *   this.c = 3;
   * }
   *
   * Foo.prototype.b = 2;
   * Bar.prototype.d = 4;
   *
   * _.assign({ 'a': 0 }, new Foo, new Bar);
   * // => { 'a': 1, 'c': 3 }
   */
  var assign = createAssigner(function (object, source) {
    if (isPrototype(source) || isArrayLike(source)) {
      copyObject(source, keys(source), object);
      return;
    }
    for (var key in source) {
      if (hasOwnProperty.call(source, key)) {
        assignValue(object, key, source[key]);
      }
    }
  });

  module.exports = assign;
});
System.registerDynamic('npm:lodash@4.17.4/_baseRepeat.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeFloor = Math.floor;

  /**
   * The base implementation of `_.repeat` which doesn't coerce arguments.
   *
   * @private
   * @param {string} string The string to repeat.
   * @param {number} n The number of times to repeat the string.
   * @returns {string} Returns the repeated string.
   */
  function baseRepeat(string, n) {
    var result = '';
    if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
      return result;
    }
    // Leverage the exponentiation by squaring algorithm for a faster repeat.
    // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
    do {
      if (n % 2) {
        result += string;
      }
      n = nativeFloor(n / 2);
      if (n) {
        string += string;
      }
    } while (n);

    return result;
  }

  module.exports = baseRepeat;
});
System.registerDynamic('npm:lodash@4.17.4/_baseToString.js', ['./_Symbol', './_arrayMap', './isArray', './isSymbol'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var Symbol = $__require('./_Symbol'),
      arrayMap = $__require('./_arrayMap'),
      isArray = $__require('./isArray'),
      isSymbol = $__require('./isSymbol');

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = Symbol ? Symbol.prototype : undefined,
      symbolToString = symbolProto ? symbolProto.toString : undefined;

  /**
   * The base implementation of `_.toString` which doesn't convert nullish
   * values to empty strings.
   *
   * @private
   * @param {*} value The value to process.
   * @returns {string} Returns the string.
   */
  function baseToString(value) {
    // Exit early for strings to avoid a performance hit in some environments.
    if (typeof value == 'string') {
      return value;
    }
    if (isArray(value)) {
      // Recursively convert values (susceptible to call stack limits).
      return arrayMap(value, baseToString) + '';
    }
    if (isSymbol(value)) {
      return symbolToString ? symbolToString.call(value) : '';
    }
    var result = value + '';
    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
  }

  module.exports = baseToString;
});
System.registerDynamic('npm:lodash@4.17.4/toString.js', ['./_baseToString'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseToString = $__require('./_baseToString');

  /**
   * Converts `value` to a string. An empty string is returned for `null`
   * and `undefined` values. The sign of `-0` is preserved.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   * @example
   *
   * _.toString(null);
   * // => ''
   *
   * _.toString(-0);
   * // => '-0'
   *
   * _.toString([1, 2, 3]);
   * // => '1,2,3'
   */
  function toString(value) {
    return value == null ? '' : baseToString(value);
  }

  module.exports = toString;
});
System.registerDynamic('npm:lodash@4.17.4/repeat.js', ['./_baseRepeat', './_isIterateeCall', './toInteger', './toString'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseRepeat = $__require('./_baseRepeat'),
      isIterateeCall = $__require('./_isIterateeCall'),
      toInteger = $__require('./toInteger'),
      toString = $__require('./toString');

  /**
   * Repeats the given string `n` times.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category String
   * @param {string} [string=''] The string to repeat.
   * @param {number} [n=1] The number of times to repeat the string.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
   * @returns {string} Returns the repeated string.
   * @example
   *
   * _.repeat('*', 3);
   * // => '***'
   *
   * _.repeat('abc', 2);
   * // => 'abcabc'
   *
   * _.repeat('abc', 0);
   * // => ''
   */
  function repeat(string, n, guard) {
    if (guard ? isIterateeCall(string, n, guard) : n === undefined) {
      n = 1;
    } else {
      n = toInteger(n);
    }
    return baseRepeat(toString(string), n);
  }

  module.exports = repeat;
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/scope/lib/renamer.js", ["babel-runtime/helpers/classCallCheck", "../binding", "babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _classCallCheck2 = $__require("babel-runtime/helpers/classCallCheck");

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _binding = $__require("../binding");

  var _binding2 = _interopRequireDefault(_binding);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var renameVisitor = {
    ReferencedIdentifier: function ReferencedIdentifier(_ref, state) {
      var node = _ref.node;

      if (node.name === state.oldName) {
        node.name = state.newName;
      }
    },
    Scope: function Scope(path, state) {
      if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {
        path.skip();
      }
    },
    "AssignmentExpression|Declaration": function AssignmentExpressionDeclaration(path, state) {
      var ids = path.getOuterBindingIdentifiers();

      for (var name in ids) {
        if (name === state.oldName) ids[name].name = state.newName;
      }
    }
  };

  var Renamer = function () {
    function Renamer(binding, oldName, newName) {
      (0, _classCallCheck3.default)(this, Renamer);

      this.newName = newName;
      this.oldName = oldName;
      this.binding = binding;
    }

    Renamer.prototype.maybeConvertFromExportDeclaration = function maybeConvertFromExportDeclaration(parentDeclar) {
      var exportDeclar = parentDeclar.parentPath.isExportDeclaration() && parentDeclar.parentPath;
      if (!exportDeclar) return;

      var isDefault = exportDeclar.isExportDefaultDeclaration();

      if (isDefault && (parentDeclar.isFunctionDeclaration() || parentDeclar.isClassDeclaration()) && !parentDeclar.node.id) {
        parentDeclar.node.id = parentDeclar.scope.generateUidIdentifier("default");
      }

      var bindingIdentifiers = parentDeclar.getOuterBindingIdentifiers();
      var specifiers = [];

      for (var name in bindingIdentifiers) {
        var localName = name === this.oldName ? this.newName : name;
        var exportedName = isDefault ? "default" : name;
        specifiers.push(t.exportSpecifier(t.identifier(localName), t.identifier(exportedName)));
      }

      if (specifiers.length) {
        var aliasDeclar = t.exportNamedDeclaration(null, specifiers);

        if (parentDeclar.isFunctionDeclaration()) {
          aliasDeclar._blockHoist = 3;
        }

        exportDeclar.insertAfter(aliasDeclar);
        exportDeclar.replaceWith(parentDeclar.node);
      }
    };

    Renamer.prototype.rename = function rename(block) {
      var binding = this.binding,
          oldName = this.oldName,
          newName = this.newName;
      var scope = binding.scope,
          path = binding.path;

      var parentDeclar = path.find(function (path) {
        return path.isDeclaration() || path.isFunctionExpression();
      });
      if (parentDeclar) {
        this.maybeConvertFromExportDeclaration(parentDeclar);
      }

      scope.traverse(block || scope.block, renameVisitor, this);

      if (!block) {
        scope.removeOwnBinding(oldName);
        scope.bindings[newName] = binding;
        this.binding.identifier.name = newName;
      }

      if (binding.type === "hoisted") {}
    };

    return Renamer;
  }();

  exports.default = Renamer;
  module.exports = exports["default"];
});
System.registerDynamic('npm:lodash@4.17.4/_isIterateeCall.js', ['./eq', './isArrayLike', './_isIndex', './isObject'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var eq = $__require('./eq'),
      isArrayLike = $__require('./isArrayLike'),
      isIndex = $__require('./_isIndex'),
      isObject = $__require('./isObject');

  /**
   * Checks if the given arguments are from an iteratee call.
   *
   * @private
   * @param {*} value The potential iteratee value argument.
   * @param {*} index The potential iteratee index or key argument.
   * @param {*} object The potential iteratee object argument.
   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
   *  else `false`.
   */
  function isIterateeCall(value, index, object) {
    if (!isObject(object)) {
      return false;
    }
    var type = typeof index;
    if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
      return eq(object[index], value);
    }
    return false;
  }

  module.exports = isIterateeCall;
});
System.registerDynamic('npm:lodash@4.17.4/_createAssigner.js', ['./_baseRest', './_isIterateeCall'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseRest = $__require('./_baseRest'),
      isIterateeCall = $__require('./_isIterateeCall');

  /**
   * Creates a function like `_.assign`.
   *
   * @private
   * @param {Function} assigner The function to assign values.
   * @returns {Function} Returns the new assigner function.
   */
  function createAssigner(assigner) {
    return baseRest(function (object, sources) {
      var index = -1,
          length = sources.length,
          customizer = length > 1 ? sources[length - 1] : undefined,
          guard = length > 2 ? sources[2] : undefined;

      customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        customizer = length < 3 ? undefined : customizer;
        length = 1;
      }
      object = Object(object);
      while (++index < length) {
        var source = sources[index];
        if (source) {
          assigner(object, source, index, customizer);
        }
      }
      return object;
    });
  }

  module.exports = createAssigner;
});
System.registerDynamic('npm:lodash@4.17.4/assignInWith.js', ['./_copyObject', './_createAssigner', './keysIn'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var copyObject = $__require('./_copyObject'),
      createAssigner = $__require('./_createAssigner'),
      keysIn = $__require('./keysIn');

  /**
   * This method is like `_.assignIn` except that it accepts `customizer`
   * which is invoked to produce the assigned values. If `customizer` returns
   * `undefined`, assignment is handled by the method instead. The `customizer`
   * is invoked with five arguments: (objValue, srcValue, key, object, source).
   *
   * **Note:** This method mutates `object`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @alias extendWith
   * @category Object
   * @param {Object} object The destination object.
   * @param {...Object} sources The source objects.
   * @param {Function} [customizer] The function to customize assigned values.
   * @returns {Object} Returns `object`.
   * @see _.assignWith
   * @example
   *
   * function customizer(objValue, srcValue) {
   *   return _.isUndefined(objValue) ? srcValue : objValue;
   * }
   *
   * var defaults = _.partialRight(_.assignInWith, customizer);
   *
   * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
   * // => { 'a': 1, 'b': 2 }
   */
  var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
    copyObject(source, keysIn(source), object, customizer);
  });

  module.exports = assignInWith;
});
System.registerDynamic("npm:lodash@4.17.4/_apply.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  module.exports = apply;
});
System.registerDynamic('npm:lodash@4.17.4/_overRest.js', ['./_apply'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var apply = $__require('./_apply');

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * A specialized version of `baseRest` which transforms the rest array.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @param {number} [start=func.length-1] The start position of the rest parameter.
   * @param {Function} transform The rest array transform.
   * @returns {Function} Returns the new function.
   */
  function overRest(func, start, transform) {
    start = nativeMax(start === undefined ? func.length - 1 : start, 0);
    return function () {
      var args = arguments,
          index = -1,
          length = nativeMax(args.length - start, 0),
          array = Array(length);

      while (++index < length) {
        array[index] = args[start + index];
      }
      index = -1;
      var otherArgs = Array(start + 1);
      while (++index < start) {
        otherArgs[index] = args[index];
      }
      otherArgs[start] = transform(array);
      return apply(func, this, otherArgs);
    };
  }

  module.exports = overRest;
});
System.registerDynamic("npm:lodash@4.17.4/constant.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Creates a function that returns `value`.
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Util
   * @param {*} value The value to return from the new function.
   * @returns {Function} Returns the new constant function.
   * @example
   *
   * var objects = _.times(2, _.constant({ 'a': 1 }));
   *
   * console.log(objects);
   * // => [{ 'a': 1 }, { 'a': 1 }]
   *
   * console.log(objects[0] === objects[1]);
   * // => true
   */
  function constant(value) {
    return function () {
      return value;
    };
  }

  module.exports = constant;
});
System.registerDynamic("npm:lodash@4.17.4/identity.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * This method returns the first argument it receives.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Util
   * @param {*} value Any value.
   * @returns {*} Returns `value`.
   * @example
   *
   * var object = { 'a': 1 };
   *
   * console.log(_.identity(object) === object);
   * // => true
   */
  function identity(value) {
    return value;
  }

  module.exports = identity;
});
System.registerDynamic('npm:lodash@4.17.4/_baseSetToString.js', ['./constant', './_defineProperty', './identity'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var constant = $__require('./constant'),
      defineProperty = $__require('./_defineProperty'),
      identity = $__require('./identity');

  /**
   * The base implementation of `setToString` without support for hot loop shorting.
   *
   * @private
   * @param {Function} func The function to modify.
   * @param {Function} string The `toString` result.
   * @returns {Function} Returns `func`.
   */
  var baseSetToString = !defineProperty ? identity : function (func, string) {
    return defineProperty(func, 'toString', {
      'configurable': true,
      'enumerable': false,
      'value': constant(string),
      'writable': true
    });
  };

  module.exports = baseSetToString;
});
System.registerDynamic("npm:lodash@4.17.4/_shortOut.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeNow = Date.now;

  /**
   * Creates a function that'll short out and invoke `identity` instead
   * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
   * milliseconds.
   *
   * @private
   * @param {Function} func The function to restrict.
   * @returns {Function} Returns the new shortable function.
   */
  function shortOut(func) {
    var count = 0,
        lastCalled = 0;

    return function () {
      var stamp = nativeNow(),
          remaining = HOT_SPAN - (stamp - lastCalled);

      lastCalled = stamp;
      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }
      return func.apply(undefined, arguments);
    };
  }

  module.exports = shortOut;
});
System.registerDynamic('npm:lodash@4.17.4/_setToString.js', ['./_baseSetToString', './_shortOut'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseSetToString = $__require('./_baseSetToString'),
      shortOut = $__require('./_shortOut');

  /**
   * Sets the `toString` method of `func` to return `string`.
   *
   * @private
   * @param {Function} func The function to modify.
   * @param {Function} string The `toString` result.
   * @returns {Function} Returns `func`.
   */
  var setToString = shortOut(baseSetToString);

  module.exports = setToString;
});
System.registerDynamic('npm:lodash@4.17.4/_baseRest.js', ['./identity', './_overRest', './_setToString'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var identity = $__require('./identity'),
      overRest = $__require('./_overRest'),
      setToString = $__require('./_setToString');

  /**
   * The base implementation of `_.rest` which doesn't validate or coerce arguments.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @param {number} [start=func.length-1] The start position of the rest parameter.
   * @returns {Function} Returns the new function.
   */
  function baseRest(func, start) {
    return setToString(overRest(func, start, identity), func + '');
  }

  module.exports = baseRest;
});
System.registerDynamic('npm:lodash@4.17.4/_customDefaultsAssignIn.js', ['./eq'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var eq = $__require('./eq');

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
   * of source objects to the destination object for all destination properties
   * that resolve to `undefined`.
   *
   * @private
   * @param {*} objValue The destination value.
   * @param {*} srcValue The source value.
   * @param {string} key The key of the property to assign.
   * @param {Object} object The parent object of `objValue`.
   * @returns {*} Returns the value to assign.
   */
  function customDefaultsAssignIn(objValue, srcValue, key, object) {
    if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
      return srcValue;
    }
    return objValue;
  }

  module.exports = customDefaultsAssignIn;
});
System.registerDynamic('npm:lodash@4.17.4/defaults.js', ['./_apply', './assignInWith', './_baseRest', './_customDefaultsAssignIn'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var apply = $__require('./_apply'),
      assignInWith = $__require('./assignInWith'),
      baseRest = $__require('./_baseRest'),
      customDefaultsAssignIn = $__require('./_customDefaultsAssignIn');

  /**
   * Assigns own and inherited enumerable string keyed properties of source
   * objects to the destination object for all destination properties that
   * resolve to `undefined`. Source objects are applied from left to right.
   * Once a property is set, additional values of the same property are ignored.
   *
   * **Note:** This method mutates `object`.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The destination object.
   * @param {...Object} [sources] The source objects.
   * @returns {Object} Returns `object`.
   * @see _.defaultsDeep
   * @example
   *
   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
   * // => { 'a': 1, 'b': 2 }
   */
  var defaults = baseRest(function (args) {
    args.push(undefined, customDefaultsAssignIn);
    return apply(assignInWith, undefined, args);
  });

  module.exports = defaults;
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/scope/binding.js", ["babel-runtime/helpers/classCallCheck", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _classCallCheck2 = $__require("babel-runtime/helpers/classCallCheck");

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var Binding = function () {
    function Binding(_ref) {
      var existing = _ref.existing,
          identifier = _ref.identifier,
          scope = _ref.scope,
          path = _ref.path,
          kind = _ref.kind;
      (0, _classCallCheck3.default)(this, Binding);

      this.identifier = identifier;
      this.scope = scope;
      this.path = path;
      this.kind = kind;

      this.constantViolations = [];
      this.constant = true;

      this.referencePaths = [];
      this.referenced = false;
      this.references = 0;

      this.clearValue();

      if (existing) {
        this.constantViolations = [].concat(existing.path, existing.constantViolations, this.constantViolations);
      }
    }

    Binding.prototype.deoptValue = function deoptValue() {
      this.clearValue();
      this.hasDeoptedValue = true;
    };

    Binding.prototype.setValue = function setValue(value) {
      if (this.hasDeoptedValue) return;
      this.hasValue = true;
      this.value = value;
    };

    Binding.prototype.clearValue = function clearValue() {
      this.hasDeoptedValue = false;
      this.hasValue = false;
      this.value = null;
    };

    Binding.prototype.reassign = function reassign(path) {
      this.constant = false;
      if (this.constantViolations.indexOf(path) !== -1) {
        return;
      }
      this.constantViolations.push(path);
    };

    Binding.prototype.reference = function reference(path) {
      if (this.referencePaths.indexOf(path) !== -1) {
        return;
      }
      this.referenced = true;
      this.references++;
      this.referencePaths.push(path);
    };

    Binding.prototype.dereference = function dereference() {
      this.references--;
      this.referenced = !!this.references;
    };

    return Binding;
  }();

  exports.default = Binding;
  module.exports = exports["default"];
});
System.registerDynamic("npm:globals@9.18.0/globals.json", [], true, function() {
  return {
    "builtin": {
      "Array": false,
      "ArrayBuffer": false,
      "Boolean": false,
      "constructor": false,
      "DataView": false,
      "Date": false,
      "decodeURI": false,
      "decodeURIComponent": false,
      "encodeURI": false,
      "encodeURIComponent": false,
      "Error": false,
      "escape": false,
      "eval": false,
      "EvalError": false,
      "Float32Array": false,
      "Float64Array": false,
      "Function": false,
      "hasOwnProperty": false,
      "Infinity": false,
      "Int16Array": false,
      "Int32Array": false,
      "Int8Array": false,
      "isFinite": false,
      "isNaN": false,
      "isPrototypeOf": false,
      "JSON": false,
      "Map": false,
      "Math": false,
      "NaN": false,
      "Number": false,
      "Object": false,
      "parseFloat": false,
      "parseInt": false,
      "Promise": false,
      "propertyIsEnumerable": false,
      "Proxy": false,
      "RangeError": false,
      "ReferenceError": false,
      "Reflect": false,
      "RegExp": false,
      "Set": false,
      "String": false,
      "Symbol": false,
      "SyntaxError": false,
      "System": false,
      "toLocaleString": false,
      "toString": false,
      "TypeError": false,
      "Uint16Array": false,
      "Uint32Array": false,
      "Uint8Array": false,
      "Uint8ClampedArray": false,
      "undefined": false,
      "unescape": false,
      "URIError": false,
      "valueOf": false,
      "WeakMap": false,
      "WeakSet": false
    },
    "es5": {
      "Array": false,
      "Boolean": false,
      "constructor": false,
      "Date": false,
      "decodeURI": false,
      "decodeURIComponent": false,
      "encodeURI": false,
      "encodeURIComponent": false,
      "Error": false,
      "escape": false,
      "eval": false,
      "EvalError": false,
      "Function": false,
      "hasOwnProperty": false,
      "Infinity": false,
      "isFinite": false,
      "isNaN": false,
      "isPrototypeOf": false,
      "JSON": false,
      "Math": false,
      "NaN": false,
      "Number": false,
      "Object": false,
      "parseFloat": false,
      "parseInt": false,
      "propertyIsEnumerable": false,
      "RangeError": false,
      "ReferenceError": false,
      "RegExp": false,
      "String": false,
      "SyntaxError": false,
      "toLocaleString": false,
      "toString": false,
      "TypeError": false,
      "undefined": false,
      "unescape": false,
      "URIError": false,
      "valueOf": false
    },
    "es6": {
      "Array": false,
      "ArrayBuffer": false,
      "Boolean": false,
      "constructor": false,
      "DataView": false,
      "Date": false,
      "decodeURI": false,
      "decodeURIComponent": false,
      "encodeURI": false,
      "encodeURIComponent": false,
      "Error": false,
      "escape": false,
      "eval": false,
      "EvalError": false,
      "Float32Array": false,
      "Float64Array": false,
      "Function": false,
      "hasOwnProperty": false,
      "Infinity": false,
      "Int16Array": false,
      "Int32Array": false,
      "Int8Array": false,
      "isFinite": false,
      "isNaN": false,
      "isPrototypeOf": false,
      "JSON": false,
      "Map": false,
      "Math": false,
      "NaN": false,
      "Number": false,
      "Object": false,
      "parseFloat": false,
      "parseInt": false,
      "Promise": false,
      "propertyIsEnumerable": false,
      "Proxy": false,
      "RangeError": false,
      "ReferenceError": false,
      "Reflect": false,
      "RegExp": false,
      "Set": false,
      "String": false,
      "Symbol": false,
      "SyntaxError": false,
      "System": false,
      "toLocaleString": false,
      "toString": false,
      "TypeError": false,
      "Uint16Array": false,
      "Uint32Array": false,
      "Uint8Array": false,
      "Uint8ClampedArray": false,
      "undefined": false,
      "unescape": false,
      "URIError": false,
      "valueOf": false,
      "WeakMap": false,
      "WeakSet": false
    },
    "browser": {
      "addEventListener": false,
      "alert": false,
      "AnalyserNode": false,
      "Animation": false,
      "AnimationEffectReadOnly": false,
      "AnimationEffectTiming": false,
      "AnimationEffectTimingReadOnly": false,
      "AnimationEvent": false,
      "AnimationPlaybackEvent": false,
      "AnimationTimeline": false,
      "applicationCache": false,
      "ApplicationCache": false,
      "ApplicationCacheErrorEvent": false,
      "atob": false,
      "Attr": false,
      "Audio": false,
      "AudioBuffer": false,
      "AudioBufferSourceNode": false,
      "AudioContext": false,
      "AudioDestinationNode": false,
      "AudioListener": false,
      "AudioNode": false,
      "AudioParam": false,
      "AudioProcessingEvent": false,
      "AutocompleteErrorEvent": false,
      "BarProp": false,
      "BatteryManager": false,
      "BeforeUnloadEvent": false,
      "BiquadFilterNode": false,
      "Blob": false,
      "blur": false,
      "btoa": false,
      "Cache": false,
      "caches": false,
      "CacheStorage": false,
      "cancelAnimationFrame": false,
      "cancelIdleCallback": false,
      "CanvasGradient": false,
      "CanvasPattern": false,
      "CanvasRenderingContext2D": false,
      "CDATASection": false,
      "ChannelMergerNode": false,
      "ChannelSplitterNode": false,
      "CharacterData": false,
      "clearInterval": false,
      "clearTimeout": false,
      "clientInformation": false,
      "ClientRect": false,
      "ClientRectList": false,
      "ClipboardEvent": false,
      "close": false,
      "closed": false,
      "CloseEvent": false,
      "Comment": false,
      "CompositionEvent": false,
      "confirm": false,
      "console": false,
      "ConvolverNode": false,
      "createImageBitmap": false,
      "Credential": false,
      "CredentialsContainer": false,
      "crypto": false,
      "Crypto": false,
      "CryptoKey": false,
      "CSS": false,
      "CSSAnimation": false,
      "CSSFontFaceRule": false,
      "CSSImportRule": false,
      "CSSKeyframeRule": false,
      "CSSKeyframesRule": false,
      "CSSMediaRule": false,
      "CSSPageRule": false,
      "CSSRule": false,
      "CSSRuleList": false,
      "CSSStyleDeclaration": false,
      "CSSStyleRule": false,
      "CSSStyleSheet": false,
      "CSSSupportsRule": false,
      "CSSTransition": false,
      "CSSUnknownRule": false,
      "CSSViewportRule": false,
      "customElements": false,
      "CustomEvent": false,
      "DataTransfer": false,
      "DataTransferItem": false,
      "DataTransferItemList": false,
      "Debug": false,
      "defaultStatus": false,
      "defaultstatus": false,
      "DelayNode": false,
      "DeviceMotionEvent": false,
      "DeviceOrientationEvent": false,
      "devicePixelRatio": false,
      "dispatchEvent": false,
      "document": false,
      "Document": false,
      "DocumentFragment": false,
      "DocumentTimeline": false,
      "DocumentType": false,
      "DOMError": false,
      "DOMException": false,
      "DOMImplementation": false,
      "DOMParser": false,
      "DOMSettableTokenList": false,
      "DOMStringList": false,
      "DOMStringMap": false,
      "DOMTokenList": false,
      "DragEvent": false,
      "DynamicsCompressorNode": false,
      "Element": false,
      "ElementTimeControl": false,
      "ErrorEvent": false,
      "event": false,
      "Event": false,
      "EventSource": false,
      "EventTarget": false,
      "external": false,
      "FederatedCredential": false,
      "fetch": false,
      "File": false,
      "FileError": false,
      "FileList": false,
      "FileReader": false,
      "find": false,
      "focus": false,
      "FocusEvent": false,
      "FontFace": false,
      "FormData": false,
      "frameElement": false,
      "frames": false,
      "GainNode": false,
      "Gamepad": false,
      "GamepadButton": false,
      "GamepadEvent": false,
      "getComputedStyle": false,
      "getSelection": false,
      "HashChangeEvent": false,
      "Headers": false,
      "history": false,
      "History": false,
      "HTMLAllCollection": false,
      "HTMLAnchorElement": false,
      "HTMLAppletElement": false,
      "HTMLAreaElement": false,
      "HTMLAudioElement": false,
      "HTMLBaseElement": false,
      "HTMLBlockquoteElement": false,
      "HTMLBodyElement": false,
      "HTMLBRElement": false,
      "HTMLButtonElement": false,
      "HTMLCanvasElement": false,
      "HTMLCollection": false,
      "HTMLContentElement": false,
      "HTMLDataListElement": false,
      "HTMLDetailsElement": false,
      "HTMLDialogElement": false,
      "HTMLDirectoryElement": false,
      "HTMLDivElement": false,
      "HTMLDListElement": false,
      "HTMLDocument": false,
      "HTMLElement": false,
      "HTMLEmbedElement": false,
      "HTMLFieldSetElement": false,
      "HTMLFontElement": false,
      "HTMLFormControlsCollection": false,
      "HTMLFormElement": false,
      "HTMLFrameElement": false,
      "HTMLFrameSetElement": false,
      "HTMLHeadElement": false,
      "HTMLHeadingElement": false,
      "HTMLHRElement": false,
      "HTMLHtmlElement": false,
      "HTMLIFrameElement": false,
      "HTMLImageElement": false,
      "HTMLInputElement": false,
      "HTMLIsIndexElement": false,
      "HTMLKeygenElement": false,
      "HTMLLabelElement": false,
      "HTMLLayerElement": false,
      "HTMLLegendElement": false,
      "HTMLLIElement": false,
      "HTMLLinkElement": false,
      "HTMLMapElement": false,
      "HTMLMarqueeElement": false,
      "HTMLMediaElement": false,
      "HTMLMenuElement": false,
      "HTMLMetaElement": false,
      "HTMLMeterElement": false,
      "HTMLModElement": false,
      "HTMLObjectElement": false,
      "HTMLOListElement": false,
      "HTMLOptGroupElement": false,
      "HTMLOptionElement": false,
      "HTMLOptionsCollection": false,
      "HTMLOutputElement": false,
      "HTMLParagraphElement": false,
      "HTMLParamElement": false,
      "HTMLPictureElement": false,
      "HTMLPreElement": false,
      "HTMLProgressElement": false,
      "HTMLQuoteElement": false,
      "HTMLScriptElement": false,
      "HTMLSelectElement": false,
      "HTMLShadowElement": false,
      "HTMLSourceElement": false,
      "HTMLSpanElement": false,
      "HTMLStyleElement": false,
      "HTMLTableCaptionElement": false,
      "HTMLTableCellElement": false,
      "HTMLTableColElement": false,
      "HTMLTableElement": false,
      "HTMLTableRowElement": false,
      "HTMLTableSectionElement": false,
      "HTMLTemplateElement": false,
      "HTMLTextAreaElement": false,
      "HTMLTitleElement": false,
      "HTMLTrackElement": false,
      "HTMLUListElement": false,
      "HTMLUnknownElement": false,
      "HTMLVideoElement": false,
      "IDBCursor": false,
      "IDBCursorWithValue": false,
      "IDBDatabase": false,
      "IDBEnvironment": false,
      "IDBFactory": false,
      "IDBIndex": false,
      "IDBKeyRange": false,
      "IDBObjectStore": false,
      "IDBOpenDBRequest": false,
      "IDBRequest": false,
      "IDBTransaction": false,
      "IDBVersionChangeEvent": false,
      "Image": false,
      "ImageBitmap": false,
      "ImageData": false,
      "indexedDB": false,
      "innerHeight": false,
      "innerWidth": false,
      "InputEvent": false,
      "InputMethodContext": false,
      "IntersectionObserver": false,
      "IntersectionObserverEntry": false,
      "Intl": false,
      "KeyboardEvent": false,
      "KeyframeEffect": false,
      "KeyframeEffectReadOnly": false,
      "length": false,
      "localStorage": false,
      "location": false,
      "Location": false,
      "locationbar": false,
      "matchMedia": false,
      "MediaElementAudioSourceNode": false,
      "MediaEncryptedEvent": false,
      "MediaError": false,
      "MediaKeyError": false,
      "MediaKeyEvent": false,
      "MediaKeyMessageEvent": false,
      "MediaKeys": false,
      "MediaKeySession": false,
      "MediaKeyStatusMap": false,
      "MediaKeySystemAccess": false,
      "MediaList": false,
      "MediaQueryList": false,
      "MediaQueryListEvent": false,
      "MediaSource": false,
      "MediaRecorder": false,
      "MediaStream": false,
      "MediaStreamAudioDestinationNode": false,
      "MediaStreamAudioSourceNode": false,
      "MediaStreamEvent": false,
      "MediaStreamTrack": false,
      "menubar": false,
      "MessageChannel": false,
      "MessageEvent": false,
      "MessagePort": false,
      "MIDIAccess": false,
      "MIDIConnectionEvent": false,
      "MIDIInput": false,
      "MIDIInputMap": false,
      "MIDIMessageEvent": false,
      "MIDIOutput": false,
      "MIDIOutputMap": false,
      "MIDIPort": false,
      "MimeType": false,
      "MimeTypeArray": false,
      "MouseEvent": false,
      "moveBy": false,
      "moveTo": false,
      "MutationEvent": false,
      "MutationObserver": false,
      "MutationRecord": false,
      "name": false,
      "NamedNodeMap": false,
      "navigator": false,
      "Navigator": false,
      "Node": false,
      "NodeFilter": false,
      "NodeIterator": false,
      "NodeList": false,
      "Notification": false,
      "OfflineAudioCompletionEvent": false,
      "OfflineAudioContext": false,
      "offscreenBuffering": false,
      "onbeforeunload": true,
      "onblur": true,
      "onerror": true,
      "onfocus": true,
      "onload": true,
      "onresize": true,
      "onunload": true,
      "open": false,
      "openDatabase": false,
      "opener": false,
      "opera": false,
      "Option": false,
      "OscillatorNode": false,
      "outerHeight": false,
      "outerWidth": false,
      "PageTransitionEvent": false,
      "pageXOffset": false,
      "pageYOffset": false,
      "parent": false,
      "PasswordCredential": false,
      "Path2D": false,
      "performance": false,
      "Performance": false,
      "PerformanceEntry": false,
      "PerformanceMark": false,
      "PerformanceMeasure": false,
      "PerformanceNavigation": false,
      "PerformanceResourceTiming": false,
      "PerformanceTiming": false,
      "PeriodicWave": false,
      "Permissions": false,
      "PermissionStatus": false,
      "personalbar": false,
      "Plugin": false,
      "PluginArray": false,
      "PopStateEvent": false,
      "postMessage": false,
      "print": false,
      "ProcessingInstruction": false,
      "ProgressEvent": false,
      "PromiseRejectionEvent": false,
      "prompt": false,
      "PushManager": false,
      "PushSubscription": false,
      "RadioNodeList": false,
      "Range": false,
      "ReadableByteStream": false,
      "ReadableStream": false,
      "removeEventListener": false,
      "Request": false,
      "requestAnimationFrame": false,
      "requestIdleCallback": false,
      "resizeBy": false,
      "resizeTo": false,
      "Response": false,
      "RTCIceCandidate": false,
      "RTCSessionDescription": false,
      "RTCPeerConnection": false,
      "screen": false,
      "Screen": false,
      "screenLeft": false,
      "ScreenOrientation": false,
      "screenTop": false,
      "screenX": false,
      "screenY": false,
      "ScriptProcessorNode": false,
      "scroll": false,
      "scrollbars": false,
      "scrollBy": false,
      "scrollTo": false,
      "scrollX": false,
      "scrollY": false,
      "SecurityPolicyViolationEvent": false,
      "Selection": false,
      "self": false,
      "ServiceWorker": false,
      "ServiceWorkerContainer": false,
      "ServiceWorkerRegistration": false,
      "sessionStorage": false,
      "setInterval": false,
      "setTimeout": false,
      "ShadowRoot": false,
      "SharedKeyframeList": false,
      "SharedWorker": false,
      "showModalDialog": false,
      "SiteBoundCredential": false,
      "speechSynthesis": false,
      "SpeechSynthesisEvent": false,
      "SpeechSynthesisUtterance": false,
      "status": false,
      "statusbar": false,
      "stop": false,
      "Storage": false,
      "StorageEvent": false,
      "styleMedia": false,
      "StyleSheet": false,
      "StyleSheetList": false,
      "SubtleCrypto": false,
      "SVGAElement": false,
      "SVGAltGlyphDefElement": false,
      "SVGAltGlyphElement": false,
      "SVGAltGlyphItemElement": false,
      "SVGAngle": false,
      "SVGAnimateColorElement": false,
      "SVGAnimatedAngle": false,
      "SVGAnimatedBoolean": false,
      "SVGAnimatedEnumeration": false,
      "SVGAnimatedInteger": false,
      "SVGAnimatedLength": false,
      "SVGAnimatedLengthList": false,
      "SVGAnimatedNumber": false,
      "SVGAnimatedNumberList": false,
      "SVGAnimatedPathData": false,
      "SVGAnimatedPoints": false,
      "SVGAnimatedPreserveAspectRatio": false,
      "SVGAnimatedRect": false,
      "SVGAnimatedString": false,
      "SVGAnimatedTransformList": false,
      "SVGAnimateElement": false,
      "SVGAnimateMotionElement": false,
      "SVGAnimateTransformElement": false,
      "SVGAnimationElement": false,
      "SVGCircleElement": false,
      "SVGClipPathElement": false,
      "SVGColor": false,
      "SVGColorProfileElement": false,
      "SVGColorProfileRule": false,
      "SVGComponentTransferFunctionElement": false,
      "SVGCSSRule": false,
      "SVGCursorElement": false,
      "SVGDefsElement": false,
      "SVGDescElement": false,
      "SVGDiscardElement": false,
      "SVGDocument": false,
      "SVGElement": false,
      "SVGElementInstance": false,
      "SVGElementInstanceList": false,
      "SVGEllipseElement": false,
      "SVGEvent": false,
      "SVGExternalResourcesRequired": false,
      "SVGFEBlendElement": false,
      "SVGFEColorMatrixElement": false,
      "SVGFEComponentTransferElement": false,
      "SVGFECompositeElement": false,
      "SVGFEConvolveMatrixElement": false,
      "SVGFEDiffuseLightingElement": false,
      "SVGFEDisplacementMapElement": false,
      "SVGFEDistantLightElement": false,
      "SVGFEDropShadowElement": false,
      "SVGFEFloodElement": false,
      "SVGFEFuncAElement": false,
      "SVGFEFuncBElement": false,
      "SVGFEFuncGElement": false,
      "SVGFEFuncRElement": false,
      "SVGFEGaussianBlurElement": false,
      "SVGFEImageElement": false,
      "SVGFEMergeElement": false,
      "SVGFEMergeNodeElement": false,
      "SVGFEMorphologyElement": false,
      "SVGFEOffsetElement": false,
      "SVGFEPointLightElement": false,
      "SVGFESpecularLightingElement": false,
      "SVGFESpotLightElement": false,
      "SVGFETileElement": false,
      "SVGFETurbulenceElement": false,
      "SVGFilterElement": false,
      "SVGFilterPrimitiveStandardAttributes": false,
      "SVGFitToViewBox": false,
      "SVGFontElement": false,
      "SVGFontFaceElement": false,
      "SVGFontFaceFormatElement": false,
      "SVGFontFaceNameElement": false,
      "SVGFontFaceSrcElement": false,
      "SVGFontFaceUriElement": false,
      "SVGForeignObjectElement": false,
      "SVGGElement": false,
      "SVGGeometryElement": false,
      "SVGGlyphElement": false,
      "SVGGlyphRefElement": false,
      "SVGGradientElement": false,
      "SVGGraphicsElement": false,
      "SVGHKernElement": false,
      "SVGICCColor": false,
      "SVGImageElement": false,
      "SVGLangSpace": false,
      "SVGLength": false,
      "SVGLengthList": false,
      "SVGLinearGradientElement": false,
      "SVGLineElement": false,
      "SVGLocatable": false,
      "SVGMarkerElement": false,
      "SVGMaskElement": false,
      "SVGMatrix": false,
      "SVGMetadataElement": false,
      "SVGMissingGlyphElement": false,
      "SVGMPathElement": false,
      "SVGNumber": false,
      "SVGNumberList": false,
      "SVGPaint": false,
      "SVGPathElement": false,
      "SVGPathSeg": false,
      "SVGPathSegArcAbs": false,
      "SVGPathSegArcRel": false,
      "SVGPathSegClosePath": false,
      "SVGPathSegCurvetoCubicAbs": false,
      "SVGPathSegCurvetoCubicRel": false,
      "SVGPathSegCurvetoCubicSmoothAbs": false,
      "SVGPathSegCurvetoCubicSmoothRel": false,
      "SVGPathSegCurvetoQuadraticAbs": false,
      "SVGPathSegCurvetoQuadraticRel": false,
      "SVGPathSegCurvetoQuadraticSmoothAbs": false,
      "SVGPathSegCurvetoQuadraticSmoothRel": false,
      "SVGPathSegLinetoAbs": false,
      "SVGPathSegLinetoHorizontalAbs": false,
      "SVGPathSegLinetoHorizontalRel": false,
      "SVGPathSegLinetoRel": false,
      "SVGPathSegLinetoVerticalAbs": false,
      "SVGPathSegLinetoVerticalRel": false,
      "SVGPathSegList": false,
      "SVGPathSegMovetoAbs": false,
      "SVGPathSegMovetoRel": false,
      "SVGPatternElement": false,
      "SVGPoint": false,
      "SVGPointList": false,
      "SVGPolygonElement": false,
      "SVGPolylineElement": false,
      "SVGPreserveAspectRatio": false,
      "SVGRadialGradientElement": false,
      "SVGRect": false,
      "SVGRectElement": false,
      "SVGRenderingIntent": false,
      "SVGScriptElement": false,
      "SVGSetElement": false,
      "SVGStopElement": false,
      "SVGStringList": false,
      "SVGStylable": false,
      "SVGStyleElement": false,
      "SVGSVGElement": false,
      "SVGSwitchElement": false,
      "SVGSymbolElement": false,
      "SVGTests": false,
      "SVGTextContentElement": false,
      "SVGTextElement": false,
      "SVGTextPathElement": false,
      "SVGTextPositioningElement": false,
      "SVGTitleElement": false,
      "SVGTransform": false,
      "SVGTransformable": false,
      "SVGTransformList": false,
      "SVGTRefElement": false,
      "SVGTSpanElement": false,
      "SVGUnitTypes": false,
      "SVGURIReference": false,
      "SVGUseElement": false,
      "SVGViewElement": false,
      "SVGViewSpec": false,
      "SVGVKernElement": false,
      "SVGZoomAndPan": false,
      "SVGZoomEvent": false,
      "Text": false,
      "TextDecoder": false,
      "TextEncoder": false,
      "TextEvent": false,
      "TextMetrics": false,
      "TextTrack": false,
      "TextTrackCue": false,
      "TextTrackCueList": false,
      "TextTrackList": false,
      "TimeEvent": false,
      "TimeRanges": false,
      "toolbar": false,
      "top": false,
      "Touch": false,
      "TouchEvent": false,
      "TouchList": false,
      "TrackEvent": false,
      "TransitionEvent": false,
      "TreeWalker": false,
      "UIEvent": false,
      "URL": false,
      "URLSearchParams": false,
      "ValidityState": false,
      "VTTCue": false,
      "WaveShaperNode": false,
      "WebGLActiveInfo": false,
      "WebGLBuffer": false,
      "WebGLContextEvent": false,
      "WebGLFramebuffer": false,
      "WebGLProgram": false,
      "WebGLRenderbuffer": false,
      "WebGLRenderingContext": false,
      "WebGLShader": false,
      "WebGLShaderPrecisionFormat": false,
      "WebGLTexture": false,
      "WebGLUniformLocation": false,
      "WebSocket": false,
      "WheelEvent": false,
      "window": false,
      "Window": false,
      "Worker": false,
      "XDomainRequest": false,
      "XMLDocument": false,
      "XMLHttpRequest": false,
      "XMLHttpRequestEventTarget": false,
      "XMLHttpRequestProgressEvent": false,
      "XMLHttpRequestUpload": false,
      "XMLSerializer": false,
      "XPathEvaluator": false,
      "XPathException": false,
      "XPathExpression": false,
      "XPathNamespace": false,
      "XPathNSResolver": false,
      "XPathResult": false,
      "XSLTProcessor": false
    },
    "worker": {
      "applicationCache": false,
      "atob": false,
      "Blob": false,
      "BroadcastChannel": false,
      "btoa": false,
      "Cache": false,
      "caches": false,
      "clearInterval": false,
      "clearTimeout": false,
      "close": true,
      "console": false,
      "fetch": false,
      "FileReaderSync": false,
      "FormData": false,
      "Headers": false,
      "IDBCursor": false,
      "IDBCursorWithValue": false,
      "IDBDatabase": false,
      "IDBFactory": false,
      "IDBIndex": false,
      "IDBKeyRange": false,
      "IDBObjectStore": false,
      "IDBOpenDBRequest": false,
      "IDBRequest": false,
      "IDBTransaction": false,
      "IDBVersionChangeEvent": false,
      "ImageData": false,
      "importScripts": true,
      "indexedDB": false,
      "location": false,
      "MessageChannel": false,
      "MessagePort": false,
      "name": false,
      "navigator": false,
      "Notification": false,
      "onclose": true,
      "onconnect": true,
      "onerror": true,
      "onlanguagechange": true,
      "onmessage": true,
      "onoffline": true,
      "ononline": true,
      "onrejectionhandled": true,
      "onunhandledrejection": true,
      "performance": false,
      "Performance": false,
      "PerformanceEntry": false,
      "PerformanceMark": false,
      "PerformanceMeasure": false,
      "PerformanceNavigation": false,
      "PerformanceResourceTiming": false,
      "PerformanceTiming": false,
      "postMessage": true,
      "Promise": false,
      "Request": false,
      "Response": false,
      "self": true,
      "ServiceWorkerRegistration": false,
      "setInterval": false,
      "setTimeout": false,
      "TextDecoder": false,
      "TextEncoder": false,
      "URL": false,
      "URLSearchParams": false,
      "WebSocket": false,
      "Worker": false,
      "XMLHttpRequest": false
    },
    "node": {
      "__dirname": false,
      "__filename": false,
      "arguments": false,
      "Buffer": false,
      "clearImmediate": false,
      "clearInterval": false,
      "clearTimeout": false,
      "console": false,
      "exports": true,
      "GLOBAL": false,
      "global": false,
      "Intl": false,
      "module": false,
      "process": false,
      "require": false,
      "root": false,
      "setImmediate": false,
      "setInterval": false,
      "setTimeout": false
    },
    "commonjs": {
      "exports": true,
      "module": false,
      "require": false,
      "global": false
    },
    "amd": {
      "define": false,
      "require": false
    },
    "mocha": {
      "after": false,
      "afterEach": false,
      "before": false,
      "beforeEach": false,
      "context": false,
      "describe": false,
      "it": false,
      "mocha": false,
      "run": false,
      "setup": false,
      "specify": false,
      "suite": false,
      "suiteSetup": false,
      "suiteTeardown": false,
      "teardown": false,
      "test": false,
      "xcontext": false,
      "xdescribe": false,
      "xit": false,
      "xspecify": false
    },
    "jasmine": {
      "afterAll": false,
      "afterEach": false,
      "beforeAll": false,
      "beforeEach": false,
      "describe": false,
      "expect": false,
      "fail": false,
      "fdescribe": false,
      "fit": false,
      "it": false,
      "jasmine": false,
      "pending": false,
      "runs": false,
      "spyOn": false,
      "spyOnProperty": false,
      "waits": false,
      "waitsFor": false,
      "xdescribe": false,
      "xit": false
    },
    "jest": {
      "afterAll": false,
      "afterEach": false,
      "beforeAll": false,
      "beforeEach": false,
      "check": false,
      "describe": false,
      "expect": false,
      "gen": false,
      "it": false,
      "fdescribe": false,
      "fit": false,
      "jest": false,
      "pit": false,
      "require": false,
      "test": false,
      "xdescribe": false,
      "xit": false,
      "xtest": false
    },
    "qunit": {
      "asyncTest": false,
      "deepEqual": false,
      "equal": false,
      "expect": false,
      "module": false,
      "notDeepEqual": false,
      "notEqual": false,
      "notOk": false,
      "notPropEqual": false,
      "notStrictEqual": false,
      "ok": false,
      "propEqual": false,
      "QUnit": false,
      "raises": false,
      "start": false,
      "stop": false,
      "strictEqual": false,
      "test": false,
      "throws": false
    },
    "phantomjs": {
      "console": true,
      "exports": true,
      "phantom": true,
      "require": true,
      "WebPage": true
    },
    "couch": {
      "emit": false,
      "exports": false,
      "getRow": false,
      "log": false,
      "module": false,
      "provides": false,
      "require": false,
      "respond": false,
      "send": false,
      "start": false,
      "sum": false
    },
    "rhino": {
      "defineClass": false,
      "deserialize": false,
      "gc": false,
      "help": false,
      "importClass": false,
      "importPackage": false,
      "java": false,
      "load": false,
      "loadClass": false,
      "Packages": false,
      "print": false,
      "quit": false,
      "readFile": false,
      "readUrl": false,
      "runCommand": false,
      "seal": false,
      "serialize": false,
      "spawn": false,
      "sync": false,
      "toint32": false,
      "version": false
    },
    "nashorn": {
      "__DIR__": false,
      "__FILE__": false,
      "__LINE__": false,
      "com": false,
      "edu": false,
      "exit": false,
      "Java": false,
      "java": false,
      "javafx": false,
      "JavaImporter": false,
      "javax": false,
      "JSAdapter": false,
      "load": false,
      "loadWithNewGlobal": false,
      "org": false,
      "Packages": false,
      "print": false,
      "quit": false
    },
    "wsh": {
      "ActiveXObject": true,
      "Enumerator": true,
      "GetObject": true,
      "ScriptEngine": true,
      "ScriptEngineBuildVersion": true,
      "ScriptEngineMajorVersion": true,
      "ScriptEngineMinorVersion": true,
      "VBArray": true,
      "WScript": true,
      "WSH": true,
      "XDomainRequest": true
    },
    "jquery": {
      "$": false,
      "jQuery": false
    },
    "yui": {
      "Y": false,
      "YUI": false,
      "YUI_config": false
    },
    "shelljs": {
      "cat": false,
      "cd": false,
      "chmod": false,
      "config": false,
      "cp": false,
      "dirs": false,
      "echo": false,
      "env": false,
      "error": false,
      "exec": false,
      "exit": false,
      "find": false,
      "grep": false,
      "ls": false,
      "ln": false,
      "mkdir": false,
      "mv": false,
      "popd": false,
      "pushd": false,
      "pwd": false,
      "rm": false,
      "sed": false,
      "set": false,
      "target": false,
      "tempdir": false,
      "test": false,
      "touch": false,
      "which": false
    },
    "prototypejs": {
      "$": false,
      "$$": false,
      "$A": false,
      "$break": false,
      "$continue": false,
      "$F": false,
      "$H": false,
      "$R": false,
      "$w": false,
      "Abstract": false,
      "Ajax": false,
      "Autocompleter": false,
      "Builder": false,
      "Class": false,
      "Control": false,
      "Draggable": false,
      "Draggables": false,
      "Droppables": false,
      "Effect": false,
      "Element": false,
      "Enumerable": false,
      "Event": false,
      "Field": false,
      "Form": false,
      "Hash": false,
      "Insertion": false,
      "ObjectRange": false,
      "PeriodicalExecuter": false,
      "Position": false,
      "Prototype": false,
      "Scriptaculous": false,
      "Selector": false,
      "Sortable": false,
      "SortableObserver": false,
      "Sound": false,
      "Template": false,
      "Toggle": false,
      "Try": false
    },
    "meteor": {
      "$": false,
      "_": false,
      "Accounts": false,
      "AccountsClient": false,
      "AccountsServer": false,
      "AccountsCommon": false,
      "App": false,
      "Assets": false,
      "Blaze": false,
      "check": false,
      "Cordova": false,
      "DDP": false,
      "DDPServer": false,
      "DDPRateLimiter": false,
      "Deps": false,
      "EJSON": false,
      "Email": false,
      "HTTP": false,
      "Log": false,
      "Match": false,
      "Meteor": false,
      "Mongo": false,
      "MongoInternals": false,
      "Npm": false,
      "Package": false,
      "Plugin": false,
      "process": false,
      "Random": false,
      "ReactiveDict": false,
      "ReactiveVar": false,
      "Router": false,
      "ServiceConfiguration": false,
      "Session": false,
      "share": false,
      "Spacebars": false,
      "Template": false,
      "Tinytest": false,
      "Tracker": false,
      "UI": false,
      "Utils": false,
      "WebApp": false,
      "WebAppInternals": false
    },
    "mongo": {
      "_isWindows": false,
      "_rand": false,
      "BulkWriteResult": false,
      "cat": false,
      "cd": false,
      "connect": false,
      "db": false,
      "getHostName": false,
      "getMemInfo": false,
      "hostname": false,
      "ISODate": false,
      "listFiles": false,
      "load": false,
      "ls": false,
      "md5sumFile": false,
      "mkdir": false,
      "Mongo": false,
      "NumberInt": false,
      "NumberLong": false,
      "ObjectId": false,
      "PlanCache": false,
      "print": false,
      "printjson": false,
      "pwd": false,
      "quit": false,
      "removeFile": false,
      "rs": false,
      "sh": false,
      "UUID": false,
      "version": false,
      "WriteResult": false
    },
    "applescript": {
      "$": false,
      "Application": false,
      "Automation": false,
      "console": false,
      "delay": false,
      "Library": false,
      "ObjC": false,
      "ObjectSpecifier": false,
      "Path": false,
      "Progress": false,
      "Ref": false
    },
    "serviceworker": {
      "caches": false,
      "Cache": false,
      "CacheStorage": false,
      "Client": false,
      "clients": false,
      "Clients": false,
      "ExtendableEvent": false,
      "ExtendableMessageEvent": false,
      "FetchEvent": false,
      "importScripts": false,
      "registration": false,
      "self": false,
      "ServiceWorker": false,
      "ServiceWorkerContainer": false,
      "ServiceWorkerGlobalScope": false,
      "ServiceWorkerMessageEvent": false,
      "ServiceWorkerRegistration": false,
      "skipWaiting": false,
      "WindowClient": false
    },
    "atomtest": {
      "advanceClock": false,
      "fakeClearInterval": false,
      "fakeClearTimeout": false,
      "fakeSetInterval": false,
      "fakeSetTimeout": false,
      "resetTimeouts": false,
      "waitsForPromise": false
    },
    "embertest": {
      "andThen": false,
      "click": false,
      "currentPath": false,
      "currentRouteName": false,
      "currentURL": false,
      "fillIn": false,
      "find": false,
      "findWithAssert": false,
      "keyEvent": false,
      "pauseTest": false,
      "resumeTest": false,
      "triggerEvent": false,
      "visit": false
    },
    "protractor": {
      "$": false,
      "$$": false,
      "browser": false,
      "By": false,
      "by": false,
      "DartObject": false,
      "element": false,
      "protractor": false
    },
    "shared-node-browser": {
      "clearInterval": false,
      "clearTimeout": false,
      "console": false,
      "setInterval": false,
      "setTimeout": false
    },
    "webextensions": {
      "browser": false,
      "chrome": false,
      "opr": false
    },
    "greasemonkey": {
      "GM_addStyle": false,
      "GM_deleteValue": false,
      "GM_getResourceText": false,
      "GM_getResourceURL": false,
      "GM_getValue": false,
      "GM_info": false,
      "GM_listValues": false,
      "GM_log": false,
      "GM_openInTab": false,
      "GM_registerMenuCommand": false,
      "GM_setClipboard": false,
      "GM_setValue": false,
      "GM_xmlhttpRequest": false,
      "unsafeWindow": false
    }
  };
});

System.registerDynamic("npm:globals@9.18.0.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:globals@9.18.0/index.js', ['./globals.json'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require('./globals.json');
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/scope/index.js", ["babel-runtime/core-js/object/keys", "babel-runtime/core-js/object/create", "babel-runtime/core-js/map", "babel-runtime/helpers/classCallCheck", "babel-runtime/core-js/get-iterator", "lodash/includes", "lodash/repeat", "./lib/renamer", "../index", "lodash/defaults", "babel-messages", "./binding", "globals", "babel-types", "../cache", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _keys = $__require("babel-runtime/core-js/object/keys");

  var _keys2 = _interopRequireDefault(_keys);

  var _create = $__require("babel-runtime/core-js/object/create");

  var _create2 = _interopRequireDefault(_create);

  var _map = $__require("babel-runtime/core-js/map");

  var _map2 = _interopRequireDefault(_map);

  var _classCallCheck2 = $__require("babel-runtime/helpers/classCallCheck");

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  var _includes = $__require("lodash/includes");

  var _includes2 = _interopRequireDefault(_includes);

  var _repeat = $__require("lodash/repeat");

  var _repeat2 = _interopRequireDefault(_repeat);

  var _renamer = $__require("./lib/renamer");

  var _renamer2 = _interopRequireDefault(_renamer);

  var _index = $__require("../index");

  var _index2 = _interopRequireDefault(_index);

  var _defaults = $__require("lodash/defaults");

  var _defaults2 = _interopRequireDefault(_defaults);

  var _babelMessages = $__require("babel-messages");

  var messages = _interopRequireWildcard(_babelMessages);

  var _binding2 = $__require("./binding");

  var _binding3 = _interopRequireDefault(_binding2);

  var _globals = $__require("globals");

  var _globals2 = _interopRequireDefault(_globals);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  var _cache = $__require("../cache");

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var _crawlCallsCount = 0;

  function getCache(path, parentScope, self) {
    var scopes = _cache.scope.get(path.node) || [];

    for (var _iterator = scopes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var scope = _ref;

      if (scope.parent === parentScope && scope.path === path) return scope;
    }

    scopes.push(self);

    if (!_cache.scope.has(path.node)) {
      _cache.scope.set(path.node, scopes);
    }
  }

  function gatherNodeParts(node, parts) {
    if (t.isModuleDeclaration(node)) {
      if (node.source) {
        gatherNodeParts(node.source, parts);
      } else if (node.specifiers && node.specifiers.length) {
        for (var _iterator2 = node.specifiers, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
          var _ref2;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var specifier = _ref2;

          gatherNodeParts(specifier, parts);
        }
      } else if (node.declaration) {
        gatherNodeParts(node.declaration, parts);
      }
    } else if (t.isModuleSpecifier(node)) {
      gatherNodeParts(node.local, parts);
    } else if (t.isMemberExpression(node)) {
      gatherNodeParts(node.object, parts);
      gatherNodeParts(node.property, parts);
    } else if (t.isIdentifier(node)) {
      parts.push(node.name);
    } else if (t.isLiteral(node)) {
      parts.push(node.value);
    } else if (t.isCallExpression(node)) {
      gatherNodeParts(node.callee, parts);
    } else if (t.isObjectExpression(node) || t.isObjectPattern(node)) {
      for (var _iterator3 = node.properties, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
        var _ref3;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref3 = _i3.value;
        }

        var prop = _ref3;

        gatherNodeParts(prop.key || prop.argument, parts);
      }
    }
  }

  var collectorVisitor = {
    For: function For(path) {
      for (var _iterator4 = t.FOR_INIT_KEYS, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {
        var _ref4;

        if (_isArray4) {
          if (_i4 >= _iterator4.length) break;
          _ref4 = _iterator4[_i4++];
        } else {
          _i4 = _iterator4.next();
          if (_i4.done) break;
          _ref4 = _i4.value;
        }

        var key = _ref4;

        var declar = path.get(key);
        if (declar.isVar()) path.scope.getFunctionParent().registerBinding("var", declar);
      }
    },
    Declaration: function Declaration(path) {
      if (path.isBlockScoped()) return;

      if (path.isExportDeclaration() && path.get("declaration").isDeclaration()) return;

      path.scope.getFunctionParent().registerDeclaration(path);
    },
    ReferencedIdentifier: function ReferencedIdentifier(path, state) {
      state.references.push(path);
    },
    ForXStatement: function ForXStatement(path, state) {
      var left = path.get("left");
      if (left.isPattern() || left.isIdentifier()) {
        state.constantViolations.push(left);
      }
    },

    ExportDeclaration: {
      exit: function exit(path) {
        var node = path.node,
            scope = path.scope;

        var declar = node.declaration;
        if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar)) {
          var _id = declar.id;
          if (!_id) return;

          var binding = scope.getBinding(_id.name);
          if (binding) binding.reference(path);
        } else if (t.isVariableDeclaration(declar)) {
          for (var _iterator5 = declar.declarations, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {
            var _ref5;

            if (_isArray5) {
              if (_i5 >= _iterator5.length) break;
              _ref5 = _iterator5[_i5++];
            } else {
              _i5 = _iterator5.next();
              if (_i5.done) break;
              _ref5 = _i5.value;
            }

            var decl = _ref5;

            var ids = t.getBindingIdentifiers(decl);
            for (var name in ids) {
              var _binding = scope.getBinding(name);
              if (_binding) _binding.reference(path);
            }
          }
        }
      }
    },

    LabeledStatement: function LabeledStatement(path) {
      path.scope.getProgramParent().addGlobal(path.node);
      path.scope.getBlockParent().registerDeclaration(path);
    },
    AssignmentExpression: function AssignmentExpression(path, state) {
      state.assignments.push(path);
    },
    UpdateExpression: function UpdateExpression(path, state) {
      state.constantViolations.push(path.get("argument"));
    },
    UnaryExpression: function UnaryExpression(path, state) {
      if (path.node.operator === "delete") {
        state.constantViolations.push(path.get("argument"));
      }
    },
    BlockScoped: function BlockScoped(path) {
      var scope = path.scope;
      if (scope.path === path) scope = scope.parent;
      scope.getBlockParent().registerDeclaration(path);
    },
    ClassDeclaration: function ClassDeclaration(path) {
      var id = path.node.id;
      if (!id) return;

      var name = id.name;
      path.scope.bindings[name] = path.scope.getBinding(name);
    },
    Block: function Block(path) {
      var paths = path.get("body");
      for (var _iterator6 = paths, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6);;) {
        var _ref6;

        if (_isArray6) {
          if (_i6 >= _iterator6.length) break;
          _ref6 = _iterator6[_i6++];
        } else {
          _i6 = _iterator6.next();
          if (_i6.done) break;
          _ref6 = _i6.value;
        }

        var bodyPath = _ref6;

        if (bodyPath.isFunctionDeclaration()) {
          path.scope.getBlockParent().registerDeclaration(bodyPath);
        }
      }
    }
  };

  var uid = 0;

  var Scope = function () {
    function Scope(path, parentScope) {
      (0, _classCallCheck3.default)(this, Scope);

      if (parentScope && parentScope.block === path.node) {
        return parentScope;
      }

      var cached = getCache(path, parentScope, this);
      if (cached) return cached;

      this.uid = uid++;
      this.parent = parentScope;
      this.hub = path.hub;

      this.parentBlock = path.parent;
      this.block = path.node;
      this.path = path;

      this.labels = new _map2.default();
    }

    Scope.prototype.traverse = function traverse(node, opts, state) {
      (0, _index2.default)(node, opts, this, state, this.path);
    };

    Scope.prototype.generateDeclaredUidIdentifier = function generateDeclaredUidIdentifier() {
      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "temp";

      var id = this.generateUidIdentifier(name);
      this.push({ id: id });
      return id;
    };

    Scope.prototype.generateUidIdentifier = function generateUidIdentifier() {
      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "temp";

      return t.identifier(this.generateUid(name));
    };

    Scope.prototype.generateUid = function generateUid() {
      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "temp";

      name = t.toIdentifier(name).replace(/^_+/, "").replace(/[0-9]+$/g, "");

      var uid = void 0;
      var i = 0;
      do {
        uid = this._generateUid(name, i);
        i++;
      } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));

      var program = this.getProgramParent();
      program.references[uid] = true;
      program.uids[uid] = true;

      return uid;
    };

    Scope.prototype._generateUid = function _generateUid(name, i) {
      var id = name;
      if (i > 1) id += i;
      return "_" + id;
    };

    Scope.prototype.generateUidIdentifierBasedOnNode = function generateUidIdentifierBasedOnNode(parent, defaultName) {
      var node = parent;

      if (t.isAssignmentExpression(parent)) {
        node = parent.left;
      } else if (t.isVariableDeclarator(parent)) {
        node = parent.id;
      } else if (t.isObjectProperty(node) || t.isObjectMethod(node)) {
        node = node.key;
      }

      var parts = [];
      gatherNodeParts(node, parts);

      var id = parts.join("$");
      id = id.replace(/^_/, "") || defaultName || "ref";

      return this.generateUidIdentifier(id.slice(0, 20));
    };

    Scope.prototype.isStatic = function isStatic(node) {
      if (t.isThisExpression(node) || t.isSuper(node)) {
        return true;
      }

      if (t.isIdentifier(node)) {
        var binding = this.getBinding(node.name);
        if (binding) {
          return binding.constant;
        } else {
          return this.hasBinding(node.name);
        }
      }

      return false;
    };

    Scope.prototype.maybeGenerateMemoised = function maybeGenerateMemoised(node, dontPush) {
      if (this.isStatic(node)) {
        return null;
      } else {
        var _id2 = this.generateUidIdentifierBasedOnNode(node);
        if (!dontPush) this.push({ id: _id2 });
        return _id2;
      }
    };

    Scope.prototype.checkBlockScopedCollisions = function checkBlockScopedCollisions(local, kind, name, id) {
      if (kind === "param") return;

      if (kind === "hoisted" && local.kind === "let") return;

      var duplicate = kind === "let" || local.kind === "let" || local.kind === "const" || local.kind === "module" || local.kind === "param" && (kind === "let" || kind === "const");

      if (duplicate) {
        throw this.hub.file.buildCodeFrameError(id, messages.get("scopeDuplicateDeclaration", name), TypeError);
      }
    };

    Scope.prototype.rename = function rename(oldName, newName, block) {
      var binding = this.getBinding(oldName);
      if (binding) {
        newName = newName || this.generateUidIdentifier(oldName).name;
        return new _renamer2.default(binding, oldName, newName).rename(block);
      }
    };

    Scope.prototype._renameFromMap = function _renameFromMap(map, oldName, newName, value) {
      if (map[oldName]) {
        map[newName] = value;
        map[oldName] = null;
      }
    };

    Scope.prototype.dump = function dump() {
      var sep = (0, _repeat2.default)("-", 60);
      console.log(sep);
      var scope = this;
      do {
        console.log("#", scope.block.type);
        for (var name in scope.bindings) {
          var binding = scope.bindings[name];
          console.log(" -", name, {
            constant: binding.constant,
            references: binding.references,
            violations: binding.constantViolations.length,
            kind: binding.kind
          });
        }
      } while (scope = scope.parent);
      console.log(sep);
    };

    Scope.prototype.toArray = function toArray(node, i) {
      var file = this.hub.file;

      if (t.isIdentifier(node)) {
        var binding = this.getBinding(node.name);
        if (binding && binding.constant && binding.path.isGenericType("Array")) return node;
      }

      if (t.isArrayExpression(node)) {
        return node;
      }

      if (t.isIdentifier(node, { name: "arguments" })) {
        return t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier("Array"), t.identifier("prototype")), t.identifier("slice")), t.identifier("call")), [node]);
      }

      var helperName = "toArray";
      var args = [node];
      if (i === true) {
        helperName = "toConsumableArray";
      } else if (i) {
        args.push(t.numericLiteral(i));
        helperName = "slicedToArray";
      }
      return t.callExpression(file.addHelper(helperName), args);
    };

    Scope.prototype.hasLabel = function hasLabel(name) {
      return !!this.getLabel(name);
    };

    Scope.prototype.getLabel = function getLabel(name) {
      return this.labels.get(name);
    };

    Scope.prototype.registerLabel = function registerLabel(path) {
      this.labels.set(path.node.label.name, path);
    };

    Scope.prototype.registerDeclaration = function registerDeclaration(path) {
      if (path.isLabeledStatement()) {
        this.registerLabel(path);
      } else if (path.isFunctionDeclaration()) {
        this.registerBinding("hoisted", path.get("id"), path);
      } else if (path.isVariableDeclaration()) {
        var declarations = path.get("declarations");
        for (var _iterator7 = declarations, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7);;) {
          var _ref7;

          if (_isArray7) {
            if (_i7 >= _iterator7.length) break;
            _ref7 = _iterator7[_i7++];
          } else {
            _i7 = _iterator7.next();
            if (_i7.done) break;
            _ref7 = _i7.value;
          }

          var declar = _ref7;

          this.registerBinding(path.node.kind, declar);
        }
      } else if (path.isClassDeclaration()) {
        this.registerBinding("let", path);
      } else if (path.isImportDeclaration()) {
        var specifiers = path.get("specifiers");
        for (var _iterator8 = specifiers, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : (0, _getIterator3.default)(_iterator8);;) {
          var _ref8;

          if (_isArray8) {
            if (_i8 >= _iterator8.length) break;
            _ref8 = _iterator8[_i8++];
          } else {
            _i8 = _iterator8.next();
            if (_i8.done) break;
            _ref8 = _i8.value;
          }

          var specifier = _ref8;

          this.registerBinding("module", specifier);
        }
      } else if (path.isExportDeclaration()) {
        var _declar = path.get("declaration");
        if (_declar.isClassDeclaration() || _declar.isFunctionDeclaration() || _declar.isVariableDeclaration()) {
          this.registerDeclaration(_declar);
        }
      } else {
        this.registerBinding("unknown", path);
      }
    };

    Scope.prototype.buildUndefinedNode = function buildUndefinedNode() {
      if (this.hasBinding("undefined")) {
        return t.unaryExpression("void", t.numericLiteral(0), true);
      } else {
        return t.identifier("undefined");
      }
    };

    Scope.prototype.registerConstantViolation = function registerConstantViolation(path) {
      var ids = path.getBindingIdentifiers();
      for (var name in ids) {
        var binding = this.getBinding(name);
        if (binding) binding.reassign(path);
      }
    };

    Scope.prototype.registerBinding = function registerBinding(kind, path) {
      var bindingPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : path;

      if (!kind) throw new ReferenceError("no `kind`");

      if (path.isVariableDeclaration()) {
        var declarators = path.get("declarations");
        for (var _iterator9 = declarators, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : (0, _getIterator3.default)(_iterator9);;) {
          var _ref9;

          if (_isArray9) {
            if (_i9 >= _iterator9.length) break;
            _ref9 = _iterator9[_i9++];
          } else {
            _i9 = _iterator9.next();
            if (_i9.done) break;
            _ref9 = _i9.value;
          }

          var declar = _ref9;

          this.registerBinding(kind, declar);
        }
        return;
      }

      var parent = this.getProgramParent();
      var ids = path.getBindingIdentifiers(true);

      for (var name in ids) {
        for (var _iterator10 = ids[name], _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : (0, _getIterator3.default)(_iterator10);;) {
          var _ref10;

          if (_isArray10) {
            if (_i10 >= _iterator10.length) break;
            _ref10 = _iterator10[_i10++];
          } else {
            _i10 = _iterator10.next();
            if (_i10.done) break;
            _ref10 = _i10.value;
          }

          var _id3 = _ref10;

          var local = this.getOwnBinding(name);
          if (local) {
            if (local.identifier === _id3) continue;

            this.checkBlockScopedCollisions(local, kind, name, _id3);
          }

          if (local && local.path.isFlow()) local = null;

          parent.references[name] = true;

          this.bindings[name] = new _binding3.default({
            identifier: _id3,
            existing: local,
            scope: this,
            path: bindingPath,
            kind: kind
          });
        }
      }
    };

    Scope.prototype.addGlobal = function addGlobal(node) {
      this.globals[node.name] = node;
    };

    Scope.prototype.hasUid = function hasUid(name) {
      var scope = this;

      do {
        if (scope.uids[name]) return true;
      } while (scope = scope.parent);

      return false;
    };

    Scope.prototype.hasGlobal = function hasGlobal(name) {
      var scope = this;

      do {
        if (scope.globals[name]) return true;
      } while (scope = scope.parent);

      return false;
    };

    Scope.prototype.hasReference = function hasReference(name) {
      var scope = this;

      do {
        if (scope.references[name]) return true;
      } while (scope = scope.parent);

      return false;
    };

    Scope.prototype.isPure = function isPure(node, constantsOnly) {
      if (t.isIdentifier(node)) {
        var binding = this.getBinding(node.name);
        if (!binding) return false;
        if (constantsOnly) return binding.constant;
        return true;
      } else if (t.isClass(node)) {
        if (node.superClass && !this.isPure(node.superClass, constantsOnly)) return false;
        return this.isPure(node.body, constantsOnly);
      } else if (t.isClassBody(node)) {
        for (var _iterator11 = node.body, _isArray11 = Array.isArray(_iterator11), _i11 = 0, _iterator11 = _isArray11 ? _iterator11 : (0, _getIterator3.default)(_iterator11);;) {
          var _ref11;

          if (_isArray11) {
            if (_i11 >= _iterator11.length) break;
            _ref11 = _iterator11[_i11++];
          } else {
            _i11 = _iterator11.next();
            if (_i11.done) break;
            _ref11 = _i11.value;
          }

          var method = _ref11;

          if (!this.isPure(method, constantsOnly)) return false;
        }
        return true;
      } else if (t.isBinary(node)) {
        return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);
      } else if (t.isArrayExpression(node)) {
        for (var _iterator12 = node.elements, _isArray12 = Array.isArray(_iterator12), _i12 = 0, _iterator12 = _isArray12 ? _iterator12 : (0, _getIterator3.default)(_iterator12);;) {
          var _ref12;

          if (_isArray12) {
            if (_i12 >= _iterator12.length) break;
            _ref12 = _iterator12[_i12++];
          } else {
            _i12 = _iterator12.next();
            if (_i12.done) break;
            _ref12 = _i12.value;
          }

          var elem = _ref12;

          if (!this.isPure(elem, constantsOnly)) return false;
        }
        return true;
      } else if (t.isObjectExpression(node)) {
        for (var _iterator13 = node.properties, _isArray13 = Array.isArray(_iterator13), _i13 = 0, _iterator13 = _isArray13 ? _iterator13 : (0, _getIterator3.default)(_iterator13);;) {
          var _ref13;

          if (_isArray13) {
            if (_i13 >= _iterator13.length) break;
            _ref13 = _iterator13[_i13++];
          } else {
            _i13 = _iterator13.next();
            if (_i13.done) break;
            _ref13 = _i13.value;
          }

          var prop = _ref13;

          if (!this.isPure(prop, constantsOnly)) return false;
        }
        return true;
      } else if (t.isClassMethod(node)) {
        if (node.computed && !this.isPure(node.key, constantsOnly)) return false;
        if (node.kind === "get" || node.kind === "set") return false;
        return true;
      } else if (t.isClassProperty(node) || t.isObjectProperty(node)) {
        if (node.computed && !this.isPure(node.key, constantsOnly)) return false;
        return this.isPure(node.value, constantsOnly);
      } else if (t.isUnaryExpression(node)) {
        return this.isPure(node.argument, constantsOnly);
      } else {
        return t.isPureish(node);
      }
    };

    Scope.prototype.setData = function setData(key, val) {
      return this.data[key] = val;
    };

    Scope.prototype.getData = function getData(key) {
      var scope = this;
      do {
        var data = scope.data[key];
        if (data != null) return data;
      } while (scope = scope.parent);
    };

    Scope.prototype.removeData = function removeData(key) {
      var scope = this;
      do {
        var data = scope.data[key];
        if (data != null) scope.data[key] = null;
      } while (scope = scope.parent);
    };

    Scope.prototype.init = function init() {
      if (!this.references) this.crawl();
    };

    Scope.prototype.crawl = function crawl() {
      _crawlCallsCount++;
      this._crawl();
      _crawlCallsCount--;
    };

    Scope.prototype._crawl = function _crawl() {
      var path = this.path;

      this.references = (0, _create2.default)(null);
      this.bindings = (0, _create2.default)(null);
      this.globals = (0, _create2.default)(null);
      this.uids = (0, _create2.default)(null);
      this.data = (0, _create2.default)(null);

      if (path.isLoop()) {
        for (var _iterator14 = t.FOR_INIT_KEYS, _isArray14 = Array.isArray(_iterator14), _i14 = 0, _iterator14 = _isArray14 ? _iterator14 : (0, _getIterator3.default)(_iterator14);;) {
          var _ref14;

          if (_isArray14) {
            if (_i14 >= _iterator14.length) break;
            _ref14 = _iterator14[_i14++];
          } else {
            _i14 = _iterator14.next();
            if (_i14.done) break;
            _ref14 = _i14.value;
          }

          var key = _ref14;

          var node = path.get(key);
          if (node.isBlockScoped()) this.registerBinding(node.node.kind, node);
        }
      }

      if (path.isFunctionExpression() && path.has("id")) {
        if (!path.get("id").node[t.NOT_LOCAL_BINDING]) {
          this.registerBinding("local", path.get("id"), path);
        }
      }

      if (path.isClassExpression() && path.has("id")) {
        if (!path.get("id").node[t.NOT_LOCAL_BINDING]) {
          this.registerBinding("local", path);
        }
      }

      if (path.isFunction()) {
        var params = path.get("params");
        for (var _iterator15 = params, _isArray15 = Array.isArray(_iterator15), _i15 = 0, _iterator15 = _isArray15 ? _iterator15 : (0, _getIterator3.default)(_iterator15);;) {
          var _ref15;

          if (_isArray15) {
            if (_i15 >= _iterator15.length) break;
            _ref15 = _iterator15[_i15++];
          } else {
            _i15 = _iterator15.next();
            if (_i15.done) break;
            _ref15 = _i15.value;
          }

          var param = _ref15;

          this.registerBinding("param", param);
        }
      }

      if (path.isCatchClause()) {
        this.registerBinding("let", path);
      }

      var parent = this.getProgramParent();
      if (parent.crawling) return;

      var state = {
        references: [],
        constantViolations: [],
        assignments: []
      };

      this.crawling = true;
      path.traverse(collectorVisitor, state);
      this.crawling = false;

      for (var _iterator16 = state.assignments, _isArray16 = Array.isArray(_iterator16), _i16 = 0, _iterator16 = _isArray16 ? _iterator16 : (0, _getIterator3.default)(_iterator16);;) {
        var _ref16;

        if (_isArray16) {
          if (_i16 >= _iterator16.length) break;
          _ref16 = _iterator16[_i16++];
        } else {
          _i16 = _iterator16.next();
          if (_i16.done) break;
          _ref16 = _i16.value;
        }

        var _path = _ref16;

        var ids = _path.getBindingIdentifiers();
        var programParent = void 0;
        for (var name in ids) {
          if (_path.scope.getBinding(name)) continue;

          programParent = programParent || _path.scope.getProgramParent();
          programParent.addGlobal(ids[name]);
        }

        _path.scope.registerConstantViolation(_path);
      }

      for (var _iterator17 = state.references, _isArray17 = Array.isArray(_iterator17), _i17 = 0, _iterator17 = _isArray17 ? _iterator17 : (0, _getIterator3.default)(_iterator17);;) {
        var _ref17;

        if (_isArray17) {
          if (_i17 >= _iterator17.length) break;
          _ref17 = _iterator17[_i17++];
        } else {
          _i17 = _iterator17.next();
          if (_i17.done) break;
          _ref17 = _i17.value;
        }

        var ref = _ref17;

        var binding = ref.scope.getBinding(ref.node.name);
        if (binding) {
          binding.reference(ref);
        } else {
          ref.scope.getProgramParent().addGlobal(ref.node);
        }
      }

      for (var _iterator18 = state.constantViolations, _isArray18 = Array.isArray(_iterator18), _i18 = 0, _iterator18 = _isArray18 ? _iterator18 : (0, _getIterator3.default)(_iterator18);;) {
        var _ref18;

        if (_isArray18) {
          if (_i18 >= _iterator18.length) break;
          _ref18 = _iterator18[_i18++];
        } else {
          _i18 = _iterator18.next();
          if (_i18.done) break;
          _ref18 = _i18.value;
        }

        var _path2 = _ref18;

        _path2.scope.registerConstantViolation(_path2);
      }
    };

    Scope.prototype.push = function push(opts) {
      var path = this.path;

      if (!path.isBlockStatement() && !path.isProgram()) {
        path = this.getBlockParent().path;
      }

      if (path.isSwitchStatement()) {
        path = this.getFunctionParent().path;
      }

      if (path.isLoop() || path.isCatchClause() || path.isFunction()) {
        t.ensureBlock(path.node);
        path = path.get("body");
      }

      var unique = opts.unique;
      var kind = opts.kind || "var";
      var blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;

      var dataKey = "declaration:" + kind + ":" + blockHoist;
      var declarPath = !unique && path.getData(dataKey);

      if (!declarPath) {
        var declar = t.variableDeclaration(kind, []);
        declar._generated = true;
        declar._blockHoist = blockHoist;

        var _path$unshiftContaine = path.unshiftContainer("body", [declar]);

        declarPath = _path$unshiftContaine[0];

        if (!unique) path.setData(dataKey, declarPath);
      }

      var declarator = t.variableDeclarator(opts.id, opts.init);
      declarPath.node.declarations.push(declarator);
      this.registerBinding(kind, declarPath.get("declarations").pop());
    };

    Scope.prototype.getProgramParent = function getProgramParent() {
      var scope = this;
      do {
        if (scope.path.isProgram()) {
          return scope;
        }
      } while (scope = scope.parent);
      throw new Error("We couldn't find a Function or Program...");
    };

    Scope.prototype.getFunctionParent = function getFunctionParent() {
      var scope = this;
      do {
        if (scope.path.isFunctionParent()) {
          return scope;
        }
      } while (scope = scope.parent);
      throw new Error("We couldn't find a Function or Program...");
    };

    Scope.prototype.getBlockParent = function getBlockParent() {
      var scope = this;
      do {
        if (scope.path.isBlockParent()) {
          return scope;
        }
      } while (scope = scope.parent);
      throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");
    };

    Scope.prototype.getAllBindings = function getAllBindings() {
      var ids = (0, _create2.default)(null);

      var scope = this;
      do {
        (0, _defaults2.default)(ids, scope.bindings);
        scope = scope.parent;
      } while (scope);

      return ids;
    };

    Scope.prototype.getAllBindingsOfKind = function getAllBindingsOfKind() {
      var ids = (0, _create2.default)(null);

      for (var _iterator19 = arguments, _isArray19 = Array.isArray(_iterator19), _i19 = 0, _iterator19 = _isArray19 ? _iterator19 : (0, _getIterator3.default)(_iterator19);;) {
        var _ref19;

        if (_isArray19) {
          if (_i19 >= _iterator19.length) break;
          _ref19 = _iterator19[_i19++];
        } else {
          _i19 = _iterator19.next();
          if (_i19.done) break;
          _ref19 = _i19.value;
        }

        var kind = _ref19;

        var scope = this;
        do {
          for (var name in scope.bindings) {
            var binding = scope.bindings[name];
            if (binding.kind === kind) ids[name] = binding;
          }
          scope = scope.parent;
        } while (scope);
      }

      return ids;
    };

    Scope.prototype.bindingIdentifierEquals = function bindingIdentifierEquals(name, node) {
      return this.getBindingIdentifier(name) === node;
    };

    Scope.prototype.warnOnFlowBinding = function warnOnFlowBinding(binding) {
      if (_crawlCallsCount === 0 && binding && binding.path.isFlow()) {
        console.warn("\n        You or one of the Babel plugins you are using are using Flow declarations as bindings.\n        Support for this will be removed in version 7. To find out the caller, grep for this\n        message and change it to a `console.trace()`.\n      ");
      }
      return binding;
    };

    Scope.prototype.getBinding = function getBinding(name) {
      var scope = this;

      do {
        var binding = scope.getOwnBinding(name);
        if (binding) return this.warnOnFlowBinding(binding);
      } while (scope = scope.parent);
    };

    Scope.prototype.getOwnBinding = function getOwnBinding(name) {
      return this.warnOnFlowBinding(this.bindings[name]);
    };

    Scope.prototype.getBindingIdentifier = function getBindingIdentifier(name) {
      var info = this.getBinding(name);
      return info && info.identifier;
    };

    Scope.prototype.getOwnBindingIdentifier = function getOwnBindingIdentifier(name) {
      var binding = this.bindings[name];
      return binding && binding.identifier;
    };

    Scope.prototype.hasOwnBinding = function hasOwnBinding(name) {
      return !!this.getOwnBinding(name);
    };

    Scope.prototype.hasBinding = function hasBinding(name, noGlobals) {
      if (!name) return false;
      if (this.hasOwnBinding(name)) return true;
      if (this.parentHasBinding(name, noGlobals)) return true;
      if (this.hasUid(name)) return true;
      if (!noGlobals && (0, _includes2.default)(Scope.globals, name)) return true;
      if (!noGlobals && (0, _includes2.default)(Scope.contextVariables, name)) return true;
      return false;
    };

    Scope.prototype.parentHasBinding = function parentHasBinding(name, noGlobals) {
      return this.parent && this.parent.hasBinding(name, noGlobals);
    };

    Scope.prototype.moveBindingTo = function moveBindingTo(name, scope) {
      var info = this.getBinding(name);
      if (info) {
        info.scope.removeOwnBinding(name);
        info.scope = scope;
        scope.bindings[name] = info;
      }
    };

    Scope.prototype.removeOwnBinding = function removeOwnBinding(name) {
      delete this.bindings[name];
    };

    Scope.prototype.removeBinding = function removeBinding(name) {
      var info = this.getBinding(name);
      if (info) {
        info.scope.removeOwnBinding(name);
      }

      var scope = this;
      do {
        if (scope.uids[name]) {
          scope.uids[name] = false;
        }
      } while (scope = scope.parent);
    };

    return Scope;
  }();

  Scope.globals = (0, _keys2.default)(_globals2.default.builtin);
  Scope.contextVariables = ["arguments", "undefined", "Infinity", "NaN"];
  exports.default = Scope;
  module.exports = exports["default"];
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/ancestry.js", ["babel-runtime/core-js/get-iterator", "babel-types", "./index", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.findParent = findParent;
  exports.find = find;
  exports.getFunctionParent = getFunctionParent;
  exports.getStatementParent = getStatementParent;
  exports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;
  exports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;
  exports.getAncestry = getAncestry;
  exports.isAncestor = isAncestor;
  exports.isDescendant = isDescendant;
  exports.inType = inType;
  exports.inShadow = inShadow;

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  var _index = $__require("./index");

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function findParent(callback) {
    var path = this;
    while (path = path.parentPath) {
      if (callback(path)) return path;
    }
    return null;
  }

  function find(callback) {
    var path = this;
    do {
      if (callback(path)) return path;
    } while (path = path.parentPath);
    return null;
  }

  function getFunctionParent() {
    return this.findParent(function (path) {
      return path.isFunction() || path.isProgram();
    });
  }

  function getStatementParent() {
    var path = this;
    do {
      if (Array.isArray(path.container)) {
        return path;
      }
    } while (path = path.parentPath);
  }

  function getEarliestCommonAncestorFrom(paths) {
    return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {
      var earliest = void 0;
      var keys = t.VISITOR_KEYS[deepest.type];

      for (var _iterator = ancestries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var ancestry = _ref;

        var path = ancestry[i + 1];

        if (!earliest) {
          earliest = path;
          continue;
        }

        if (path.listKey && earliest.listKey === path.listKey) {
          if (path.key < earliest.key) {
            earliest = path;
            continue;
          }
        }

        var earliestKeyIndex = keys.indexOf(earliest.parentKey);
        var currentKeyIndex = keys.indexOf(path.parentKey);
        if (earliestKeyIndex > currentKeyIndex) {
          earliest = path;
        }
      }

      return earliest;
    });
  }

  function getDeepestCommonAncestorFrom(paths, filter) {
    var _this = this;

    if (!paths.length) {
      return this;
    }

    if (paths.length === 1) {
      return paths[0];
    }

    var minDepth = Infinity;

    var lastCommonIndex = void 0,
        lastCommon = void 0;

    var ancestries = paths.map(function (path) {
      var ancestry = [];

      do {
        ancestry.unshift(path);
      } while ((path = path.parentPath) && path !== _this);

      if (ancestry.length < minDepth) {
        minDepth = ancestry.length;
      }

      return ancestry;
    });

    var first = ancestries[0];

    depthLoop: for (var i = 0; i < minDepth; i++) {
      var shouldMatch = first[i];

      for (var _iterator2 = ancestries, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var ancestry = _ref2;

        if (ancestry[i] !== shouldMatch) {
          break depthLoop;
        }
      }

      lastCommonIndex = i;
      lastCommon = shouldMatch;
    }

    if (lastCommon) {
      if (filter) {
        return filter(lastCommon, lastCommonIndex, ancestries);
      } else {
        return lastCommon;
      }
    } else {
      throw new Error("Couldn't find intersection");
    }
  }

  function getAncestry() {
    var path = this;
    var paths = [];
    do {
      paths.push(path);
    } while (path = path.parentPath);
    return paths;
  }

  function isAncestor(maybeDescendant) {
    return maybeDescendant.isDescendant(this);
  }

  function isDescendant(maybeAncestor) {
    return !!this.findParent(function (parent) {
      return parent === maybeAncestor;
    });
  }

  function inType() {
    var path = this;
    while (path) {
      for (var _iterator3 = arguments, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
        var _ref3;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref3 = _i3.value;
        }

        var type = _ref3;

        if (path.node.type === type) return true;
      }
      path = path.parentPath;
    }

    return false;
  }

  function inShadow(key) {
    var parentFn = this.isFunction() ? this : this.findParent(function (p) {
      return p.isFunction();
    });
    if (!parentFn) return;

    if (parentFn.isFunctionExpression() || parentFn.isFunctionDeclaration()) {
      var shadow = parentFn.node.shadow;

      if (shadow && (!key || shadow[key] !== false)) {
        return parentFn;
      }
    } else if (parentFn.isArrowFunctionExpression()) {
      return parentFn;
    }

    return null;
  }
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/inference/inferer-reference.js", ["babel-runtime/core-js/get-iterator", "babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.default = function (node) {
    if (!this.isReferenced()) return;

    var binding = this.scope.getBinding(node.name);
    if (binding) {
      if (binding.identifier.typeAnnotation) {
        return binding.identifier.typeAnnotation;
      } else {
        return getTypeAnnotationBindingConstantViolations(this, node.name);
      }
    }

    if (node.name === "undefined") {
      return t.voidTypeAnnotation();
    } else if (node.name === "NaN" || node.name === "Infinity") {
      return t.numberTypeAnnotation();
    } else if (node.name === "arguments") {}
  };

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function getTypeAnnotationBindingConstantViolations(path, name) {
    var binding = path.scope.getBinding(name);

    var types = [];
    path.typeAnnotation = t.unionTypeAnnotation(types);

    var functionConstantViolations = [];
    var constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);

    var testType = getConditionalAnnotation(path, name);
    if (testType) {
      var testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);

      constantViolations = constantViolations.filter(function (path) {
        return testConstantViolations.indexOf(path) < 0;
      });

      types.push(testType.typeAnnotation);
    }

    if (constantViolations.length) {
      constantViolations = constantViolations.concat(functionConstantViolations);

      for (var _iterator = constantViolations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var violation = _ref;

        types.push(violation.getTypeAnnotation());
      }
    }

    if (types.length) {
      return t.createUnionTypeAnnotation(types);
    }
  }

  function getConstantViolationsBefore(binding, path, functions) {
    var violations = binding.constantViolations.slice();
    violations.unshift(binding.path);
    return violations.filter(function (violation) {
      violation = violation.resolve();
      var status = violation._guessExecutionStatusRelativeTo(path);
      if (functions && status === "function") functions.push(violation);
      return status === "before";
    });
  }

  function inferAnnotationFromBinaryExpression(name, path) {
    var operator = path.node.operator;

    var right = path.get("right").resolve();
    var left = path.get("left").resolve();

    var target = void 0;
    if (left.isIdentifier({ name: name })) {
      target = right;
    } else if (right.isIdentifier({ name: name })) {
      target = left;
    }
    if (target) {
      if (operator === "===") {
        return target.getTypeAnnotation();
      } else if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {
        return t.numberTypeAnnotation();
      } else {
        return;
      }
    } else {
      if (operator !== "===") return;
    }

    var typeofPath = void 0;
    var typePath = void 0;
    if (left.isUnaryExpression({ operator: "typeof" })) {
      typeofPath = left;
      typePath = right;
    } else if (right.isUnaryExpression({ operator: "typeof" })) {
      typeofPath = right;
      typePath = left;
    }
    if (!typePath && !typeofPath) return;

    typePath = typePath.resolve();
    if (!typePath.isLiteral()) return;

    var typeValue = typePath.node.value;
    if (typeof typeValue !== "string") return;

    if (!typeofPath.get("argument").isIdentifier({ name: name })) return;

    return t.createTypeAnnotationBasedOnTypeof(typePath.node.value);
  }

  function getParentConditionalPath(path) {
    var parentPath = void 0;
    while (parentPath = path.parentPath) {
      if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {
        if (path.key === "test") {
          return;
        } else {
          return parentPath;
        }
      } else {
        path = parentPath;
      }
    }
  }

  function getConditionalAnnotation(path, name) {
    var ifStatement = getParentConditionalPath(path);
    if (!ifStatement) return;

    var test = ifStatement.get("test");
    var paths = [test];
    var types = [];

    do {
      var _path = paths.shift().resolve();

      if (_path.isLogicalExpression()) {
        paths.push(_path.get("left"));
        paths.push(_path.get("right"));
      }

      if (_path.isBinaryExpression()) {
        var type = inferAnnotationFromBinaryExpression(name, _path);
        if (type) types.push(type);
      }
    } while (paths.length);

    if (types.length) {
      return {
        typeAnnotation: t.createUnionTypeAnnotation(types),
        ifStatement: ifStatement
      };
    } else {
      return getConditionalAnnotation(ifStatement, name);
    }
  }
  module.exports = exports["default"];
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/inference/inferers.js", ["./inferer-reference", "babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = exports.Identifier = undefined;

  var _infererReference = $__require("./inferer-reference");

  Object.defineProperty(exports, "Identifier", {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_infererReference).default;
    }
  });
  exports.VariableDeclarator = VariableDeclarator;
  exports.TypeCastExpression = TypeCastExpression;
  exports.NewExpression = NewExpression;
  exports.TemplateLiteral = TemplateLiteral;
  exports.UnaryExpression = UnaryExpression;
  exports.BinaryExpression = BinaryExpression;
  exports.LogicalExpression = LogicalExpression;
  exports.ConditionalExpression = ConditionalExpression;
  exports.SequenceExpression = SequenceExpression;
  exports.AssignmentExpression = AssignmentExpression;
  exports.UpdateExpression = UpdateExpression;
  exports.StringLiteral = StringLiteral;
  exports.NumericLiteral = NumericLiteral;
  exports.BooleanLiteral = BooleanLiteral;
  exports.NullLiteral = NullLiteral;
  exports.RegExpLiteral = RegExpLiteral;
  exports.ObjectExpression = ObjectExpression;
  exports.ArrayExpression = ArrayExpression;
  exports.RestElement = RestElement;
  exports.CallExpression = CallExpression;
  exports.TaggedTemplateExpression = TaggedTemplateExpression;

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function VariableDeclarator() {
    var id = this.get("id");

    if (id.isIdentifier()) {
      return this.get("init").getTypeAnnotation();
    } else {
      return;
    }
  }

  function TypeCastExpression(node) {
    return node.typeAnnotation;
  }

  TypeCastExpression.validParent = true;

  function NewExpression(node) {
    if (this.get("callee").isIdentifier()) {
      return t.genericTypeAnnotation(node.callee);
    }
  }

  function TemplateLiteral() {
    return t.stringTypeAnnotation();
  }

  function UnaryExpression(node) {
    var operator = node.operator;

    if (operator === "void") {
      return t.voidTypeAnnotation();
    } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {
      return t.numberTypeAnnotation();
    } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {
      return t.stringTypeAnnotation();
    } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {
      return t.booleanTypeAnnotation();
    }
  }

  function BinaryExpression(node) {
    var operator = node.operator;

    if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {
      return t.numberTypeAnnotation();
    } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {
      return t.booleanTypeAnnotation();
    } else if (operator === "+") {
      var right = this.get("right");
      var left = this.get("left");

      if (left.isBaseType("number") && right.isBaseType("number")) {
        return t.numberTypeAnnotation();
      } else if (left.isBaseType("string") || right.isBaseType("string")) {
        return t.stringTypeAnnotation();
      }

      return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);
    }
  }

  function LogicalExpression() {
    return t.createUnionTypeAnnotation([this.get("left").getTypeAnnotation(), this.get("right").getTypeAnnotation()]);
  }

  function ConditionalExpression() {
    return t.createUnionTypeAnnotation([this.get("consequent").getTypeAnnotation(), this.get("alternate").getTypeAnnotation()]);
  }

  function SequenceExpression() {
    return this.get("expressions").pop().getTypeAnnotation();
  }

  function AssignmentExpression() {
    return this.get("right").getTypeAnnotation();
  }

  function UpdateExpression(node) {
    var operator = node.operator;
    if (operator === "++" || operator === "--") {
      return t.numberTypeAnnotation();
    }
  }

  function StringLiteral() {
    return t.stringTypeAnnotation();
  }

  function NumericLiteral() {
    return t.numberTypeAnnotation();
  }

  function BooleanLiteral() {
    return t.booleanTypeAnnotation();
  }

  function NullLiteral() {
    return t.nullLiteralTypeAnnotation();
  }

  function RegExpLiteral() {
    return t.genericTypeAnnotation(t.identifier("RegExp"));
  }

  function ObjectExpression() {
    return t.genericTypeAnnotation(t.identifier("Object"));
  }

  function ArrayExpression() {
    return t.genericTypeAnnotation(t.identifier("Array"));
  }

  function RestElement() {
    return ArrayExpression();
  }

  RestElement.validParent = true;

  function Func() {
    return t.genericTypeAnnotation(t.identifier("Function"));
  }

  exports.FunctionExpression = Func;
  exports.ArrowFunctionExpression = Func;
  exports.FunctionDeclaration = Func;
  exports.ClassExpression = Func;
  exports.ClassDeclaration = Func;
  function CallExpression() {
    return resolveCall(this.get("callee"));
  }

  function TaggedTemplateExpression() {
    return resolveCall(this.get("tag"));
  }

  function resolveCall(callee) {
    callee = callee.resolve();

    if (callee.isFunction()) {
      if (callee.is("async")) {
        if (callee.is("generator")) {
          return t.genericTypeAnnotation(t.identifier("AsyncIterator"));
        } else {
          return t.genericTypeAnnotation(t.identifier("Promise"));
        }
      } else {
        if (callee.node.returnType) {
          return callee.node.returnType;
        } else {}
      }
    }
  }
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/inference/index.js", ["babel-runtime/core-js/get-iterator", "./inferers", "babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.getTypeAnnotation = getTypeAnnotation;
  exports._getTypeAnnotation = _getTypeAnnotation;
  exports.isBaseType = isBaseType;
  exports.couldBeBaseType = couldBeBaseType;
  exports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;
  exports.isGenericType = isGenericType;

  var _inferers = $__require("./inferers");

  var inferers = _interopRequireWildcard(_inferers);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function getTypeAnnotation() {
    if (this.typeAnnotation) return this.typeAnnotation;

    var type = this._getTypeAnnotation() || t.anyTypeAnnotation();
    if (t.isTypeAnnotation(type)) type = type.typeAnnotation;
    return this.typeAnnotation = type;
  }

  function _getTypeAnnotation() {
    var node = this.node;

    if (!node) {
      if (this.key === "init" && this.parentPath.isVariableDeclarator()) {
        var declar = this.parentPath.parentPath;
        var declarParent = declar.parentPath;

        if (declar.key === "left" && declarParent.isForInStatement()) {
          return t.stringTypeAnnotation();
        }

        if (declar.key === "left" && declarParent.isForOfStatement()) {
          return t.anyTypeAnnotation();
        }

        return t.voidTypeAnnotation();
      } else {
        return;
      }
    }

    if (node.typeAnnotation) {
      return node.typeAnnotation;
    }

    var inferer = inferers[node.type];
    if (inferer) {
      return inferer.call(this, node);
    }

    inferer = inferers[this.parentPath.type];
    if (inferer && inferer.validParent) {
      return this.parentPath.getTypeAnnotation();
    }
  }

  function isBaseType(baseName, soft) {
    return _isBaseType(baseName, this.getTypeAnnotation(), soft);
  }

  function _isBaseType(baseName, type, soft) {
    if (baseName === "string") {
      return t.isStringTypeAnnotation(type);
    } else if (baseName === "number") {
      return t.isNumberTypeAnnotation(type);
    } else if (baseName === "boolean") {
      return t.isBooleanTypeAnnotation(type);
    } else if (baseName === "any") {
      return t.isAnyTypeAnnotation(type);
    } else if (baseName === "mixed") {
      return t.isMixedTypeAnnotation(type);
    } else if (baseName === "empty") {
      return t.isEmptyTypeAnnotation(type);
    } else if (baseName === "void") {
      return t.isVoidTypeAnnotation(type);
    } else {
      if (soft) {
        return false;
      } else {
        throw new Error("Unknown base type " + baseName);
      }
    }
  }

  function couldBeBaseType(name) {
    var type = this.getTypeAnnotation();
    if (t.isAnyTypeAnnotation(type)) return true;

    if (t.isUnionTypeAnnotation(type)) {
      for (var _iterator = type.types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var type2 = _ref;

        if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {
          return true;
        }
      }
      return false;
    } else {
      return _isBaseType(name, type, true);
    }
  }

  function baseTypeStrictlyMatches(right) {
    var left = this.getTypeAnnotation();
    right = right.getTypeAnnotation();

    if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {
      return right.type === left.type;
    }
  }

  function isGenericType(genericName) {
    var type = this.getTypeAnnotation();
    return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, { name: genericName });
  }
});
System.registerDynamic("npm:js-tokens@3.0.2.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:js-tokens@3.0.2/index.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // Copyright 2014, 2015, 2016, 2017 Simon Lydell
  // License: MIT. (See LICENSE.)

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  // This regex comes from regex.coffee, and is inserted here by generate-index.js
  // (run `npm run build`).
  exports.default = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyu]{1,5}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g;

  exports.matchToToken = function (match) {
    var token = { type: "invalid", value: match[0] };
    if (match[1]) token.type = "string", token.closed = !!(match[3] || match[4]);else if (match[5]) token.type = "comment";else if (match[6]) token.type = "comment", token.closed = !!match[7];else if (match[8]) token.type = "regex";else if (match[9]) token.type = "number";else if (match[10]) token.type = "name";else if (match[11]) token.type = "punctuator";else if (match[12]) token.type = "whitespace";
    return token;
  };
});
System.registerDynamic("npm:escape-string-regexp@1.0.5.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:escape-string-regexp@1.0.5/index.js', [], true, function ($__require, exports, module) {
	'use strict';

	var global = this || self,
	    GLOBAL = global;
	var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

	module.exports = function (str) {
		if (typeof str !== 'string') {
			throw new TypeError('Expected a string');
		}

		return str.replace(matchOperatorsRe, '\\$&');
	};
});
System.registerDynamic("npm:ansi-styles@2.2.1.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:ansi-styles@2.2.1/index.js', [], true, function ($__require, exports, module) {
	'use strict';

	var global = this || self,
	    GLOBAL = global;
	function assembleStyles() {
		var styles = {
			modifiers: {
				reset: [0, 0],
				bold: [1, 22], // 21 isn't widely supported and 22 does the same thing
				dim: [2, 22],
				italic: [3, 23],
				underline: [4, 24],
				inverse: [7, 27],
				hidden: [8, 28],
				strikethrough: [9, 29]
			},
			colors: {
				black: [30, 39],
				red: [31, 39],
				green: [32, 39],
				yellow: [33, 39],
				blue: [34, 39],
				magenta: [35, 39],
				cyan: [36, 39],
				white: [37, 39],
				gray: [90, 39]
			},
			bgColors: {
				bgBlack: [40, 49],
				bgRed: [41, 49],
				bgGreen: [42, 49],
				bgYellow: [43, 49],
				bgBlue: [44, 49],
				bgMagenta: [45, 49],
				bgCyan: [46, 49],
				bgWhite: [47, 49]
			}
		};

		// fix humans
		styles.colors.grey = styles.colors.gray;

		Object.keys(styles).forEach(function (groupName) {
			var group = styles[groupName];

			Object.keys(group).forEach(function (styleName) {
				var style = group[styleName];

				styles[styleName] = group[styleName] = {
					open: '\u001b[' + style[0] + 'm',
					close: '\u001b[' + style[1] + 'm'
				};
			});

			Object.defineProperty(styles, groupName, {
				value: group,
				enumerable: false
			});
		});

		return styles;
	}

	Object.defineProperty(module, 'exports', {
		enumerable: true,
		get: assembleStyles
	});
});
System.registerDynamic("npm:strip-ansi@3.0.1.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:strip-ansi@3.0.1/index.js', ['ansi-regex'], true, function ($__require, exports, module) {
	'use strict';

	var global = this || self,
	    GLOBAL = global;
	var ansiRegex = $__require('ansi-regex')();

	module.exports = function (str) {
		return typeof str === 'string' ? str.replace(ansiRegex, '') : str;
	};
});
System.registerDynamic("npm:ansi-regex@2.1.1.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:ansi-regex@2.1.1/index.js', [], true, function ($__require, exports, module) {
	'use strict';

	var global = this || self,
	    GLOBAL = global;
	module.exports = function () {
		return (/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g
		);
	};
});
System.registerDynamic("npm:has-ansi@2.0.0.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:has-ansi@2.0.0/index.js', ['ansi-regex'], true, function ($__require, exports, module) {
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ansiRegex = $__require('ansi-regex');
  var re = new RegExp(ansiRegex().source); // remove the `g` flag
  module.exports = re.test.bind(re);
});
System.registerDynamic("npm:supports-color@2.0.0.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:supports-color@2.0.0/index.js', ['process'], true, function ($__require, exports, module) {
	'use strict';

	var process = $__require('process');
	var global = this || self,
	    GLOBAL = global;
	var argv = process.argv;

	var terminator = argv.indexOf('--');
	var hasFlag = function (flag) {
		flag = '--' + flag;
		var pos = argv.indexOf(flag);
		return pos !== -1 && (terminator !== -1 ? pos < terminator : true);
	};

	module.exports = function () {
		if ('FORCE_COLOR' in process.env) {
			return true;
		}

		if (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {
			return false;
		}

		if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true') || hasFlag('color=always')) {
			return true;
		}

		if (process.stdout && !process.stdout.isTTY) {
			return false;
		}

		if (process.platform === 'win32') {
			return true;
		}

		if ('COLORTERM' in process.env) {
			return true;
		}

		if (process.env.TERM === 'dumb') {
			return false;
		}

		if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {
			return true;
		}

		return false;
	}();
});
System.registerDynamic("npm:chalk@1.1.3.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:chalk@1.1.3/index.js', ['escape-string-regexp', 'ansi-styles', 'strip-ansi', 'has-ansi', 'supports-color', 'process'], true, function ($__require, exports, module) {
	'use strict';

	var process = $__require('process');
	var global = this || self,
	    GLOBAL = global;
	var escapeStringRegexp = $__require('escape-string-regexp');
	var ansiStyles = $__require('ansi-styles');
	var stripAnsi = $__require('strip-ansi');
	var hasAnsi = $__require('has-ansi');
	var supportsColor = $__require('supports-color');
	var defineProps = Object.defineProperties;
	var isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);

	function Chalk(options) {
		// detect mode if not set manually
		this.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;
	}

	// use bright blue on Windows as the normal blue color is illegible
	if (isSimpleWindowsTerm) {
		ansiStyles.blue.open = '\u001b[94m';
	}

	var styles = function () {
		var ret = {};

		Object.keys(ansiStyles).forEach(function (key) {
			ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');

			ret[key] = {
				get: function () {
					return build.call(this, this._styles.concat(key));
				}
			};
		});

		return ret;
	}();

	var proto = defineProps(function chalk() {}, styles);

	function build(_styles) {
		var builder = function () {
			return applyStyle.apply(builder, arguments);
		};

		builder._styles = _styles;
		builder.enabled = this.enabled;
		// __proto__ is used because we must return a function, but there is
		// no way to create a function with a different prototype.
		/* eslint-disable no-proto */
		builder.__proto__ = proto;

		return builder;
	}

	function applyStyle() {
		// support varags, but simply cast to string in case there's only one arg
		var args = arguments;
		var argsLen = args.length;
		var str = argsLen !== 0 && String(arguments[0]);

		if (argsLen > 1) {
			// don't slice `arguments`, it prevents v8 optimizations
			for (var a = 1; a < argsLen; a++) {
				str += ' ' + args[a];
			}
		}

		if (!this.enabled || !str) {
			return str;
		}

		var nestedStyles = this._styles;
		var i = nestedStyles.length;

		// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,
		// see https://github.com/chalk/chalk/issues/58
		// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.
		var originalDim = ansiStyles.dim.open;
		if (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {
			ansiStyles.dim.open = '';
		}

		while (i--) {
			var code = ansiStyles[nestedStyles[i]];

			// Replace any instances already present with a re-opening code
			// otherwise only the part of the string until said closing code
			// will be colored, and the rest will simply be 'plain'.
			str = code.open + str.replace(code.closeRe, code.open) + code.close;
		}

		// Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.
		ansiStyles.dim.open = originalDim;

		return str;
	}

	function init() {
		var ret = {};

		Object.keys(styles).forEach(function (name) {
			ret[name] = {
				get: function () {
					return build.call(this, [name]);
				}
			};
		});

		return ret;
	}

	defineProps(Chalk.prototype, init());

	module.exports = new Chalk();
	module.exports.styles = ansiStyles;
	module.exports.hasColor = hasAnsi;
	module.exports.stripColor = stripAnsi;
	module.exports.supportsColor = supportsColor;
});
System.registerDynamic("npm:babel-code-frame@6.26.0.json", [], true, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib": "./lib/index.js"
    }
  };
});

System.registerDynamic("npm:babel-code-frame@6.26.0/lib/index.js", ["js-tokens", "esutils", "chalk"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  exports.default = function (rawLines, lineNumber, colNumber) {
    var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    colNumber = Math.max(colNumber, 0);

    var highlighted = opts.highlightCode && _chalk2.default.supportsColor || opts.forceColor;
    var chalk = _chalk2.default;
    if (opts.forceColor) {
      chalk = new _chalk2.default.constructor({ enabled: true });
    }
    var maybeHighlight = function maybeHighlight(chalkFn, string) {
      return highlighted ? chalkFn(string) : string;
    };
    var defs = getDefs(chalk);
    if (highlighted) rawLines = highlight(defs, rawLines);

    var linesAbove = opts.linesAbove || 2;
    var linesBelow = opts.linesBelow || 3;

    var lines = rawLines.split(NEWLINE);
    var start = Math.max(lineNumber - (linesAbove + 1), 0);
    var end = Math.min(lines.length, lineNumber + linesBelow);

    if (!lineNumber && !colNumber) {
      start = 0;
      end = lines.length;
    }

    var numberMaxWidth = String(end).length;

    var frame = lines.slice(start, end).map(function (line, index) {
      var number = start + 1 + index;
      var paddedNumber = (" " + number).slice(-numberMaxWidth);
      var gutter = " " + paddedNumber + " | ";
      if (number === lineNumber) {
        var markerLine = "";
        if (colNumber) {
          var markerSpacing = line.slice(0, colNumber - 1).replace(/[^\t]/g, " ");
          markerLine = ["\n ", maybeHighlight(defs.gutter, gutter.replace(/\d/g, " ")), markerSpacing, maybeHighlight(defs.marker, "^")].join("");
        }
        return [maybeHighlight(defs.marker, ">"), maybeHighlight(defs.gutter, gutter), line, markerLine].join("");
      } else {
        return " " + maybeHighlight(defs.gutter, gutter) + line;
      }
    }).join("\n");

    if (highlighted) {
      return chalk.reset(frame);
    } else {
      return frame;
    }
  };

  var _jsTokens = $__require("js-tokens");

  var _jsTokens2 = _interopRequireDefault(_jsTokens);

  var _esutils = $__require("esutils");

  var _esutils2 = _interopRequireDefault(_esutils);

  var _chalk = $__require("chalk");

  var _chalk2 = _interopRequireDefault(_chalk);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function getDefs(chalk) {
    return {
      keyword: chalk.cyan,
      capitalized: chalk.yellow,
      jsx_tag: chalk.yellow,
      punctuator: chalk.yellow,

      number: chalk.magenta,
      string: chalk.green,
      regex: chalk.magenta,
      comment: chalk.grey,
      invalid: chalk.white.bgRed.bold,
      gutter: chalk.grey,
      marker: chalk.red.bold
    };
  }

  var NEWLINE = /\r\n|[\n\r\u2028\u2029]/;

  var JSX_TAG = /^[a-z][\w-]*$/i;

  var BRACKET = /^[()\[\]{}]$/;

  function getTokenType(match) {
    var _match$slice = match.slice(-2),
        offset = _match$slice[0],
        text = _match$slice[1];

    var token = (0, _jsTokens.matchToToken)(match);

    if (token.type === "name") {
      if (_esutils2.default.keyword.isReservedWordES6(token.value)) {
        return "keyword";
      }

      if (JSX_TAG.test(token.value) && (text[offset - 1] === "<" || text.substr(offset - 2, 2) == "</")) {
        return "jsx_tag";
      }

      if (token.value[0] !== token.value[0].toLowerCase()) {
        return "capitalized";
      }
    }

    if (token.type === "punctuator" && BRACKET.test(token.value)) {
      return "bracket";
    }

    return token.type;
  }

  function highlight(defs, text) {
    return text.replace(_jsTokens2.default, function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var type = getTokenType(args);
      var colorize = defs[type];
      if (colorize) {
        return args[0].split(NEWLINE).map(function (str) {
          return colorize(str);
        }).join("\n");
      } else {
        return args[0];
      }
    });
  }

  module.exports = exports["default"];
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/replacement.js", ["babel-runtime/core-js/get-iterator", "babel-code-frame", "../index", "./index", "babylon", "babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.replaceWithMultiple = replaceWithMultiple;
  exports.replaceWithSourceString = replaceWithSourceString;
  exports.replaceWith = replaceWith;
  exports._replaceWith = _replaceWith;
  exports.replaceExpressionWithStatements = replaceExpressionWithStatements;
  exports.replaceInline = replaceInline;

  var _babelCodeFrame = $__require("babel-code-frame");

  var _babelCodeFrame2 = _interopRequireDefault(_babelCodeFrame);

  var _index = $__require("../index");

  var _index2 = _interopRequireDefault(_index);

  var _index3 = $__require("./index");

  var _index4 = _interopRequireDefault(_index3);

  var _babylon = $__require("babylon");

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var hoistVariablesVisitor = {
    Function: function Function(path) {
      path.skip();
    },
    VariableDeclaration: function VariableDeclaration(path) {
      if (path.node.kind !== "var") return;

      var bindings = path.getBindingIdentifiers();
      for (var key in bindings) {
        path.scope.push({ id: bindings[key] });
      }

      var exprs = [];

      for (var _iterator = path.node.declarations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var declar = _ref;

        if (declar.init) {
          exprs.push(t.expressionStatement(t.assignmentExpression("=", declar.id, declar.init)));
        }
      }

      path.replaceWithMultiple(exprs);
    }
  };

  function replaceWithMultiple(nodes) {
    this.resync();

    nodes = this._verifyNodeList(nodes);
    t.inheritLeadingComments(nodes[0], this.node);
    t.inheritTrailingComments(nodes[nodes.length - 1], this.node);
    this.node = this.container[this.key] = null;
    this.insertAfter(nodes);

    if (this.node) {
      this.requeue();
    } else {
      this.remove();
    }
  }

  function replaceWithSourceString(replacement) {
    this.resync();

    try {
      replacement = "(" + replacement + ")";
      replacement = (0, _babylon.parse)(replacement);
    } catch (err) {
      var loc = err.loc;
      if (loc) {
        err.message += " - make sure this is an expression.";
        err.message += "\n" + (0, _babelCodeFrame2.default)(replacement, loc.line, loc.column + 1);
      }
      throw err;
    }

    replacement = replacement.program.body[0].expression;
    _index2.default.removeProperties(replacement);
    return this.replaceWith(replacement);
  }

  function replaceWith(replacement) {
    this.resync();

    if (this.removed) {
      throw new Error("You can't replace this node, we've already removed it");
    }

    if (replacement instanceof _index4.default) {
      replacement = replacement.node;
    }

    if (!replacement) {
      throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");
    }

    if (this.node === replacement) {
      return;
    }

    if (this.isProgram() && !t.isProgram(replacement)) {
      throw new Error("You can only replace a Program root node with another Program node");
    }

    if (Array.isArray(replacement)) {
      throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");
    }

    if (typeof replacement === "string") {
      throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");
    }

    if (this.isNodeType("Statement") && t.isExpression(replacement)) {
      if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {
        replacement = t.expressionStatement(replacement);
      }
    }

    if (this.isNodeType("Expression") && t.isStatement(replacement)) {
      if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {
        return this.replaceExpressionWithStatements([replacement]);
      }
    }

    var oldNode = this.node;
    if (oldNode) {
      t.inheritsComments(replacement, oldNode);
      t.removeComments(oldNode);
    }

    this._replaceWith(replacement);
    this.type = replacement.type;

    this.setScope();

    this.requeue();
  }

  function _replaceWith(node) {
    if (!this.container) {
      throw new ReferenceError("Container is falsy");
    }

    if (this.inList) {
      t.validate(this.parent, this.key, [node]);
    } else {
      t.validate(this.parent, this.key, node);
    }

    this.debug(function () {
      return "Replace with " + (node && node.type);
    });

    this.node = this.container[this.key] = node;
  }

  function replaceExpressionWithStatements(nodes) {
    this.resync();

    var toSequenceExpression = t.toSequenceExpression(nodes, this.scope);

    if (t.isSequenceExpression(toSequenceExpression)) {
      var exprs = toSequenceExpression.expressions;

      if (exprs.length >= 2 && this.parentPath.isExpressionStatement()) {
        this._maybePopFromStatements(exprs);
      }

      if (exprs.length === 1) {
        this.replaceWith(exprs[0]);
      } else {
        this.replaceWith(toSequenceExpression);
      }
    } else if (toSequenceExpression) {
      this.replaceWith(toSequenceExpression);
    } else {
      var container = t.functionExpression(null, [], t.blockStatement(nodes));
      container.shadow = true;

      this.replaceWith(t.callExpression(container, []));
      this.traverse(hoistVariablesVisitor);

      var completionRecords = this.get("callee").getCompletionRecords();
      for (var _iterator2 = completionRecords, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var path = _ref2;

        if (!path.isExpressionStatement()) continue;

        var loop = path.findParent(function (path) {
          return path.isLoop();
        });
        if (loop) {
          var uid = loop.getData("expressionReplacementReturnUid");

          if (!uid) {
            var callee = this.get("callee");
            uid = callee.scope.generateDeclaredUidIdentifier("ret");
            callee.get("body").pushContainer("body", t.returnStatement(uid));
            loop.setData("expressionReplacementReturnUid", uid);
          } else {
            uid = t.identifier(uid.name);
          }

          path.get("expression").replaceWith(t.assignmentExpression("=", uid, path.node.expression));
        } else {
          path.replaceWith(t.returnStatement(path.node.expression));
        }
      }

      return this.node;
    }
  }

  function replaceInline(nodes) {
    this.resync();

    if (Array.isArray(nodes)) {
      if (Array.isArray(this.container)) {
        nodes = this._verifyNodeList(nodes);
        this._containerInsertAfter(nodes);
        return this.remove();
      } else {
        return this.replaceWithMultiple(nodes);
      }
    } else {
      return this.replaceWith(nodes);
    }
  }
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_set-species.js', ['./_global', './_core', './_object-dp', './_descriptors', './_wks', 'process'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var global = $__require('./_global');
  var core = $__require('./_core');
  var dP = $__require('./_object-dp');
  var DESCRIPTORS = $__require('./_descriptors');
  var SPECIES = $__require('./_wks')('species');

  module.exports = function (KEY) {
    var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
    if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
      configurable: true,
      get: function () {
        return this;
      }
    });
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_collection-strong.js', ['./_object-dp', './_object-create', './_redefine-all', './_ctx', './_an-instance', './_for-of', './_iter-define', './_iter-step', './_set-species', './_descriptors', './_meta', './_validate-collection', 'process'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var dP = $__require('./_object-dp').f;
  var create = $__require('./_object-create');
  var redefineAll = $__require('./_redefine-all');
  var ctx = $__require('./_ctx');
  var anInstance = $__require('./_an-instance');
  var forOf = $__require('./_for-of');
  var $iterDefine = $__require('./_iter-define');
  var step = $__require('./_iter-step');
  var setSpecies = $__require('./_set-species');
  var DESCRIPTORS = $__require('./_descriptors');
  var fastKey = $__require('./_meta').fastKey;
  var validate = $__require('./_validate-collection');
  var SIZE = DESCRIPTORS ? '_s' : 'size';

  var getEntry = function (that, key) {
    // fast case
    var index = fastKey(key);
    var entry;
    if (index !== 'F') return that._i[index];
    // frozen object case
    for (entry = that._f; entry; entry = entry.n) {
      if (entry.k == key) return entry;
    }
  };

  module.exports = {
    getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
      var C = wrapper(function (that, iterable) {
        anInstance(that, C, NAME, '_i');
        that._t = NAME; // collection type
        that._i = create(null); // index
        that._f = undefined; // first entry
        that._l = undefined; // last entry
        that[SIZE] = 0; // size
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        // 23.1.3.1 Map.prototype.clear()
        // 23.2.3.2 Set.prototype.clear()
        clear: function clear() {
          for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
            entry.r = true;
            if (entry.p) entry.p = entry.p.n = undefined;
            delete data[entry.i];
          }
          that._f = that._l = undefined;
          that[SIZE] = 0;
        },
        // 23.1.3.3 Map.prototype.delete(key)
        // 23.2.3.4 Set.prototype.delete(value)
        'delete': function (key) {
          var that = validate(this, NAME);
          var entry = getEntry(that, key);
          if (entry) {
            var next = entry.n;
            var prev = entry.p;
            delete that._i[entry.i];
            entry.r = true;
            if (prev) prev.n = next;
            if (next) next.p = prev;
            if (that._f == entry) that._f = next;
            if (that._l == entry) that._l = prev;
            that[SIZE]--;
          }return !!entry;
        },
        // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
        // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
        forEach: function forEach(callbackfn /* , that = undefined */) {
          validate(this, NAME);
          var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
          var entry;
          while (entry = entry ? entry.n : this._f) {
            f(entry.v, entry.k, this);
            // revert to the last existing entry
            while (entry && entry.r) entry = entry.p;
          }
        },
        // 23.1.3.7 Map.prototype.has(key)
        // 23.2.3.7 Set.prototype.has(value)
        has: function has(key) {
          return !!getEntry(validate(this, NAME), key);
        }
      });
      if (DESCRIPTORS) dP(C.prototype, 'size', {
        get: function () {
          return validate(this, NAME)[SIZE];
        }
      });
      return C;
    },
    def: function (that, key, value) {
      var entry = getEntry(that, key);
      var prev, index;
      // change existing entry
      if (entry) {
        entry.v = value;
        // create new entry
      } else {
        that._l = entry = {
          i: index = fastKey(key, true), // <- index
          k: key, // <- key
          v: value, // <- value
          p: prev = that._l, // <- previous entry
          n: undefined, // <- next entry
          r: false // <- removed
        };
        if (!that._f) that._f = entry;
        if (prev) prev.n = entry;
        that[SIZE]++;
        // add to index
        if (index !== 'F') that._i[index] = entry;
      }return that;
    },
    getEntry: getEntry,
    setStrong: function (C, NAME, IS_MAP) {
      // add .keys, .values, .entries, [@@iterator]
      // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
      $iterDefine(C, NAME, function (iterated, kind) {
        this._t = validate(iterated, NAME); // target
        this._k = kind; // kind
        this._l = undefined; // previous
      }, function () {
        var that = this;
        var kind = that._k;
        var entry = that._l;
        // revert to the last existing entry
        while (entry && entry.r) entry = entry.p;
        // get next entry
        if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
          // or finish the iteration
          that._t = undefined;
          return step(1);
        }
        // return step by kind
        if (kind == 'keys') return step(0, entry.k);
        if (kind == 'values') return step(0, entry.v);
        return step(0, [entry.k, entry.v]);
      }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

      // add [@@species], 23.1.2.2, 23.2.2.2
      setSpecies(NAME);
    }
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es6.map.js', ['./_collection-strong', './_validate-collection', './_collection', 'process'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var strong = $__require('./_collection-strong');
  var validate = $__require('./_validate-collection');
  var MAP = 'Map';

  // 23.1 Map Objects
  module.exports = $__require('./_collection')(MAP, function (get) {
    return function Map() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  }, {
    // 23.1.3.6 Map.prototype.get(key)
    get: function get(key) {
      var entry = strong.getEntry(validate(this, MAP), key);
      return entry && entry.v;
    },
    // 23.1.3.9 Map.prototype.set(key, value)
    set: function set(key, value) {
      return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
    }
  }, strong, true);
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_array-from-iterable.js', ['./_for-of', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var forOf = $__require('./_for-of');

  module.exports = function (iter, ITERATOR) {
    var result = [];
    forOf(iter, false, result.push, result, ITERATOR);
    return result;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_collection-to-json.js', ['./_classof', './_array-from-iterable', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var classof = $__require('./_classof');
  var from = $__require('./_array-from-iterable');
  module.exports = function (NAME) {
    return function toJSON() {
      if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
      return from(this);
    };
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es7.map.to-json.js', ['./_export', './_collection-to-json', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var $export = $__require('./_export');

  $export($export.P + $export.R, 'Map', { toJSON: $__require('./_collection-to-json')('Map') });
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es7.map.of.js', ['./_set-collection-of', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
  $__require('./_set-collection-of')('Map');
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es7.map.from.js', ['./_set-collection-from', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
  $__require('./_set-collection-from')('Map');
});
System.registerDynamic('npm:core-js@2.5.1/library/fn/map/index.js', ['../../modules/es6.object.to-string', '../../modules/es6.string.iterator', '../../modules/web.dom.iterable', '../../modules/es6.map', '../../modules/es7.map.to-json', '../../modules/es7.map.of', '../../modules/es7.map.from', '../../modules/_core', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('../../modules/es6.object.to-string');
  $__require('../../modules/es6.string.iterator');
  $__require('../../modules/web.dom.iterable');
  $__require('../../modules/es6.map');
  $__require('../../modules/es7.map.to-json');
  $__require('../../modules/es7.map.of');
  $__require('../../modules/es7.map.from');
  module.exports = $__require('../../modules/_core').Map;
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/map.js", ["core-js/library/fn/map"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/map"), __esModule: true };
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/evaluation.js", ["babel-runtime/helpers/typeof", "babel-runtime/core-js/get-iterator", "babel-runtime/core-js/map", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _typeof2 = $__require("babel-runtime/helpers/typeof");

  var _typeof3 = _interopRequireDefault(_typeof2);

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  var _map = $__require("babel-runtime/core-js/map");

  var _map2 = _interopRequireDefault(_map);

  exports.evaluateTruthy = evaluateTruthy;
  exports.evaluate = evaluate;

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var VALID_CALLEES = ["String", "Number", "Math"];
  var INVALID_METHODS = ["random"];

  function evaluateTruthy() {
    var res = this.evaluate();
    if (res.confident) return !!res.value;
  }

  function evaluate() {
    var confident = true;
    var deoptPath = void 0;
    var seen = new _map2.default();

    function deopt(path) {
      if (!confident) return;
      deoptPath = path;
      confident = false;
    }

    var value = evaluate(this);
    if (!confident) value = undefined;
    return {
      confident: confident,
      deopt: deoptPath,
      value: value
    };

    function evaluate(path) {
      var node = path.node;

      if (seen.has(node)) {
        var existing = seen.get(node);
        if (existing.resolved) {
          return existing.value;
        } else {
          deopt(path);
          return;
        }
      } else {
        var item = { resolved: false };
        seen.set(node, item);

        var val = _evaluate(path);
        if (confident) {
          item.resolved = true;
          item.value = val;
        }
        return val;
      }
    }

    function _evaluate(path) {
      if (!confident) return;

      var node = path.node;

      if (path.isSequenceExpression()) {
        var exprs = path.get("expressions");
        return evaluate(exprs[exprs.length - 1]);
      }

      if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {
        return node.value;
      }

      if (path.isNullLiteral()) {
        return null;
      }

      if (path.isTemplateLiteral()) {
        var str = "";

        var i = 0;
        var _exprs = path.get("expressions");

        for (var _iterator = node.quasis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var elem = _ref;

          if (!confident) break;

          str += elem.value.cooked;

          var expr = _exprs[i++];
          if (expr) str += String(evaluate(expr));
        }

        if (!confident) return;
        return str;
      }

      if (path.isConditionalExpression()) {
        var testResult = evaluate(path.get("test"));
        if (!confident) return;
        if (testResult) {
          return evaluate(path.get("consequent"));
        } else {
          return evaluate(path.get("alternate"));
        }
      }

      if (path.isExpressionWrapper()) {
        return evaluate(path.get("expression"));
      }

      if (path.isMemberExpression() && !path.parentPath.isCallExpression({ callee: node })) {
        var property = path.get("property");
        var object = path.get("object");

        if (object.isLiteral() && property.isIdentifier()) {
          var _value = object.node.value;
          var type = typeof _value === "undefined" ? "undefined" : (0, _typeof3.default)(_value);
          if (type === "number" || type === "string") {
            return _value[property.node.name];
          }
        }
      }

      if (path.isReferencedIdentifier()) {
        var binding = path.scope.getBinding(node.name);

        if (binding && binding.constantViolations.length > 0) {
          return deopt(binding.path);
        }

        if (binding && path.node.start < binding.path.node.end) {
          return deopt(binding.path);
        }

        if (binding && binding.hasValue) {
          return binding.value;
        } else {
          if (node.name === "undefined") {
            return binding ? deopt(binding.path) : undefined;
          } else if (node.name === "Infinity") {
            return binding ? deopt(binding.path) : Infinity;
          } else if (node.name === "NaN") {
            return binding ? deopt(binding.path) : NaN;
          }

          var resolved = path.resolve();
          if (resolved === path) {
            return deopt(path);
          } else {
            return evaluate(resolved);
          }
        }
      }

      if (path.isUnaryExpression({ prefix: true })) {
        if (node.operator === "void") {
          return undefined;
        }

        var argument = path.get("argument");
        if (node.operator === "typeof" && (argument.isFunction() || argument.isClass())) {
          return "function";
        }

        var arg = evaluate(argument);
        if (!confident) return;
        switch (node.operator) {
          case "!":
            return !arg;
          case "+":
            return +arg;
          case "-":
            return -arg;
          case "~":
            return ~arg;
          case "typeof":
            return typeof arg === "undefined" ? "undefined" : (0, _typeof3.default)(arg);
        }
      }

      if (path.isArrayExpression()) {
        var arr = [];
        var elems = path.get("elements");
        for (var _iterator2 = elems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
          var _ref2;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var _elem = _ref2;

          _elem = _elem.evaluate();

          if (_elem.confident) {
            arr.push(_elem.value);
          } else {
            return deopt(_elem);
          }
        }
        return arr;
      }

      if (path.isObjectExpression()) {
        var obj = {};
        var props = path.get("properties");
        for (var _iterator3 = props, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
          var _ref3;

          if (_isArray3) {
            if (_i3 >= _iterator3.length) break;
            _ref3 = _iterator3[_i3++];
          } else {
            _i3 = _iterator3.next();
            if (_i3.done) break;
            _ref3 = _i3.value;
          }

          var prop = _ref3;

          if (prop.isObjectMethod() || prop.isSpreadProperty()) {
            return deopt(prop);
          }
          var keyPath = prop.get("key");
          var key = keyPath;
          if (prop.node.computed) {
            key = key.evaluate();
            if (!key.confident) {
              return deopt(keyPath);
            }
            key = key.value;
          } else if (key.isIdentifier()) {
            key = key.node.name;
          } else {
            key = key.node.value;
          }
          var valuePath = prop.get("value");
          var _value2 = valuePath.evaluate();
          if (!_value2.confident) {
            return deopt(valuePath);
          }
          _value2 = _value2.value;
          obj[key] = _value2;
        }
        return obj;
      }

      if (path.isLogicalExpression()) {
        var wasConfident = confident;
        var left = evaluate(path.get("left"));
        var leftConfident = confident;
        confident = wasConfident;
        var right = evaluate(path.get("right"));
        var rightConfident = confident;
        confident = leftConfident && rightConfident;

        switch (node.operator) {
          case "||":
            if (left && leftConfident) {
              confident = true;
              return left;
            }

            if (!confident) return;

            return left || right;
          case "&&":
            if (!left && leftConfident || !right && rightConfident) {
              confident = true;
            }

            if (!confident) return;

            return left && right;
        }
      }

      if (path.isBinaryExpression()) {
        var _left = evaluate(path.get("left"));
        if (!confident) return;
        var _right = evaluate(path.get("right"));
        if (!confident) return;

        switch (node.operator) {
          case "-":
            return _left - _right;
          case "+":
            return _left + _right;
          case "/":
            return _left / _right;
          case "*":
            return _left * _right;
          case "%":
            return _left % _right;
          case "**":
            return Math.pow(_left, _right);
          case "<":
            return _left < _right;
          case ">":
            return _left > _right;
          case "<=":
            return _left <= _right;
          case ">=":
            return _left >= _right;
          case "==":
            return _left == _right;
          case "!=":
            return _left != _right;
          case "===":
            return _left === _right;
          case "!==":
            return _left !== _right;
          case "|":
            return _left | _right;
          case "&":
            return _left & _right;
          case "^":
            return _left ^ _right;
          case "<<":
            return _left << _right;
          case ">>":
            return _left >> _right;
          case ">>>":
            return _left >>> _right;
        }
      }

      if (path.isCallExpression()) {
        var callee = path.get("callee");
        var context = void 0;
        var func = void 0;

        if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name, true) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {
          func = global[node.callee.name];
        }

        if (callee.isMemberExpression()) {
          var _object = callee.get("object");
          var _property = callee.get("property");

          if (_object.isIdentifier() && _property.isIdentifier() && VALID_CALLEES.indexOf(_object.node.name) >= 0 && INVALID_METHODS.indexOf(_property.node.name) < 0) {
            context = global[_object.node.name];
            func = context[_property.node.name];
          }

          if (_object.isLiteral() && _property.isIdentifier()) {
            var _type = (0, _typeof3.default)(_object.node.value);
            if (_type === "string" || _type === "number") {
              context = _object.node.value;
              func = context[_property.node.name];
            }
          }
        }

        if (func) {
          var args = path.get("arguments").map(evaluate);
          if (!confident) return;

          return func.apply(context, args);
        }
      }

      deopt(path);
    }
  }
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/conversion.js", ["babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.toComputedKey = toComputedKey;
  exports.ensureBlock = ensureBlock;
  exports.arrowFunctionToShadowed = arrowFunctionToShadowed;

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function toComputedKey() {
    var node = this.node;

    var key = void 0;
    if (this.isMemberExpression()) {
      key = node.property;
    } else if (this.isProperty() || this.isMethod()) {
      key = node.key;
    } else {
      throw new ReferenceError("todo");
    }

    if (!node.computed) {
      if (t.isIdentifier(key)) key = t.stringLiteral(key.name);
    }

    return key;
  }

  function ensureBlock() {
    return t.ensureBlock(this.node);
  }

  function arrowFunctionToShadowed() {
    if (!this.isArrowFunctionExpression()) return;

    this.ensureBlock();

    var node = this.node;

    node.expression = false;
    node.type = "FunctionExpression";
    node.shadow = node.shadow || true;
  }
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/introspection.js", ["babel-runtime/core-js/get-iterator", "lodash/includes", "babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.is = undefined;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.matchesPattern = matchesPattern;
  exports.has = has;
  exports.isStatic = isStatic;
  exports.isnt = isnt;
  exports.equals = equals;
  exports.isNodeType = isNodeType;
  exports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;
  exports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;
  exports.isCompletionRecord = isCompletionRecord;
  exports.isStatementOrBlock = isStatementOrBlock;
  exports.referencesImport = referencesImport;
  exports.getSource = getSource;
  exports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;
  exports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;
  exports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;
  exports.resolve = resolve;
  exports._resolve = _resolve;

  var _includes = $__require("lodash/includes");

  var _includes2 = _interopRequireDefault(_includes);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function matchesPattern(pattern, allowPartial) {
    if (!this.isMemberExpression()) return false;

    var parts = pattern.split(".");
    var search = [this.node];
    var i = 0;

    function matches(name) {
      var part = parts[i];
      return part === "*" || name === part;
    }

    while (search.length) {
      var node = search.shift();

      if (allowPartial && i === parts.length) {
        return true;
      }

      if (t.isIdentifier(node)) {
        if (!matches(node.name)) return false;
      } else if (t.isLiteral(node)) {
        if (!matches(node.value)) return false;
      } else if (t.isMemberExpression(node)) {
        if (node.computed && !t.isLiteral(node.property)) {
          return false;
        } else {
          search.unshift(node.property);
          search.unshift(node.object);
          continue;
        }
      } else if (t.isThisExpression(node)) {
        if (!matches("this")) return false;
      } else {
        return false;
      }

      if (++i > parts.length) {
        return false;
      }
    }

    return i === parts.length;
  }

  function has(key) {
    var val = this.node && this.node[key];
    if (val && Array.isArray(val)) {
      return !!val.length;
    } else {
      return !!val;
    }
  }

  function isStatic() {
    return this.scope.isStatic(this.node);
  }

  var is = exports.is = has;

  function isnt(key) {
    return !this.has(key);
  }

  function equals(key, value) {
    return this.node[key] === value;
  }

  function isNodeType(type) {
    return t.isType(this.type, type);
  }

  function canHaveVariableDeclarationOrExpression() {
    return (this.key === "init" || this.key === "left") && this.parentPath.isFor();
  }

  function canSwapBetweenExpressionAndStatement(replacement) {
    if (this.key !== "body" || !this.parentPath.isArrowFunctionExpression()) {
      return false;
    }

    if (this.isExpression()) {
      return t.isBlockStatement(replacement);
    } else if (this.isBlockStatement()) {
      return t.isExpression(replacement);
    }

    return false;
  }

  function isCompletionRecord(allowInsideFunction) {
    var path = this;
    var first = true;

    do {
      var container = path.container;

      if (path.isFunction() && !first) {
        return !!allowInsideFunction;
      }

      first = false;

      if (Array.isArray(container) && path.key !== container.length - 1) {
        return false;
      }
    } while ((path = path.parentPath) && !path.isProgram());

    return true;
  }

  function isStatementOrBlock() {
    if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {
      return false;
    } else {
      return (0, _includes2.default)(t.STATEMENT_OR_BLOCK_KEYS, this.key);
    }
  }

  function referencesImport(moduleSource, importName) {
    if (!this.isReferencedIdentifier()) return false;

    var binding = this.scope.getBinding(this.node.name);
    if (!binding || binding.kind !== "module") return false;

    var path = binding.path;
    var parent = path.parentPath;
    if (!parent.isImportDeclaration()) return false;

    if (parent.node.source.value === moduleSource) {
      if (!importName) return true;
    } else {
      return false;
    }

    if (path.isImportDefaultSpecifier() && importName === "default") {
      return true;
    }

    if (path.isImportNamespaceSpecifier() && importName === "*") {
      return true;
    }

    if (path.isImportSpecifier() && path.node.imported.name === importName) {
      return true;
    }

    return false;
  }

  function getSource() {
    var node = this.node;
    if (node.end) {
      return this.hub.file.code.slice(node.start, node.end);
    } else {
      return "";
    }
  }

  function willIMaybeExecuteBefore(target) {
    return this._guessExecutionStatusRelativeTo(target) !== "after";
  }

  function _guessExecutionStatusRelativeTo(target) {
    var targetFuncParent = target.scope.getFunctionParent();
    var selfFuncParent = this.scope.getFunctionParent();

    if (targetFuncParent.node !== selfFuncParent.node) {
      var status = this._guessExecutionStatusRelativeToDifferentFunctions(targetFuncParent);
      if (status) {
        return status;
      } else {
        target = targetFuncParent.path;
      }
    }

    var targetPaths = target.getAncestry();
    if (targetPaths.indexOf(this) >= 0) return "after";

    var selfPaths = this.getAncestry();

    var commonPath = void 0;
    var targetIndex = void 0;
    var selfIndex = void 0;
    for (selfIndex = 0; selfIndex < selfPaths.length; selfIndex++) {
      var selfPath = selfPaths[selfIndex];
      targetIndex = targetPaths.indexOf(selfPath);
      if (targetIndex >= 0) {
        commonPath = selfPath;
        break;
      }
    }
    if (!commonPath) {
      return "before";
    }

    var targetRelationship = targetPaths[targetIndex - 1];
    var selfRelationship = selfPaths[selfIndex - 1];
    if (!targetRelationship || !selfRelationship) {
      return "before";
    }

    if (targetRelationship.listKey && targetRelationship.container === selfRelationship.container) {
      return targetRelationship.key > selfRelationship.key ? "before" : "after";
    }

    var targetKeyPosition = t.VISITOR_KEYS[targetRelationship.type].indexOf(targetRelationship.key);
    var selfKeyPosition = t.VISITOR_KEYS[selfRelationship.type].indexOf(selfRelationship.key);
    return targetKeyPosition > selfKeyPosition ? "before" : "after";
  }

  function _guessExecutionStatusRelativeToDifferentFunctions(targetFuncParent) {
    var targetFuncPath = targetFuncParent.path;
    if (!targetFuncPath.isFunctionDeclaration()) return;

    var binding = targetFuncPath.scope.getBinding(targetFuncPath.node.id.name);

    if (!binding.references) return "before";

    var referencePaths = binding.referencePaths;

    for (var _iterator = referencePaths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var path = _ref;

      if (path.key !== "callee" || !path.parentPath.isCallExpression()) {
        return;
      }
    }

    var allStatus = void 0;

    for (var _iterator2 = referencePaths, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var _path = _ref2;

      var childOfFunction = !!_path.find(function (path) {
        return path.node === targetFuncPath.node;
      });
      if (childOfFunction) continue;

      var status = this._guessExecutionStatusRelativeTo(_path);

      if (allStatus) {
        if (allStatus !== status) return;
      } else {
        allStatus = status;
      }
    }

    return allStatus;
  }

  function resolve(dangerous, resolved) {
    return this._resolve(dangerous, resolved) || this;
  }

  function _resolve(dangerous, resolved) {
    if (resolved && resolved.indexOf(this) >= 0) return;

    resolved = resolved || [];
    resolved.push(this);

    if (this.isVariableDeclarator()) {
      if (this.get("id").isIdentifier()) {
        return this.get("init").resolve(dangerous, resolved);
      } else {}
    } else if (this.isReferencedIdentifier()) {
      var binding = this.scope.getBinding(this.node.name);
      if (!binding) return;

      if (!binding.constant) return;

      if (binding.kind === "module") return;

      if (binding.path !== this) {
        var ret = binding.path.resolve(dangerous, resolved);

        if (this.find(function (parent) {
          return parent.node === ret.node;
        })) return;
        return ret;
      }
    } else if (this.isTypeCastExpression()) {
      return this.get("expression").resolve(dangerous, resolved);
    } else if (dangerous && this.isMemberExpression()) {

      var targetKey = this.toComputedKey();
      if (!t.isLiteral(targetKey)) return;

      var targetName = targetKey.value;

      var target = this.get("object").resolve(dangerous, resolved);

      if (target.isObjectExpression()) {
        var props = target.get("properties");
        for (var _iterator3 = props, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
          var _ref3;

          if (_isArray3) {
            if (_i3 >= _iterator3.length) break;
            _ref3 = _iterator3[_i3++];
          } else {
            _i3 = _iterator3.next();
            if (_i3.done) break;
            _ref3 = _i3.value;
          }

          var prop = _ref3;

          if (!prop.isProperty()) continue;

          var key = prop.get("key");

          var match = prop.isnt("computed") && key.isIdentifier({ name: targetName });

          match = match || key.isLiteral({ value: targetName });

          if (match) return prop.get("value").resolve(dangerous, resolved);
        }
      } else if (target.isArrayExpression() && !isNaN(+targetName)) {
        var elems = target.get("elements");
        var elem = elems[targetName];
        if (elem) return elem.resolve(dangerous, resolved);
      }
    }
  }
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/context.js", ["babel-runtime/core-js/get-iterator", "../index", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.call = call;
  exports._call = _call;
  exports.isBlacklisted = isBlacklisted;
  exports.visit = visit;
  exports.skip = skip;
  exports.skipKey = skipKey;
  exports.stop = stop;
  exports.setScope = setScope;
  exports.setContext = setContext;
  exports.resync = resync;
  exports._resyncParent = _resyncParent;
  exports._resyncKey = _resyncKey;
  exports._resyncList = _resyncList;
  exports._resyncRemoved = _resyncRemoved;
  exports.popContext = popContext;
  exports.pushContext = pushContext;
  exports.setup = setup;
  exports.setKey = setKey;
  exports.requeue = requeue;
  exports._getQueueContexts = _getQueueContexts;

  var _index = $__require("../index");

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function call(key) {
    var opts = this.opts;

    this.debug(function () {
      return key;
    });

    if (this.node) {
      if (this._call(opts[key])) return true;
    }

    if (this.node) {
      return this._call(opts[this.node.type] && opts[this.node.type][key]);
    }

    return false;
  }

  function _call(fns) {
    if (!fns) return false;

    for (var _iterator = fns, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var fn = _ref;

      if (!fn) continue;

      var node = this.node;
      if (!node) return true;

      var ret = fn.call(this.state, this, this.state);
      if (ret) throw new Error("Unexpected return value from visitor method " + fn);

      if (this.node !== node) return true;

      if (this.shouldStop || this.shouldSkip || this.removed) return true;
    }

    return false;
  }

  function isBlacklisted() {
    var blacklist = this.opts.blacklist;
    return blacklist && blacklist.indexOf(this.node.type) > -1;
  }

  function visit() {
    if (!this.node) {
      return false;
    }

    if (this.isBlacklisted()) {
      return false;
    }

    if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {
      return false;
    }

    if (this.call("enter") || this.shouldSkip) {
      this.debug(function () {
        return "Skip...";
      });
      return this.shouldStop;
    }

    this.debug(function () {
      return "Recursing into...";
    });
    _index2.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);

    this.call("exit");

    return this.shouldStop;
  }

  function skip() {
    this.shouldSkip = true;
  }

  function skipKey(key) {
    this.skipKeys[key] = true;
  }

  function stop() {
    this.shouldStop = true;
    this.shouldSkip = true;
  }

  function setScope() {
    if (this.opts && this.opts.noScope) return;

    var target = this.context && this.context.scope;

    if (!target) {
      var path = this.parentPath;
      while (path && !target) {
        if (path.opts && path.opts.noScope) return;

        target = path.scope;
        path = path.parentPath;
      }
    }

    this.scope = this.getScope(target);
    if (this.scope) this.scope.init();
  }

  function setContext(context) {
    this.shouldSkip = false;
    this.shouldStop = false;
    this.removed = false;
    this.skipKeys = {};

    if (context) {
      this.context = context;
      this.state = context.state;
      this.opts = context.opts;
    }

    this.setScope();

    return this;
  }

  function resync() {
    if (this.removed) return;

    this._resyncParent();
    this._resyncList();
    this._resyncKey();
  }

  function _resyncParent() {
    if (this.parentPath) {
      this.parent = this.parentPath.node;
    }
  }

  function _resyncKey() {
    if (!this.container) return;

    if (this.node === this.container[this.key]) return;

    if (Array.isArray(this.container)) {
      for (var i = 0; i < this.container.length; i++) {
        if (this.container[i] === this.node) {
          return this.setKey(i);
        }
      }
    } else {
      for (var key in this.container) {
        if (this.container[key] === this.node) {
          return this.setKey(key);
        }
      }
    }

    this.key = null;
  }

  function _resyncList() {
    if (!this.parent || !this.inList) return;

    var newContainer = this.parent[this.listKey];
    if (this.container === newContainer) return;

    this.container = newContainer || null;
  }

  function _resyncRemoved() {
    if (this.key == null || !this.container || this.container[this.key] !== this.node) {
      this._markRemoved();
    }
  }

  function popContext() {
    this.contexts.pop();
    this.setContext(this.contexts[this.contexts.length - 1]);
  }

  function pushContext(context) {
    this.contexts.push(context);
    this.setContext(context);
  }

  function setup(parentPath, container, listKey, key) {
    this.inList = !!listKey;
    this.listKey = listKey;
    this.parentKey = listKey || key;
    this.container = container;

    this.parentPath = parentPath || this.parentPath;
    this.setKey(key);
  }

  function setKey(key) {
    this.key = key;
    this.node = this.container[this.key];
    this.type = this.node && this.node.type;
  }

  function requeue() {
    var pathToQueue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;

    if (pathToQueue.removed) return;

    var contexts = this.contexts;

    for (var _iterator2 = contexts, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var context = _ref2;

      context.maybeQueue(pathToQueue);
    }
  }

  function _getQueueContexts() {
    var path = this;
    var contexts = this.contexts;
    while (!contexts.length) {
      path = path.parentPath;
      contexts = path.contexts;
    }
    return contexts;
  }
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/lib/removal-hooks.js", ["process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var hooks = exports.hooks = [function (self, parent) {
    var removeParent = self.key === "test" && (parent.isWhile() || parent.isSwitchCase()) || self.key === "declaration" && parent.isExportDeclaration() || self.key === "body" && parent.isLabeledStatement() || self.listKey === "declarations" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === "expression" && parent.isExpressionStatement();

    if (removeParent) {
      parent.remove();
      return true;
    }
  }, function (self, parent) {
    if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {
      parent.replaceWith(parent.node.expressions[0]);
      return true;
    }
  }, function (self, parent) {
    if (parent.isBinary()) {
      if (self.key === "left") {
        parent.replaceWith(parent.node.right);
      } else {
        parent.replaceWith(parent.node.left);
      }
      return true;
    }
  }, function (self, parent) {
    if (parent.isIfStatement() && (self.key === "consequent" || self.key === "alternate") || self.key === "body" && (parent.isLoop() || parent.isArrowFunctionExpression())) {
      self.replaceWith({
        type: "BlockStatement",
        body: []
      });
      return true;
    }
  }];
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/removal.js", ["babel-runtime/core-js/get-iterator", "./lib/removal-hooks", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.remove = remove;
  exports._callRemovalHooks = _callRemovalHooks;
  exports._remove = _remove;
  exports._markRemoved = _markRemoved;
  exports._assertUnremoved = _assertUnremoved;

  var _removalHooks = $__require("./lib/removal-hooks");

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function remove() {
    this._assertUnremoved();

    this.resync();

    if (this._callRemovalHooks()) {
      this._markRemoved();
      return;
    }

    this.shareCommentsWithSiblings();
    this._remove();
    this._markRemoved();
  }

  function _callRemovalHooks() {
    for (var _iterator = _removalHooks.hooks, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var fn = _ref;

      if (fn(this, this.parentPath)) return true;
    }
  }

  function _remove() {
    if (Array.isArray(this.container)) {
      this.container.splice(this.key, 1);
      this.updateSiblingKeys(this.key, -1);
    } else {
      this._replaceWith(null);
    }
  }

  function _markRemoved() {
    this.shouldSkip = true;
    this.removed = true;
    this.node = null;
  }

  function _assertUnremoved() {
    if (this.removed) {
      throw this.buildCodeFrameError("NodePath has been removed so is read-only.");
    }
  }
});
System.registerDynamic("npm:babel-runtime@6.26.0/helpers/classCallCheck.js", [], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  exports.default = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/lib/hoister.js", ["babel-runtime/core-js/get-iterator", "babel-runtime/helpers/classCallCheck", "babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  var _classCallCheck2 = $__require("babel-runtime/helpers/classCallCheck");

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var referenceVisitor = {
    ReferencedIdentifier: function ReferencedIdentifier(path, state) {
      if (path.isJSXIdentifier() && _babelTypes.react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {
        return;
      }

      if (path.node.name === "this") {
        var scope = path.scope;
        do {
          if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) break;
        } while (scope = scope.parent);
        if (scope) state.breakOnScopePaths.push(scope.path);
      }

      var binding = path.scope.getBinding(path.node.name);
      if (!binding) return;

      if (binding !== state.scope.getBinding(path.node.name)) return;

      state.bindings[path.node.name] = binding;
    }
  };

  var PathHoister = function () {
    function PathHoister(path, scope) {
      (0, _classCallCheck3.default)(this, PathHoister);

      this.breakOnScopePaths = [];

      this.bindings = {};

      this.scopes = [];

      this.scope = scope;
      this.path = path;

      this.attachAfter = false;
    }

    PathHoister.prototype.isCompatibleScope = function isCompatibleScope(scope) {
      for (var key in this.bindings) {
        var binding = this.bindings[key];
        if (!scope.bindingIdentifierEquals(key, binding.identifier)) {
          return false;
        }
      }

      return true;
    };

    PathHoister.prototype.getCompatibleScopes = function getCompatibleScopes() {
      var scope = this.path.scope;
      do {
        if (this.isCompatibleScope(scope)) {
          this.scopes.push(scope);
        } else {
          break;
        }

        if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {
          break;
        }
      } while (scope = scope.parent);
    };

    PathHoister.prototype.getAttachmentPath = function getAttachmentPath() {
      var path = this._getAttachmentPath();
      if (!path) return;

      var targetScope = path.scope;

      if (targetScope.path === path) {
        targetScope = path.scope.parent;
      }

      if (targetScope.path.isProgram() || targetScope.path.isFunction()) {
        for (var name in this.bindings) {
          if (!targetScope.hasOwnBinding(name)) continue;

          var binding = this.bindings[name];

          if (binding.kind === "param") continue;

          if (this.getAttachmentParentForPath(binding.path).key > path.key) {
            this.attachAfter = true;
            path = binding.path;

            for (var _iterator = binding.constantViolations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
              var _ref;

              if (_isArray) {
                if (_i >= _iterator.length) break;
                _ref = _iterator[_i++];
              } else {
                _i = _iterator.next();
                if (_i.done) break;
                _ref = _i.value;
              }

              var violationPath = _ref;

              if (this.getAttachmentParentForPath(violationPath).key > path.key) {
                path = violationPath;
              }
            }
          }
        }
      }

      if (path.parentPath.isExportDeclaration()) {
        path = path.parentPath;
      }

      return path;
    };

    PathHoister.prototype._getAttachmentPath = function _getAttachmentPath() {
      var scopes = this.scopes;

      var scope = scopes.pop();

      if (!scope) return;

      if (scope.path.isFunction()) {
        if (this.hasOwnParamBindings(scope)) {
          if (this.scope === scope) return;

          return scope.path.get("body").get("body")[0];
        } else {
          return this.getNextScopeAttachmentParent();
        }
      } else if (scope.path.isProgram()) {
        return this.getNextScopeAttachmentParent();
      }
    };

    PathHoister.prototype.getNextScopeAttachmentParent = function getNextScopeAttachmentParent() {
      var scope = this.scopes.pop();
      if (scope) return this.getAttachmentParentForPath(scope.path);
    };

    PathHoister.prototype.getAttachmentParentForPath = function getAttachmentParentForPath(path) {
      do {
        if (!path.parentPath || Array.isArray(path.container) && path.isStatement() || path.isVariableDeclarator() && path.parentPath.node !== null && path.parentPath.node.declarations.length > 1) return path;
      } while (path = path.parentPath);
    };

    PathHoister.prototype.hasOwnParamBindings = function hasOwnParamBindings(scope) {
      for (var name in this.bindings) {
        if (!scope.hasOwnBinding(name)) continue;

        var binding = this.bindings[name];

        if (binding.kind === "param" && binding.constant) return true;
      }
      return false;
    };

    PathHoister.prototype.run = function run() {
      var node = this.path.node;
      if (node._hoisted) return;
      node._hoisted = true;

      this.path.traverse(referenceVisitor, this);

      this.getCompatibleScopes();

      var attachTo = this.getAttachmentPath();
      if (!attachTo) return;

      if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;

      var uid = attachTo.scope.generateUidIdentifier("ref");
      var declarator = t.variableDeclarator(uid, this.path.node);

      var insertFn = this.attachAfter ? "insertAfter" : "insertBefore";
      attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : t.variableDeclaration("var", [declarator])]);

      var parent = this.path.parentPath;
      if (parent.isJSXElement() && this.path.container === parent.node.children) {
        uid = t.JSXExpressionContainer(uid);
      }

      this.path.replaceWith(uid);
    };

    return PathHoister;
  }();

  exports.default = PathHoister;
  module.exports = exports["default"];
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/modification.js", ["babel-runtime/helpers/typeof", "babel-runtime/core-js/get-iterator", "../cache", "./lib/hoister", "./index", "babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _typeof2 = $__require("babel-runtime/helpers/typeof");

  var _typeof3 = _interopRequireDefault(_typeof2);

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.insertBefore = insertBefore;
  exports._containerInsert = _containerInsert;
  exports._containerInsertBefore = _containerInsertBefore;
  exports._containerInsertAfter = _containerInsertAfter;
  exports._maybePopFromStatements = _maybePopFromStatements;
  exports.insertAfter = insertAfter;
  exports.updateSiblingKeys = updateSiblingKeys;
  exports._verifyNodeList = _verifyNodeList;
  exports.unshiftContainer = unshiftContainer;
  exports.pushContainer = pushContainer;
  exports.hoist = hoist;

  var _cache = $__require("../cache");

  var _hoister = $__require("./lib/hoister");

  var _hoister2 = _interopRequireDefault(_hoister);

  var _index = $__require("./index");

  var _index2 = _interopRequireDefault(_index);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function insertBefore(nodes) {
    this._assertUnremoved();

    nodes = this._verifyNodeList(nodes);

    if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {
      return this.parentPath.insertBefore(nodes);
    } else if (this.isNodeType("Expression") || this.parentPath.isForStatement() && this.key === "init") {
      if (this.node) nodes.push(this.node);
      this.replaceExpressionWithStatements(nodes);
    } else {
      this._maybePopFromStatements(nodes);
      if (Array.isArray(this.container)) {
        return this._containerInsertBefore(nodes);
      } else if (this.isStatementOrBlock()) {
        if (this.node) nodes.push(this.node);
        this._replaceWith(t.blockStatement(nodes));
      } else {
        throw new Error("We don't know what to do with this node type. " + "We were previously a Statement but we can't fit in here?");
      }
    }

    return [this];
  }

  function _containerInsert(from, nodes) {
    this.updateSiblingKeys(from, nodes.length);

    var paths = [];

    for (var i = 0; i < nodes.length; i++) {
      var to = from + i;
      var node = nodes[i];
      this.container.splice(to, 0, node);

      if (this.context) {
        var path = this.context.create(this.parent, this.container, to, this.listKey);

        if (this.context.queue) path.pushContext(this.context);
        paths.push(path);
      } else {
        paths.push(_index2.default.get({
          parentPath: this.parentPath,
          parent: this.parent,
          container: this.container,
          listKey: this.listKey,
          key: to
        }));
      }
    }

    var contexts = this._getQueueContexts();

    for (var _iterator = paths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _path = _ref;

      _path.setScope();
      _path.debug(function () {
        return "Inserted.";
      });

      for (var _iterator2 = contexts, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var context = _ref2;

        context.maybeQueue(_path, true);
      }
    }

    return paths;
  }

  function _containerInsertBefore(nodes) {
    return this._containerInsert(this.key, nodes);
  }

  function _containerInsertAfter(nodes) {
    return this._containerInsert(this.key + 1, nodes);
  }

  function _maybePopFromStatements(nodes) {
    var last = nodes[nodes.length - 1];
    var isIdentifier = t.isIdentifier(last) || t.isExpressionStatement(last) && t.isIdentifier(last.expression);

    if (isIdentifier && !this.isCompletionRecord()) {
      nodes.pop();
    }
  }

  function insertAfter(nodes) {
    this._assertUnremoved();

    nodes = this._verifyNodeList(nodes);

    if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {
      return this.parentPath.insertAfter(nodes);
    } else if (this.isNodeType("Expression") || this.parentPath.isForStatement() && this.key === "init") {
      if (this.node) {
        var temp = this.scope.generateDeclaredUidIdentifier();
        nodes.unshift(t.expressionStatement(t.assignmentExpression("=", temp, this.node)));
        nodes.push(t.expressionStatement(temp));
      }
      this.replaceExpressionWithStatements(nodes);
    } else {
      this._maybePopFromStatements(nodes);
      if (Array.isArray(this.container)) {
        return this._containerInsertAfter(nodes);
      } else if (this.isStatementOrBlock()) {
        if (this.node) nodes.unshift(this.node);
        this._replaceWith(t.blockStatement(nodes));
      } else {
        throw new Error("We don't know what to do with this node type. " + "We were previously a Statement but we can't fit in here?");
      }
    }

    return [this];
  }

  function updateSiblingKeys(fromIndex, incrementBy) {
    if (!this.parent) return;

    var paths = _cache.path.get(this.parent);
    for (var i = 0; i < paths.length; i++) {
      var path = paths[i];
      if (path.key >= fromIndex) {
        path.key += incrementBy;
      }
    }
  }

  function _verifyNodeList(nodes) {
    if (!nodes) {
      return [];
    }

    if (nodes.constructor !== Array) {
      nodes = [nodes];
    }

    for (var i = 0; i < nodes.length; i++) {
      var node = nodes[i];
      var msg = void 0;

      if (!node) {
        msg = "has falsy node";
      } else if ((typeof node === "undefined" ? "undefined" : (0, _typeof3.default)(node)) !== "object") {
        msg = "contains a non-object node";
      } else if (!node.type) {
        msg = "without a type";
      } else if (node instanceof _index2.default) {
        msg = "has a NodePath when it expected a raw object";
      }

      if (msg) {
        var type = Array.isArray(node) ? "array" : typeof node === "undefined" ? "undefined" : (0, _typeof3.default)(node);
        throw new Error("Node list " + msg + " with the index of " + i + " and type of " + type);
      }
    }

    return nodes;
  }

  function unshiftContainer(listKey, nodes) {
    this._assertUnremoved();

    nodes = this._verifyNodeList(nodes);

    var path = _index2.default.get({
      parentPath: this,
      parent: this.node,
      container: this.node[listKey],
      listKey: listKey,
      key: 0
    });

    return path.insertBefore(nodes);
  }

  function pushContainer(listKey, nodes) {
    this._assertUnremoved();

    nodes = this._verifyNodeList(nodes);

    var container = this.node[listKey];
    var path = _index2.default.get({
      parentPath: this,
      parent: this.node,
      container: container,
      listKey: listKey,
      key: container.length
    });

    return path.replaceWithMultiple(nodes);
  }

  function hoist() {
    var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.scope;

    var hoister = new _hoister2.default(this, scope);
    return hoister.run();
  }
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/family.js", ["babel-runtime/core-js/object/create", "babel-runtime/core-js/get-iterator", "./index", "babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _create = $__require("babel-runtime/core-js/object/create");

  var _create2 = _interopRequireDefault(_create);

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.getStatementParent = getStatementParent;
  exports.getOpposite = getOpposite;
  exports.getCompletionRecords = getCompletionRecords;
  exports.getSibling = getSibling;
  exports.getPrevSibling = getPrevSibling;
  exports.getNextSibling = getNextSibling;
  exports.getAllNextSiblings = getAllNextSiblings;
  exports.getAllPrevSiblings = getAllPrevSiblings;
  exports.get = get;
  exports._getKey = _getKey;
  exports._getPattern = _getPattern;
  exports.getBindingIdentifiers = getBindingIdentifiers;
  exports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;
  exports.getBindingIdentifierPaths = getBindingIdentifierPaths;
  exports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;

  var _index = $__require("./index");

  var _index2 = _interopRequireDefault(_index);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function getStatementParent() {
    var path = this;

    do {
      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {
        break;
      } else {
        path = path.parentPath;
      }
    } while (path);

    if (path && (path.isProgram() || path.isFile())) {
      throw new Error("File/Program node, we can't possibly find a statement parent to this");
    }

    return path;
  }

  function getOpposite() {
    if (this.key === "left") {
      return this.getSibling("right");
    } else if (this.key === "right") {
      return this.getSibling("left");
    }
  }

  function getCompletionRecords() {
    var paths = [];

    var add = function add(path) {
      if (path) paths = paths.concat(path.getCompletionRecords());
    };

    if (this.isIfStatement()) {
      add(this.get("consequent"));
      add(this.get("alternate"));
    } else if (this.isDoExpression() || this.isFor() || this.isWhile()) {
      add(this.get("body"));
    } else if (this.isProgram() || this.isBlockStatement()) {
      add(this.get("body").pop());
    } else if (this.isFunction()) {
      return this.get("body").getCompletionRecords();
    } else if (this.isTryStatement()) {
      add(this.get("block"));
      add(this.get("handler"));
      add(this.get("finalizer"));
    } else {
      paths.push(this);
    }

    return paths;
  }

  function getSibling(key) {
    return _index2.default.get({
      parentPath: this.parentPath,
      parent: this.parent,
      container: this.container,
      listKey: this.listKey,
      key: key
    });
  }

  function getPrevSibling() {
    return this.getSibling(this.key - 1);
  }

  function getNextSibling() {
    return this.getSibling(this.key + 1);
  }

  function getAllNextSiblings() {
    var _key = this.key;
    var sibling = this.getSibling(++_key);
    var siblings = [];
    while (sibling.node) {
      siblings.push(sibling);
      sibling = this.getSibling(++_key);
    }
    return siblings;
  }

  function getAllPrevSiblings() {
    var _key = this.key;
    var sibling = this.getSibling(--_key);
    var siblings = [];
    while (sibling.node) {
      siblings.push(sibling);
      sibling = this.getSibling(--_key);
    }
    return siblings;
  }

  function get(key, context) {
    if (context === true) context = this.context;
    var parts = key.split(".");
    if (parts.length === 1) {
      return this._getKey(key, context);
    } else {
      return this._getPattern(parts, context);
    }
  }

  function _getKey(key, context) {
    var _this = this;

    var node = this.node;
    var container = node[key];

    if (Array.isArray(container)) {
      return container.map(function (_, i) {
        return _index2.default.get({
          listKey: key,
          parentPath: _this,
          parent: node,
          container: container,
          key: i
        }).setContext(context);
      });
    } else {
      return _index2.default.get({
        parentPath: this,
        parent: node,
        container: node,
        key: key
      }).setContext(context);
    }
  }

  function _getPattern(parts, context) {
    var path = this;
    for (var _iterator = parts, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var part = _ref;

      if (part === ".") {
        path = path.parentPath;
      } else {
        if (Array.isArray(path)) {
          path = path[part];
        } else {
          path = path.get(part, context);
        }
      }
    }
    return path;
  }

  function getBindingIdentifiers(duplicates) {
    return t.getBindingIdentifiers(this.node, duplicates);
  }

  function getOuterBindingIdentifiers(duplicates) {
    return t.getOuterBindingIdentifiers(this.node, duplicates);
  }

  function getBindingIdentifierPaths() {
    var duplicates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var outerOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    var path = this;
    var search = [].concat(path);
    var ids = (0, _create2.default)(null);

    while (search.length) {
      var id = search.shift();
      if (!id) continue;
      if (!id.node) continue;

      var keys = t.getBindingIdentifiers.keys[id.node.type];

      if (id.isIdentifier()) {
        if (duplicates) {
          var _ids = ids[id.node.name] = ids[id.node.name] || [];
          _ids.push(id);
        } else {
          ids[id.node.name] = id;
        }
        continue;
      }

      if (id.isExportDeclaration()) {
        var declaration = id.get("declaration");
        if (declaration.isDeclaration()) {
          search.push(declaration);
        }
        continue;
      }

      if (outerOnly) {
        if (id.isFunctionDeclaration()) {
          search.push(id.get("id"));
          continue;
        }
        if (id.isFunctionExpression()) {
          continue;
        }
      }

      if (keys) {
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          var child = id.get(key);
          if (Array.isArray(child) || child.node) {
            search = search.concat(child);
          }
        }
      }
    }

    return ids;
  }

  function getOuterBindingIdentifierPaths(duplicates) {
    return this.getBindingIdentifierPaths(duplicates, true);
  }
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/comments.js", ["process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.shareCommentsWithSiblings = shareCommentsWithSiblings;
  exports.addComment = addComment;
  exports.addComments = addComments;
  function shareCommentsWithSiblings() {
    if (typeof this.key === "string") return;

    var node = this.node;
    if (!node) return;

    var trailing = node.trailingComments;
    var leading = node.leadingComments;
    if (!trailing && !leading) return;

    var prev = this.getSibling(this.key - 1);
    var next = this.getSibling(this.key + 1);

    if (!prev.node) prev = next;
    if (!next.node) next = prev;

    prev.addComments("trailing", leading);
    next.addComments("leading", trailing);
  }

  function addComment(type, content, line) {
    this.addComments(type, [{
      type: line ? "CommentLine" : "CommentBlock",
      value: content
    }]);
  }

  function addComments(type, comments) {
    if (!comments) return;

    var node = this.node;
    if (!node) return;

    var key = type + "Comments";

    if (node[key]) {
      node[key] = node[key].concat(comments);
    } else {
      node[key] = comments;
    }
  }
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/index.js", ["babel-runtime/core-js/get-iterator", "babel-runtime/helpers/classCallCheck", "./lib/virtual-types", "debug", "invariant", "../index", "lodash/assign", "../scope", "babel-types", "../cache", "./ancestry", "./inference", "./replacement", "./evaluation", "./conversion", "./introspection", "./context", "./removal", "./modification", "./family", "./comments", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  var _classCallCheck2 = $__require("babel-runtime/helpers/classCallCheck");

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _virtualTypes = $__require("./lib/virtual-types");

  var virtualTypes = _interopRequireWildcard(_virtualTypes);

  var _debug2 = $__require("debug");

  var _debug3 = _interopRequireDefault(_debug2);

  var _invariant = $__require("invariant");

  var _invariant2 = _interopRequireDefault(_invariant);

  var _index = $__require("../index");

  var _index2 = _interopRequireDefault(_index);

  var _assign = $__require("lodash/assign");

  var _assign2 = _interopRequireDefault(_assign);

  var _scope = $__require("../scope");

  var _scope2 = _interopRequireDefault(_scope);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  var _cache = $__require("../cache");

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var _debug = (0, _debug3.default)("babel");

  var NodePath = function () {
    function NodePath(hub, parent) {
      (0, _classCallCheck3.default)(this, NodePath);

      this.parent = parent;
      this.hub = hub;
      this.contexts = [];
      this.data = {};
      this.shouldSkip = false;
      this.shouldStop = false;
      this.removed = false;
      this.state = null;
      this.opts = null;
      this.skipKeys = null;
      this.parentPath = null;
      this.context = null;
      this.container = null;
      this.listKey = null;
      this.inList = false;
      this.parentKey = null;
      this.key = null;
      this.node = null;
      this.scope = null;
      this.type = null;
      this.typeAnnotation = null;
    }

    NodePath.get = function get(_ref) {
      var hub = _ref.hub,
          parentPath = _ref.parentPath,
          parent = _ref.parent,
          container = _ref.container,
          listKey = _ref.listKey,
          key = _ref.key;

      if (!hub && parentPath) {
        hub = parentPath.hub;
      }

      (0, _invariant2.default)(parent, "To get a node path the parent needs to exist");

      var targetNode = container[key];

      var paths = _cache.path.get(parent) || [];
      if (!_cache.path.has(parent)) {
        _cache.path.set(parent, paths);
      }

      var path = void 0;

      for (var i = 0; i < paths.length; i++) {
        var pathCheck = paths[i];
        if (pathCheck.node === targetNode) {
          path = pathCheck;
          break;
        }
      }

      if (!path) {
        path = new NodePath(hub, parent);
        paths.push(path);
      }

      path.setup(parentPath, container, listKey, key);

      return path;
    };

    NodePath.prototype.getScope = function getScope(scope) {
      var ourScope = scope;

      if (this.isScope()) {
        ourScope = new _scope2.default(this, scope);
      }

      return ourScope;
    };

    NodePath.prototype.setData = function setData(key, val) {
      return this.data[key] = val;
    };

    NodePath.prototype.getData = function getData(key, def) {
      var val = this.data[key];
      if (!val && def) val = this.data[key] = def;
      return val;
    };

    NodePath.prototype.buildCodeFrameError = function buildCodeFrameError(msg) {
      var Error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SyntaxError;

      return this.hub.file.buildCodeFrameError(this.node, msg, Error);
    };

    NodePath.prototype.traverse = function traverse(visitor, state) {
      (0, _index2.default)(this.node, visitor, this.scope, state, this);
    };

    NodePath.prototype.mark = function mark(type, message) {
      this.hub.file.metadata.marked.push({
        type: type,
        message: message,
        loc: this.node.loc
      });
    };

    NodePath.prototype.set = function set(key, node) {
      t.validate(this.node, key, node);
      this.node[key] = node;
    };

    NodePath.prototype.getPathLocation = function getPathLocation() {
      var parts = [];
      var path = this;
      do {
        var key = path.key;
        if (path.inList) key = path.listKey + "[" + key + "]";
        parts.unshift(key);
      } while (path = path.parentPath);
      return parts.join(".");
    };

    NodePath.prototype.debug = function debug(buildMessage) {
      if (!_debug.enabled) return;
      _debug(this.getPathLocation() + " " + this.type + ": " + buildMessage());
    };

    return NodePath;
  }();

  exports.default = NodePath;

  (0, _assign2.default)(NodePath.prototype, $__require("./ancestry"));
  (0, _assign2.default)(NodePath.prototype, $__require("./inference"));
  (0, _assign2.default)(NodePath.prototype, $__require("./replacement"));
  (0, _assign2.default)(NodePath.prototype, $__require("./evaluation"));
  (0, _assign2.default)(NodePath.prototype, $__require("./conversion"));
  (0, _assign2.default)(NodePath.prototype, $__require("./introspection"));
  (0, _assign2.default)(NodePath.prototype, $__require("./context"));
  (0, _assign2.default)(NodePath.prototype, $__require("./removal"));
  (0, _assign2.default)(NodePath.prototype, $__require("./modification"));
  (0, _assign2.default)(NodePath.prototype, $__require("./family"));
  (0, _assign2.default)(NodePath.prototype, $__require("./comments"));

  var _loop2 = function _loop2() {
    if (_isArray) {
      if (_i >= _iterator.length) return "break";
      _ref2 = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) return "break";
      _ref2 = _i.value;
    }

    var type = _ref2;

    var typeKey = "is" + type;
    NodePath.prototype[typeKey] = function (opts) {
      return t[typeKey](this.node, opts);
    };

    NodePath.prototype["assert" + type] = function (opts) {
      if (!this[typeKey](opts)) {
        throw new TypeError("Expected node path of type " + type);
      }
    };
  };

  for (var _iterator = t.TYPES, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
    var _ref2;

    var _ret2 = _loop2();

    if (_ret2 === "break") break;
  }

  var _loop = function _loop(type) {
    if (type[0] === "_") return "continue";
    if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);

    var virtualType = virtualTypes[type];

    NodePath.prototype["is" + type] = function (opts) {
      return virtualType.checkPath(this, opts);
    };
  };

  for (var type in virtualTypes) {
    var _ret = _loop(type);

    if (_ret === "continue") continue;
  }
  module.exports = exports["default"];
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/context.js", ["babel-runtime/core-js/get-iterator", "babel-runtime/helpers/classCallCheck", "./path", "babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  var _classCallCheck2 = $__require("babel-runtime/helpers/classCallCheck");

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _path2 = $__require("./path");

  var _path3 = _interopRequireDefault(_path2);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var testing = "production" === "test";

  var TraversalContext = function () {
    function TraversalContext(scope, opts, state, parentPath) {
      (0, _classCallCheck3.default)(this, TraversalContext);
      this.queue = null;

      this.parentPath = parentPath;
      this.scope = scope;
      this.state = state;
      this.opts = opts;
    }

    TraversalContext.prototype.shouldVisit = function shouldVisit(node) {
      var opts = this.opts;
      if (opts.enter || opts.exit) return true;

      if (opts[node.type]) return true;

      var keys = t.VISITOR_KEYS[node.type];
      if (!keys || !keys.length) return false;

      for (var _iterator = keys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var key = _ref;

        if (node[key]) return true;
      }

      return false;
    };

    TraversalContext.prototype.create = function create(node, obj, key, listKey) {
      return _path3.default.get({
        parentPath: this.parentPath,
        parent: node,
        container: obj,
        key: key,
        listKey: listKey
      });
    };

    TraversalContext.prototype.maybeQueue = function maybeQueue(path, notPriority) {
      if (this.trap) {
        throw new Error("Infinite cycle detected");
      }

      if (this.queue) {
        if (notPriority) {
          this.queue.push(path);
        } else {
          this.priorityQueue.push(path);
        }
      }
    };

    TraversalContext.prototype.visitMultiple = function visitMultiple(container, parent, listKey) {
      if (container.length === 0) return false;

      var queue = [];

      for (var key = 0; key < container.length; key++) {
        var node = container[key];
        if (node && this.shouldVisit(node)) {
          queue.push(this.create(parent, container, key, listKey));
        }
      }

      return this.visitQueue(queue);
    };

    TraversalContext.prototype.visitSingle = function visitSingle(node, key) {
      if (this.shouldVisit(node[key])) {
        return this.visitQueue([this.create(node, node, key)]);
      } else {
        return false;
      }
    };

    TraversalContext.prototype.visitQueue = function visitQueue(queue) {
      this.queue = queue;
      this.priorityQueue = [];

      var visited = [];
      var stop = false;

      for (var _iterator2 = queue, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var path = _ref2;

        path.resync();

        if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {
          path.pushContext(this);
        }

        if (path.key === null) continue;

        if (testing && queue.length >= 10000) {
          this.trap = true;
        }

        if (visited.indexOf(path.node) >= 0) continue;
        visited.push(path.node);

        if (path.visit()) {
          stop = true;
          break;
        }

        if (this.priorityQueue.length) {
          stop = this.visitQueue(this.priorityQueue);
          this.priorityQueue = [];
          this.queue = queue;
          if (stop) break;
        }
      }

      for (var _iterator3 = queue, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
        var _ref3;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref3 = _i3.value;
        }

        var _path = _ref3;

        _path.popContext();
      }

      this.queue = null;

      return stop;
    };

    TraversalContext.prototype.visit = function visit(node, key) {
      var nodes = node[key];
      if (!nodes) return false;

      if (Array.isArray(nodes)) {
        return this.visitMultiple(nodes, node, key);
      } else {
        return this.visitSingle(node, key);
      }
    };

    return TraversalContext;
  }();

  exports.default = TraversalContext;
  module.exports = exports["default"];
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/path/lib/virtual-types.js", ["babel-types", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = undefined;

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  var ReferencedIdentifier = exports.ReferencedIdentifier = {
    types: ["Identifier", "JSXIdentifier"],
    checkPath: function checkPath(_ref, opts) {
      var node = _ref.node,
          parent = _ref.parent;

      if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {
        if (t.isJSXIdentifier(node, opts)) {
          if (_babelTypes.react.isCompatTag(node.name)) return false;
        } else {
          return false;
        }
      }

      return t.isReferenced(node, parent);
    }
  };

  var ReferencedMemberExpression = exports.ReferencedMemberExpression = {
    types: ["MemberExpression"],
    checkPath: function checkPath(_ref2) {
      var node = _ref2.node,
          parent = _ref2.parent;

      return t.isMemberExpression(node) && t.isReferenced(node, parent);
    }
  };

  var BindingIdentifier = exports.BindingIdentifier = {
    types: ["Identifier"],
    checkPath: function checkPath(_ref3) {
      var node = _ref3.node,
          parent = _ref3.parent;

      return t.isIdentifier(node) && t.isBinding(node, parent);
    }
  };

  var Statement = exports.Statement = {
    types: ["Statement"],
    checkPath: function checkPath(_ref4) {
      var node = _ref4.node,
          parent = _ref4.parent;

      if (t.isStatement(node)) {
        if (t.isVariableDeclaration(node)) {
          if (t.isForXStatement(parent, { left: node })) return false;
          if (t.isForStatement(parent, { init: node })) return false;
        }

        return true;
      } else {
        return false;
      }
    }
  };

  var Expression = exports.Expression = {
    types: ["Expression"],
    checkPath: function checkPath(path) {
      if (path.isIdentifier()) {
        return path.isReferencedIdentifier();
      } else {
        return t.isExpression(path.node);
      }
    }
  };

  var Scope = exports.Scope = {
    types: ["Scopable"],
    checkPath: function checkPath(path) {
      return t.isScope(path.node, path.parent);
    }
  };

  var Referenced = exports.Referenced = {
    checkPath: function checkPath(path) {
      return t.isReferenced(path.node, path.parent);
    }
  };

  var BlockScoped = exports.BlockScoped = {
    checkPath: function checkPath(path) {
      return t.isBlockScoped(path.node);
    }
  };

  var Var = exports.Var = {
    types: ["VariableDeclaration"],
    checkPath: function checkPath(path) {
      return t.isVar(path.node);
    }
  };

  var User = exports.User = {
    checkPath: function checkPath(path) {
      return path.node && !!path.node.loc;
    }
  };

  var Generated = exports.Generated = {
    checkPath: function checkPath(path) {
      return !path.isUser();
    }
  };

  var Pure = exports.Pure = {
    checkPath: function checkPath(path, opts) {
      return path.scope.isPure(path.node, opts);
    }
  };

  var Flow = exports.Flow = {
    types: ["Flow", "ImportDeclaration", "ExportDeclaration", "ImportSpecifier"],
    checkPath: function checkPath(_ref5) {
      var node = _ref5.node;

      if (t.isFlow(node)) {
        return true;
      } else if (t.isImportDeclaration(node)) {
        return node.importKind === "type" || node.importKind === "typeof";
      } else if (t.isExportDeclaration(node)) {
        return node.exportKind === "type";
      } else if (t.isImportSpecifier(node)) {
        return node.importKind === "type" || node.importKind === "typeof";
      } else {
        return false;
      }
    }
  };
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/visitors.js", ["babel-runtime/helpers/typeof", "babel-runtime/core-js/object/keys", "babel-runtime/core-js/get-iterator", "./path/lib/virtual-types", "babel-messages", "babel-types", "lodash/clone", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _typeof2 = $__require("babel-runtime/helpers/typeof");

  var _typeof3 = _interopRequireDefault(_typeof2);

  var _keys = $__require("babel-runtime/core-js/object/keys");

  var _keys2 = _interopRequireDefault(_keys);

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.explode = explode;
  exports.verify = verify;
  exports.merge = merge;

  var _virtualTypes = $__require("./path/lib/virtual-types");

  var virtualTypes = _interopRequireWildcard(_virtualTypes);

  var _babelMessages = $__require("babel-messages");

  var messages = _interopRequireWildcard(_babelMessages);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  var _clone = $__require("lodash/clone");

  var _clone2 = _interopRequireDefault(_clone);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function explode(visitor) {
    if (visitor._exploded) return visitor;
    visitor._exploded = true;

    for (var nodeType in visitor) {
      if (shouldIgnoreKey(nodeType)) continue;

      var parts = nodeType.split("|");
      if (parts.length === 1) continue;

      var fns = visitor[nodeType];
      delete visitor[nodeType];

      for (var _iterator = parts, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var part = _ref;

        visitor[part] = fns;
      }
    }

    verify(visitor);

    delete visitor.__esModule;

    ensureEntranceObjects(visitor);

    ensureCallbackArrays(visitor);

    for (var _iterator2 = (0, _keys2.default)(visitor), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var _nodeType3 = _ref2;

      if (shouldIgnoreKey(_nodeType3)) continue;

      var wrapper = virtualTypes[_nodeType3];
      if (!wrapper) continue;

      var _fns2 = visitor[_nodeType3];
      for (var type in _fns2) {
        _fns2[type] = wrapCheck(wrapper, _fns2[type]);
      }

      delete visitor[_nodeType3];

      if (wrapper.types) {
        for (var _iterator4 = wrapper.types, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {
          var _ref4;

          if (_isArray4) {
            if (_i4 >= _iterator4.length) break;
            _ref4 = _iterator4[_i4++];
          } else {
            _i4 = _iterator4.next();
            if (_i4.done) break;
            _ref4 = _i4.value;
          }

          var _type = _ref4;

          if (visitor[_type]) {
            mergePair(visitor[_type], _fns2);
          } else {
            visitor[_type] = _fns2;
          }
        }
      } else {
        mergePair(visitor, _fns2);
      }
    }

    for (var _nodeType in visitor) {
      if (shouldIgnoreKey(_nodeType)) continue;

      var _fns = visitor[_nodeType];

      var aliases = t.FLIPPED_ALIAS_KEYS[_nodeType];

      var deprecratedKey = t.DEPRECATED_KEYS[_nodeType];
      if (deprecratedKey) {
        console.trace("Visitor defined for " + _nodeType + " but it has been renamed to " + deprecratedKey);
        aliases = [deprecratedKey];
      }

      if (!aliases) continue;

      delete visitor[_nodeType];

      for (var _iterator3 = aliases, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
        var _ref3;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref3 = _i3.value;
        }

        var alias = _ref3;

        var existing = visitor[alias];
        if (existing) {
          mergePair(existing, _fns);
        } else {
          visitor[alias] = (0, _clone2.default)(_fns);
        }
      }
    }

    for (var _nodeType2 in visitor) {
      if (shouldIgnoreKey(_nodeType2)) continue;

      ensureCallbackArrays(visitor[_nodeType2]);
    }

    return visitor;
  }

  function verify(visitor) {
    if (visitor._verified) return;

    if (typeof visitor === "function") {
      throw new Error(messages.get("traverseVerifyRootFunction"));
    }

    for (var nodeType in visitor) {
      if (nodeType === "enter" || nodeType === "exit") {
        validateVisitorMethods(nodeType, visitor[nodeType]);
      }

      if (shouldIgnoreKey(nodeType)) continue;

      if (t.TYPES.indexOf(nodeType) < 0) {
        throw new Error(messages.get("traverseVerifyNodeType", nodeType));
      }

      var visitors = visitor[nodeType];
      if ((typeof visitors === "undefined" ? "undefined" : (0, _typeof3.default)(visitors)) === "object") {
        for (var visitorKey in visitors) {
          if (visitorKey === "enter" || visitorKey === "exit") {
            validateVisitorMethods(nodeType + "." + visitorKey, visitors[visitorKey]);
          } else {
            throw new Error(messages.get("traverseVerifyVisitorProperty", nodeType, visitorKey));
          }
        }
      }
    }

    visitor._verified = true;
  }

  function validateVisitorMethods(path, val) {
    var fns = [].concat(val);
    for (var _iterator5 = fns, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {
      var _ref5;

      if (_isArray5) {
        if (_i5 >= _iterator5.length) break;
        _ref5 = _iterator5[_i5++];
      } else {
        _i5 = _iterator5.next();
        if (_i5.done) break;
        _ref5 = _i5.value;
      }

      var fn = _ref5;

      if (typeof fn !== "function") {
        throw new TypeError("Non-function found defined in " + path + " with type " + (typeof fn === "undefined" ? "undefined" : (0, _typeof3.default)(fn)));
      }
    }
  }

  function merge(visitors) {
    var states = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var wrapper = arguments[2];

    var rootVisitor = {};

    for (var i = 0; i < visitors.length; i++) {
      var visitor = visitors[i];
      var state = states[i];

      explode(visitor);

      for (var type in visitor) {
        var visitorType = visitor[type];

        if (state || wrapper) {
          visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);
        }

        var nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};
        mergePair(nodeVisitor, visitorType);
      }
    }

    return rootVisitor;
  }

  function wrapWithStateOrWrapper(oldVisitor, state, wrapper) {
    var newVisitor = {};

    var _loop = function _loop(key) {
      var fns = oldVisitor[key];

      if (!Array.isArray(fns)) return "continue";

      fns = fns.map(function (fn) {
        var newFn = fn;

        if (state) {
          newFn = function newFn(path) {
            return fn.call(state, path, state);
          };
        }

        if (wrapper) {
          newFn = wrapper(state.key, key, newFn);
        }

        return newFn;
      });

      newVisitor[key] = fns;
    };

    for (var key in oldVisitor) {
      var _ret = _loop(key);

      if (_ret === "continue") continue;
    }

    return newVisitor;
  }

  function ensureEntranceObjects(obj) {
    for (var key in obj) {
      if (shouldIgnoreKey(key)) continue;

      var fns = obj[key];
      if (typeof fns === "function") {
        obj[key] = { enter: fns };
      }
    }
  }

  function ensureCallbackArrays(obj) {
    if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];
    if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];
  }

  function wrapCheck(wrapper, fn) {
    var newFn = function newFn(path) {
      if (wrapper.checkPath(path)) {
        return fn.apply(this, arguments);
      }
    };
    newFn.toString = function () {
      return fn.toString();
    };
    return newFn;
  }

  function shouldIgnoreKey(key) {
    if (key[0] === "_") return true;

    if (key === "enter" || key === "exit" || key === "shouldSkip") return true;

    if (key === "blacklist" || key === "noScope" || key === "skipKeys") return true;

    return false;
  }

  function mergePair(dest, src) {
    for (var key in src) {
      dest[key] = [].concat(dest[key] || [], src[key]);
    }
  }
});
System.registerDynamic('npm:jspm-nodelibs-util@0.2.2/isBufferBrowser.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /*
   * From https://github.com/defunctzombie/node-util/blob/master/support/isBufferBrowser.js
   */

  module.exports = function isBuffer(arg) {
    return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';
  };
});
System.registerDynamic("npm:jspm-nodelibs-util@0.2.2.json", [], true, function() {
  return {
    "main": "./util.js",
    "map": {
      "./isBuffer.js": {
        "~node": "./isBufferBrowser.js"
      }
    }
  };
});

System.registerDynamic('npm:jspm-nodelibs-util@0.2.2/util.js', ['process', './isBuffer.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /*
   * Fork of https://raw.githubusercontent.com/defunctzombie/node-util
   * inlining https://github.com/isaacs/inherits/blob/master/inherits_browser.js
   */

  // Copyright Joyent, Inc. and other Node contributors.
  //
  // Permission is hereby granted, free of charge, to any person obtaining a
  // copy of this software and associated documentation files (the
  // "Software"), to deal in the Software without restriction, including
  // without limitation the rights to use, copy, modify, merge, publish,
  // distribute, sublicense, and/or sell copies of the Software, and to permit
  // persons to whom the Software is furnished to do so, subject to the
  // following conditions:
  //
  // The above copyright notice and this permission notice shall be included
  // in all copies or substantial portions of the Software.
  //
  // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
  // USE OR OTHER DEALINGS IN THE SOFTWARE.

  var process = $__require('process');

  var formatRegExp = /%[sdj%]/g;
  exports.format = function (f) {
    if (!isString(f)) {
      var objects = [];
      for (var i = 0; i < arguments.length; i++) {
        objects.push(inspect(arguments[i]));
      }
      return objects.join(' ');
    }

    var i = 1;
    var args = arguments;
    var len = args.length;
    var str = String(f).replace(formatRegExp, function (x) {
      if (x === '%%') return '%';
      if (i >= len) return x;
      switch (x) {
        case '%s':
          return String(args[i++]);
        case '%d':
          return Number(args[i++]);
        case '%j':
          try {
            return JSON.stringify(args[i++]);
          } catch (_) {
            return '[Circular]';
          }
        default:
          return x;
      }
    });
    for (var x = args[i]; i < len; x = args[++i]) {
      if (isNull(x) || !isObject(x)) {
        str += ' ' + x;
      } else {
        str += ' ' + inspect(x);
      }
    }
    return str;
  };

  // Mark that a method should not be used.
  // Returns a modified function which warns once by default.
  // If --no-deprecation is set, then it is a no-op.
  exports.deprecate = function (fn, msg) {
    // Allow for deprecating things in the process of starting up.
    if (isUndefined(global.process)) {
      return function () {
        return exports.deprecate(fn, msg).apply(this, arguments);
      };
    }

    if (process.noDeprecation === true) {
      return fn;
    }

    var warned = false;
    function deprecated() {
      if (!warned) {
        if (process.throwDeprecation) {
          throw new Error(msg);
        } else if (process.traceDeprecation) {
          console.trace(msg);
        } else {
          console.error(msg);
        }
        warned = true;
      }
      return fn.apply(this, arguments);
    }

    return deprecated;
  };

  var debugs = {};
  var debugEnviron;
  exports.debuglog = function (set) {
    if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';
    set = set.toUpperCase();
    if (!debugs[set]) {
      if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
        var pid = process.pid;
        debugs[set] = function () {
          var msg = exports.format.apply(exports, arguments);
          console.error('%s %d: %s', set, pid, msg);
        };
      } else {
        debugs[set] = function () {};
      }
    }
    return debugs[set];
  };

  /**
   * Echos the value of a value. Trys to print the value out
   * in the best way possible given the different types.
   *
   * @param {Object} obj The object to print out.
   * @param {Object} opts Optional options object that alters the output.
   */
  /* legacy: obj, showHidden, depth, colors*/
  function inspect(obj, opts) {
    // default options
    var ctx = {
      seen: [],
      stylize: stylizeNoColor
    };
    // legacy...
    if (arguments.length >= 3) ctx.depth = arguments[2];
    if (arguments.length >= 4) ctx.colors = arguments[3];
    if (isBoolean(opts)) {
      // legacy...
      ctx.showHidden = opts;
    } else if (opts) {
      // got an "options" object
      exports._extend(ctx, opts);
    }
    // set default options
    if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
    if (isUndefined(ctx.depth)) ctx.depth = 2;
    if (isUndefined(ctx.colors)) ctx.colors = false;
    if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
    if (ctx.colors) ctx.stylize = stylizeWithColor;
    return formatValue(ctx, obj, ctx.depth);
  }
  exports.inspect = inspect;

  // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
  inspect.colors = {
    'bold': [1, 22],
    'italic': [3, 23],
    'underline': [4, 24],
    'inverse': [7, 27],
    'white': [37, 39],
    'grey': [90, 39],
    'black': [30, 39],
    'blue': [34, 39],
    'cyan': [36, 39],
    'green': [32, 39],
    'magenta': [35, 39],
    'red': [31, 39],
    'yellow': [33, 39]
  };

  // Don't use 'blue' not visible on cmd.exe
  inspect.styles = {
    'special': 'cyan',
    'number': 'yellow',
    'boolean': 'yellow',
    'undefined': 'grey',
    'null': 'bold',
    'string': 'green',
    'date': 'magenta',
    // "name": intentionally not styling
    'regexp': 'red'
  };

  function stylizeWithColor(str, styleType) {
    var style = inspect.styles[styleType];

    if (style) {
      return '\u001b[' + inspect.colors[style][0] + 'm' + str + '\u001b[' + inspect.colors[style][1] + 'm';
    } else {
      return str;
    }
  }

  function stylizeNoColor(str, styleType) {
    return str;
  }

  function arrayToHash(array) {
    var hash = {};

    array.forEach(function (val, idx) {
      hash[val] = true;
    });

    return hash;
  }

  function formatValue(ctx, value, recurseTimes) {
    // Provide a hook for user-specified inspect functions.
    // Check that value is an object with an inspect function on it
    if (ctx.customInspect && value && isFunction(value.inspect) &&
    // Filter out the util module, it's inspect function is special
    value.inspect !== exports.inspect &&
    // Also filter out any prototype objects using the circular check.
    !(value.constructor && value.constructor.prototype === value)) {
      var ret = value.inspect(recurseTimes, ctx);
      if (!isString(ret)) {
        ret = formatValue(ctx, ret, recurseTimes);
      }
      return ret;
    }

    // Primitive types cannot have properties
    var primitive = formatPrimitive(ctx, value);
    if (primitive) {
      return primitive;
    }

    // Look up the keys of the object.
    var keys = Object.keys(value);
    var visibleKeys = arrayToHash(keys);

    if (ctx.showHidden) {
      keys = Object.getOwnPropertyNames(value);
    }

    // IE doesn't make error fields non-enumerable
    // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
    if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
      return formatError(value);
    }

    // Some type of object without properties can be shortcutted.
    if (keys.length === 0) {
      if (isFunction(value)) {
        var name = value.name ? ': ' + value.name : '';
        return ctx.stylize('[Function' + name + ']', 'special');
      }
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      }
      if (isDate(value)) {
        return ctx.stylize(Date.prototype.toString.call(value), 'date');
      }
      if (isError(value)) {
        return formatError(value);
      }
    }

    var base = '',
        array = false,
        braces = ['{', '}'];

    // Make Array say that they are Array
    if (isArray(value)) {
      array = true;
      braces = ['[', ']'];
    }

    // Make functions say that they are functions
    if (isFunction(value)) {
      var n = value.name ? ': ' + value.name : '';
      base = ' [Function' + n + ']';
    }

    // Make RegExps say that they are RegExps
    if (isRegExp(value)) {
      base = ' ' + RegExp.prototype.toString.call(value);
    }

    // Make dates with properties first say the date
    if (isDate(value)) {
      base = ' ' + Date.prototype.toUTCString.call(value);
    }

    // Make error with message first say the error
    if (isError(value)) {
      base = ' ' + formatError(value);
    }

    if (keys.length === 0 && (!array || value.length == 0)) {
      return braces[0] + base + braces[1];
    }

    if (recurseTimes < 0) {
      if (isRegExp(value)) {
        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
      } else {
        return ctx.stylize('[Object]', 'special');
      }
    }

    ctx.seen.push(value);

    var output;
    if (array) {
      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
    } else {
      output = keys.map(function (key) {
        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
      });
    }

    ctx.seen.pop();

    return reduceToSingleString(output, base, braces);
  }

  function formatPrimitive(ctx, value) {
    if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');
    if (isString(value)) {
      var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
      return ctx.stylize(simple, 'string');
    }
    if (isNumber(value)) return ctx.stylize('' + value, 'number');
    if (isBoolean(value)) return ctx.stylize('' + value, 'boolean');
    // For some reason typeof null is "object", so special case here.
    if (isNull(value)) return ctx.stylize('null', 'null');
  }

  function formatError(value) {
    return '[' + Error.prototype.toString.call(value) + ']';
  }

  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
    var output = [];
    for (var i = 0, l = value.length; i < l; ++i) {
      if (hasOwnProperty(value, String(i))) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
      } else {
        output.push('');
      }
    }
    keys.forEach(function (key) {
      if (!key.match(/^\d+$/)) {
        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
      }
    });
    return output;
  }

  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
    var name, str, desc;
    desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
    if (desc.get) {
      if (desc.set) {
        str = ctx.stylize('[Getter/Setter]', 'special');
      } else {
        str = ctx.stylize('[Getter]', 'special');
      }
    } else {
      if (desc.set) {
        str = ctx.stylize('[Setter]', 'special');
      }
    }
    if (!hasOwnProperty(visibleKeys, key)) {
      name = '[' + key + ']';
    }
    if (!str) {
      if (ctx.seen.indexOf(desc.value) < 0) {
        if (isNull(recurseTimes)) {
          str = formatValue(ctx, desc.value, null);
        } else {
          str = formatValue(ctx, desc.value, recurseTimes - 1);
        }
        if (str.indexOf('\n') > -1) {
          if (array) {
            str = str.split('\n').map(function (line) {
              return '  ' + line;
            }).join('\n').substr(2);
          } else {
            str = '\n' + str.split('\n').map(function (line) {
              return '   ' + line;
            }).join('\n');
          }
        }
      } else {
        str = ctx.stylize('[Circular]', 'special');
      }
    }
    if (isUndefined(name)) {
      if (array && key.match(/^\d+$/)) {
        return str;
      }
      name = JSON.stringify('' + key);
      if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
        name = name.substr(1, name.length - 2);
        name = ctx.stylize(name, 'name');
      } else {
        name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
        name = ctx.stylize(name, 'string');
      }
    }

    return name + ': ' + str;
  }

  function reduceToSingleString(output, base, braces) {
    var numLinesEst = 0;
    var length = output.reduce(function (prev, cur) {
      numLinesEst++;
      if (cur.indexOf('\n') >= 0) numLinesEst++;
      return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
    }, 0);

    if (length > 60) {
      return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
    }

    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
  }

  // NOTE: These type checking functions intentionally don't use `instanceof`
  // because it is fragile and can be easily faked with `Object.create()`.
  function isArray(ar) {
    return Array.isArray(ar);
  }
  exports.isArray = isArray;

  function isBoolean(arg) {
    return typeof arg === 'boolean';
  }
  exports.isBoolean = isBoolean;

  function isNull(arg) {
    return arg === null;
  }
  exports.isNull = isNull;

  function isNullOrUndefined(arg) {
    return arg == null;
  }
  exports.isNullOrUndefined = isNullOrUndefined;

  function isNumber(arg) {
    return typeof arg === 'number';
  }
  exports.isNumber = isNumber;

  function isString(arg) {
    return typeof arg === 'string';
  }
  exports.isString = isString;

  function isSymbol(arg) {
    return typeof arg === 'symbol';
  }
  exports.isSymbol = isSymbol;

  function isUndefined(arg) {
    return arg === void 0;
  }
  exports.isUndefined = isUndefined;

  function isRegExp(re) {
    return isObject(re) && objectToString(re) === '[object RegExp]';
  }
  exports.isRegExp = isRegExp;

  function isObject(arg) {
    return typeof arg === 'object' && arg !== null;
  }
  exports.isObject = isObject;

  function isDate(d) {
    return isObject(d) && objectToString(d) === '[object Date]';
  }
  exports.isDate = isDate;

  function isError(e) {
    return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
  }
  exports.isError = isError;

  function isFunction(arg) {
    return typeof arg === 'function';
  }
  exports.isFunction = isFunction;

  function isPrimitive(arg) {
    return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
    typeof arg === 'undefined';
  }
  exports.isPrimitive = isPrimitive;

  exports.isBuffer = $__require('./isBuffer.js');

  function objectToString(o) {
    return Object.prototype.toString.call(o);
  }

  function pad(n) {
    return n < 10 ? '0' + n.toString(10) : n.toString(10);
  }

  var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

  // 26 Feb 16:19:34
  function timestamp() {
    var d = new Date();
    var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
    return [d.getDate(), months[d.getMonth()], time].join(' ');
  }

  // log is just a thin wrapper to console.log that prepends a timestamp
  exports.log = function () {
    console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
  };

  /**
   * Inherit the prototype methods from one constructor into another.
   *
   * The Function.prototype.inherits from lang.js rewritten as a standalone
   * function (not on Function.prototype). NOTE: If this file is to be loaded
   * during bootstrapping this function needs to be rewritten using some native
   * functions as prototype setup using normal JavaScript does not work as
   * expected during bootstrapping (see mirror.js in r114903).
   *
   * @param {function} ctor Constructor function which needs to inherit the
   *     prototype.
   * @param {function} superCtor Constructor function to inherit prototype from.
   */
  if (typeof Object.create === 'function') {
    // implementation from standard node.js 'util' module
    exports.inherits = function inherits(ctor, superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
    };
  } else {
    // old school shim for old browsers
    exports.inherits = function inherits(ctor, superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function () {};
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    };
  }

  exports._extend = function (origin, add) {
    // Don't do anything if add isn't an object
    if (!add || !isObject(add)) return origin;

    var keys = Object.keys(add);
    var i = keys.length;
    while (i--) {
      origin[keys[i]] = add[keys[i]];
    }
    return origin;
  };

  function hasOwnProperty(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
  }
});
System.registerDynamic("npm:babel-messages@6.23.0.json", [], true, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib": "./lib/index.js"
    }
  };
});

System.registerDynamic("npm:babel-messages@6.23.0/lib/index.js", ["babel-runtime/core-js/json/stringify", "util"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.MESSAGES = undefined;

  var _stringify = $__require("babel-runtime/core-js/json/stringify");

  var _stringify2 = _interopRequireDefault(_stringify);

  exports.get = get;
  exports.parseArgs = parseArgs;

  var _util = $__require("util");

  var util = _interopRequireWildcard(_util);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var MESSAGES = exports.MESSAGES = {
    tailCallReassignmentDeopt: "Function reference has been reassigned, so it will probably be dereferenced, therefore we can't optimise this with confidence",
    classesIllegalBareSuper: "Illegal use of bare super",
    classesIllegalSuperCall: "Direct super call is illegal in non-constructor, use super.$1() instead",
    scopeDuplicateDeclaration: "Duplicate declaration $1",
    settersNoRest: "Setters aren't allowed to have a rest",
    noAssignmentsInForHead: "No assignments allowed in for-in/of head",
    expectedMemberExpressionOrIdentifier: "Expected type MemberExpression or Identifier",
    invalidParentForThisNode: "We don't know how to handle this node within the current parent - please open an issue",
    readOnly: "$1 is read-only",
    unknownForHead: "Unknown node type $1 in ForStatement",
    didYouMean: "Did you mean $1?",
    codeGeneratorDeopt: "Note: The code generator has deoptimised the styling of $1 as it exceeds the max of $2.",
    missingTemplatesDirectory: "no templates directory - this is most likely the result of a broken `npm publish`. Please report to https://github.com/babel/babel/issues",
    unsupportedOutputType: "Unsupported output type $1",
    illegalMethodName: "Illegal method name $1",
    lostTrackNodePath: "We lost track of this node's position, likely because the AST was directly manipulated",

    modulesIllegalExportName: "Illegal export $1",
    modulesDuplicateDeclarations: "Duplicate module declarations with the same source but in different scopes",

    undeclaredVariable: "Reference to undeclared variable $1",
    undeclaredVariableType: "Referencing a type alias outside of a type annotation",
    undeclaredVariableSuggestion: "Reference to undeclared variable $1 - did you mean $2?",

    traverseNeedsParent: "You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a $1 node without passing scope and parentPath.",
    traverseVerifyRootFunction: "You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?",
    traverseVerifyVisitorProperty: "You passed `traverse()` a visitor object with the property $1 that has the invalid property $2",
    traverseVerifyNodeType: "You gave us a visitor for the node type $1 but it's not a valid type",

    pluginNotObject: "Plugin $2 specified in $1 was expected to return an object when invoked but returned $3",
    pluginNotFunction: "Plugin $2 specified in $1 was expected to return a function but returned $3",
    pluginUnknown: "Unknown plugin $1 specified in $2 at $3, attempted to resolve relative to $4",
    pluginInvalidProperty: "Plugin $2 specified in $1 provided an invalid property of $3"
  };

  function get(key) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var msg = MESSAGES[key];
    if (!msg) throw new ReferenceError("Unknown message " + (0, _stringify2.default)(key));

    args = parseArgs(args);

    return msg.replace(/\$(\d+)/g, function (str, i) {
      return args[i - 1];
    });
  }

  function parseArgs(args) {
    return args.map(function (val) {
      if (val != null && val.inspect) {
        return val.inspect();
      } else {
        try {
          return (0, _stringify2.default)(val) || val + "";
        } catch (e) {
          return util.inspect(val);
        }
      }
    });
  }
});
System.registerDynamic('npm:lodash@4.17.4/isString.js', ['./_baseGetTag', './isArray', './isObjectLike'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var baseGetTag = $__require('./_baseGetTag'),
        isArray = $__require('./isArray'),
        isObjectLike = $__require('./isObjectLike');

    /** `Object#toString` result references. */
    var stringTag = '[object String]';

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
        return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
    }

    module.exports = isString;
});
System.registerDynamic('npm:lodash@4.17.4/isSymbol.js', ['./_baseGetTag', './isObjectLike'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var baseGetTag = $__require('./_baseGetTag'),
        isObjectLike = $__require('./isObjectLike');

    /** `Object#toString` result references. */
    var symbolTag = '[object Symbol]';

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
        return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }

    module.exports = isSymbol;
});
System.registerDynamic('npm:lodash@4.17.4/toNumber.js', ['./isObject', './isSymbol'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var isObject = $__require('./isObject'),
      isSymbol = $__require('./isSymbol');

  /** Used as references for various `Number` constants. */
  var NAN = 0 / 0;

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Built-in method references without a dependency on `root`. */
  var freeParseInt = parseInt;

  /**
   * Converts `value` to a number.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to process.
   * @returns {number} Returns the number.
   * @example
   *
   * _.toNumber(3.2);
   * // => 3.2
   *
   * _.toNumber(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toNumber(Infinity);
   * // => Infinity
   *
   * _.toNumber('3.2');
   * // => 3.2
   */
  function toNumber(value) {
    if (typeof value == 'number') {
      return value;
    }
    if (isSymbol(value)) {
      return NAN;
    }
    if (isObject(value)) {
      var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
      value = isObject(other) ? other + '' : other;
    }
    if (typeof value != 'string') {
      return value === 0 ? value : +value;
    }
    value = value.replace(reTrim, '');
    var isBinary = reIsBinary.test(value);
    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
  }

  module.exports = toNumber;
});
System.registerDynamic('npm:lodash@4.17.4/toFinite.js', ['./toNumber'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var toNumber = $__require('./toNumber');

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_INTEGER = 1.7976931348623157e+308;

  /**
   * Converts `value` to a finite number.
   *
   * @static
   * @memberOf _
   * @since 4.12.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {number} Returns the converted number.
   * @example
   *
   * _.toFinite(3.2);
   * // => 3.2
   *
   * _.toFinite(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toFinite(Infinity);
   * // => 1.7976931348623157e+308
   *
   * _.toFinite('3.2');
   * // => 3.2
   */
  function toFinite(value) {
    if (!value) {
      return value === 0 ? value : 0;
    }
    value = toNumber(value);
    if (value === INFINITY || value === -INFINITY) {
      var sign = value < 0 ? -1 : 1;
      return sign * MAX_INTEGER;
    }
    return value === value ? value : 0;
  }

  module.exports = toFinite;
});
System.registerDynamic('npm:lodash@4.17.4/toInteger.js', ['./toFinite'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var toFinite = $__require('./toFinite');

  /**
   * Converts `value` to an integer.
   *
   * **Note:** This method is loosely based on
   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {number} Returns the converted integer.
   * @example
   *
   * _.toInteger(3.2);
   * // => 3
   *
   * _.toInteger(Number.MIN_VALUE);
   * // => 0
   *
   * _.toInteger(Infinity);
   * // => 1.7976931348623157e+308
   *
   * _.toInteger('3.2');
   * // => 3
   */
  function toInteger(value) {
    var result = toFinite(value),
        remainder = result % 1;

    return result === result ? remainder ? result - remainder : result : 0;
  }

  module.exports = toInteger;
});
System.registerDynamic("npm:lodash@4.17.4/_arrayMap.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  module.exports = arrayMap;
});
System.registerDynamic('npm:lodash@4.17.4/_baseValues.js', ['./_arrayMap'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var arrayMap = $__require('./_arrayMap');

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function (key) {
      return object[key];
    });
  }

  module.exports = baseValues;
});
System.registerDynamic('npm:lodash@4.17.4/values.js', ['./_baseValues', './keys'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseValues = $__require('./_baseValues'),
      keys = $__require('./keys');

  /**
   * Creates an array of the own enumerable string keyed property values of `object`.
   *
   * **Note:** Non-object values are coerced to objects.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property values.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.values(new Foo);
   * // => [1, 2] (iteration order is not guaranteed)
   *
   * _.values('hi');
   * // => ['h', 'i']
   */
  function values(object) {
    return object == null ? [] : baseValues(object, keys(object));
  }

  module.exports = values;
});
System.registerDynamic('npm:lodash@4.17.4/includes.js', ['./_baseIndexOf', './isArrayLike', './isString', './toInteger', './values'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseIndexOf = $__require('./_baseIndexOf'),
      isArrayLike = $__require('./isArrayLike'),
      isString = $__require('./isString'),
      toInteger = $__require('./toInteger'),
      values = $__require('./values');

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * Checks if `value` is in `collection`. If `collection` is a string, it's
   * checked for a substring of `value`, otherwise
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * is used for equality comparisons. If `fromIndex` is negative, it's used as
   * the offset from the end of `collection`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Collection
   * @param {Array|Object|string} collection The collection to inspect.
   * @param {*} value The value to search for.
   * @param {number} [fromIndex=0] The index to search from.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
   * @returns {boolean} Returns `true` if `value` is found, else `false`.
   * @example
   *
   * _.includes([1, 2, 3], 1);
   * // => true
   *
   * _.includes([1, 2, 3], 1, 2);
   * // => false
   *
   * _.includes({ 'a': 1, 'b': 2 }, 1);
   * // => true
   *
   * _.includes('abcd', 'bc');
   * // => true
   */
  function includes(collection, value, fromIndex, guard) {
    collection = isArrayLike(collection) ? collection : values(collection);
    fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;

    var length = collection.length;
    if (fromIndex < 0) {
      fromIndex = nativeMax(length + fromIndex, 0);
    }
    return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
  }

  module.exports = includes;
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-assign.js', ['./_object-keys', './_object-gops', './_object-pie', './_to-object', './_iobject', './_fails', 'process'], true, function ($__require, exports, module) {
  'use strict';
  // 19.1.2.1 Object.assign(target, source, ...)

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var getKeys = $__require('./_object-keys');
  var gOPS = $__require('./_object-gops');
  var pIE = $__require('./_object-pie');
  var toObject = $__require('./_to-object');
  var IObject = $__require('./_iobject');
  var $assign = Object.assign;

  // should work with symbols and should have deterministic property order (V8 bug)
  module.exports = !$assign || $__require('./_fails')(function () {
    var A = {};
    var B = {};
    // eslint-disable-next-line no-undef
    var S = Symbol();
    var K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function (k) {
      B[k] = k;
    });
    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
  }) ? function assign(target, source) {
    // eslint-disable-line no-unused-vars
    var T = toObject(target);
    var aLen = arguments.length;
    var index = 1;
    var getSymbols = gOPS.f;
    var isEnum = pIE.f;
    while (aLen > index) {
      var S = IObject(arguments[index++]);
      var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
      var length = keys.length;
      var j = 0;
      var key;
      while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
    }return T;
  } : $assign;
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_collection-weak.js', ['./_redefine-all', './_meta', './_an-object', './_is-object', './_an-instance', './_for-of', './_array-methods', './_has', './_validate-collection', 'process'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var redefineAll = $__require('./_redefine-all');
  var getWeak = $__require('./_meta').getWeak;
  var anObject = $__require('./_an-object');
  var isObject = $__require('./_is-object');
  var anInstance = $__require('./_an-instance');
  var forOf = $__require('./_for-of');
  var createArrayMethod = $__require('./_array-methods');
  var $has = $__require('./_has');
  var validate = $__require('./_validate-collection');
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var id = 0;

  // fallback for uncaught frozen keys
  var uncaughtFrozenStore = function (that) {
    return that._l || (that._l = new UncaughtFrozenStore());
  };
  var UncaughtFrozenStore = function () {
    this.a = [];
  };
  var findUncaughtFrozen = function (store, key) {
    return arrayFind(store.a, function (it) {
      return it[0] === key;
    });
  };
  UncaughtFrozenStore.prototype = {
    get: function (key) {
      var entry = findUncaughtFrozen(this, key);
      if (entry) return entry[1];
    },
    has: function (key) {
      return !!findUncaughtFrozen(this, key);
    },
    set: function (key, value) {
      var entry = findUncaughtFrozen(this, key);
      if (entry) entry[1] = value;else this.a.push([key, value]);
    },
    'delete': function (key) {
      var index = arrayFindIndex(this.a, function (it) {
        return it[0] === key;
      });
      if (~index) this.a.splice(index, 1);
      return !!~index;
    }
  };

  module.exports = {
    getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
      var C = wrapper(function (that, iterable) {
        anInstance(that, C, NAME, '_i');
        that._t = NAME; // collection type
        that._i = id++; // collection id
        that._l = undefined; // leak store for uncaught frozen objects
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        // 23.3.3.2 WeakMap.prototype.delete(key)
        // 23.4.3.3 WeakSet.prototype.delete(value)
        'delete': function (key) {
          if (!isObject(key)) return false;
          var data = getWeak(key);
          if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
          return data && $has(data, this._i) && delete data[this._i];
        },
        // 23.3.3.4 WeakMap.prototype.has(key)
        // 23.4.3.4 WeakSet.prototype.has(value)
        has: function has(key) {
          if (!isObject(key)) return false;
          var data = getWeak(key);
          if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
          return data && $has(data, this._i);
        }
      });
      return C;
    },
    def: function (that, key, value) {
      var data = getWeak(anObject(key), true);
      if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;
      return that;
    },
    ufstore: uncaughtFrozenStore
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_validate-collection.js', ['./_is-object', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var isObject = $__require('./_is-object');
  module.exports = function (it, TYPE) {
    if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
    return it;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_redefine-all.js', ['./_hide', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var hide = $__require('./_hide');
  module.exports = function (target, src, safe) {
    for (var key in src) {
      if (safe && target[key]) target[key] = src[key];else hide(target, key, src[key]);
    }return target;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_an-instance.js', ['process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  module.exports = function (it, Constructor, name, forbiddenField) {
    if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {
      throw TypeError(name + ': incorrect invocation!');
    }return it;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_array-species-constructor.js', ['./_is-object', './_is-array', './_wks', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var isObject = $__require('./_is-object');
  var isArray = $__require('./_is-array');
  var SPECIES = $__require('./_wks')('species');

  module.exports = function (original) {
    var C;
    if (isArray(original)) {
      C = original.constructor;
      // cross-realm fallback
      if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
      if (isObject(C)) {
        C = C[SPECIES];
        if (C === null) C = undefined;
      }
    }return C === undefined ? Array : C;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_array-species-create.js', ['./_array-species-constructor', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 9.4.2.3 ArraySpeciesCreate(originalArray, length)
  var speciesConstructor = $__require('./_array-species-constructor');

  module.exports = function (original, length) {
    return new (speciesConstructor(original))(length);
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_array-methods.js', ['./_ctx', './_iobject', './_to-object', './_to-length', './_array-species-create', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 0 -> Array#forEach
  // 1 -> Array#map
  // 2 -> Array#filter
  // 3 -> Array#some
  // 4 -> Array#every
  // 5 -> Array#find
  // 6 -> Array#findIndex
  var ctx = $__require('./_ctx');
  var IObject = $__require('./_iobject');
  var toObject = $__require('./_to-object');
  var toLength = $__require('./_to-length');
  var asc = $__require('./_array-species-create');
  module.exports = function (TYPE, $create) {
    var IS_MAP = TYPE == 1;
    var IS_FILTER = TYPE == 2;
    var IS_SOME = TYPE == 3;
    var IS_EVERY = TYPE == 4;
    var IS_FIND_INDEX = TYPE == 6;
    var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
    var create = $create || asc;
    return function ($this, callbackfn, that) {
      var O = toObject($this);
      var self = IObject(O);
      var f = ctx(callbackfn, that, 3);
      var length = toLength(self.length);
      var index = 0;
      var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
      var val, res;
      for (; length > index; index++) if (NO_HOLES || index in self) {
        val = self[index];
        res = f(val, index, O);
        if (TYPE) {
          if (IS_MAP) result[index] = res; // map
          else if (res) switch (TYPE) {
              case 3:
                return true; // some
              case 5:
                return val; // find
              case 6:
                return index; // findIndex
              case 2:
                result.push(val); // filter
            } else if (IS_EVERY) return false; // every
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
    };
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_collection.js', ['./_global', './_export', './_meta', './_fails', './_hide', './_redefine-all', './_for-of', './_an-instance', './_is-object', './_set-to-string-tag', './_object-dp', './_array-methods', './_descriptors', 'process'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var global = $__require('./_global');
  var $export = $__require('./_export');
  var meta = $__require('./_meta');
  var fails = $__require('./_fails');
  var hide = $__require('./_hide');
  var redefineAll = $__require('./_redefine-all');
  var forOf = $__require('./_for-of');
  var anInstance = $__require('./_an-instance');
  var isObject = $__require('./_is-object');
  var setToStringTag = $__require('./_set-to-string-tag');
  var dP = $__require('./_object-dp').f;
  var each = $__require('./_array-methods')(0);
  var DESCRIPTORS = $__require('./_descriptors');

  module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
    var Base = global[NAME];
    var C = Base;
    var ADDER = IS_MAP ? 'set' : 'add';
    var proto = C && C.prototype;
    var O = {};
    if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
      new C().entries().next();
    }))) {
      // create collection constructor
      C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
      redefineAll(C.prototype, methods);
      meta.NEED = true;
    } else {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME, '_c');
        target._c = new Base();
        if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);
      });
      each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
        var IS_ADDER = KEY == 'add' || KEY == 'set';
        if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {
          anInstance(this, C, KEY);
          if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
          var result = this._c[KEY](a === 0 ? 0 : a, b);
          return IS_ADDER ? this : result;
        });
      });
      IS_WEAK || dP(C.prototype, 'size', {
        get: function () {
          return this._c.size;
        }
      });
    }

    setToStringTag(C, NAME);

    O[NAME] = C;
    $export($export.G + $export.W + $export.F, O);

    if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

    return C;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es6.weak-map.js', ['./_array-methods', './_redefine', './_meta', './_object-assign', './_collection-weak', './_is-object', './_fails', './_validate-collection', './_collection', 'process'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var each = $__require('./_array-methods')(0);
  var redefine = $__require('./_redefine');
  var meta = $__require('./_meta');
  var assign = $__require('./_object-assign');
  var weak = $__require('./_collection-weak');
  var isObject = $__require('./_is-object');
  var fails = $__require('./_fails');
  var validate = $__require('./_validate-collection');
  var WEAK_MAP = 'WeakMap';
  var getWeak = meta.getWeak;
  var isExtensible = Object.isExtensible;
  var uncaughtFrozenStore = weak.ufstore;
  var tmp = {};
  var InternalMap;

  var wrapper = function (get) {
    return function WeakMap() {
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  };

  var methods = {
    // 23.3.3.3 WeakMap.prototype.get(key)
    get: function get(key) {
      if (isObject(key)) {
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
        return data ? data[this._i] : undefined;
      }
    },
    // 23.3.3.5 WeakMap.prototype.set(key, value)
    set: function set(key, value) {
      return weak.def(validate(this, WEAK_MAP), key, value);
    }
  };

  // 23.3 WeakMap Objects
  var $WeakMap = module.exports = $__require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);

  // IE11 WeakMap frozen keys fix
  if (fails(function () {
    return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;
  })) {
    InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
    assign(InternalMap.prototype, methods);
    meta.NEED = true;
    each(['delete', 'has', 'get', 'set'], function (key) {
      var proto = $WeakMap.prototype;
      var method = proto[key];
      redefine(proto, key, function (a, b) {
        // store frozen objects on internal weakmap shim
        if (isObject(a) && !isExtensible(a)) {
          if (!this._f) this._f = new InternalMap();
          var result = this._f[key](a, b);
          return key == 'set' ? this : result;
          // store all the rest on native weakmap
        }return method.call(this, a, b);
      });
    });
  }
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_set-collection-of.js', ['./_export', 'process'], true, function ($__require, exports, module) {
  'use strict';
  // https://tc39.github.io/proposal-setmap-offrom/

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var $export = $__require('./_export');

  module.exports = function (COLLECTION) {
    $export($export.S, COLLECTION, { of: function of() {
        var length = arguments.length;
        var A = Array(length);
        while (length--) A[length] = arguments[length];
        return new this(A);
      } });
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es7.weak-map.of.js', ['./_set-collection-of', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
  $__require('./_set-collection-of')('WeakMap');
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_iter-call.js', ['./_an-object', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // call something on iterator step with safe closing on error
  var anObject = $__require('./_an-object');
  module.exports = function (iterator, fn, value, entries) {
    try {
      return entries ? fn(anObject(value)[0], value[1]) : fn(value);
      // 7.4.6 IteratorClose(iterator, completion)
    } catch (e) {
      var ret = iterator['return'];
      if (ret !== undefined) anObject(ret.call(iterator));
      throw e;
    }
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_is-array-iter.js', ['./_iterators', './_wks', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // check on default Array iterator
  var Iterators = $__require('./_iterators');
  var ITERATOR = $__require('./_wks')('iterator');
  var ArrayProto = Array.prototype;

  module.exports = function (it) {
    return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_for-of.js', ['./_ctx', './_iter-call', './_is-array-iter', './_an-object', './_to-length', './core.get-iterator-method', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var ctx = $__require('./_ctx');
  var call = $__require('./_iter-call');
  var isArrayIter = $__require('./_is-array-iter');
  var anObject = $__require('./_an-object');
  var toLength = $__require('./_to-length');
  var getIterFn = $__require('./core.get-iterator-method');
  var BREAK = {};
  var RETURN = {};
  var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
    var iterFn = ITERATOR ? function () {
      return iterable;
    } : getIterFn(iterable);
    var f = ctx(fn, that, entries ? 2 : 1);
    var index = 0;
    var length, step, iterator, result;
    if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
    // fast case for arrays with default iterator
    if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
      result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
      if (result === BREAK || result === RETURN) return result;
    } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
      result = call(iterator, f, step.value, entries);
      if (result === BREAK || result === RETURN) return result;
    }
  };
  exports.BREAK = BREAK;
  exports.RETURN = RETURN;
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_set-collection-from.js', ['./_export', './_a-function', './_ctx', './_for-of', 'process'], true, function ($__require, exports, module) {
  'use strict';
  // https://tc39.github.io/proposal-setmap-offrom/

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var $export = $__require('./_export');
  var aFunction = $__require('./_a-function');
  var ctx = $__require('./_ctx');
  var forOf = $__require('./_for-of');

  module.exports = function (COLLECTION) {
    $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
        var mapFn = arguments[1];
        var mapping, A, n, cb;
        aFunction(this);
        mapping = mapFn !== undefined;
        if (mapping) aFunction(mapFn);
        if (source == undefined) return new this();
        A = [];
        if (mapping) {
          n = 0;
          cb = ctx(mapFn, arguments[2], 2);
          forOf(source, false, function (nextItem) {
            A.push(cb(nextItem, n++));
          });
        } else {
          forOf(source, false, A.push, A);
        }
        return new this(A);
      } });
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es7.weak-map.from.js', ['./_set-collection-from', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
  $__require('./_set-collection-from')('WeakMap');
});
System.registerDynamic('npm:core-js@2.5.1/library/fn/weak-map/index.js', ['../../modules/es6.object.to-string', '../../modules/web.dom.iterable', '../../modules/es6.weak-map', '../../modules/es7.weak-map.of', '../../modules/es7.weak-map.from', '../../modules/_core', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('../../modules/es6.object.to-string');
  $__require('../../modules/web.dom.iterable');
  $__require('../../modules/es6.weak-map');
  $__require('../../modules/es7.weak-map.of');
  $__require('../../modules/es7.weak-map.from');
  module.exports = $__require('../../modules/_core').WeakMap;
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/weak-map.js", ["core-js/library/fn/weak-map"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/weak-map"), __esModule: true };
});
System.registerDynamic("npm:babel-traverse@6.26.0/lib/cache.js", ["babel-runtime/core-js/weak-map", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.scope = exports.path = undefined;

  var _weakMap = $__require("babel-runtime/core-js/weak-map");

  var _weakMap2 = _interopRequireDefault(_weakMap);

  exports.clear = clear;
  exports.clearPath = clearPath;
  exports.clearScope = clearScope;

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var path = exports.path = new _weakMap2.default();
  var scope = exports.scope = new _weakMap2.default();

  function clear() {
    clearPath();
    clearScope();
  }

  function clearPath() {
    exports.path = path = new _weakMap2.default();
  }

  function clearScope() {
    exports.scope = scope = new _weakMap2.default();
  }
});
System.registerDynamic("npm:babel-traverse@6.26.0.json", [], true, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib": "./lib/index.js",
      "./lib/path": "./lib/path/index.js",
      "./lib/path/inference": "./lib/path/inference/index.js",
      "./lib/scope": "./lib/scope/index.js"
    }
  };
});

System.registerDynamic("npm:babel-traverse@6.26.0/lib/index.js", ["babel-runtime/core-js/get-iterator", "./path", "./scope", "./hub", "./context", "./visitors", "babel-messages", "lodash/includes", "babel-types", "./cache", "process"], true, function ($__require, exports, module) {
  "use strict";

  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.visitors = exports.Hub = exports.Scope = exports.NodePath = undefined;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  var _path = $__require("./path");

  Object.defineProperty(exports, "NodePath", {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_path).default;
    }
  });

  var _scope = $__require("./scope");

  Object.defineProperty(exports, "Scope", {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_scope).default;
    }
  });

  var _hub = $__require("./hub");

  Object.defineProperty(exports, "Hub", {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_hub).default;
    }
  });
  exports.default = traverse;

  var _context = $__require("./context");

  var _context2 = _interopRequireDefault(_context);

  var _visitors = $__require("./visitors");

  var visitors = _interopRequireWildcard(_visitors);

  var _babelMessages = $__require("babel-messages");

  var messages = _interopRequireWildcard(_babelMessages);

  var _includes = $__require("lodash/includes");

  var _includes2 = _interopRequireDefault(_includes);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  var _cache = $__require("./cache");

  var cache = _interopRequireWildcard(_cache);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.visitors = visitors;
  function traverse(parent, opts, scope, state, parentPath) {
    if (!parent) return;
    if (!opts) opts = {};

    if (!opts.noScope && !scope) {
      if (parent.type !== "Program" && parent.type !== "File") {
        throw new Error(messages.get("traverseNeedsParent", parent.type));
      }
    }

    visitors.explode(opts);

    traverse.node(parent, opts, scope, state, parentPath);
  }

  traverse.visitors = visitors;
  traverse.verify = visitors.verify;
  traverse.explode = visitors.explode;

  traverse.NodePath = $__require("./path");
  traverse.Scope = $__require("./scope");
  traverse.Hub = $__require("./hub");

  traverse.cheap = function (node, enter) {
    return t.traverseFast(node, enter);
  };

  traverse.node = function (node, opts, scope, state, parentPath, skipKeys) {
    var keys = t.VISITOR_KEYS[node.type];
    if (!keys) return;

    var context = new _context2.default(scope, opts, state, parentPath);
    for (var _iterator = keys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var key = _ref;

      if (skipKeys && skipKeys[key]) continue;
      if (context.visit(node, key)) return;
    }
  };

  traverse.clearNode = function (node, opts) {
    t.removeProperties(node, opts);

    cache.path.delete(node);
  };

  traverse.removeProperties = function (tree, opts) {
    t.traverseFast(tree, traverse.clearNode, opts);
    return tree;
  };

  function hasBlacklistedType(path, state) {
    if (path.node.type === state.type) {
      state.has = true;
      path.stop();
    }
  }

  traverse.hasType = function (tree, scope, type, blacklistTypes) {
    if ((0, _includes2.default)(blacklistTypes, tree.type)) return false;

    if (tree.type === type) return true;

    var state = {
      has: false,
      type: type
    };

    traverse(tree, {
      blacklist: blacklistTypes,
      enter: hasBlacklistedType
    }, scope, state);

    return state.has;
  };

  traverse.clearCache = function () {
    cache.clear();
  };

  traverse.clearCache.clearPath = cache.clearPath;
  traverse.clearCache.clearScope = cache.clearScope;

  traverse.copyCache = function (source, destination) {
    if (cache.path.has(source)) {
      cache.path.set(destination, cache.path.get(source));
    }
  };
});
System.registerDynamic("npm:babylon@6.18.0.json", [], true, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib": "./lib/index.js"
    }
  };
});

System.registerDynamic('npm:babylon@6.18.0/lib/index.js', [], true, function ($__require, exports, module) {
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, '__esModule', { value: true });

  /* eslint max-len: 0 */

  // This is a trick taken from Esprima. It turns out that, on
  // non-Chrome browsers, to check whether a string is in a set, a
  // predicate containing a big ugly `switch` statement is faster than
  // a regular expression, and on Chrome the two are about on par.
  // This function uses `eval` (non-lexical) to produce such a
  // predicate from a space-separated string of words.
  //
  // It starts by sorting the words by length.

  function makePredicate(words) {
    words = words.split(" ");
    return function (str) {
      return words.indexOf(str) >= 0;
    };
  }

  // Reserved word lists for various dialects of the language

  var reservedWords = {
    6: makePredicate("enum await"),
    strict: makePredicate("implements interface let package private protected public static yield"),
    strictBind: makePredicate("eval arguments")
  };

  // And the keywords

  var isKeyword = makePredicate("break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super");

  // ## Character categories

  // Big ugly regular expressions that match characters in the
  // whitespace, identifier, and identifier-start categories. These
  // are only applied when a character is found to actually have a
  // code point above 128.
  // Generated by `bin/generate-identifier-regex.js`.

  var nonASCIIidentifierStartChars = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
  var nonASCIIidentifierChars = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D4-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFB-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA900-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F";

  var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
  var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");

  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;

  // These are a run-length and offset encoded representation of the
  // >0xffff code points that are a valid part of identifiers. The
  // offset starts at 0x10000, and each pair of numbers represents an
  // offset to the next range, and then a size of the range. They were
  // generated by `bin/generate-identifier-regex.js`.
  // eslint-disable-next-line comma-spacing
  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 785, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 25, 391, 63, 32, 0, 449, 56, 264, 8, 2, 36, 18, 0, 50, 29, 881, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 65, 0, 32, 6124, 20, 754, 9486, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 10591, 541];
  // eslint-disable-next-line comma-spacing
  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 10, 2, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 87, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 423, 9, 838, 7, 2, 7, 17, 9, 57, 21, 2, 13, 19882, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239];

  // This has a complexity linear to the value of the code. The
  // assumption is that looking up astral identifier characters is
  // rare.
  function isInAstralSet(code, set) {
    var pos = 0x10000;
    for (var i = 0; i < set.length; i += 2) {
      pos += set[i];
      if (pos > code) return false;

      pos += set[i + 1];
      if (pos >= code) return true;
    }
  }

  // Test whether a given character code starts an identifier.

  function isIdentifierStart(code) {
    if (code < 65) return code === 36;
    if (code < 91) return true;
    if (code < 97) return code === 95;
    if (code < 123) return true;
    if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
    return isInAstralSet(code, astralIdentifierStartCodes);
  }

  // Test whether a given character is part of an identifier.

  function isIdentifierChar(code) {
    if (code < 48) return code === 36;
    if (code < 58) return true;
    if (code < 65) return false;
    if (code < 91) return true;
    if (code < 97) return code === 95;
    if (code < 123) return true;
    if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
  }

  // A second optional argument can be given to further configure
  var defaultOptions = {
    // Source type ("script" or "module") for different semantics
    sourceType: "script",
    // Source filename.
    sourceFilename: undefined,
    // Line from which to start counting source. Useful for
    // integration with other tools.
    startLine: 1,
    // When enabled, a return at the top level is not considered an
    // error.
    allowReturnOutsideFunction: false,
    // When enabled, import/export statements are not constrained to
    // appearing at the top of the program.
    allowImportExportEverywhere: false,
    // TODO
    allowSuperOutsideMethod: false,
    // An array of plugins to enable
    plugins: [],
    // TODO
    strictMode: null
  };

  // Interpret and default an options object

  function getOptions(opts) {
    var options = {};
    for (var key in defaultOptions) {
      options[key] = opts && key in opts ? opts[key] : defaultOptions[key];
    }
    return options;
  }

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  var classCallCheck = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };

  var inherits = function (subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  };

  var possibleConstructorReturn = function (self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  };

  // ## Token types

  // The assignment of fine-grained, information-carrying type objects
  // allows the tokenizer to store the information it has about a
  // token in a way that is very cheap for the parser to look up.

  // All token type variables start with an underscore, to make them
  // easy to recognize.

  // The `beforeExpr` property is used to disambiguate between regular
  // expressions and divisions. It is set on all token types that can
  // be followed by an expression (thus, a slash after them would be a
  // regular expression).
  //
  // `isLoop` marks a keyword as starting a loop, which is important
  // to know when parsing a label, in order to allow or disallow
  // continue jumps to that label.

  var beforeExpr = true;
  var startsExpr = true;
  var isLoop = true;
  var isAssign = true;
  var prefix = true;
  var postfix = true;

  var TokenType = function TokenType(label) {
    var conf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    classCallCheck(this, TokenType);

    this.label = label;
    this.keyword = conf.keyword;
    this.beforeExpr = !!conf.beforeExpr;
    this.startsExpr = !!conf.startsExpr;
    this.rightAssociative = !!conf.rightAssociative;
    this.isLoop = !!conf.isLoop;
    this.isAssign = !!conf.isAssign;
    this.prefix = !!conf.prefix;
    this.postfix = !!conf.postfix;
    this.binop = conf.binop || null;
    this.updateContext = null;
  };

  var KeywordTokenType = function (_TokenType) {
    inherits(KeywordTokenType, _TokenType);

    function KeywordTokenType(name) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      classCallCheck(this, KeywordTokenType);

      options.keyword = name;

      return possibleConstructorReturn(this, _TokenType.call(this, name, options));
    }

    return KeywordTokenType;
  }(TokenType);

  var BinopTokenType = function (_TokenType2) {
    inherits(BinopTokenType, _TokenType2);

    function BinopTokenType(name, prec) {
      classCallCheck(this, BinopTokenType);
      return possibleConstructorReturn(this, _TokenType2.call(this, name, { beforeExpr: beforeExpr, binop: prec }));
    }

    return BinopTokenType;
  }(TokenType);

  var types = {
    num: new TokenType("num", { startsExpr: startsExpr }),
    regexp: new TokenType("regexp", { startsExpr: startsExpr }),
    string: new TokenType("string", { startsExpr: startsExpr }),
    name: new TokenType("name", { startsExpr: startsExpr }),
    eof: new TokenType("eof"),

    // Punctuation token types.
    bracketL: new TokenType("[", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
    bracketR: new TokenType("]"),
    braceL: new TokenType("{", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
    braceBarL: new TokenType("{|", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
    braceR: new TokenType("}"),
    braceBarR: new TokenType("|}"),
    parenL: new TokenType("(", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
    parenR: new TokenType(")"),
    comma: new TokenType(",", { beforeExpr: beforeExpr }),
    semi: new TokenType(";", { beforeExpr: beforeExpr }),
    colon: new TokenType(":", { beforeExpr: beforeExpr }),
    doubleColon: new TokenType("::", { beforeExpr: beforeExpr }),
    dot: new TokenType("."),
    question: new TokenType("?", { beforeExpr: beforeExpr }),
    arrow: new TokenType("=>", { beforeExpr: beforeExpr }),
    template: new TokenType("template"),
    ellipsis: new TokenType("...", { beforeExpr: beforeExpr }),
    backQuote: new TokenType("`", { startsExpr: startsExpr }),
    dollarBraceL: new TokenType("${", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
    at: new TokenType("@"),

    // Operators. These carry several kinds of properties to help the
    // parser use them properly (the presence of these properties is
    // what categorizes them as operators).
    //
    // `binop`, when present, specifies that this operator is a binary
    // operator, and will refer to its precedence.
    //
    // `prefix` and `postfix` mark the operator as a prefix or postfix
    // unary operator.
    //
    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
    // binary operators with a very low precedence, that should result
    // in AssignmentExpression nodes.

    eq: new TokenType("=", { beforeExpr: beforeExpr, isAssign: isAssign }),
    assign: new TokenType("_=", { beforeExpr: beforeExpr, isAssign: isAssign }),
    incDec: new TokenType("++/--", { prefix: prefix, postfix: postfix, startsExpr: startsExpr }),
    prefix: new TokenType("prefix", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),
    logicalOR: new BinopTokenType("||", 1),
    logicalAND: new BinopTokenType("&&", 2),
    bitwiseOR: new BinopTokenType("|", 3),
    bitwiseXOR: new BinopTokenType("^", 4),
    bitwiseAND: new BinopTokenType("&", 5),
    equality: new BinopTokenType("==/!=", 6),
    relational: new BinopTokenType("</>", 7),
    bitShift: new BinopTokenType("<</>>", 8),
    plusMin: new TokenType("+/-", { beforeExpr: beforeExpr, binop: 9, prefix: prefix, startsExpr: startsExpr }),
    modulo: new BinopTokenType("%", 10),
    star: new BinopTokenType("*", 10),
    slash: new BinopTokenType("/", 10),
    exponent: new TokenType("**", { beforeExpr: beforeExpr, binop: 11, rightAssociative: true })
  };

  var keywords = {
    "break": new KeywordTokenType("break"),
    "case": new KeywordTokenType("case", { beforeExpr: beforeExpr }),
    "catch": new KeywordTokenType("catch"),
    "continue": new KeywordTokenType("continue"),
    "debugger": new KeywordTokenType("debugger"),
    "default": new KeywordTokenType("default", { beforeExpr: beforeExpr }),
    "do": new KeywordTokenType("do", { isLoop: isLoop, beforeExpr: beforeExpr }),
    "else": new KeywordTokenType("else", { beforeExpr: beforeExpr }),
    "finally": new KeywordTokenType("finally"),
    "for": new KeywordTokenType("for", { isLoop: isLoop }),
    "function": new KeywordTokenType("function", { startsExpr: startsExpr }),
    "if": new KeywordTokenType("if"),
    "return": new KeywordTokenType("return", { beforeExpr: beforeExpr }),
    "switch": new KeywordTokenType("switch"),
    "throw": new KeywordTokenType("throw", { beforeExpr: beforeExpr }),
    "try": new KeywordTokenType("try"),
    "var": new KeywordTokenType("var"),
    "let": new KeywordTokenType("let"),
    "const": new KeywordTokenType("const"),
    "while": new KeywordTokenType("while", { isLoop: isLoop }),
    "with": new KeywordTokenType("with"),
    "new": new KeywordTokenType("new", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
    "this": new KeywordTokenType("this", { startsExpr: startsExpr }),
    "super": new KeywordTokenType("super", { startsExpr: startsExpr }),
    "class": new KeywordTokenType("class"),
    "extends": new KeywordTokenType("extends", { beforeExpr: beforeExpr }),
    "export": new KeywordTokenType("export"),
    "import": new KeywordTokenType("import", { startsExpr: startsExpr }),
    "yield": new KeywordTokenType("yield", { beforeExpr: beforeExpr, startsExpr: startsExpr }),
    "null": new KeywordTokenType("null", { startsExpr: startsExpr }),
    "true": new KeywordTokenType("true", { startsExpr: startsExpr }),
    "false": new KeywordTokenType("false", { startsExpr: startsExpr }),
    "in": new KeywordTokenType("in", { beforeExpr: beforeExpr, binop: 7 }),
    "instanceof": new KeywordTokenType("instanceof", { beforeExpr: beforeExpr, binop: 7 }),
    "typeof": new KeywordTokenType("typeof", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),
    "void": new KeywordTokenType("void", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),
    "delete": new KeywordTokenType("delete", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr })
  };

  // Map keyword names to token types.
  Object.keys(keywords).forEach(function (name) {
    types["_" + name] = keywords[name];
  });

  // Matches a whole line break (where CRLF is considered a single
  // line break). Used to count lines.

  var lineBreak = /\r\n?|\n|\u2028|\u2029/;
  var lineBreakG = new RegExp(lineBreak.source, "g");

  function isNewLine(code) {
    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029;
  }

  var nonASCIIwhitespace = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/;

  // The algorithm used to determine whether a regexp can appear at a
  // given point in the program is loosely based on sweet.js' approach.
  // See https://github.com/mozilla/sweet.js/wiki/design

  var TokContext = function TokContext(token, isExpr, preserveSpace, override) {
    classCallCheck(this, TokContext);

    this.token = token;
    this.isExpr = !!isExpr;
    this.preserveSpace = !!preserveSpace;
    this.override = override;
  };

  var types$1 = {
    braceStatement: new TokContext("{", false),
    braceExpression: new TokContext("{", true),
    templateQuasi: new TokContext("${", true),
    parenStatement: new TokContext("(", false),
    parenExpression: new TokContext("(", true),
    template: new TokContext("`", true, true, function (p) {
      return p.readTmplToken();
    }),
    functionExpression: new TokContext("function", true)
  };

  // Token-specific context update code

  types.parenR.updateContext = types.braceR.updateContext = function () {
    if (this.state.context.length === 1) {
      this.state.exprAllowed = true;
      return;
    }

    var out = this.state.context.pop();
    if (out === types$1.braceStatement && this.curContext() === types$1.functionExpression) {
      this.state.context.pop();
      this.state.exprAllowed = false;
    } else if (out === types$1.templateQuasi) {
      this.state.exprAllowed = true;
    } else {
      this.state.exprAllowed = !out.isExpr;
    }
  };

  types.name.updateContext = function (prevType) {
    this.state.exprAllowed = false;

    if (prevType === types._let || prevType === types._const || prevType === types._var) {
      if (lineBreak.test(this.input.slice(this.state.end))) {
        this.state.exprAllowed = true;
      }
    }
  };

  types.braceL.updateContext = function (prevType) {
    this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);
    this.state.exprAllowed = true;
  };

  types.dollarBraceL.updateContext = function () {
    this.state.context.push(types$1.templateQuasi);
    this.state.exprAllowed = true;
  };

  types.parenL.updateContext = function (prevType) {
    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;
    this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);
    this.state.exprAllowed = true;
  };

  types.incDec.updateContext = function () {
    // tokExprAllowed stays unchanged
  };

  types._function.updateContext = function () {
    if (this.curContext() !== types$1.braceStatement) {
      this.state.context.push(types$1.functionExpression);
    }

    this.state.exprAllowed = false;
  };

  types.backQuote.updateContext = function () {
    if (this.curContext() === types$1.template) {
      this.state.context.pop();
    } else {
      this.state.context.push(types$1.template);
    }
    this.state.exprAllowed = false;
  };

  // These are used when `options.locations` is on, for the
  // `startLoc` and `endLoc` properties.

  var Position = function Position(line, col) {
    classCallCheck(this, Position);

    this.line = line;
    this.column = col;
  };

  var SourceLocation = function SourceLocation(start, end) {
    classCallCheck(this, SourceLocation);

    this.start = start;
    this.end = end;
  };

  // The `getLineInfo` function is mostly useful when the
  // `locations` option is off (for performance reasons) and you
  // want to find the line/column position for a given character
  // offset. `input` should be the code string that the offset refers
  // into.

  function getLineInfo(input, offset) {
    for (var line = 1, cur = 0;;) {
      lineBreakG.lastIndex = cur;
      var match = lineBreakG.exec(input);
      if (match && match.index < offset) {
        ++line;
        cur = match.index + match[0].length;
      } else {
        return new Position(line, offset - cur);
      }
    }
  }

  var State = function () {
    function State() {
      classCallCheck(this, State);
    }

    State.prototype.init = function init(options, input) {
      this.strict = options.strictMode === false ? false : options.sourceType === "module";

      this.input = input;

      this.potentialArrowAt = -1;

      this.inMethod = this.inFunction = this.inGenerator = this.inAsync = this.inPropertyName = this.inType = this.inClassProperty = this.noAnonFunctionType = false;

      this.labels = [];

      this.decorators = [];

      this.tokens = [];

      this.comments = [];

      this.trailingComments = [];
      this.leadingComments = [];
      this.commentStack = [];

      this.pos = this.lineStart = 0;
      this.curLine = options.startLine;

      this.type = types.eof;
      this.value = null;
      this.start = this.end = this.pos;
      this.startLoc = this.endLoc = this.curPosition();

      this.lastTokEndLoc = this.lastTokStartLoc = null;
      this.lastTokStart = this.lastTokEnd = this.pos;

      this.context = [types$1.braceStatement];
      this.exprAllowed = true;

      this.containsEsc = this.containsOctal = false;
      this.octalPosition = null;

      this.invalidTemplateEscapePosition = null;

      this.exportedIdentifiers = [];

      return this;
    };

    // TODO


    // TODO


    // Used to signify the start of a potential arrow function


    // Flags to track whether we are in a function, a generator.


    // Labels in scope.


    // Leading decorators.


    // Token store.


    // Comment store.


    // Comment attachment store


    // The current position of the tokenizer in the input.


    // Properties of the current token:
    // Its type


    // For tokens that include more information than their type, the value


    // Its start and end offset


    // And, if locations are used, the {line, column} object
    // corresponding to those offsets


    // Position information for the previous token


    // The context stack is used to superficially track syntactic
    // context to predict whether a regular expression is allowed in a
    // given position.


    // Used to signal to callers of `readWord1` whether the word
    // contained any escape sequences. This is needed because words with
    // escape sequences must not be interpreted as keywords.


    // TODO


    // Names of exports store. `default` is stored as a name for both
    // `export default foo;` and `export { foo as default };`.


    State.prototype.curPosition = function curPosition() {
      return new Position(this.curLine, this.pos - this.lineStart);
    };

    State.prototype.clone = function clone(skipArrays) {
      var state = new State();
      for (var key in this) {
        var val = this[key];

        if ((!skipArrays || key === "context") && Array.isArray(val)) {
          val = val.slice();
        }

        state[key] = val;
      }
      return state;
    };

    return State;
  }();

  // Object type used to represent tokens. Note that normally, tokens
  // simply exist as properties on the parser object. This is only
  // used for the onToken callback and the external tokenizer.

  var Token = function Token(state) {
    classCallCheck(this, Token);

    this.type = state.type;
    this.value = state.value;
    this.start = state.start;
    this.end = state.end;
    this.loc = new SourceLocation(state.startLoc, state.endLoc);
  };

  // ## Tokenizer

  function codePointToString(code) {
    // UTF-16 Decoding
    if (code <= 0xFFFF) {
      return String.fromCharCode(code);
    } else {
      return String.fromCharCode((code - 0x10000 >> 10) + 0xD800, (code - 0x10000 & 1023) + 0xDC00);
    }
  }

  var Tokenizer = function () {
    function Tokenizer(options, input) {
      classCallCheck(this, Tokenizer);

      this.state = new State();
      this.state.init(options, input);
    }

    // Move to the next token

    Tokenizer.prototype.next = function next() {
      if (!this.isLookahead) {
        this.state.tokens.push(new Token(this.state));
      }

      this.state.lastTokEnd = this.state.end;
      this.state.lastTokStart = this.state.start;
      this.state.lastTokEndLoc = this.state.endLoc;
      this.state.lastTokStartLoc = this.state.startLoc;
      this.nextToken();
    };

    // TODO

    Tokenizer.prototype.eat = function eat(type) {
      if (this.match(type)) {
        this.next();
        return true;
      } else {
        return false;
      }
    };

    // TODO

    Tokenizer.prototype.match = function match(type) {
      return this.state.type === type;
    };

    // TODO

    Tokenizer.prototype.isKeyword = function isKeyword$$1(word) {
      return isKeyword(word);
    };

    // TODO

    Tokenizer.prototype.lookahead = function lookahead() {
      var old = this.state;
      this.state = old.clone(true);

      this.isLookahead = true;
      this.next();
      this.isLookahead = false;

      var curr = this.state.clone(true);
      this.state = old;
      return curr;
    };

    // Toggle strict mode. Re-reads the next number or string to please
    // pedantic tests (`"use strict"; 010;` should fail).

    Tokenizer.prototype.setStrict = function setStrict(strict) {
      this.state.strict = strict;
      if (!this.match(types.num) && !this.match(types.string)) return;
      this.state.pos = this.state.start;
      while (this.state.pos < this.state.lineStart) {
        this.state.lineStart = this.input.lastIndexOf("\n", this.state.lineStart - 2) + 1;
        --this.state.curLine;
      }
      this.nextToken();
    };

    Tokenizer.prototype.curContext = function curContext() {
      return this.state.context[this.state.context.length - 1];
    };

    // Read a single token, updating the parser object's token-related
    // properties.

    Tokenizer.prototype.nextToken = function nextToken() {
      var curContext = this.curContext();
      if (!curContext || !curContext.preserveSpace) this.skipSpace();

      this.state.containsOctal = false;
      this.state.octalPosition = null;
      this.state.start = this.state.pos;
      this.state.startLoc = this.state.curPosition();
      if (this.state.pos >= this.input.length) return this.finishToken(types.eof);

      if (curContext.override) {
        return curContext.override(this);
      } else {
        return this.readToken(this.fullCharCodeAtPos());
      }
    };

    Tokenizer.prototype.readToken = function readToken(code) {
      // Identifier or keyword. '\uXXXX' sequences are allowed in
      // identifiers, so '\' also dispatches to that.
      if (isIdentifierStart(code) || code === 92 /* '\' */) {
          return this.readWord();
        } else {
        return this.getTokenFromCode(code);
      }
    };

    Tokenizer.prototype.fullCharCodeAtPos = function fullCharCodeAtPos() {
      var code = this.input.charCodeAt(this.state.pos);
      if (code <= 0xd7ff || code >= 0xe000) return code;

      var next = this.input.charCodeAt(this.state.pos + 1);
      return (code << 10) + next - 0x35fdc00;
    };

    Tokenizer.prototype.pushComment = function pushComment(block, text, start, end, startLoc, endLoc) {
      var comment = {
        type: block ? "CommentBlock" : "CommentLine",
        value: text,
        start: start,
        end: end,
        loc: new SourceLocation(startLoc, endLoc)
      };

      if (!this.isLookahead) {
        this.state.tokens.push(comment);
        this.state.comments.push(comment);
        this.addComment(comment);
      }
    };

    Tokenizer.prototype.skipBlockComment = function skipBlockComment() {
      var startLoc = this.state.curPosition();
      var start = this.state.pos;
      var end = this.input.indexOf("*/", this.state.pos += 2);
      if (end === -1) this.raise(this.state.pos - 2, "Unterminated comment");

      this.state.pos = end + 2;
      lineBreakG.lastIndex = start;
      var match = void 0;
      while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {
        ++this.state.curLine;
        this.state.lineStart = match.index + match[0].length;
      }

      this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());
    };

    Tokenizer.prototype.skipLineComment = function skipLineComment(startSkip) {
      var start = this.state.pos;
      var startLoc = this.state.curPosition();
      var ch = this.input.charCodeAt(this.state.pos += startSkip);
      while (this.state.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {
        ++this.state.pos;
        ch = this.input.charCodeAt(this.state.pos);
      }

      this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());
    };

    // Called at the start of the parse and after every token. Skips
    // whitespace and comments, and.

    Tokenizer.prototype.skipSpace = function skipSpace() {
      loop: while (this.state.pos < this.input.length) {
        var ch = this.input.charCodeAt(this.state.pos);
        switch (ch) {
          case 32:case 160:
            // ' '
            ++this.state.pos;
            break;

          case 13:
            if (this.input.charCodeAt(this.state.pos + 1) === 10) {
              ++this.state.pos;
            }

          case 10:case 8232:case 8233:
            ++this.state.pos;
            ++this.state.curLine;
            this.state.lineStart = this.state.pos;
            break;

          case 47:
            // '/'
            switch (this.input.charCodeAt(this.state.pos + 1)) {
              case 42:
                // '*'
                this.skipBlockComment();
                break;

              case 47:
                this.skipLineComment(2);
                break;

              default:
                break loop;
            }
            break;

          default:
            if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {
              ++this.state.pos;
            } else {
              break loop;
            }
        }
      }
    };

    // Called at the end of every token. Sets `end`, `val`, and
    // maintains `context` and `exprAllowed`, and skips the space after
    // the token, so that the next one's `start` will point at the
    // right position.

    Tokenizer.prototype.finishToken = function finishToken(type, val) {
      this.state.end = this.state.pos;
      this.state.endLoc = this.state.curPosition();
      var prevType = this.state.type;
      this.state.type = type;
      this.state.value = val;

      this.updateContext(prevType);
    };

    // ### Token reading

    // This is the function that is called to fetch the next token. It
    // is somewhat obscure, because it works in character codes rather
    // than characters, and because operator parsing has been inlined
    // into it.
    //
    // All in the name of speed.
    //


    Tokenizer.prototype.readToken_dot = function readToken_dot() {
      var next = this.input.charCodeAt(this.state.pos + 1);
      if (next >= 48 && next <= 57) {
        return this.readNumber(true);
      }

      var next2 = this.input.charCodeAt(this.state.pos + 2);
      if (next === 46 && next2 === 46) {
        // 46 = dot '.'
        this.state.pos += 3;
        return this.finishToken(types.ellipsis);
      } else {
        ++this.state.pos;
        return this.finishToken(types.dot);
      }
    };

    Tokenizer.prototype.readToken_slash = function readToken_slash() {
      // '/'
      if (this.state.exprAllowed) {
        ++this.state.pos;
        return this.readRegexp();
      }

      var next = this.input.charCodeAt(this.state.pos + 1);
      if (next === 61) {
        return this.finishOp(types.assign, 2);
      } else {
        return this.finishOp(types.slash, 1);
      }
    };

    Tokenizer.prototype.readToken_mult_modulo = function readToken_mult_modulo(code) {
      // '%*'
      var type = code === 42 ? types.star : types.modulo;
      var width = 1;
      var next = this.input.charCodeAt(this.state.pos + 1);

      if (next === 42) {
        // '*'
        width++;
        next = this.input.charCodeAt(this.state.pos + 2);
        type = types.exponent;
      }

      if (next === 61) {
        width++;
        type = types.assign;
      }

      return this.finishOp(type, width);
    };

    Tokenizer.prototype.readToken_pipe_amp = function readToken_pipe_amp(code) {
      // '|&'
      var next = this.input.charCodeAt(this.state.pos + 1);
      if (next === code) return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);
      if (next === 61) return this.finishOp(types.assign, 2);
      if (code === 124 && next === 125 && this.hasPlugin("flow")) return this.finishOp(types.braceBarR, 2);
      return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);
    };

    Tokenizer.prototype.readToken_caret = function readToken_caret() {
      // '^'
      var next = this.input.charCodeAt(this.state.pos + 1);
      if (next === 61) {
        return this.finishOp(types.assign, 2);
      } else {
        return this.finishOp(types.bitwiseXOR, 1);
      }
    };

    Tokenizer.prototype.readToken_plus_min = function readToken_plus_min(code) {
      // '+-'
      var next = this.input.charCodeAt(this.state.pos + 1);

      if (next === code) {
        if (next === 45 && this.input.charCodeAt(this.state.pos + 2) === 62 && lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.pos))) {
          // A `-->` line comment
          this.skipLineComment(3);
          this.skipSpace();
          return this.nextToken();
        }
        return this.finishOp(types.incDec, 2);
      }

      if (next === 61) {
        return this.finishOp(types.assign, 2);
      } else {
        return this.finishOp(types.plusMin, 1);
      }
    };

    Tokenizer.prototype.readToken_lt_gt = function readToken_lt_gt(code) {
      // '<>'
      var next = this.input.charCodeAt(this.state.pos + 1);
      var size = 1;

      if (next === code) {
        size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;
        if (this.input.charCodeAt(this.state.pos + size) === 61) return this.finishOp(types.assign, size + 1);
        return this.finishOp(types.bitShift, size);
      }

      if (next === 33 && code === 60 && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {
        if (this.inModule) this.unexpected();
        // `<!--`, an XML-style comment that should be interpreted as a line comment
        this.skipLineComment(4);
        this.skipSpace();
        return this.nextToken();
      }

      if (next === 61) {
        // <= | >=
        size = 2;
      }

      return this.finishOp(types.relational, size);
    };

    Tokenizer.prototype.readToken_eq_excl = function readToken_eq_excl(code) {
      // '=!'
      var next = this.input.charCodeAt(this.state.pos + 1);
      if (next === 61) return this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);
      if (code === 61 && next === 62) {
        // '=>'
        this.state.pos += 2;
        return this.finishToken(types.arrow);
      }
      return this.finishOp(code === 61 ? types.eq : types.prefix, 1);
    };

    Tokenizer.prototype.getTokenFromCode = function getTokenFromCode(code) {
      switch (code) {
        // The interpretation of a dot depends on whether it is followed
        // by a digit or another two dots.
        case 46:
          // '.'
          return this.readToken_dot();

        // Punctuation tokens.
        case 40:
          ++this.state.pos;return this.finishToken(types.parenL);
        case 41:
          ++this.state.pos;return this.finishToken(types.parenR);
        case 59:
          ++this.state.pos;return this.finishToken(types.semi);
        case 44:
          ++this.state.pos;return this.finishToken(types.comma);
        case 91:
          ++this.state.pos;return this.finishToken(types.bracketL);
        case 93:
          ++this.state.pos;return this.finishToken(types.bracketR);

        case 123:
          if (this.hasPlugin("flow") && this.input.charCodeAt(this.state.pos + 1) === 124) {
            return this.finishOp(types.braceBarL, 2);
          } else {
            ++this.state.pos;
            return this.finishToken(types.braceL);
          }

        case 125:
          ++this.state.pos;return this.finishToken(types.braceR);

        case 58:
          if (this.hasPlugin("functionBind") && this.input.charCodeAt(this.state.pos + 1) === 58) {
            return this.finishOp(types.doubleColon, 2);
          } else {
            ++this.state.pos;
            return this.finishToken(types.colon);
          }

        case 63:
          ++this.state.pos;return this.finishToken(types.question);
        case 64:
          ++this.state.pos;return this.finishToken(types.at);

        case 96:
          // '`'
          ++this.state.pos;
          return this.finishToken(types.backQuote);

        case 48:
          // '0'
          var next = this.input.charCodeAt(this.state.pos + 1);
          if (next === 120 || next === 88) return this.readRadixNumber(16); // '0x', '0X' - hex number
          if (next === 111 || next === 79) return this.readRadixNumber(8); // '0o', '0O' - octal number
          if (next === 98 || next === 66) return this.readRadixNumber(2); // '0b', '0B' - binary number
        // Anything else beginning with a digit is an integer, octal
        // number, or float.
        case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
          // 1-9
          return this.readNumber(false);

        // Quotes produce strings.
        case 34:case 39:
          // '"', "'"
          return this.readString(code);

        // Operators are parsed inline in tiny state machines. '=' (61) is
        // often referred to. `finishOp` simply skips the amount of
        // characters it is given as second argument, and returns a token
        // of the type given by its first argument.

        case 47:
          // '/'
          return this.readToken_slash();

        case 37:case 42:
          // '%*'
          return this.readToken_mult_modulo(code);

        case 124:case 38:
          // '|&'
          return this.readToken_pipe_amp(code);

        case 94:
          // '^'
          return this.readToken_caret();

        case 43:case 45:
          // '+-'
          return this.readToken_plus_min(code);

        case 60:case 62:
          // '<>'
          return this.readToken_lt_gt(code);

        case 61:case 33:
          // '=!'
          return this.readToken_eq_excl(code);

        case 126:
          // '~'
          return this.finishOp(types.prefix, 1);
      }

      this.raise(this.state.pos, "Unexpected character '" + codePointToString(code) + "'");
    };

    Tokenizer.prototype.finishOp = function finishOp(type, size) {
      var str = this.input.slice(this.state.pos, this.state.pos + size);
      this.state.pos += size;
      return this.finishToken(type, str);
    };

    Tokenizer.prototype.readRegexp = function readRegexp() {
      var start = this.state.pos;
      var escaped = void 0,
          inClass = void 0;
      for (;;) {
        if (this.state.pos >= this.input.length) this.raise(start, "Unterminated regular expression");
        var ch = this.input.charAt(this.state.pos);
        if (lineBreak.test(ch)) {
          this.raise(start, "Unterminated regular expression");
        }
        if (escaped) {
          escaped = false;
        } else {
          if (ch === "[") {
            inClass = true;
          } else if (ch === "]" && inClass) {
            inClass = false;
          } else if (ch === "/" && !inClass) {
            break;
          }
          escaped = ch === "\\";
        }
        ++this.state.pos;
      }
      var content = this.input.slice(start, this.state.pos);
      ++this.state.pos;
      // Need to use `readWord1` because '\uXXXX' sequences are allowed
      // here (don't ask).
      var mods = this.readWord1();
      if (mods) {
        var validFlags = /^[gmsiyu]*$/;
        if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag");
      }
      return this.finishToken(types.regexp, {
        pattern: content,
        flags: mods
      });
    };

    // Read an integer in the given radix. Return null if zero digits
    // were read, the integer value otherwise. When `len` is given, this
    // will return `null` unless the integer has exactly `len` digits.

    Tokenizer.prototype.readInt = function readInt(radix, len) {
      var start = this.state.pos;
      var total = 0;

      for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {
        var code = this.input.charCodeAt(this.state.pos);
        var val = void 0;
        if (code >= 97) {
          val = code - 97 + 10; // a
        } else if (code >= 65) {
          val = code - 65 + 10; // A
        } else if (code >= 48 && code <= 57) {
          val = code - 48; // 0-9
        } else {
          val = Infinity;
        }
        if (val >= radix) break;
        ++this.state.pos;
        total = total * radix + val;
      }
      if (this.state.pos === start || len != null && this.state.pos - start !== len) return null;

      return total;
    };

    Tokenizer.prototype.readRadixNumber = function readRadixNumber(radix) {
      this.state.pos += 2; // 0x
      var val = this.readInt(radix);
      if (val == null) this.raise(this.state.start + 2, "Expected number in radix " + radix);
      if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.state.pos, "Identifier directly after number");
      return this.finishToken(types.num, val);
    };

    // Read an integer, octal integer, or floating-point number.

    Tokenizer.prototype.readNumber = function readNumber(startsWithDot) {
      var start = this.state.pos;
      var octal = this.input.charCodeAt(start) === 48; // '0'
      var isFloat = false;

      if (!startsWithDot && this.readInt(10) === null) this.raise(start, "Invalid number");
      if (octal && this.state.pos == start + 1) octal = false; // number === 0

      var next = this.input.charCodeAt(this.state.pos);
      if (next === 46 && !octal) {
        // '.'
        ++this.state.pos;
        this.readInt(10);
        isFloat = true;
        next = this.input.charCodeAt(this.state.pos);
      }

      if ((next === 69 || next === 101) && !octal) {
        // 'eE'
        next = this.input.charCodeAt(++this.state.pos);
        if (next === 43 || next === 45) ++this.state.pos; // '+-'
        if (this.readInt(10) === null) this.raise(start, "Invalid number");
        isFloat = true;
      }

      if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.state.pos, "Identifier directly after number");

      var str = this.input.slice(start, this.state.pos);
      var val = void 0;
      if (isFloat) {
        val = parseFloat(str);
      } else if (!octal || str.length === 1) {
        val = parseInt(str, 10);
      } else if (this.state.strict) {
        this.raise(start, "Invalid number");
      } else if (/[89]/.test(str)) {
        val = parseInt(str, 10);
      } else {
        val = parseInt(str, 8);
      }
      return this.finishToken(types.num, val);
    };

    // Read a string value, interpreting backslash-escapes.

    Tokenizer.prototype.readCodePoint = function readCodePoint(throwOnInvalid) {
      var ch = this.input.charCodeAt(this.state.pos);
      var code = void 0;

      if (ch === 123) {
        // '{'
        var codePos = ++this.state.pos;
        code = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos, throwOnInvalid);
        ++this.state.pos;
        if (code === null) {
          --this.state.invalidTemplateEscapePosition; // to point to the '\'' instead of the 'u'
        } else if (code > 0x10FFFF) {
          if (throwOnInvalid) {
            this.raise(codePos, "Code point out of bounds");
          } else {
            this.state.invalidTemplateEscapePosition = codePos - 2;
            return null;
          }
        }
      } else {
        code = this.readHexChar(4, throwOnInvalid);
      }
      return code;
    };

    Tokenizer.prototype.readString = function readString(quote) {
      var out = "",
          chunkStart = ++this.state.pos;
      for (;;) {
        if (this.state.pos >= this.input.length) this.raise(this.state.start, "Unterminated string constant");
        var ch = this.input.charCodeAt(this.state.pos);
        if (ch === quote) break;
        if (ch === 92) {
          // '\'
          out += this.input.slice(chunkStart, this.state.pos);
          out += this.readEscapedChar(false);
          chunkStart = this.state.pos;
        } else {
          if (isNewLine(ch)) this.raise(this.state.start, "Unterminated string constant");
          ++this.state.pos;
        }
      }
      out += this.input.slice(chunkStart, this.state.pos++);
      return this.finishToken(types.string, out);
    };

    // Reads template string tokens.

    Tokenizer.prototype.readTmplToken = function readTmplToken() {
      var out = "",
          chunkStart = this.state.pos,
          containsInvalid = false;
      for (;;) {
        if (this.state.pos >= this.input.length) this.raise(this.state.start, "Unterminated template");
        var ch = this.input.charCodeAt(this.state.pos);
        if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {
          // '`', '${'
          if (this.state.pos === this.state.start && this.match(types.template)) {
            if (ch === 36) {
              this.state.pos += 2;
              return this.finishToken(types.dollarBraceL);
            } else {
              ++this.state.pos;
              return this.finishToken(types.backQuote);
            }
          }
          out += this.input.slice(chunkStart, this.state.pos);
          return this.finishToken(types.template, containsInvalid ? null : out);
        }
        if (ch === 92) {
          // '\'
          out += this.input.slice(chunkStart, this.state.pos);
          var escaped = this.readEscapedChar(true);
          if (escaped === null) {
            containsInvalid = true;
          } else {
            out += escaped;
          }
          chunkStart = this.state.pos;
        } else if (isNewLine(ch)) {
          out += this.input.slice(chunkStart, this.state.pos);
          ++this.state.pos;
          switch (ch) {
            case 13:
              if (this.input.charCodeAt(this.state.pos) === 10) ++this.state.pos;
            case 10:
              out += "\n";
              break;
            default:
              out += String.fromCharCode(ch);
              break;
          }
          ++this.state.curLine;
          this.state.lineStart = this.state.pos;
          chunkStart = this.state.pos;
        } else {
          ++this.state.pos;
        }
      }
    };

    // Used to read escaped characters

    Tokenizer.prototype.readEscapedChar = function readEscapedChar(inTemplate) {
      var throwOnInvalid = !inTemplate;
      var ch = this.input.charCodeAt(++this.state.pos);
      ++this.state.pos;
      switch (ch) {
        case 110:
          return "\n"; // 'n' -> '\n'
        case 114:
          return "\r"; // 'r' -> '\r'
        case 120:
          {
            // 'x'
            var code = this.readHexChar(2, throwOnInvalid);
            return code === null ? null : String.fromCharCode(code);
          }
        case 117:
          {
            // 'u'
            var _code = this.readCodePoint(throwOnInvalid);
            return _code === null ? null : codePointToString(_code);
          }
        case 116:
          return "\t"; // 't' -> '\t'
        case 98:
          return "\b"; // 'b' -> '\b'
        case 118:
          return "\x0B"; // 'v' -> '\u000b'
        case 102:
          return "\f"; // 'f' -> '\f'
        case 13:
          if (this.input.charCodeAt(this.state.pos) === 10) ++this.state.pos; // '\r\n'
        case 10:
          // ' \n'
          this.state.lineStart = this.state.pos;
          ++this.state.curLine;
          return "";
        default:
          if (ch >= 48 && ch <= 55) {
            var codePos = this.state.pos - 1;
            var octalStr = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0];
            var octal = parseInt(octalStr, 8);
            if (octal > 255) {
              octalStr = octalStr.slice(0, -1);
              octal = parseInt(octalStr, 8);
            }
            if (octal > 0) {
              if (inTemplate) {
                this.state.invalidTemplateEscapePosition = codePos;
                return null;
              } else if (this.state.strict) {
                this.raise(codePos, "Octal literal in strict mode");
              } else if (!this.state.containsOctal) {
                // These properties are only used to throw an error for an octal which occurs
                // in a directive which occurs prior to a "use strict" directive.
                this.state.containsOctal = true;
                this.state.octalPosition = codePos;
              }
            }
            this.state.pos += octalStr.length - 1;
            return String.fromCharCode(octal);
          }
          return String.fromCharCode(ch);
      }
    };

    // Used to read character escape sequences ('\x', '\u').

    Tokenizer.prototype.readHexChar = function readHexChar(len, throwOnInvalid) {
      var codePos = this.state.pos;
      var n = this.readInt(16, len);
      if (n === null) {
        if (throwOnInvalid) {
          this.raise(codePos, "Bad character escape sequence");
        } else {
          this.state.pos = codePos - 1;
          this.state.invalidTemplateEscapePosition = codePos - 1;
        }
      }
      return n;
    };

    // Read an identifier, and return it as a string. Sets `this.state.containsEsc`
    // to whether the word contained a '\u' escape.
    //
    // Incrementally adds only escaped chars, adding other chunks as-is
    // as a micro-optimization.

    Tokenizer.prototype.readWord1 = function readWord1() {
      this.state.containsEsc = false;
      var word = "",
          first = true,
          chunkStart = this.state.pos;
      while (this.state.pos < this.input.length) {
        var ch = this.fullCharCodeAtPos();
        if (isIdentifierChar(ch)) {
          this.state.pos += ch <= 0xffff ? 1 : 2;
        } else if (ch === 92) {
          // "\"
          this.state.containsEsc = true;

          word += this.input.slice(chunkStart, this.state.pos);
          var escStart = this.state.pos;

          if (this.input.charCodeAt(++this.state.pos) !== 117) {
            // "u"
            this.raise(this.state.pos, "Expecting Unicode escape sequence \\uXXXX");
          }

          ++this.state.pos;
          var esc = this.readCodePoint(true);
          if (!(first ? isIdentifierStart : isIdentifierChar)(esc, true)) {
            this.raise(escStart, "Invalid Unicode escape");
          }

          word += codePointToString(esc);
          chunkStart = this.state.pos;
        } else {
          break;
        }
        first = false;
      }
      return word + this.input.slice(chunkStart, this.state.pos);
    };

    // Read an identifier or keyword token. Will check for reserved
    // words when necessary.

    Tokenizer.prototype.readWord = function readWord() {
      var word = this.readWord1();
      var type = types.name;
      if (!this.state.containsEsc && this.isKeyword(word)) {
        type = keywords[word];
      }
      return this.finishToken(type, word);
    };

    Tokenizer.prototype.braceIsBlock = function braceIsBlock(prevType) {
      if (prevType === types.colon) {
        var parent = this.curContext();
        if (parent === types$1.braceStatement || parent === types$1.braceExpression) {
          return !parent.isExpr;
        }
      }

      if (prevType === types._return) {
        return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
      }

      if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR) {
        return true;
      }

      if (prevType === types.braceL) {
        return this.curContext() === types$1.braceStatement;
      }

      return !this.state.exprAllowed;
    };

    Tokenizer.prototype.updateContext = function updateContext(prevType) {
      var type = this.state.type;
      var update = void 0;

      if (type.keyword && prevType === types.dot) {
        this.state.exprAllowed = false;
      } else if (update = type.updateContext) {
        update.call(this, prevType);
      } else {
        this.state.exprAllowed = type.beforeExpr;
      }
    };

    return Tokenizer;
  }();

  var plugins = {};
  var frozenDeprecatedWildcardPluginList = ["jsx", "doExpressions", "objectRestSpread", "decorators", "classProperties", "exportExtensions", "asyncGenerators", "functionBind", "functionSent", "dynamicImport", "flow"];

  var Parser = function (_Tokenizer) {
    inherits(Parser, _Tokenizer);

    function Parser(options, input) {
      classCallCheck(this, Parser);

      options = getOptions(options);

      var _this = possibleConstructorReturn(this, _Tokenizer.call(this, options, input));

      _this.options = options;
      _this.inModule = _this.options.sourceType === "module";
      _this.input = input;
      _this.plugins = _this.loadPlugins(_this.options.plugins);
      _this.filename = options.sourceFilename;

      // If enabled, skip leading hashbang line.
      if (_this.state.pos === 0 && _this.input[0] === "#" && _this.input[1] === "!") {
        _this.skipLineComment(2);
      }
      return _this;
    }

    Parser.prototype.isReservedWord = function isReservedWord(word) {
      if (word === "await") {
        return this.inModule;
      } else {
        return reservedWords[6](word);
      }
    };

    Parser.prototype.hasPlugin = function hasPlugin(name) {
      if (this.plugins["*"] && frozenDeprecatedWildcardPluginList.indexOf(name) > -1) {
        return true;
      }

      return !!this.plugins[name];
    };

    Parser.prototype.extend = function extend(name, f) {
      this[name] = f(this[name]);
    };

    Parser.prototype.loadAllPlugins = function loadAllPlugins() {
      var _this2 = this;

      // ensure flow plugin loads last, also ensure estree is not loaded with *
      var pluginNames = Object.keys(plugins).filter(function (name) {
        return name !== "flow" && name !== "estree";
      });
      pluginNames.push("flow");

      pluginNames.forEach(function (name) {
        var plugin = plugins[name];
        if (plugin) plugin(_this2);
      });
    };

    Parser.prototype.loadPlugins = function loadPlugins(pluginList) {
      // TODO: Deprecate "*" option in next major version of Babylon
      if (pluginList.indexOf("*") >= 0) {
        this.loadAllPlugins();

        return { "*": true };
      }

      var pluginMap = {};

      if (pluginList.indexOf("flow") >= 0) {
        // ensure flow plugin loads last
        pluginList = pluginList.filter(function (plugin) {
          return plugin !== "flow";
        });
        pluginList.push("flow");
      }

      if (pluginList.indexOf("estree") >= 0) {
        // ensure estree plugin loads first
        pluginList = pluginList.filter(function (plugin) {
          return plugin !== "estree";
        });
        pluginList.unshift("estree");
      }

      for (var _iterator = pluginList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var name = _ref;

        if (!pluginMap[name]) {
          pluginMap[name] = true;

          var plugin = plugins[name];
          if (plugin) plugin(this);
        }
      }

      return pluginMap;
    };

    Parser.prototype.parse = function parse() {
      var file = this.startNode();
      var program = this.startNode();
      this.nextToken();
      return this.parseTopLevel(file, program);
    };

    return Parser;
  }(Tokenizer);

  var pp = Parser.prototype;

  // ## Parser utilities

  // TODO

  pp.addExtra = function (node, key, val) {
    if (!node) return;

    var extra = node.extra = node.extra || {};
    extra[key] = val;
  };

  // TODO

  pp.isRelational = function (op) {
    return this.match(types.relational) && this.state.value === op;
  };

  // TODO

  pp.expectRelational = function (op) {
    if (this.isRelational(op)) {
      this.next();
    } else {
      this.unexpected(null, types.relational);
    }
  };

  // Tests whether parsed token is a contextual keyword.

  pp.isContextual = function (name) {
    return this.match(types.name) && this.state.value === name;
  };

  // Consumes contextual keyword if possible.

  pp.eatContextual = function (name) {
    return this.state.value === name && this.eat(types.name);
  };

  // Asserts that following token is given contextual keyword.

  pp.expectContextual = function (name, message) {
    if (!this.eatContextual(name)) this.unexpected(null, message);
  };

  // Test whether a semicolon can be inserted at the current position.

  pp.canInsertSemicolon = function () {
    return this.match(types.eof) || this.match(types.braceR) || lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
  };

  // TODO

  pp.isLineTerminator = function () {
    return this.eat(types.semi) || this.canInsertSemicolon();
  };

  // Consume a semicolon, or, failing that, see if we are allowed to
  // pretend that there is a semicolon at this position.

  pp.semicolon = function () {
    if (!this.isLineTerminator()) this.unexpected(null, types.semi);
  };

  // Expect a token of a given type. If found, consume it, otherwise,
  // raise an unexpected token error at given pos.

  pp.expect = function (type, pos) {
    return this.eat(type) || this.unexpected(pos, type);
  };

  // Raise an unexpected token error. Can take the expected token type
  // instead of a message string.

  pp.unexpected = function (pos) {
    var messageOrType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "Unexpected token";

    if (messageOrType && (typeof messageOrType === "undefined" ? "undefined" : _typeof(messageOrType)) === "object" && messageOrType.label) {
      messageOrType = "Unexpected token, expected " + messageOrType.label;
    }
    this.raise(pos != null ? pos : this.state.start, messageOrType);
  };

  /* eslint max-len: 0 */

  var pp$1 = Parser.prototype;

  // ### Statement parsing

  // Parse a program. Initializes the parser, reads any number of
  // statements, and wraps them in a Program node.  Optionally takes a
  // `program` argument.  If present, the statements will be appended
  // to its body instead of creating a new node.

  pp$1.parseTopLevel = function (file, program) {
    program.sourceType = this.options.sourceType;

    this.parseBlockBody(program, true, true, types.eof);

    file.program = this.finishNode(program, "Program");
    file.comments = this.state.comments;
    file.tokens = this.state.tokens;

    return this.finishNode(file, "File");
  };

  var loopLabel = { kind: "loop" };
  var switchLabel = { kind: "switch" };

  // TODO

  pp$1.stmtToDirective = function (stmt) {
    var expr = stmt.expression;

    var directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);
    var directive = this.startNodeAt(stmt.start, stmt.loc.start);

    var raw = this.input.slice(expr.start, expr.end);
    var val = directiveLiteral.value = raw.slice(1, -1); // remove quotes

    this.addExtra(directiveLiteral, "raw", raw);
    this.addExtra(directiveLiteral, "rawValue", val);

    directive.value = this.finishNodeAt(directiveLiteral, "DirectiveLiteral", expr.end, expr.loc.end);

    return this.finishNodeAt(directive, "Directive", stmt.end, stmt.loc.end);
  };

  // Parse a single statement.
  //
  // If expecting a statement and finding a slash operator, parse a
  // regular expression literal. This is to handle cases like
  // `if (foo) /blah/.exec(foo)`, where looking at the previous token
  // does not help.

  pp$1.parseStatement = function (declaration, topLevel) {
    if (this.match(types.at)) {
      this.parseDecorators(true);
    }

    var starttype = this.state.type;
    var node = this.startNode();

    // Most types of statements are recognized by the keyword they
    // start with. Many are trivial to parse, some require a bit of
    // complexity.

    switch (starttype) {
      case types._break:case types._continue:
        return this.parseBreakContinueStatement(node, starttype.keyword);
      case types._debugger:
        return this.parseDebuggerStatement(node);
      case types._do:
        return this.parseDoStatement(node);
      case types._for:
        return this.parseForStatement(node);
      case types._function:
        if (!declaration) this.unexpected();
        return this.parseFunctionStatement(node);

      case types._class:
        if (!declaration) this.unexpected();
        return this.parseClass(node, true);

      case types._if:
        return this.parseIfStatement(node);
      case types._return:
        return this.parseReturnStatement(node);
      case types._switch:
        return this.parseSwitchStatement(node);
      case types._throw:
        return this.parseThrowStatement(node);
      case types._try:
        return this.parseTryStatement(node);

      case types._let:
      case types._const:
        if (!declaration) this.unexpected(); // NOTE: falls through to _var

      case types._var:
        return this.parseVarStatement(node, starttype);

      case types._while:
        return this.parseWhileStatement(node);
      case types._with:
        return this.parseWithStatement(node);
      case types.braceL:
        return this.parseBlock();
      case types.semi:
        return this.parseEmptyStatement(node);
      case types._export:
      case types._import:
        if (this.hasPlugin("dynamicImport") && this.lookahead().type === types.parenL) break;

        if (!this.options.allowImportExportEverywhere) {
          if (!topLevel) {
            this.raise(this.state.start, "'import' and 'export' may only appear at the top level");
          }

          if (!this.inModule) {
            this.raise(this.state.start, "'import' and 'export' may appear only with 'sourceType: \"module\"'");
          }
        }
        return starttype === types._import ? this.parseImport(node) : this.parseExport(node);

      case types.name:
        if (this.state.value === "async") {
          // peek ahead and see if next token is a function
          var state = this.state.clone();
          this.next();
          if (this.match(types._function) && !this.canInsertSemicolon()) {
            this.expect(types._function);
            return this.parseFunction(node, true, false, true);
          } else {
            this.state = state;
          }
        }
    }

    // If the statement does not start with a statement keyword or a
    // brace, it's an ExpressionStatement or LabeledStatement. We
    // simply start parsing an expression, and afterwards, if the
    // next token is a colon and the expression was a simple
    // Identifier node, we switch to interpreting it as a label.
    var maybeName = this.state.value;
    var expr = this.parseExpression();

    if (starttype === types.name && expr.type === "Identifier" && this.eat(types.colon)) {
      return this.parseLabeledStatement(node, maybeName, expr);
    } else {
      return this.parseExpressionStatement(node, expr);
    }
  };

  pp$1.takeDecorators = function (node) {
    if (this.state.decorators.length) {
      node.decorators = this.state.decorators;
      this.state.decorators = [];
    }
  };

  pp$1.parseDecorators = function (allowExport) {
    while (this.match(types.at)) {
      var decorator = this.parseDecorator();
      this.state.decorators.push(decorator);
    }

    if (allowExport && this.match(types._export)) {
      return;
    }

    if (!this.match(types._class)) {
      this.raise(this.state.start, "Leading decorators must be attached to a class declaration");
    }
  };

  pp$1.parseDecorator = function () {
    if (!this.hasPlugin("decorators")) {
      this.unexpected();
    }
    var node = this.startNode();
    this.next();
    node.expression = this.parseMaybeAssign();
    return this.finishNode(node, "Decorator");
  };

  pp$1.parseBreakContinueStatement = function (node, keyword) {
    var isBreak = keyword === "break";
    this.next();

    if (this.isLineTerminator()) {
      node.label = null;
    } else if (!this.match(types.name)) {
      this.unexpected();
    } else {
      node.label = this.parseIdentifier();
      this.semicolon();
    }

    // Verify that there is an actual destination to break or
    // continue to.
    var i = void 0;
    for (i = 0; i < this.state.labels.length; ++i) {
      var lab = this.state.labels[i];
      if (node.label == null || lab.name === node.label.name) {
        if (lab.kind != null && (isBreak || lab.kind === "loop")) break;
        if (node.label && isBreak) break;
      }
    }
    if (i === this.state.labels.length) this.raise(node.start, "Unsyntactic " + keyword);
    return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");
  };

  pp$1.parseDebuggerStatement = function (node) {
    this.next();
    this.semicolon();
    return this.finishNode(node, "DebuggerStatement");
  };

  pp$1.parseDoStatement = function (node) {
    this.next();
    this.state.labels.push(loopLabel);
    node.body = this.parseStatement(false);
    this.state.labels.pop();
    this.expect(types._while);
    node.test = this.parseParenExpression();
    this.eat(types.semi);
    return this.finishNode(node, "DoWhileStatement");
  };

  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`
  // loop is non-trivial. Basically, we have to parse the init `var`
  // statement or expression, disallowing the `in` operator (see
  // the second parameter to `parseExpression`), and then check
  // whether the next token is `in` or `of`. When there is no init
  // part (semicolon immediately after the opening parenthesis), it
  // is a regular `for` loop.

  pp$1.parseForStatement = function (node) {
    this.next();
    this.state.labels.push(loopLabel);

    var forAwait = false;
    if (this.hasPlugin("asyncGenerators") && this.state.inAsync && this.isContextual("await")) {
      forAwait = true;
      this.next();
    }
    this.expect(types.parenL);

    if (this.match(types.semi)) {
      if (forAwait) {
        this.unexpected();
      }
      return this.parseFor(node, null);
    }

    if (this.match(types._var) || this.match(types._let) || this.match(types._const)) {
      var _init = this.startNode();
      var varKind = this.state.type;
      this.next();
      this.parseVar(_init, true, varKind);
      this.finishNode(_init, "VariableDeclaration");

      if (this.match(types._in) || this.isContextual("of")) {
        if (_init.declarations.length === 1 && !_init.declarations[0].init) {
          return this.parseForIn(node, _init, forAwait);
        }
      }
      if (forAwait) {
        this.unexpected();
      }
      return this.parseFor(node, _init);
    }

    var refShorthandDefaultPos = { start: 0 };
    var init = this.parseExpression(true, refShorthandDefaultPos);
    if (this.match(types._in) || this.isContextual("of")) {
      var description = this.isContextual("of") ? "for-of statement" : "for-in statement";
      this.toAssignable(init, undefined, description);
      this.checkLVal(init, undefined, undefined, description);
      return this.parseForIn(node, init, forAwait);
    } else if (refShorthandDefaultPos.start) {
      this.unexpected(refShorthandDefaultPos.start);
    }
    if (forAwait) {
      this.unexpected();
    }
    return this.parseFor(node, init);
  };

  pp$1.parseFunctionStatement = function (node) {
    this.next();
    return this.parseFunction(node, true);
  };

  pp$1.parseIfStatement = function (node) {
    this.next();
    node.test = this.parseParenExpression();
    node.consequent = this.parseStatement(false);
    node.alternate = this.eat(types._else) ? this.parseStatement(false) : null;
    return this.finishNode(node, "IfStatement");
  };

  pp$1.parseReturnStatement = function (node) {
    if (!this.state.inFunction && !this.options.allowReturnOutsideFunction) {
      this.raise(this.state.start, "'return' outside of function");
    }

    this.next();

    // In `return` (and `break`/`continue`), the keywords with
    // optional arguments, we eagerly look for a semicolon or the
    // possibility to insert one.

    if (this.isLineTerminator()) {
      node.argument = null;
    } else {
      node.argument = this.parseExpression();
      this.semicolon();
    }

    return this.finishNode(node, "ReturnStatement");
  };

  pp$1.parseSwitchStatement = function (node) {
    this.next();
    node.discriminant = this.parseParenExpression();
    node.cases = [];
    this.expect(types.braceL);
    this.state.labels.push(switchLabel);

    // Statements under must be grouped (by label) in SwitchCase
    // nodes. `cur` is used to keep the node that we are currently
    // adding statements to.

    var cur = void 0;
    for (var sawDefault; !this.match(types.braceR);) {
      if (this.match(types._case) || this.match(types._default)) {
        var isCase = this.match(types._case);
        if (cur) this.finishNode(cur, "SwitchCase");
        node.cases.push(cur = this.startNode());
        cur.consequent = [];
        this.next();
        if (isCase) {
          cur.test = this.parseExpression();
        } else {
          if (sawDefault) this.raise(this.state.lastTokStart, "Multiple default clauses");
          sawDefault = true;
          cur.test = null;
        }
        this.expect(types.colon);
      } else {
        if (cur) {
          cur.consequent.push(this.parseStatement(true));
        } else {
          this.unexpected();
        }
      }
    }
    if (cur) this.finishNode(cur, "SwitchCase");
    this.next(); // Closing brace
    this.state.labels.pop();
    return this.finishNode(node, "SwitchStatement");
  };

  pp$1.parseThrowStatement = function (node) {
    this.next();
    if (lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))) this.raise(this.state.lastTokEnd, "Illegal newline after throw");
    node.argument = this.parseExpression();
    this.semicolon();
    return this.finishNode(node, "ThrowStatement");
  };

  // Reused empty array added for node fields that are always empty.

  var empty = [];

  pp$1.parseTryStatement = function (node) {
    this.next();

    node.block = this.parseBlock();
    node.handler = null;

    if (this.match(types._catch)) {
      var clause = this.startNode();
      this.next();

      this.expect(types.parenL);
      clause.param = this.parseBindingAtom();
      this.checkLVal(clause.param, true, Object.create(null), "catch clause");
      this.expect(types.parenR);

      clause.body = this.parseBlock();
      node.handler = this.finishNode(clause, "CatchClause");
    }

    node.guardedHandlers = empty;
    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;

    if (!node.handler && !node.finalizer) {
      this.raise(node.start, "Missing catch or finally clause");
    }

    return this.finishNode(node, "TryStatement");
  };

  pp$1.parseVarStatement = function (node, kind) {
    this.next();
    this.parseVar(node, false, kind);
    this.semicolon();
    return this.finishNode(node, "VariableDeclaration");
  };

  pp$1.parseWhileStatement = function (node) {
    this.next();
    node.test = this.parseParenExpression();
    this.state.labels.push(loopLabel);
    node.body = this.parseStatement(false);
    this.state.labels.pop();
    return this.finishNode(node, "WhileStatement");
  };

  pp$1.parseWithStatement = function (node) {
    if (this.state.strict) this.raise(this.state.start, "'with' in strict mode");
    this.next();
    node.object = this.parseParenExpression();
    node.body = this.parseStatement(false);
    return this.finishNode(node, "WithStatement");
  };

  pp$1.parseEmptyStatement = function (node) {
    this.next();
    return this.finishNode(node, "EmptyStatement");
  };

  pp$1.parseLabeledStatement = function (node, maybeName, expr) {
    for (var _iterator = this.state.labels, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var _label = _ref;

      if (_label.name === maybeName) {
        this.raise(expr.start, "Label '" + maybeName + "' is already declared");
      }
    }

    var kind = this.state.type.isLoop ? "loop" : this.match(types._switch) ? "switch" : null;
    for (var i = this.state.labels.length - 1; i >= 0; i--) {
      var label = this.state.labels[i];
      if (label.statementStart === node.start) {
        label.statementStart = this.state.start;
        label.kind = kind;
      } else {
        break;
      }
    }

    this.state.labels.push({ name: maybeName, kind: kind, statementStart: this.state.start });
    node.body = this.parseStatement(true);
    this.state.labels.pop();
    node.label = expr;
    return this.finishNode(node, "LabeledStatement");
  };

  pp$1.parseExpressionStatement = function (node, expr) {
    node.expression = expr;
    this.semicolon();
    return this.finishNode(node, "ExpressionStatement");
  };

  // Parse a semicolon-enclosed block of statements, handling `"use
  // strict"` declarations when `allowStrict` is true (used for
  // function bodies).

  pp$1.parseBlock = function (allowDirectives) {
    var node = this.startNode();
    this.expect(types.braceL);
    this.parseBlockBody(node, allowDirectives, false, types.braceR);
    return this.finishNode(node, "BlockStatement");
  };

  pp$1.isValidDirective = function (stmt) {
    return stmt.type === "ExpressionStatement" && stmt.expression.type === "StringLiteral" && !stmt.expression.extra.parenthesized;
  };

  pp$1.parseBlockBody = function (node, allowDirectives, topLevel, end) {
    node.body = [];
    node.directives = [];

    var parsedNonDirective = false;
    var oldStrict = void 0;
    var octalPosition = void 0;

    while (!this.eat(end)) {
      if (!parsedNonDirective && this.state.containsOctal && !octalPosition) {
        octalPosition = this.state.octalPosition;
      }

      var stmt = this.parseStatement(true, topLevel);

      if (allowDirectives && !parsedNonDirective && this.isValidDirective(stmt)) {
        var directive = this.stmtToDirective(stmt);
        node.directives.push(directive);

        if (oldStrict === undefined && directive.value.value === "use strict") {
          oldStrict = this.state.strict;
          this.setStrict(true);

          if (octalPosition) {
            this.raise(octalPosition, "Octal literal in strict mode");
          }
        }

        continue;
      }

      parsedNonDirective = true;
      node.body.push(stmt);
    }

    if (oldStrict === false) {
      this.setStrict(false);
    }
  };

  // Parse a regular `for` loop. The disambiguation code in
  // `parseStatement` will already have parsed the init statement or
  // expression.

  pp$1.parseFor = function (node, init) {
    node.init = init;
    this.expect(types.semi);
    node.test = this.match(types.semi) ? null : this.parseExpression();
    this.expect(types.semi);
    node.update = this.match(types.parenR) ? null : this.parseExpression();
    this.expect(types.parenR);
    node.body = this.parseStatement(false);
    this.state.labels.pop();
    return this.finishNode(node, "ForStatement");
  };

  // Parse a `for`/`in` and `for`/`of` loop, which are almost
  // same from parser's perspective.

  pp$1.parseForIn = function (node, init, forAwait) {
    var type = void 0;
    if (forAwait) {
      this.eatContextual("of");
      type = "ForAwaitStatement";
    } else {
      type = this.match(types._in) ? "ForInStatement" : "ForOfStatement";
      this.next();
    }
    node.left = init;
    node.right = this.parseExpression();
    this.expect(types.parenR);
    node.body = this.parseStatement(false);
    this.state.labels.pop();
    return this.finishNode(node, type);
  };

  // Parse a list of variable declarations.

  pp$1.parseVar = function (node, isFor, kind) {
    node.declarations = [];
    node.kind = kind.keyword;
    for (;;) {
      var decl = this.startNode();
      this.parseVarHead(decl);
      if (this.eat(types.eq)) {
        decl.init = this.parseMaybeAssign(isFor);
      } else if (kind === types._const && !(this.match(types._in) || this.isContextual("of"))) {
        this.unexpected();
      } else if (decl.id.type !== "Identifier" && !(isFor && (this.match(types._in) || this.isContextual("of")))) {
        this.raise(this.state.lastTokEnd, "Complex binding patterns require an initialization value");
      } else {
        decl.init = null;
      }
      node.declarations.push(this.finishNode(decl, "VariableDeclarator"));
      if (!this.eat(types.comma)) break;
    }
    return node;
  };

  pp$1.parseVarHead = function (decl) {
    decl.id = this.parseBindingAtom();
    this.checkLVal(decl.id, true, undefined, "variable declaration");
  };

  // Parse a function declaration or literal (depending on the
  // `isStatement` parameter).

  pp$1.parseFunction = function (node, isStatement, allowExpressionBody, isAsync, optionalId) {
    var oldInMethod = this.state.inMethod;
    this.state.inMethod = false;

    this.initFunction(node, isAsync);

    if (this.match(types.star)) {
      if (node.async && !this.hasPlugin("asyncGenerators")) {
        this.unexpected();
      } else {
        node.generator = true;
        this.next();
      }
    }

    if (isStatement && !optionalId && !this.match(types.name) && !this.match(types._yield)) {
      this.unexpected();
    }

    if (this.match(types.name) || this.match(types._yield)) {
      node.id = this.parseBindingIdentifier();
    }

    this.parseFunctionParams(node);
    this.parseFunctionBody(node, allowExpressionBody);

    this.state.inMethod = oldInMethod;

    return this.finishNode(node, isStatement ? "FunctionDeclaration" : "FunctionExpression");
  };

  pp$1.parseFunctionParams = function (node) {
    this.expect(types.parenL);
    node.params = this.parseBindingList(types.parenR);
  };

  // Parse a class declaration or literal (depending on the
  // `isStatement` parameter).

  pp$1.parseClass = function (node, isStatement, optionalId) {
    this.next();
    this.takeDecorators(node);
    this.parseClassId(node, isStatement, optionalId);
    this.parseClassSuper(node);
    this.parseClassBody(node);
    return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");
  };

  pp$1.isClassProperty = function () {
    return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);
  };

  pp$1.isClassMethod = function () {
    return this.match(types.parenL);
  };

  pp$1.isNonstaticConstructor = function (method) {
    return !method.computed && !method.static && (method.key.name === "constructor" || // Identifier
    method.key.value === "constructor" // Literal
    );
  };

  pp$1.parseClassBody = function (node) {
    // class bodies are implicitly strict
    var oldStrict = this.state.strict;
    this.state.strict = true;

    var hadConstructorCall = false;
    var hadConstructor = false;
    var decorators = [];
    var classBody = this.startNode();

    classBody.body = [];

    this.expect(types.braceL);

    while (!this.eat(types.braceR)) {
      if (this.eat(types.semi)) {
        if (decorators.length > 0) {
          this.raise(this.state.lastTokEnd, "Decorators must not be followed by a semicolon");
        }
        continue;
      }

      if (this.match(types.at)) {
        decorators.push(this.parseDecorator());
        continue;
      }

      var method = this.startNode();

      // steal the decorators if there are any
      if (decorators.length) {
        method.decorators = decorators;
        decorators = [];
      }

      method.static = false;
      if (this.match(types.name) && this.state.value === "static") {
        var key = this.parseIdentifier(true); // eats 'static'
        if (this.isClassMethod()) {
          // a method named 'static'
          method.kind = "method";
          method.computed = false;
          method.key = key;
          this.parseClassMethod(classBody, method, false, false);
          continue;
        } else if (this.isClassProperty()) {
          // a property named 'static'
          method.computed = false;
          method.key = key;
          classBody.body.push(this.parseClassProperty(method));
          continue;
        }
        // otherwise something static
        method.static = true;
      }

      if (this.eat(types.star)) {
        // a generator
        method.kind = "method";
        this.parsePropertyName(method);
        if (this.isNonstaticConstructor(method)) {
          this.raise(method.key.start, "Constructor can't be a generator");
        }
        if (!method.computed && method.static && (method.key.name === "prototype" || method.key.value === "prototype")) {
          this.raise(method.key.start, "Classes may not have static property named prototype");
        }
        this.parseClassMethod(classBody, method, true, false);
      } else {
        var isSimple = this.match(types.name);
        var _key = this.parsePropertyName(method);
        if (!method.computed && method.static && (method.key.name === "prototype" || method.key.value === "prototype")) {
          this.raise(method.key.start, "Classes may not have static property named prototype");
        }
        if (this.isClassMethod()) {
          // a normal method
          if (this.isNonstaticConstructor(method)) {
            if (hadConstructor) {
              this.raise(_key.start, "Duplicate constructor in the same class");
            } else if (method.decorators) {
              this.raise(method.start, "You can't attach decorators to a class constructor");
            }
            hadConstructor = true;
            method.kind = "constructor";
          } else {
            method.kind = "method";
          }
          this.parseClassMethod(classBody, method, false, false);
        } else if (this.isClassProperty()) {
          // a normal property
          if (this.isNonstaticConstructor(method)) {
            this.raise(method.key.start, "Classes may not have a non-static field named 'constructor'");
          }
          classBody.body.push(this.parseClassProperty(method));
        } else if (isSimple && _key.name === "async" && !this.isLineTerminator()) {
          // an async method
          var isGenerator = this.hasPlugin("asyncGenerators") && this.eat(types.star);
          method.kind = "method";
          this.parsePropertyName(method);
          if (this.isNonstaticConstructor(method)) {
            this.raise(method.key.start, "Constructor can't be an async function");
          }
          this.parseClassMethod(classBody, method, isGenerator, true);
        } else if (isSimple && (_key.name === "get" || _key.name === "set") && !(this.isLineTerminator() && this.match(types.star))) {
          // `get\n*` is an uninitialized property named 'get' followed by a generator.
          // a getter or setter
          method.kind = _key.name;
          this.parsePropertyName(method);
          if (this.isNonstaticConstructor(method)) {
            this.raise(method.key.start, "Constructor can't have get/set modifier");
          }
          this.parseClassMethod(classBody, method, false, false);
          this.checkGetterSetterParamCount(method);
        } else if (this.hasPlugin("classConstructorCall") && isSimple && _key.name === "call" && this.match(types.name) && this.state.value === "constructor") {
          // a (deprecated) call constructor
          if (hadConstructorCall) {
            this.raise(method.start, "Duplicate constructor call in the same class");
          } else if (method.decorators) {
            this.raise(method.start, "You can't attach decorators to a class constructor");
          }
          hadConstructorCall = true;
          method.kind = "constructorCall";
          this.parsePropertyName(method); // consume "constructor" and make it the method's name
          this.parseClassMethod(classBody, method, false, false);
        } else if (this.isLineTerminator()) {
          // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)
          if (this.isNonstaticConstructor(method)) {
            this.raise(method.key.start, "Classes may not have a non-static field named 'constructor'");
          }
          classBody.body.push(this.parseClassProperty(method));
        } else {
          this.unexpected();
        }
      }
    }

    if (decorators.length) {
      this.raise(this.state.start, "You have trailing decorators with no method");
    }

    node.body = this.finishNode(classBody, "ClassBody");

    this.state.strict = oldStrict;
  };

  pp$1.parseClassProperty = function (node) {
    this.state.inClassProperty = true;
    if (this.match(types.eq)) {
      if (!this.hasPlugin("classProperties")) this.unexpected();
      this.next();
      node.value = this.parseMaybeAssign();
    } else {
      node.value = null;
    }
    this.semicolon();
    this.state.inClassProperty = false;
    return this.finishNode(node, "ClassProperty");
  };

  pp$1.parseClassMethod = function (classBody, method, isGenerator, isAsync) {
    this.parseMethod(method, isGenerator, isAsync);
    classBody.body.push(this.finishNode(method, "ClassMethod"));
  };

  pp$1.parseClassId = function (node, isStatement, optionalId) {
    if (this.match(types.name)) {
      node.id = this.parseIdentifier();
    } else {
      if (optionalId || !isStatement) {
        node.id = null;
      } else {
        this.unexpected();
      }
    }
  };

  pp$1.parseClassSuper = function (node) {
    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;
  };

  // Parses module export declaration.

  pp$1.parseExport = function (node) {
    this.next();
    // export * from '...'
    if (this.match(types.star)) {
      var specifier = this.startNode();
      this.next();
      if (this.hasPlugin("exportExtensions") && this.eatContextual("as")) {
        specifier.exported = this.parseIdentifier();
        node.specifiers = [this.finishNode(specifier, "ExportNamespaceSpecifier")];
        this.parseExportSpecifiersMaybe(node);
        this.parseExportFrom(node, true);
      } else {
        this.parseExportFrom(node, true);
        return this.finishNode(node, "ExportAllDeclaration");
      }
    } else if (this.hasPlugin("exportExtensions") && this.isExportDefaultSpecifier()) {
      var _specifier = this.startNode();
      _specifier.exported = this.parseIdentifier(true);
      node.specifiers = [this.finishNode(_specifier, "ExportDefaultSpecifier")];
      if (this.match(types.comma) && this.lookahead().type === types.star) {
        this.expect(types.comma);
        var _specifier2 = this.startNode();
        this.expect(types.star);
        this.expectContextual("as");
        _specifier2.exported = this.parseIdentifier();
        node.specifiers.push(this.finishNode(_specifier2, "ExportNamespaceSpecifier"));
      } else {
        this.parseExportSpecifiersMaybe(node);
      }
      this.parseExportFrom(node, true);
    } else if (this.eat(types._default)) {
      // export default ...
      var expr = this.startNode();
      var needsSemi = false;
      if (this.eat(types._function)) {
        expr = this.parseFunction(expr, true, false, false, true);
      } else if (this.match(types._class)) {
        expr = this.parseClass(expr, true, true);
      } else {
        needsSemi = true;
        expr = this.parseMaybeAssign();
      }
      node.declaration = expr;
      if (needsSemi) this.semicolon();
      this.checkExport(node, true, true);
      return this.finishNode(node, "ExportDefaultDeclaration");
    } else if (this.shouldParseExportDeclaration()) {
      node.specifiers = [];
      node.source = null;
      node.declaration = this.parseExportDeclaration(node);
    } else {
      // export { x, y as z } [from '...']
      node.declaration = null;
      node.specifiers = this.parseExportSpecifiers();
      this.parseExportFrom(node);
    }
    this.checkExport(node, true);
    return this.finishNode(node, "ExportNamedDeclaration");
  };

  pp$1.parseExportDeclaration = function () {
    return this.parseStatement(true);
  };

  pp$1.isExportDefaultSpecifier = function () {
    if (this.match(types.name)) {
      return this.state.value !== "async";
    }

    if (!this.match(types._default)) {
      return false;
    }

    var lookahead = this.lookahead();
    return lookahead.type === types.comma || lookahead.type === types.name && lookahead.value === "from";
  };

  pp$1.parseExportSpecifiersMaybe = function (node) {
    if (this.eat(types.comma)) {
      node.specifiers = node.specifiers.concat(this.parseExportSpecifiers());
    }
  };

  pp$1.parseExportFrom = function (node, expect) {
    if (this.eatContextual("from")) {
      node.source = this.match(types.string) ? this.parseExprAtom() : this.unexpected();
      this.checkExport(node);
    } else {
      if (expect) {
        this.unexpected();
      } else {
        node.source = null;
      }
    }

    this.semicolon();
  };

  pp$1.shouldParseExportDeclaration = function () {
    return this.state.type.keyword === "var" || this.state.type.keyword === "const" || this.state.type.keyword === "let" || this.state.type.keyword === "function" || this.state.type.keyword === "class" || this.isContextual("async");
  };

  pp$1.checkExport = function (node, checkNames, isDefault) {
    if (checkNames) {
      // Check for duplicate exports
      if (isDefault) {
        // Default exports
        this.checkDuplicateExports(node, "default");
      } else if (node.specifiers && node.specifiers.length) {
        // Named exports
        for (var _iterator2 = node.specifiers, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
          var _ref2;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var specifier = _ref2;

          this.checkDuplicateExports(specifier, specifier.exported.name);
        }
      } else if (node.declaration) {
        // Exported declarations
        if (node.declaration.type === "FunctionDeclaration" || node.declaration.type === "ClassDeclaration") {
          this.checkDuplicateExports(node, node.declaration.id.name);
        } else if (node.declaration.type === "VariableDeclaration") {
          for (var _iterator3 = node.declaration.declarations, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
            var _ref3;

            if (_isArray3) {
              if (_i3 >= _iterator3.length) break;
              _ref3 = _iterator3[_i3++];
            } else {
              _i3 = _iterator3.next();
              if (_i3.done) break;
              _ref3 = _i3.value;
            }

            var declaration = _ref3;

            this.checkDeclaration(declaration.id);
          }
        }
      }
    }

    if (this.state.decorators.length) {
      var isClass = node.declaration && (node.declaration.type === "ClassDeclaration" || node.declaration.type === "ClassExpression");
      if (!node.declaration || !isClass) {
        this.raise(node.start, "You can only use decorators on an export when exporting a class");
      }
      this.takeDecorators(node.declaration);
    }
  };

  pp$1.checkDeclaration = function (node) {
    if (node.type === "ObjectPattern") {
      for (var _iterator4 = node.properties, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
        var _ref4;

        if (_isArray4) {
          if (_i4 >= _iterator4.length) break;
          _ref4 = _iterator4[_i4++];
        } else {
          _i4 = _iterator4.next();
          if (_i4.done) break;
          _ref4 = _i4.value;
        }

        var prop = _ref4;

        this.checkDeclaration(prop);
      }
    } else if (node.type === "ArrayPattern") {
      for (var _iterator5 = node.elements, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {
        var _ref5;

        if (_isArray5) {
          if (_i5 >= _iterator5.length) break;
          _ref5 = _iterator5[_i5++];
        } else {
          _i5 = _iterator5.next();
          if (_i5.done) break;
          _ref5 = _i5.value;
        }

        var elem = _ref5;

        if (elem) {
          this.checkDeclaration(elem);
        }
      }
    } else if (node.type === "ObjectProperty") {
      this.checkDeclaration(node.value);
    } else if (node.type === "RestElement" || node.type === "RestProperty") {
      this.checkDeclaration(node.argument);
    } else if (node.type === "Identifier") {
      this.checkDuplicateExports(node, node.name);
    }
  };

  pp$1.checkDuplicateExports = function (node, name) {
    if (this.state.exportedIdentifiers.indexOf(name) > -1) {
      this.raiseDuplicateExportError(node, name);
    }
    this.state.exportedIdentifiers.push(name);
  };

  pp$1.raiseDuplicateExportError = function (node, name) {
    this.raise(node.start, name === "default" ? "Only one default export allowed per module." : "`" + name + "` has already been exported. Exported identifiers must be unique.");
  };

  // Parses a comma-separated list of module exports.

  pp$1.parseExportSpecifiers = function () {
    var nodes = [];
    var first = true;
    var needsFrom = void 0;

    // export { x, y as z } [from '...']
    this.expect(types.braceL);

    while (!this.eat(types.braceR)) {
      if (first) {
        first = false;
      } else {
        this.expect(types.comma);
        if (this.eat(types.braceR)) break;
      }

      var isDefault = this.match(types._default);
      if (isDefault && !needsFrom) needsFrom = true;

      var node = this.startNode();
      node.local = this.parseIdentifier(isDefault);
      node.exported = this.eatContextual("as") ? this.parseIdentifier(true) : node.local.__clone();
      nodes.push(this.finishNode(node, "ExportSpecifier"));
    }

    // https://github.com/ember-cli/ember-cli/pull/3739
    if (needsFrom && !this.isContextual("from")) {
      this.unexpected();
    }

    return nodes;
  };

  // Parses import declaration.

  pp$1.parseImport = function (node) {
    this.eat(types._import);

    // import '...'
    if (this.match(types.string)) {
      node.specifiers = [];
      node.source = this.parseExprAtom();
    } else {
      node.specifiers = [];
      this.parseImportSpecifiers(node);
      this.expectContextual("from");
      node.source = this.match(types.string) ? this.parseExprAtom() : this.unexpected();
    }
    this.semicolon();
    return this.finishNode(node, "ImportDeclaration");
  };

  // Parses a comma-separated list of module imports.

  pp$1.parseImportSpecifiers = function (node) {
    var first = true;
    if (this.match(types.name)) {
      // import defaultObj, { x, y as z } from '...'
      var startPos = this.state.start;
      var startLoc = this.state.startLoc;
      node.specifiers.push(this.parseImportSpecifierDefault(this.parseIdentifier(), startPos, startLoc));
      if (!this.eat(types.comma)) return;
    }

    if (this.match(types.star)) {
      var specifier = this.startNode();
      this.next();
      this.expectContextual("as");
      specifier.local = this.parseIdentifier();
      this.checkLVal(specifier.local, true, undefined, "import namespace specifier");
      node.specifiers.push(this.finishNode(specifier, "ImportNamespaceSpecifier"));
      return;
    }

    this.expect(types.braceL);
    while (!this.eat(types.braceR)) {
      if (first) {
        first = false;
      } else {
        // Detect an attempt to deep destructure
        if (this.eat(types.colon)) {
          this.unexpected(null, "ES2015 named imports do not destructure. Use another statement for destructuring after the import.");
        }

        this.expect(types.comma);
        if (this.eat(types.braceR)) break;
      }

      this.parseImportSpecifier(node);
    }
  };

  pp$1.parseImportSpecifier = function (node) {
    var specifier = this.startNode();
    specifier.imported = this.parseIdentifier(true);
    if (this.eatContextual("as")) {
      specifier.local = this.parseIdentifier();
    } else {
      this.checkReservedWord(specifier.imported.name, specifier.start, true, true);
      specifier.local = specifier.imported.__clone();
    }
    this.checkLVal(specifier.local, true, undefined, "import specifier");
    node.specifiers.push(this.finishNode(specifier, "ImportSpecifier"));
  };

  pp$1.parseImportSpecifierDefault = function (id, startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    node.local = id;
    this.checkLVal(node.local, true, undefined, "default import specifier");
    return this.finishNode(node, "ImportDefaultSpecifier");
  };

  var pp$2 = Parser.prototype;

  // Convert existing expression atom to assignable pattern
  // if possible.

  pp$2.toAssignable = function (node, isBinding, contextDescription) {
    if (node) {
      switch (node.type) {
        case "Identifier":
        case "ObjectPattern":
        case "ArrayPattern":
        case "AssignmentPattern":
          break;

        case "ObjectExpression":
          node.type = "ObjectPattern";
          for (var _iterator = node.properties, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
            var _ref;

            if (_isArray) {
              if (_i >= _iterator.length) break;
              _ref = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref = _i.value;
            }

            var prop = _ref;

            if (prop.type === "ObjectMethod") {
              if (prop.kind === "get" || prop.kind === "set") {
                this.raise(prop.key.start, "Object pattern can't contain getter or setter");
              } else {
                this.raise(prop.key.start, "Object pattern can't contain methods");
              }
            } else {
              this.toAssignable(prop, isBinding, "object destructuring pattern");
            }
          }
          break;

        case "ObjectProperty":
          this.toAssignable(node.value, isBinding, contextDescription);
          break;

        case "SpreadProperty":
          node.type = "RestProperty";
          var arg = node.argument;
          this.toAssignable(arg, isBinding, contextDescription);
          break;

        case "ArrayExpression":
          node.type = "ArrayPattern";
          this.toAssignableList(node.elements, isBinding, contextDescription);
          break;

        case "AssignmentExpression":
          if (node.operator === "=") {
            node.type = "AssignmentPattern";
            delete node.operator;
          } else {
            this.raise(node.left.end, "Only '=' operator can be used for specifying default value.");
          }
          break;

        case "MemberExpression":
          if (!isBinding) break;

        default:
          {
            var message = "Invalid left-hand side" + (contextDescription ? " in " + contextDescription : /* istanbul ignore next */"expression");
            this.raise(node.start, message);
          }
      }
    }
    return node;
  };

  // Convert list of expression atoms to binding list.

  pp$2.toAssignableList = function (exprList, isBinding, contextDescription) {
    var end = exprList.length;
    if (end) {
      var last = exprList[end - 1];
      if (last && last.type === "RestElement") {
        --end;
      } else if (last && last.type === "SpreadElement") {
        last.type = "RestElement";
        var arg = last.argument;
        this.toAssignable(arg, isBinding, contextDescription);
        if (arg.type !== "Identifier" && arg.type !== "MemberExpression" && arg.type !== "ArrayPattern") {
          this.unexpected(arg.start);
        }
        --end;
      }
    }
    for (var i = 0; i < end; i++) {
      var elt = exprList[i];
      if (elt) this.toAssignable(elt, isBinding, contextDescription);
    }
    return exprList;
  };

  // Convert list of expression atoms to a list of

  pp$2.toReferencedList = function (exprList) {
    return exprList;
  };

  // Parses spread element.

  pp$2.parseSpread = function (refShorthandDefaultPos) {
    var node = this.startNode();
    this.next();
    node.argument = this.parseMaybeAssign(false, refShorthandDefaultPos);
    return this.finishNode(node, "SpreadElement");
  };

  pp$2.parseRest = function () {
    var node = this.startNode();
    this.next();
    node.argument = this.parseBindingIdentifier();
    return this.finishNode(node, "RestElement");
  };

  pp$2.shouldAllowYieldIdentifier = function () {
    return this.match(types._yield) && !this.state.strict && !this.state.inGenerator;
  };

  pp$2.parseBindingIdentifier = function () {
    return this.parseIdentifier(this.shouldAllowYieldIdentifier());
  };

  // Parses lvalue (assignable) atom.

  pp$2.parseBindingAtom = function () {
    switch (this.state.type) {
      case types._yield:
        if (this.state.strict || this.state.inGenerator) this.unexpected();
      // fall-through
      case types.name:
        return this.parseIdentifier(true);

      case types.bracketL:
        var node = this.startNode();
        this.next();
        node.elements = this.parseBindingList(types.bracketR, true);
        return this.finishNode(node, "ArrayPattern");

      case types.braceL:
        return this.parseObj(true);

      default:
        this.unexpected();
    }
  };

  pp$2.parseBindingList = function (close, allowEmpty) {
    var elts = [];
    var first = true;
    while (!this.eat(close)) {
      if (first) {
        first = false;
      } else {
        this.expect(types.comma);
      }
      if (allowEmpty && this.match(types.comma)) {
        elts.push(null);
      } else if (this.eat(close)) {
        break;
      } else if (this.match(types.ellipsis)) {
        elts.push(this.parseAssignableListItemTypes(this.parseRest()));
        this.expect(close);
        break;
      } else {
        var decorators = [];
        while (this.match(types.at)) {
          decorators.push(this.parseDecorator());
        }
        var left = this.parseMaybeDefault();
        if (decorators.length) {
          left.decorators = decorators;
        }
        this.parseAssignableListItemTypes(left);
        elts.push(this.parseMaybeDefault(left.start, left.loc.start, left));
      }
    }
    return elts;
  };

  pp$2.parseAssignableListItemTypes = function (param) {
    return param;
  };

  // Parses assignment pattern around given atom if possible.

  pp$2.parseMaybeDefault = function (startPos, startLoc, left) {
    startLoc = startLoc || this.state.startLoc;
    startPos = startPos || this.state.start;
    left = left || this.parseBindingAtom();
    if (!this.eat(types.eq)) return left;

    var node = this.startNodeAt(startPos, startLoc);
    node.left = left;
    node.right = this.parseMaybeAssign();
    return this.finishNode(node, "AssignmentPattern");
  };

  // Verify that a node is an lval — something that can be assigned
  // to.

  pp$2.checkLVal = function (expr, isBinding, checkClashes, contextDescription) {
    switch (expr.type) {
      case "Identifier":
        this.checkReservedWord(expr.name, expr.start, false, true);

        if (checkClashes) {
          // we need to prefix this with an underscore for the cases where we have a key of
          // `__proto__`. there's a bug in old V8 where the following wouldn't work:
          //
          //   > var obj = Object.create(null);
          //   undefined
          //   > obj.__proto__
          //   null
          //   > obj.__proto__ = true;
          //   true
          //   > obj.__proto__
          //   null
          var key = "_" + expr.name;

          if (checkClashes[key]) {
            this.raise(expr.start, "Argument name clash in strict mode");
          } else {
            checkClashes[key] = true;
          }
        }
        break;

      case "MemberExpression":
        if (isBinding) this.raise(expr.start, (isBinding ? "Binding" : "Assigning to") + " member expression");
        break;

      case "ObjectPattern":
        for (var _iterator2 = expr.properties, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
          var _ref2;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var prop = _ref2;

          if (prop.type === "ObjectProperty") prop = prop.value;
          this.checkLVal(prop, isBinding, checkClashes, "object destructuring pattern");
        }
        break;

      case "ArrayPattern":
        for (var _iterator3 = expr.elements, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
          var _ref3;

          if (_isArray3) {
            if (_i3 >= _iterator3.length) break;
            _ref3 = _iterator3[_i3++];
          } else {
            _i3 = _iterator3.next();
            if (_i3.done) break;
            _ref3 = _i3.value;
          }

          var elem = _ref3;

          if (elem) this.checkLVal(elem, isBinding, checkClashes, "array destructuring pattern");
        }
        break;

      case "AssignmentPattern":
        this.checkLVal(expr.left, isBinding, checkClashes, "assignment pattern");
        break;

      case "RestProperty":
        this.checkLVal(expr.argument, isBinding, checkClashes, "rest property");
        break;

      case "RestElement":
        this.checkLVal(expr.argument, isBinding, checkClashes, "rest element");
        break;

      default:
        {
          var message = (isBinding ? /* istanbul ignore next */"Binding invalid" : "Invalid") + " left-hand side" + (contextDescription ? " in " + contextDescription : /* istanbul ignore next */"expression");
          this.raise(expr.start, message);
        }
    }
  };

  /* eslint max-len: 0 */

  // A recursive descent parser operates by defining functions for all
  // syntactic elements, and recursively calling those, each function
  // advancing the input stream and returning an AST node. Precedence
  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`
  // instead of `(!x)[1]` is handled by the fact that the parser
  // function that parses unary prefix operators is called first, and
  // in turn calls the function that parses `[]` subscripts — that
  // way, it'll receive the node for `x[1]` already parsed, and wraps
  // *that* in the unary operator node.
  //
  // Acorn uses an [operator precedence parser][opp] to handle binary
  // operator precedence, because it is much more compact than using
  // the technique outlined above, which uses different, nesting
  // functions to specify precedence, for all of the ten binary
  // precedence levels that JavaScript defines.
  //
  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser

  var pp$3 = Parser.prototype;

  // Check if property name clashes with already added.
  // Object/class getters and setters are not allowed to clash —
  // either with each other or with an init property — and in
  // strict mode, init properties are also not allowed to be repeated.

  pp$3.checkPropClash = function (prop, propHash) {
    if (prop.computed || prop.kind) return;

    var key = prop.key;
    // It is either an Identifier or a String/NumericLiteral
    var name = key.type === "Identifier" ? key.name : String(key.value);

    if (name === "__proto__") {
      if (propHash.proto) this.raise(key.start, "Redefinition of __proto__ property");
      propHash.proto = true;
    }
  };

  // Convenience method to parse an Expression only
  pp$3.getExpression = function () {
    this.nextToken();
    var expr = this.parseExpression();
    if (!this.match(types.eof)) {
      this.unexpected();
    }
    return expr;
  };

  // ### Expression parsing

  // These nest, from the most general expression type at the top to
  // 'atomic', nondivisible expression types at the bottom. Most of
  // the functions will simply let the function (s) below them parse,
  // and, *if* the syntactic construct they handle is present, wrap
  // the AST node that the inner parser gave them in another node.

  // Parse a full expression. The optional arguments are used to
  // forbid the `in` operator (in for loops initialization expressions)
  // and provide reference for storing '=' operator inside shorthand
  // property assignment in contexts where both object expression
  // and object pattern might appear (so it's possible to raise
  // delayed syntax error at correct position).

  pp$3.parseExpression = function (noIn, refShorthandDefaultPos) {
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    var expr = this.parseMaybeAssign(noIn, refShorthandDefaultPos);
    if (this.match(types.comma)) {
      var node = this.startNodeAt(startPos, startLoc);
      node.expressions = [expr];
      while (this.eat(types.comma)) {
        node.expressions.push(this.parseMaybeAssign(noIn, refShorthandDefaultPos));
      }
      this.toReferencedList(node.expressions);
      return this.finishNode(node, "SequenceExpression");
    }
    return expr;
  };

  // Parse an assignment expression. This includes applications of
  // operators like `+=`.

  pp$3.parseMaybeAssign = function (noIn, refShorthandDefaultPos, afterLeftParse, refNeedsArrowPos) {
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;

    if (this.match(types._yield) && this.state.inGenerator) {
      var _left = this.parseYield();
      if (afterLeftParse) _left = afterLeftParse.call(this, _left, startPos, startLoc);
      return _left;
    }

    var failOnShorthandAssign = void 0;
    if (refShorthandDefaultPos) {
      failOnShorthandAssign = false;
    } else {
      refShorthandDefaultPos = { start: 0 };
      failOnShorthandAssign = true;
    }

    if (this.match(types.parenL) || this.match(types.name)) {
      this.state.potentialArrowAt = this.state.start;
    }

    var left = this.parseMaybeConditional(noIn, refShorthandDefaultPos, refNeedsArrowPos);
    if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc);
    if (this.state.type.isAssign) {
      var node = this.startNodeAt(startPos, startLoc);
      node.operator = this.state.value;
      node.left = this.match(types.eq) ? this.toAssignable(left, undefined, "assignment expression") : left;
      refShorthandDefaultPos.start = 0; // reset because shorthand default was used correctly

      this.checkLVal(left, undefined, undefined, "assignment expression");

      if (left.extra && left.extra.parenthesized) {
        var errorMsg = void 0;
        if (left.type === "ObjectPattern") {
          errorMsg = "`({a}) = 0` use `({a} = 0)`";
        } else if (left.type === "ArrayPattern") {
          errorMsg = "`([a]) = 0` use `([a] = 0)`";
        }
        if (errorMsg) {
          this.raise(left.start, "You're trying to assign to a parenthesized expression, eg. instead of " + errorMsg);
        }
      }

      this.next();
      node.right = this.parseMaybeAssign(noIn);
      return this.finishNode(node, "AssignmentExpression");
    } else if (failOnShorthandAssign && refShorthandDefaultPos.start) {
      this.unexpected(refShorthandDefaultPos.start);
    }

    return left;
  };

  // Parse a ternary conditional (`?:`) operator.

  pp$3.parseMaybeConditional = function (noIn, refShorthandDefaultPos, refNeedsArrowPos) {
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    var expr = this.parseExprOps(noIn, refShorthandDefaultPos);
    if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;

    return this.parseConditional(expr, noIn, startPos, startLoc, refNeedsArrowPos);
  };

  pp$3.parseConditional = function (expr, noIn, startPos, startLoc) {
    if (this.eat(types.question)) {
      var node = this.startNodeAt(startPos, startLoc);
      node.test = expr;
      node.consequent = this.parseMaybeAssign();
      this.expect(types.colon);
      node.alternate = this.parseMaybeAssign(noIn);
      return this.finishNode(node, "ConditionalExpression");
    }
    return expr;
  };

  // Start the precedence parser.

  pp$3.parseExprOps = function (noIn, refShorthandDefaultPos) {
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    var expr = this.parseMaybeUnary(refShorthandDefaultPos);
    if (refShorthandDefaultPos && refShorthandDefaultPos.start) {
      return expr;
    } else {
      return this.parseExprOp(expr, startPos, startLoc, -1, noIn);
    }
  };

  // Parse binary operators with the operator precedence parsing
  // algorithm. `left` is the left-hand side of the operator.
  // `minPrec` provides context that allows the function to stop and
  // defer further parser to one of its callers when it encounters an
  // operator that has a lower precedence than the set it is parsing.

  pp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {
    var prec = this.state.type.binop;
    if (prec != null && (!noIn || !this.match(types._in))) {
      if (prec > minPrec) {
        var node = this.startNodeAt(leftStartPos, leftStartLoc);
        node.left = left;
        node.operator = this.state.value;

        if (node.operator === "**" && left.type === "UnaryExpression" && left.extra && !left.extra.parenthesizedArgument && !left.extra.parenthesized) {
          this.raise(left.argument.start, "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.");
        }

        var op = this.state.type;
        this.next();

        var startPos = this.state.start;
        var startLoc = this.state.startLoc;
        node.right = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec, noIn);

        this.finishNode(node, op === types.logicalOR || op === types.logicalAND ? "LogicalExpression" : "BinaryExpression");
        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);
      }
    }
    return left;
  };

  // Parse unary operators, both prefix and postfix.

  pp$3.parseMaybeUnary = function (refShorthandDefaultPos) {
    if (this.state.type.prefix) {
      var node = this.startNode();
      var update = this.match(types.incDec);
      node.operator = this.state.value;
      node.prefix = true;
      this.next();

      var argType = this.state.type;
      node.argument = this.parseMaybeUnary();

      this.addExtra(node, "parenthesizedArgument", argType === types.parenL && (!node.argument.extra || !node.argument.extra.parenthesized));

      if (refShorthandDefaultPos && refShorthandDefaultPos.start) {
        this.unexpected(refShorthandDefaultPos.start);
      }

      if (update) {
        this.checkLVal(node.argument, undefined, undefined, "prefix operation");
      } else if (this.state.strict && node.operator === "delete" && node.argument.type === "Identifier") {
        this.raise(node.start, "Deleting local variable in strict mode");
      }

      return this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");
    }

    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    var expr = this.parseExprSubscripts(refShorthandDefaultPos);
    if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;
    while (this.state.type.postfix && !this.canInsertSemicolon()) {
      var _node = this.startNodeAt(startPos, startLoc);
      _node.operator = this.state.value;
      _node.prefix = false;
      _node.argument = expr;
      this.checkLVal(expr, undefined, undefined, "postfix operation");
      this.next();
      expr = this.finishNode(_node, "UpdateExpression");
    }
    return expr;
  };

  // Parse call, dot, and `[]`-subscript expressions.

  pp$3.parseExprSubscripts = function (refShorthandDefaultPos) {
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    var potentialArrowAt = this.state.potentialArrowAt;
    var expr = this.parseExprAtom(refShorthandDefaultPos);

    if (expr.type === "ArrowFunctionExpression" && expr.start === potentialArrowAt) {
      return expr;
    }

    if (refShorthandDefaultPos && refShorthandDefaultPos.start) {
      return expr;
    }

    return this.parseSubscripts(expr, startPos, startLoc);
  };

  pp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {
    for (;;) {
      if (!noCalls && this.eat(types.doubleColon)) {
        var node = this.startNodeAt(startPos, startLoc);
        node.object = base;
        node.callee = this.parseNoCallExpr();
        return this.parseSubscripts(this.finishNode(node, "BindExpression"), startPos, startLoc, noCalls);
      } else if (this.eat(types.dot)) {
        var _node2 = this.startNodeAt(startPos, startLoc);
        _node2.object = base;
        _node2.property = this.parseIdentifier(true);
        _node2.computed = false;
        base = this.finishNode(_node2, "MemberExpression");
      } else if (this.eat(types.bracketL)) {
        var _node3 = this.startNodeAt(startPos, startLoc);
        _node3.object = base;
        _node3.property = this.parseExpression();
        _node3.computed = true;
        this.expect(types.bracketR);
        base = this.finishNode(_node3, "MemberExpression");
      } else if (!noCalls && this.match(types.parenL)) {
        var possibleAsync = this.state.potentialArrowAt === base.start && base.type === "Identifier" && base.name === "async" && !this.canInsertSemicolon();
        this.next();

        var _node4 = this.startNodeAt(startPos, startLoc);
        _node4.callee = base;
        _node4.arguments = this.parseCallExpressionArguments(types.parenR, possibleAsync);
        if (_node4.callee.type === "Import" && _node4.arguments.length !== 1) {
          this.raise(_node4.start, "import() requires exactly one argument");
        }
        base = this.finishNode(_node4, "CallExpression");

        if (possibleAsync && this.shouldParseAsyncArrow()) {
          return this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), _node4);
        } else {
          this.toReferencedList(_node4.arguments);
        }
      } else if (this.match(types.backQuote)) {
        var _node5 = this.startNodeAt(startPos, startLoc);
        _node5.tag = base;
        _node5.quasi = this.parseTemplate(true);
        base = this.finishNode(_node5, "TaggedTemplateExpression");
      } else {
        return base;
      }
    }
  };

  pp$3.parseCallExpressionArguments = function (close, possibleAsyncArrow) {
    var elts = [];
    var innerParenStart = void 0;
    var first = true;

    while (!this.eat(close)) {
      if (first) {
        first = false;
      } else {
        this.expect(types.comma);
        if (this.eat(close)) break;
      }

      // we need to make sure that if this is an async arrow functions, that we don't allow inner parens inside the params
      if (this.match(types.parenL) && !innerParenStart) {
        innerParenStart = this.state.start;
      }

      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? { start: 0 } : undefined, possibleAsyncArrow ? { start: 0 } : undefined));
    }

    // we found an async arrow function so let's not allow any inner parens
    if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {
      this.unexpected();
    }

    return elts;
  };

  pp$3.shouldParseAsyncArrow = function () {
    return this.match(types.arrow);
  };

  pp$3.parseAsyncArrowFromCallExpression = function (node, call) {
    this.expect(types.arrow);
    return this.parseArrowExpression(node, call.arguments, true);
  };

  // Parse a no-call expression (like argument of `new` or `::` operators).

  pp$3.parseNoCallExpr = function () {
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);
  };

  // Parse an atomic expression — either a single token that is an
  // expression, an expression started by a keyword like `function` or
  // `new`, or an expression wrapped in punctuation like `()`, `[]`,
  // or `{}`.

  pp$3.parseExprAtom = function (refShorthandDefaultPos) {
    var canBeArrow = this.state.potentialArrowAt === this.state.start;
    var node = void 0;

    switch (this.state.type) {
      case types._super:
        if (!this.state.inMethod && !this.state.inClassProperty && !this.options.allowSuperOutsideMethod) {
          this.raise(this.state.start, "'super' outside of function or class");
        }

        node = this.startNode();
        this.next();
        if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {
          this.unexpected();
        }
        if (this.match(types.parenL) && this.state.inMethod !== "constructor" && !this.options.allowSuperOutsideMethod) {
          this.raise(node.start, "super() outside of class constructor");
        }
        return this.finishNode(node, "Super");

      case types._import:
        if (!this.hasPlugin("dynamicImport")) this.unexpected();

        node = this.startNode();
        this.next();
        if (!this.match(types.parenL)) {
          this.unexpected(null, types.parenL);
        }
        return this.finishNode(node, "Import");

      case types._this:
        node = this.startNode();
        this.next();
        return this.finishNode(node, "ThisExpression");

      case types._yield:
        if (this.state.inGenerator) this.unexpected();

      case types.name:
        node = this.startNode();
        var allowAwait = this.state.value === "await" && this.state.inAsync;
        var allowYield = this.shouldAllowYieldIdentifier();
        var id = this.parseIdentifier(allowAwait || allowYield);

        if (id.name === "await") {
          if (this.state.inAsync || this.inModule) {
            return this.parseAwait(node);
          }
        } else if (id.name === "async" && this.match(types._function) && !this.canInsertSemicolon()) {
          this.next();
          return this.parseFunction(node, false, false, true);
        } else if (canBeArrow && id.name === "async" && this.match(types.name)) {
          var params = [this.parseIdentifier()];
          this.expect(types.arrow);
          // let foo = bar => {};
          return this.parseArrowExpression(node, params, true);
        }

        if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {
          return this.parseArrowExpression(node, [id]);
        }

        return id;

      case types._do:
        if (this.hasPlugin("doExpressions")) {
          var _node6 = this.startNode();
          this.next();
          var oldInFunction = this.state.inFunction;
          var oldLabels = this.state.labels;
          this.state.labels = [];
          this.state.inFunction = false;
          _node6.body = this.parseBlock(false, true);
          this.state.inFunction = oldInFunction;
          this.state.labels = oldLabels;
          return this.finishNode(_node6, "DoExpression");
        }

      case types.regexp:
        var value = this.state.value;
        node = this.parseLiteral(value.value, "RegExpLiteral");
        node.pattern = value.pattern;
        node.flags = value.flags;
        return node;

      case types.num:
        return this.parseLiteral(this.state.value, "NumericLiteral");

      case types.string:
        return this.parseLiteral(this.state.value, "StringLiteral");

      case types._null:
        node = this.startNode();
        this.next();
        return this.finishNode(node, "NullLiteral");

      case types._true:case types._false:
        node = this.startNode();
        node.value = this.match(types._true);
        this.next();
        return this.finishNode(node, "BooleanLiteral");

      case types.parenL:
        return this.parseParenAndDistinguishExpression(null, null, canBeArrow);

      case types.bracketL:
        node = this.startNode();
        this.next();
        node.elements = this.parseExprList(types.bracketR, true, refShorthandDefaultPos);
        this.toReferencedList(node.elements);
        return this.finishNode(node, "ArrayExpression");

      case types.braceL:
        return this.parseObj(false, refShorthandDefaultPos);

      case types._function:
        return this.parseFunctionExpression();

      case types.at:
        this.parseDecorators();

      case types._class:
        node = this.startNode();
        this.takeDecorators(node);
        return this.parseClass(node, false);

      case types._new:
        return this.parseNew();

      case types.backQuote:
        return this.parseTemplate(false);

      case types.doubleColon:
        node = this.startNode();
        this.next();
        node.object = null;
        var callee = node.callee = this.parseNoCallExpr();
        if (callee.type === "MemberExpression") {
          return this.finishNode(node, "BindExpression");
        } else {
          this.raise(callee.start, "Binding should be performed on object property.");
        }

      default:
        this.unexpected();
    }
  };

  pp$3.parseFunctionExpression = function () {
    var node = this.startNode();
    var meta = this.parseIdentifier(true);
    if (this.state.inGenerator && this.eat(types.dot) && this.hasPlugin("functionSent")) {
      return this.parseMetaProperty(node, meta, "sent");
    } else {
      return this.parseFunction(node, false);
    }
  };

  pp$3.parseMetaProperty = function (node, meta, propertyName) {
    node.meta = meta;
    node.property = this.parseIdentifier(true);

    if (node.property.name !== propertyName) {
      this.raise(node.property.start, "The only valid meta property for new is " + meta.name + "." + propertyName);
    }

    return this.finishNode(node, "MetaProperty");
  };

  pp$3.parseLiteral = function (value, type, startPos, startLoc) {
    startPos = startPos || this.state.start;
    startLoc = startLoc || this.state.startLoc;

    var node = this.startNodeAt(startPos, startLoc);
    this.addExtra(node, "rawValue", value);
    this.addExtra(node, "raw", this.input.slice(startPos, this.state.end));
    node.value = value;
    this.next();
    return this.finishNode(node, type);
  };

  pp$3.parseParenExpression = function () {
    this.expect(types.parenL);
    var val = this.parseExpression();
    this.expect(types.parenR);
    return val;
  };

  pp$3.parseParenAndDistinguishExpression = function (startPos, startLoc, canBeArrow) {
    startPos = startPos || this.state.start;
    startLoc = startLoc || this.state.startLoc;

    var val = void 0;
    this.expect(types.parenL);

    var innerStartPos = this.state.start;
    var innerStartLoc = this.state.startLoc;
    var exprList = [];
    var refShorthandDefaultPos = { start: 0 };
    var refNeedsArrowPos = { start: 0 };
    var first = true;
    var spreadStart = void 0;
    var optionalCommaStart = void 0;

    while (!this.match(types.parenR)) {
      if (first) {
        first = false;
      } else {
        this.expect(types.comma, refNeedsArrowPos.start || null);
        if (this.match(types.parenR)) {
          optionalCommaStart = this.state.start;
          break;
        }
      }

      if (this.match(types.ellipsis)) {
        var spreadNodeStartPos = this.state.start;
        var spreadNodeStartLoc = this.state.startLoc;
        spreadStart = this.state.start;
        exprList.push(this.parseParenItem(this.parseRest(), spreadNodeStartPos, spreadNodeStartLoc));
        break;
      } else {
        exprList.push(this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem, refNeedsArrowPos));
      }
    }

    var innerEndPos = this.state.start;
    var innerEndLoc = this.state.startLoc;
    this.expect(types.parenR);

    var arrowNode = this.startNodeAt(startPos, startLoc);
    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {
      for (var _iterator = exprList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var param = _ref;

        if (param.extra && param.extra.parenthesized) this.unexpected(param.extra.parenStart);
      }

      return this.parseArrowExpression(arrowNode, exprList);
    }

    if (!exprList.length) {
      this.unexpected(this.state.lastTokStart);
    }
    if (optionalCommaStart) this.unexpected(optionalCommaStart);
    if (spreadStart) this.unexpected(spreadStart);
    if (refShorthandDefaultPos.start) this.unexpected(refShorthandDefaultPos.start);
    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);

    if (exprList.length > 1) {
      val = this.startNodeAt(innerStartPos, innerStartLoc);
      val.expressions = exprList;
      this.toReferencedList(val.expressions);
      this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
    } else {
      val = exprList[0];
    }

    this.addExtra(val, "parenthesized", true);
    this.addExtra(val, "parenStart", startPos);

    return val;
  };

  pp$3.shouldParseArrow = function () {
    return !this.canInsertSemicolon();
  };

  pp$3.parseArrow = function (node) {
    if (this.eat(types.arrow)) {
      return node;
    }
  };

  pp$3.parseParenItem = function (node) {
    return node;
  };

  // New's precedence is slightly tricky. It must allow its argument
  // to be a `[]` or dot subscript expression, but not a call — at
  // least, not without wrapping it in parentheses. Thus, it uses the

  pp$3.parseNew = function () {
    var node = this.startNode();
    var meta = this.parseIdentifier(true);

    if (this.eat(types.dot)) {
      var metaProp = this.parseMetaProperty(node, meta, "target");

      if (!this.state.inFunction) {
        this.raise(metaProp.property.start, "new.target can only be used in functions");
      }

      return metaProp;
    }

    node.callee = this.parseNoCallExpr();

    if (this.eat(types.parenL)) {
      node.arguments = this.parseExprList(types.parenR);
      this.toReferencedList(node.arguments);
    } else {
      node.arguments = [];
    }

    return this.finishNode(node, "NewExpression");
  };

  // Parse template expression.

  pp$3.parseTemplateElement = function (isTagged) {
    var elem = this.startNode();
    if (this.state.value === null) {
      if (!isTagged || !this.hasPlugin("templateInvalidEscapes")) {
        this.raise(this.state.invalidTemplateEscapePosition, "Invalid escape sequence in template");
      } else {
        this.state.invalidTemplateEscapePosition = null;
      }
    }
    elem.value = {
      raw: this.input.slice(this.state.start, this.state.end).replace(/\r\n?/g, "\n"),
      cooked: this.state.value
    };
    this.next();
    elem.tail = this.match(types.backQuote);
    return this.finishNode(elem, "TemplateElement");
  };

  pp$3.parseTemplate = function (isTagged) {
    var node = this.startNode();
    this.next();
    node.expressions = [];
    var curElt = this.parseTemplateElement(isTagged);
    node.quasis = [curElt];
    while (!curElt.tail) {
      this.expect(types.dollarBraceL);
      node.expressions.push(this.parseExpression());
      this.expect(types.braceR);
      node.quasis.push(curElt = this.parseTemplateElement(isTagged));
    }
    this.next();
    return this.finishNode(node, "TemplateLiteral");
  };

  // Parse an object literal or binding pattern.

  pp$3.parseObj = function (isPattern, refShorthandDefaultPos) {
    var decorators = [];
    var propHash = Object.create(null);
    var first = true;
    var node = this.startNode();

    node.properties = [];
    this.next();

    var firstRestLocation = null;

    while (!this.eat(types.braceR)) {
      if (first) {
        first = false;
      } else {
        this.expect(types.comma);
        if (this.eat(types.braceR)) break;
      }

      while (this.match(types.at)) {
        decorators.push(this.parseDecorator());
      }

      var prop = this.startNode(),
          isGenerator = false,
          isAsync = false,
          startPos = void 0,
          startLoc = void 0;
      if (decorators.length) {
        prop.decorators = decorators;
        decorators = [];
      }

      if (this.hasPlugin("objectRestSpread") && this.match(types.ellipsis)) {
        prop = this.parseSpread(isPattern ? { start: 0 } : undefined);
        prop.type = isPattern ? "RestProperty" : "SpreadProperty";
        if (isPattern) this.toAssignable(prop.argument, true, "object pattern");
        node.properties.push(prop);
        if (isPattern) {
          var position = this.state.start;
          if (firstRestLocation !== null) {
            this.unexpected(firstRestLocation, "Cannot have multiple rest elements when destructuring");
          } else if (this.eat(types.braceR)) {
            break;
          } else if (this.match(types.comma) && this.lookahead().type === types.braceR) {
            // TODO: temporary rollback
            // this.unexpected(position, "A trailing comma is not permitted after the rest element");
            continue;
          } else {
            firstRestLocation = position;
            continue;
          }
        } else {
          continue;
        }
      }

      prop.method = false;
      prop.shorthand = false;

      if (isPattern || refShorthandDefaultPos) {
        startPos = this.state.start;
        startLoc = this.state.startLoc;
      }

      if (!isPattern) {
        isGenerator = this.eat(types.star);
      }

      if (!isPattern && this.isContextual("async")) {
        if (isGenerator) this.unexpected();

        var asyncId = this.parseIdentifier();
        if (this.match(types.colon) || this.match(types.parenL) || this.match(types.braceR) || this.match(types.eq) || this.match(types.comma)) {
          prop.key = asyncId;
          prop.computed = false;
        } else {
          isAsync = true;
          if (this.hasPlugin("asyncGenerators")) isGenerator = this.eat(types.star);
          this.parsePropertyName(prop);
        }
      } else {
        this.parsePropertyName(prop);
      }

      this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos);
      this.checkPropClash(prop, propHash);

      if (prop.shorthand) {
        this.addExtra(prop, "shorthand", true);
      }

      node.properties.push(prop);
    }

    if (firstRestLocation !== null) {
      this.unexpected(firstRestLocation, "The rest element has to be the last element when destructuring");
    }

    if (decorators.length) {
      this.raise(this.state.start, "You have trailing decorators with no property");
    }

    return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");
  };

  pp$3.isGetterOrSetterMethod = function (prop, isPattern) {
    return !isPattern && !prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && (this.match(types.string) || // get "string"() {}
    this.match(types.num) || // get 1() {}
    this.match(types.bracketL) || // get ["string"]() {}
    this.match(types.name) || // get foo() {}
    this.state.type.keyword // get debugger() {}
    );
  };

  // get methods aren't allowed to have any parameters
  // set methods must have exactly 1 parameter
  pp$3.checkGetterSetterParamCount = function (method) {
    var paramCount = method.kind === "get" ? 0 : 1;
    if (method.params.length !== paramCount) {
      var start = method.start;
      if (method.kind === "get") {
        this.raise(start, "getter should have no params");
      } else {
        this.raise(start, "setter should have exactly one param");
      }
    }
  };

  pp$3.parseObjectMethod = function (prop, isGenerator, isAsync, isPattern) {
    if (isAsync || isGenerator || this.match(types.parenL)) {
      if (isPattern) this.unexpected();
      prop.kind = "method";
      prop.method = true;
      this.parseMethod(prop, isGenerator, isAsync);

      return this.finishNode(prop, "ObjectMethod");
    }

    if (this.isGetterOrSetterMethod(prop, isPattern)) {
      if (isGenerator || isAsync) this.unexpected();
      prop.kind = prop.key.name;
      this.parsePropertyName(prop);
      this.parseMethod(prop);
      this.checkGetterSetterParamCount(prop);

      return this.finishNode(prop, "ObjectMethod");
    }
  };

  pp$3.parseObjectProperty = function (prop, startPos, startLoc, isPattern, refShorthandDefaultPos) {
    if (this.eat(types.colon)) {
      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(false, refShorthandDefaultPos);

      return this.finishNode(prop, "ObjectProperty");
    }

    if (!prop.computed && prop.key.type === "Identifier") {
      this.checkReservedWord(prop.key.name, prop.key.start, true, true);

      if (isPattern) {
        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());
      } else if (this.match(types.eq) && refShorthandDefaultPos) {
        if (!refShorthandDefaultPos.start) {
          refShorthandDefaultPos.start = this.state.start;
        }
        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());
      } else {
        prop.value = prop.key.__clone();
      }
      prop.shorthand = true;

      return this.finishNode(prop, "ObjectProperty");
    }
  };

  pp$3.parseObjPropValue = function (prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos) {
    var node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refShorthandDefaultPos);

    if (!node) this.unexpected();

    return node;
  };

  pp$3.parsePropertyName = function (prop) {
    if (this.eat(types.bracketL)) {
      prop.computed = true;
      prop.key = this.parseMaybeAssign();
      this.expect(types.bracketR);
    } else {
      prop.computed = false;
      var oldInPropertyName = this.state.inPropertyName;
      this.state.inPropertyName = true;
      prop.key = this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);
      this.state.inPropertyName = oldInPropertyName;
    }
    return prop.key;
  };

  // Initialize empty function node.

  pp$3.initFunction = function (node, isAsync) {
    node.id = null;
    node.generator = false;
    node.expression = false;
    node.async = !!isAsync;
  };

  // Parse object or class method.

  pp$3.parseMethod = function (node, isGenerator, isAsync) {
    var oldInMethod = this.state.inMethod;
    this.state.inMethod = node.kind || true;
    this.initFunction(node, isAsync);
    this.expect(types.parenL);
    node.params = this.parseBindingList(types.parenR);
    node.generator = !!isGenerator;
    this.parseFunctionBody(node);
    this.state.inMethod = oldInMethod;
    return node;
  };

  // Parse arrow function expression with given parameters.

  pp$3.parseArrowExpression = function (node, params, isAsync) {
    this.initFunction(node, isAsync);
    node.params = this.toAssignableList(params, true, "arrow function parameters");
    this.parseFunctionBody(node, true);
    return this.finishNode(node, "ArrowFunctionExpression");
  };

  pp$3.isStrictBody = function (node, isExpression) {
    if (!isExpression && node.body.directives.length) {
      for (var _iterator2 = node.body.directives, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var directive = _ref2;

        if (directive.value.value === "use strict") {
          return true;
        }
      }
    }

    return false;
  };

  // Parse function body and check parameters.
  pp$3.parseFunctionBody = function (node, allowExpression) {
    var isExpression = allowExpression && !this.match(types.braceL);

    var oldInAsync = this.state.inAsync;
    this.state.inAsync = node.async;
    if (isExpression) {
      node.body = this.parseMaybeAssign();
      node.expression = true;
    } else {
      // Start a new scope with regard to labels and the `inFunction`
      // flag (restore them to their old value afterwards).
      var oldInFunc = this.state.inFunction;
      var oldInGen = this.state.inGenerator;
      var oldLabels = this.state.labels;
      this.state.inFunction = true;this.state.inGenerator = node.generator;this.state.labels = [];
      node.body = this.parseBlock(true);
      node.expression = false;
      this.state.inFunction = oldInFunc;this.state.inGenerator = oldInGen;this.state.labels = oldLabels;
    }
    this.state.inAsync = oldInAsync;

    // If this is a strict mode function, verify that argument names
    // are not repeated, and it does not try to bind the words `eval`
    // or `arguments`.
    var isStrict = this.isStrictBody(node, isExpression);
    // Also check when allowExpression === true for arrow functions
    var checkLVal = this.state.strict || allowExpression || isStrict;

    if (isStrict && node.id && node.id.type === "Identifier" && node.id.name === "yield") {
      this.raise(node.id.start, "Binding yield in strict mode");
    }

    if (checkLVal) {
      var nameHash = Object.create(null);
      var oldStrict = this.state.strict;
      if (isStrict) this.state.strict = true;
      if (node.id) {
        this.checkLVal(node.id, true, undefined, "function name");
      }
      for (var _iterator3 = node.params, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
        var _ref3;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref3 = _i3.value;
        }

        var param = _ref3;

        if (isStrict && param.type !== "Identifier") {
          this.raise(param.start, "Non-simple parameter in strict mode");
        }
        this.checkLVal(param, true, nameHash, "function parameter list");
      }
      this.state.strict = oldStrict;
    }
  };

  // Parses a comma-separated list of expressions, and returns them as
  // an array. `close` is the token type that ends the list, and
  // `allowEmpty` can be turned on to allow subsequent commas with
  // nothing in between them to be parsed as `null` (which is needed
  // for array literals).

  pp$3.parseExprList = function (close, allowEmpty, refShorthandDefaultPos) {
    var elts = [];
    var first = true;

    while (!this.eat(close)) {
      if (first) {
        first = false;
      } else {
        this.expect(types.comma);
        if (this.eat(close)) break;
      }

      elts.push(this.parseExprListItem(allowEmpty, refShorthandDefaultPos));
    }
    return elts;
  };

  pp$3.parseExprListItem = function (allowEmpty, refShorthandDefaultPos, refNeedsArrowPos) {
    var elt = void 0;
    if (allowEmpty && this.match(types.comma)) {
      elt = null;
    } else if (this.match(types.ellipsis)) {
      elt = this.parseSpread(refShorthandDefaultPos);
    } else {
      elt = this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem, refNeedsArrowPos);
    }
    return elt;
  };

  // Parse the next token as an identifier. If `liberal` is true (used
  // when parsing properties), it will also convert keywords into
  // identifiers.

  pp$3.parseIdentifier = function (liberal) {
    var node = this.startNode();
    if (!liberal) {
      this.checkReservedWord(this.state.value, this.state.start, !!this.state.type.keyword, false);
    }

    if (this.match(types.name)) {
      node.name = this.state.value;
    } else if (this.state.type.keyword) {
      node.name = this.state.type.keyword;
    } else {
      this.unexpected();
    }

    if (!liberal && node.name === "await" && this.state.inAsync) {
      this.raise(node.start, "invalid use of await inside of an async function");
    }

    node.loc.identifierName = node.name;

    this.next();
    return this.finishNode(node, "Identifier");
  };

  pp$3.checkReservedWord = function (word, startLoc, checkKeywords, isBinding) {
    if (this.isReservedWord(word) || checkKeywords && this.isKeyword(word)) {
      this.raise(startLoc, word + " is a reserved word");
    }

    if (this.state.strict && (reservedWords.strict(word) || isBinding && reservedWords.strictBind(word))) {
      this.raise(startLoc, word + " is a reserved word in strict mode");
    }
  };

  // Parses await expression inside async function.

  pp$3.parseAwait = function (node) {
    // istanbul ignore next: this condition is checked at the call site so won't be hit here
    if (!this.state.inAsync) {
      this.unexpected();
    }
    if (this.match(types.star)) {
      this.raise(node.start, "await* has been removed from the async functions proposal. Use Promise.all() instead.");
    }
    node.argument = this.parseMaybeUnary();
    return this.finishNode(node, "AwaitExpression");
  };

  // Parses yield expression inside generator.

  pp$3.parseYield = function () {
    var node = this.startNode();
    this.next();
    if (this.match(types.semi) || this.canInsertSemicolon() || !this.match(types.star) && !this.state.type.startsExpr) {
      node.delegate = false;
      node.argument = null;
    } else {
      node.delegate = this.eat(types.star);
      node.argument = this.parseMaybeAssign();
    }
    return this.finishNode(node, "YieldExpression");
  };

  // Start an AST node, attaching a start offset.

  var pp$4 = Parser.prototype;
  var commentKeys = ["leadingComments", "trailingComments", "innerComments"];

  var Node = function () {
    function Node(pos, loc, filename) {
      classCallCheck(this, Node);

      this.type = "";
      this.start = pos;
      this.end = 0;
      this.loc = new SourceLocation(loc);
      if (filename) this.loc.filename = filename;
    }

    Node.prototype.__clone = function __clone() {
      var node2 = new Node();
      for (var key in this) {
        // Do not clone comments that are already attached to the node
        if (commentKeys.indexOf(key) < 0) {
          node2[key] = this[key];
        }
      }

      return node2;
    };

    return Node;
  }();

  pp$4.startNode = function () {
    return new Node(this.state.start, this.state.startLoc, this.filename);
  };

  pp$4.startNodeAt = function (pos, loc) {
    return new Node(pos, loc, this.filename);
  };

  function finishNodeAt(node, type, pos, loc) {
    node.type = type;
    node.end = pos;
    node.loc.end = loc;
    this.processComment(node);
    return node;
  }

  // Finish an AST node, adding `type` and `end` properties.

  pp$4.finishNode = function (node, type) {
    return finishNodeAt.call(this, node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);
  };

  // Finish node at given position

  pp$4.finishNodeAt = function (node, type, pos, loc) {
    return finishNodeAt.call(this, node, type, pos, loc);
  };

  var pp$5 = Parser.prototype;

  // This function is used to raise exceptions on parse errors. It
  // takes an offset integer (into the current `input`) to indicate
  // the location of the error, attaches the position to the end
  // of the error message, and then raises a `SyntaxError` with that
  // message.

  pp$5.raise = function (pos, message) {
    var loc = getLineInfo(this.input, pos);
    message += " (" + loc.line + ":" + loc.column + ")";
    var err = new SyntaxError(message);
    err.pos = pos;
    err.loc = loc;
    throw err;
  };

  /* eslint max-len: 0 */

  /**
   * Based on the comment attachment algorithm used in espree and estraverse.
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions are met:
   *
   * * Redistributions of source code must retain the above copyright
   *   notice, this list of conditions and the following disclaimer.
   * * Redistributions in binary form must reproduce the above copyright
   *   notice, this list of conditions and the following disclaimer in the
   *   documentation and/or other materials provided with the distribution.
   *
   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
   * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
   * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
   * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
   * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
   * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
   * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   */

  function last(stack) {
    return stack[stack.length - 1];
  }

  var pp$6 = Parser.prototype;

  pp$6.addComment = function (comment) {
    if (this.filename) comment.loc.filename = this.filename;
    this.state.trailingComments.push(comment);
    this.state.leadingComments.push(comment);
  };

  pp$6.processComment = function (node) {
    if (node.type === "Program" && node.body.length > 0) return;

    var stack = this.state.commentStack;

    var firstChild = void 0,
        lastChild = void 0,
        trailingComments = void 0,
        i = void 0,
        j = void 0;

    if (this.state.trailingComments.length > 0) {
      // If the first comment in trailingComments comes after the
      // current node, then we're good - all comments in the array will
      // come after the node and so it's safe to add them as official
      // trailingComments.
      if (this.state.trailingComments[0].start >= node.end) {
        trailingComments = this.state.trailingComments;
        this.state.trailingComments = [];
      } else {
        // Otherwise, if the first comment doesn't come after the
        // current node, that means we have a mix of leading and trailing
        // comments in the array and that leadingComments contains the
        // same items as trailingComments. Reset trailingComments to
        // zero items and we'll handle this by evaluating leadingComments
        // later.
        this.state.trailingComments.length = 0;
      }
    } else {
      var lastInStack = last(stack);
      if (stack.length > 0 && lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {
        trailingComments = lastInStack.trailingComments;
        lastInStack.trailingComments = null;
      }
    }

    // Eating the stack.
    if (stack.length > 0 && last(stack).start >= node.start) {
      firstChild = stack.pop();
    }

    while (stack.length > 0 && last(stack).start >= node.start) {
      lastChild = stack.pop();
    }

    if (!lastChild && firstChild) lastChild = firstChild;

    // Attach comments that follow a trailing comma on the last
    // property in an object literal or a trailing comma in function arguments
    // as trailing comments
    if (firstChild && this.state.leadingComments.length > 0) {
      var lastComment = last(this.state.leadingComments);

      if (firstChild.type === "ObjectProperty") {
        if (lastComment.start >= node.start) {
          if (this.state.commentPreviousNode) {
            for (j = 0; j < this.state.leadingComments.length; j++) {
              if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {
                this.state.leadingComments.splice(j, 1);
                j--;
              }
            }

            if (this.state.leadingComments.length > 0) {
              firstChild.trailingComments = this.state.leadingComments;
              this.state.leadingComments = [];
            }
          }
        }
      } else if (node.type === "CallExpression" && node.arguments && node.arguments.length) {
        var lastArg = last(node.arguments);

        if (lastArg && lastComment.start >= lastArg.start && lastComment.end <= node.end) {
          if (this.state.commentPreviousNode) {
            if (this.state.leadingComments.length > 0) {
              lastArg.trailingComments = this.state.leadingComments;
              this.state.leadingComments = [];
            }
          }
        }
      }
    }

    if (lastChild) {
      if (lastChild.leadingComments) {
        if (lastChild !== node && last(lastChild.leadingComments).end <= node.start) {
          node.leadingComments = lastChild.leadingComments;
          lastChild.leadingComments = null;
        } else {
          // A leading comment for an anonymous class had been stolen by its first ClassMethod,
          // so this takes back the leading comment.
          // See also: https://github.com/eslint/espree/issues/158
          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {
            if (lastChild.leadingComments[i].end <= node.start) {
              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);
              break;
            }
          }
        }
      }
    } else if (this.state.leadingComments.length > 0) {
      if (last(this.state.leadingComments).end <= node.start) {
        if (this.state.commentPreviousNode) {
          for (j = 0; j < this.state.leadingComments.length; j++) {
            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {
              this.state.leadingComments.splice(j, 1);
              j--;
            }
          }
        }
        if (this.state.leadingComments.length > 0) {
          node.leadingComments = this.state.leadingComments;
          this.state.leadingComments = [];
        }
      } else {
        // https://github.com/eslint/espree/issues/2
        //
        // In special cases, such as return (without a value) and
        // debugger, all comments will end up as leadingComments and
        // will otherwise be eliminated. This step runs when the
        // commentStack is empty and there are comments left
        // in leadingComments.
        //
        // This loop figures out the stopping point between the actual
        // leading and trailing comments by finding the location of the
        // first comment that comes after the given node.
        for (i = 0; i < this.state.leadingComments.length; i++) {
          if (this.state.leadingComments[i].end > node.start) {
            break;
          }
        }

        // Split the array based on the location of the first comment
        // that comes after the node. Keep in mind that this could
        // result in an empty array, and if so, the array must be
        // deleted.
        node.leadingComments = this.state.leadingComments.slice(0, i);
        if (node.leadingComments.length === 0) {
          node.leadingComments = null;
        }

        // Similarly, trailing comments are attached later. The variable
        // must be reset to null if there are no trailing comments.
        trailingComments = this.state.leadingComments.slice(i);
        if (trailingComments.length === 0) {
          trailingComments = null;
        }
      }
    }

    this.state.commentPreviousNode = node;

    if (trailingComments) {
      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {
        node.innerComments = trailingComments;
      } else {
        node.trailingComments = trailingComments;
      }
    }

    stack.push(node);
  };

  var pp$7 = Parser.prototype;

  pp$7.estreeParseRegExpLiteral = function (_ref) {
    var pattern = _ref.pattern,
        flags = _ref.flags;

    var regex = null;
    try {
      regex = new RegExp(pattern, flags);
    } catch (e) {
      // In environments that don't support these flags value will
      // be null as the regex can't be represented natively.
    }
    var node = this.estreeParseLiteral(regex);
    node.regex = { pattern: pattern, flags: flags };

    return node;
  };

  pp$7.estreeParseLiteral = function (value) {
    return this.parseLiteral(value, "Literal");
  };

  pp$7.directiveToStmt = function (directive) {
    var directiveLiteral = directive.value;

    var stmt = this.startNodeAt(directive.start, directive.loc.start);
    var expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);

    expression.value = directiveLiteral.value;
    expression.raw = directiveLiteral.extra.raw;

    stmt.expression = this.finishNodeAt(expression, "Literal", directiveLiteral.end, directiveLiteral.loc.end);
    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);

    return this.finishNodeAt(stmt, "ExpressionStatement", directive.end, directive.loc.end);
  };

  function isSimpleProperty(node) {
    return node && node.type === "Property" && node.kind === "init" && node.method === false;
  }

  var estreePlugin = function (instance) {
    instance.extend("checkDeclaration", function (inner) {
      return function (node) {
        if (isSimpleProperty(node)) {
          this.checkDeclaration(node.value);
        } else {
          inner.call(this, node);
        }
      };
    });

    instance.extend("checkGetterSetterParamCount", function () {
      return function (prop) {
        var paramCount = prop.kind === "get" ? 0 : 1;
        if (prop.value.params.length !== paramCount) {
          var start = prop.start;
          if (prop.kind === "get") {
            this.raise(start, "getter should have no params");
          } else {
            this.raise(start, "setter should have exactly one param");
          }
        }
      };
    });

    instance.extend("checkLVal", function (inner) {
      return function (expr, isBinding, checkClashes) {
        var _this = this;

        switch (expr.type) {
          case "ObjectPattern":
            expr.properties.forEach(function (prop) {
              _this.checkLVal(prop.type === "Property" ? prop.value : prop, isBinding, checkClashes, "object destructuring pattern");
            });
            break;
          default:
            for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
              args[_key - 3] = arguments[_key];
            }

            inner.call.apply(inner, [this, expr, isBinding, checkClashes].concat(args));
        }
      };
    });

    instance.extend("checkPropClash", function () {
      return function (prop, propHash) {
        if (prop.computed || !isSimpleProperty(prop)) return;

        var key = prop.key;
        // It is either an Identifier or a String/NumericLiteral
        var name = key.type === "Identifier" ? key.name : String(key.value);

        if (name === "__proto__") {
          if (propHash.proto) this.raise(key.start, "Redefinition of __proto__ property");
          propHash.proto = true;
        }
      };
    });

    instance.extend("isStrictBody", function () {
      return function (node, isExpression) {
        if (!isExpression && node.body.body.length > 0) {
          for (var _iterator = node.body.body, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
            var _ref2;

            if (_isArray) {
              if (_i >= _iterator.length) break;
              _ref2 = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref2 = _i.value;
            }

            var directive = _ref2;

            if (directive.type === "ExpressionStatement" && directive.expression.type === "Literal") {
              if (directive.expression.value === "use strict") return true;
            } else {
              // Break for the first non literal expression
              break;
            }
          }
        }

        return false;
      };
    });

    instance.extend("isValidDirective", function () {
      return function (stmt) {
        return stmt.type === "ExpressionStatement" && stmt.expression.type === "Literal" && typeof stmt.expression.value === "string" && (!stmt.expression.extra || !stmt.expression.extra.parenthesized);
      };
    });

    instance.extend("stmtToDirective", function (inner) {
      return function (stmt) {
        var directive = inner.call(this, stmt);
        var value = stmt.expression.value;

        // Reset value to the actual value as in estree mode we want
        // the stmt to have the real value and not the raw value
        directive.value.value = value;

        return directive;
      };
    });

    instance.extend("parseBlockBody", function (inner) {
      return function (node) {
        var _this2 = this;

        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }

        inner.call.apply(inner, [this, node].concat(args));

        node.directives.reverse().forEach(function (directive) {
          node.body.unshift(_this2.directiveToStmt(directive));
        });
        delete node.directives;
      };
    });

    instance.extend("parseClassMethod", function () {
      return function (classBody, method, isGenerator, isAsync) {
        this.parseMethod(method, isGenerator, isAsync);
        if (method.typeParameters) {
          method.value.typeParameters = method.typeParameters;
          delete method.typeParameters;
        }
        classBody.body.push(this.finishNode(method, "MethodDefinition"));
      };
    });

    instance.extend("parseExprAtom", function (inner) {
      return function () {
        switch (this.state.type) {
          case types.regexp:
            return this.estreeParseRegExpLiteral(this.state.value);

          case types.num:
          case types.string:
            return this.estreeParseLiteral(this.state.value);

          case types._null:
            return this.estreeParseLiteral(null);

          case types._true:
            return this.estreeParseLiteral(true);

          case types._false:
            return this.estreeParseLiteral(false);

          default:
            for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              args[_key3] = arguments[_key3];
            }

            return inner.call.apply(inner, [this].concat(args));
        }
      };
    });

    instance.extend("parseLiteral", function (inner) {
      return function () {
        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        var node = inner.call.apply(inner, [this].concat(args));
        node.raw = node.extra.raw;
        delete node.extra;

        return node;
      };
    });

    instance.extend("parseMethod", function (inner) {
      return function (node) {
        var funcNode = this.startNode();
        funcNode.kind = node.kind; // provide kind, so inner method correctly sets state

        for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
          args[_key5 - 1] = arguments[_key5];
        }

        funcNode = inner.call.apply(inner, [this, funcNode].concat(args));
        delete funcNode.kind;
        node.value = this.finishNode(funcNode, "FunctionExpression");

        return node;
      };
    });

    instance.extend("parseObjectMethod", function (inner) {
      return function () {
        for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
          args[_key6] = arguments[_key6];
        }

        var node = inner.call.apply(inner, [this].concat(args));

        if (node) {
          if (node.kind === "method") node.kind = "init";
          node.type = "Property";
        }

        return node;
      };
    });

    instance.extend("parseObjectProperty", function (inner) {
      return function () {
        for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
          args[_key7] = arguments[_key7];
        }

        var node = inner.call.apply(inner, [this].concat(args));

        if (node) {
          node.kind = "init";
          node.type = "Property";
        }

        return node;
      };
    });

    instance.extend("toAssignable", function (inner) {
      return function (node, isBinding) {
        for (var _len8 = arguments.length, args = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {
          args[_key8 - 2] = arguments[_key8];
        }

        if (isSimpleProperty(node)) {
          this.toAssignable.apply(this, [node.value, isBinding].concat(args));

          return node;
        } else if (node.type === "ObjectExpression") {
          node.type = "ObjectPattern";
          for (var _iterator2 = node.properties, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
            var _ref3;

            if (_isArray2) {
              if (_i2 >= _iterator2.length) break;
              _ref3 = _iterator2[_i2++];
            } else {
              _i2 = _iterator2.next();
              if (_i2.done) break;
              _ref3 = _i2.value;
            }

            var prop = _ref3;

            if (prop.kind === "get" || prop.kind === "set") {
              this.raise(prop.key.start, "Object pattern can't contain getter or setter");
            } else if (prop.method) {
              this.raise(prop.key.start, "Object pattern can't contain methods");
            } else {
              this.toAssignable(prop, isBinding, "object destructuring pattern");
            }
          }

          return node;
        }

        return inner.call.apply(inner, [this, node, isBinding].concat(args));
      };
    });
  };

  /* eslint max-len: 0 */

  var primitiveTypes = ["any", "mixed", "empty", "bool", "boolean", "number", "string", "void", "null"];

  var pp$8 = Parser.prototype;

  pp$8.flowParseTypeInitialiser = function (tok) {
    var oldInType = this.state.inType;
    this.state.inType = true;
    this.expect(tok || types.colon);

    var type = this.flowParseType();
    this.state.inType = oldInType;
    return type;
  };

  pp$8.flowParsePredicate = function () {
    var node = this.startNode();
    var moduloLoc = this.state.startLoc;
    var moduloPos = this.state.start;
    this.expect(types.modulo);
    var checksLoc = this.state.startLoc;
    this.expectContextual("checks");
    // Force '%' and 'checks' to be adjacent
    if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {
      this.raise(moduloPos, "Spaces between ´%´ and ´checks´ are not allowed here.");
    }
    if (this.eat(types.parenL)) {
      node.expression = this.parseExpression();
      this.expect(types.parenR);
      return this.finishNode(node, "DeclaredPredicate");
    } else {
      return this.finishNode(node, "InferredPredicate");
    }
  };

  pp$8.flowParseTypeAndPredicateInitialiser = function () {
    var oldInType = this.state.inType;
    this.state.inType = true;
    this.expect(types.colon);
    var type = null;
    var predicate = null;
    if (this.match(types.modulo)) {
      this.state.inType = oldInType;
      predicate = this.flowParsePredicate();
    } else {
      type = this.flowParseType();
      this.state.inType = oldInType;
      if (this.match(types.modulo)) {
        predicate = this.flowParsePredicate();
      }
    }
    return [type, predicate];
  };

  pp$8.flowParseDeclareClass = function (node) {
    this.next();
    this.flowParseInterfaceish(node, true);
    return this.finishNode(node, "DeclareClass");
  };

  pp$8.flowParseDeclareFunction = function (node) {
    this.next();

    var id = node.id = this.parseIdentifier();

    var typeNode = this.startNode();
    var typeContainer = this.startNode();

    if (this.isRelational("<")) {
      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      typeNode.typeParameters = null;
    }

    this.expect(types.parenL);
    var tmp = this.flowParseFunctionTypeParams();
    typeNode.params = tmp.params;
    typeNode.rest = tmp.rest;
    this.expect(types.parenR);
    var predicate = null;

    var _flowParseTypeAndPred = this.flowParseTypeAndPredicateInitialiser();

    typeNode.returnType = _flowParseTypeAndPred[0];
    predicate = _flowParseTypeAndPred[1];

    typeContainer.typeAnnotation = this.finishNode(typeNode, "FunctionTypeAnnotation");
    typeContainer.predicate = predicate;
    id.typeAnnotation = this.finishNode(typeContainer, "TypeAnnotation");

    this.finishNode(id, id.type);

    this.semicolon();

    return this.finishNode(node, "DeclareFunction");
  };

  pp$8.flowParseDeclare = function (node) {
    if (this.match(types._class)) {
      return this.flowParseDeclareClass(node);
    } else if (this.match(types._function)) {
      return this.flowParseDeclareFunction(node);
    } else if (this.match(types._var)) {
      return this.flowParseDeclareVariable(node);
    } else if (this.isContextual("module")) {
      if (this.lookahead().type === types.dot) {
        return this.flowParseDeclareModuleExports(node);
      } else {
        return this.flowParseDeclareModule(node);
      }
    } else if (this.isContextual("type")) {
      return this.flowParseDeclareTypeAlias(node);
    } else if (this.isContextual("opaque")) {
      return this.flowParseDeclareOpaqueType(node);
    } else if (this.isContextual("interface")) {
      return this.flowParseDeclareInterface(node);
    } else if (this.match(types._export)) {
      return this.flowParseDeclareExportDeclaration(node);
    } else {
      this.unexpected();
    }
  };

  pp$8.flowParseDeclareExportDeclaration = function (node) {
    this.expect(types._export);
    if (this.isContextual("opaque") // declare export opaque ...
    ) {
        node.declaration = this.flowParseDeclare(this.startNode());
        node.default = false;

        return this.finishNode(node, "DeclareExportDeclaration");
      }

    throw this.unexpected();
  };

  pp$8.flowParseDeclareVariable = function (node) {
    this.next();
    node.id = this.flowParseTypeAnnotatableIdentifier();
    this.semicolon();
    return this.finishNode(node, "DeclareVariable");
  };

  pp$8.flowParseDeclareModule = function (node) {
    this.next();

    if (this.match(types.string)) {
      node.id = this.parseExprAtom();
    } else {
      node.id = this.parseIdentifier();
    }

    var bodyNode = node.body = this.startNode();
    var body = bodyNode.body = [];
    this.expect(types.braceL);
    while (!this.match(types.braceR)) {
      var _bodyNode = this.startNode();

      if (this.match(types._import)) {
        var lookahead = this.lookahead();
        if (lookahead.value !== "type" && lookahead.value !== "typeof") {
          this.unexpected(null, "Imports within a `declare module` body must always be `import type` or `import typeof`");
        }

        this.parseImport(_bodyNode);
      } else {
        this.expectContextual("declare", "Only declares and type imports are allowed inside declare module");

        _bodyNode = this.flowParseDeclare(_bodyNode, true);
      }

      body.push(_bodyNode);
    }
    this.expect(types.braceR);

    this.finishNode(bodyNode, "BlockStatement");
    return this.finishNode(node, "DeclareModule");
  };

  pp$8.flowParseDeclareModuleExports = function (node) {
    this.expectContextual("module");
    this.expect(types.dot);
    this.expectContextual("exports");
    node.typeAnnotation = this.flowParseTypeAnnotation();
    this.semicolon();

    return this.finishNode(node, "DeclareModuleExports");
  };

  pp$8.flowParseDeclareTypeAlias = function (node) {
    this.next();
    this.flowParseTypeAlias(node);
    return this.finishNode(node, "DeclareTypeAlias");
  };

  pp$8.flowParseDeclareOpaqueType = function (node) {
    this.next();
    this.flowParseOpaqueType(node, true);
    return this.finishNode(node, "DeclareOpaqueType");
  };

  pp$8.flowParseDeclareInterface = function (node) {
    this.next();
    this.flowParseInterfaceish(node);
    return this.finishNode(node, "DeclareInterface");
  };

  // Interfaces

  pp$8.flowParseInterfaceish = function (node) {
    node.id = this.parseIdentifier();

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      node.typeParameters = null;
    }

    node.extends = [];
    node.mixins = [];

    if (this.eat(types._extends)) {
      do {
        node.extends.push(this.flowParseInterfaceExtends());
      } while (this.eat(types.comma));
    }

    if (this.isContextual("mixins")) {
      this.next();
      do {
        node.mixins.push(this.flowParseInterfaceExtends());
      } while (this.eat(types.comma));
    }

    node.body = this.flowParseObjectType(true, false, false);
  };

  pp$8.flowParseInterfaceExtends = function () {
    var node = this.startNode();

    node.id = this.flowParseQualifiedTypeIdentifier();
    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterInstantiation();
    } else {
      node.typeParameters = null;
    }

    return this.finishNode(node, "InterfaceExtends");
  };

  pp$8.flowParseInterface = function (node) {
    this.flowParseInterfaceish(node, false);
    return this.finishNode(node, "InterfaceDeclaration");
  };

  pp$8.flowParseRestrictedIdentifier = function (liberal) {
    if (primitiveTypes.indexOf(this.state.value) > -1) {
      this.raise(this.state.start, "Cannot overwrite primitive type " + this.state.value);
    }

    return this.parseIdentifier(liberal);
  };

  // Type aliases

  pp$8.flowParseTypeAlias = function (node) {
    node.id = this.flowParseRestrictedIdentifier();

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      node.typeParameters = null;
    }

    node.right = this.flowParseTypeInitialiser(types.eq);
    this.semicolon();

    return this.finishNode(node, "TypeAlias");
  };

  // Opaque type aliases

  pp$8.flowParseOpaqueType = function (node, declare) {
    this.expectContextual("type");
    node.id = this.flowParseRestrictedIdentifier();

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      node.typeParameters = null;
    }

    // Parse the supertype
    node.supertype = null;
    if (this.match(types.colon)) {
      node.supertype = this.flowParseTypeInitialiser(types.colon);
    }

    node.impltype = null;
    if (!declare) {
      node.impltype = this.flowParseTypeInitialiser(types.eq);
    }
    this.semicolon();

    return this.finishNode(node, "OpaqueType");
  };

  // Type annotations

  pp$8.flowParseTypeParameter = function () {
    var node = this.startNode();

    var variance = this.flowParseVariance();

    var ident = this.flowParseTypeAnnotatableIdentifier();
    node.name = ident.name;
    node.variance = variance;
    node.bound = ident.typeAnnotation;

    if (this.match(types.eq)) {
      this.eat(types.eq);
      node.default = this.flowParseType();
    }

    return this.finishNode(node, "TypeParameter");
  };

  pp$8.flowParseTypeParameterDeclaration = function () {
    var oldInType = this.state.inType;
    var node = this.startNode();
    node.params = [];

    this.state.inType = true;

    // istanbul ignore else: this condition is already checked at all call sites
    if (this.isRelational("<") || this.match(types.jsxTagStart)) {
      this.next();
    } else {
      this.unexpected();
    }

    do {
      node.params.push(this.flowParseTypeParameter());
      if (!this.isRelational(">")) {
        this.expect(types.comma);
      }
    } while (!this.isRelational(">"));
    this.expectRelational(">");

    this.state.inType = oldInType;

    return this.finishNode(node, "TypeParameterDeclaration");
  };

  pp$8.flowParseTypeParameterInstantiation = function () {
    var node = this.startNode();
    var oldInType = this.state.inType;
    node.params = [];

    this.state.inType = true;

    this.expectRelational("<");
    while (!this.isRelational(">")) {
      node.params.push(this.flowParseType());
      if (!this.isRelational(">")) {
        this.expect(types.comma);
      }
    }
    this.expectRelational(">");

    this.state.inType = oldInType;

    return this.finishNode(node, "TypeParameterInstantiation");
  };

  pp$8.flowParseObjectPropertyKey = function () {
    return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);
  };

  pp$8.flowParseObjectTypeIndexer = function (node, isStatic, variance) {
    node.static = isStatic;

    this.expect(types.bracketL);
    if (this.lookahead().type === types.colon) {
      node.id = this.flowParseObjectPropertyKey();
      node.key = this.flowParseTypeInitialiser();
    } else {
      node.id = null;
      node.key = this.flowParseType();
    }
    this.expect(types.bracketR);
    node.value = this.flowParseTypeInitialiser();
    node.variance = variance;

    this.flowObjectTypeSemicolon();
    return this.finishNode(node, "ObjectTypeIndexer");
  };

  pp$8.flowParseObjectTypeMethodish = function (node) {
    node.params = [];
    node.rest = null;
    node.typeParameters = null;

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    }

    this.expect(types.parenL);
    while (!this.match(types.parenR) && !this.match(types.ellipsis)) {
      node.params.push(this.flowParseFunctionTypeParam());
      if (!this.match(types.parenR)) {
        this.expect(types.comma);
      }
    }

    if (this.eat(types.ellipsis)) {
      node.rest = this.flowParseFunctionTypeParam();
    }
    this.expect(types.parenR);
    node.returnType = this.flowParseTypeInitialiser();

    return this.finishNode(node, "FunctionTypeAnnotation");
  };

  pp$8.flowParseObjectTypeMethod = function (startPos, startLoc, isStatic, key) {
    var node = this.startNodeAt(startPos, startLoc);
    node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(startPos, startLoc));
    node.static = isStatic;
    node.key = key;
    node.optional = false;
    this.flowObjectTypeSemicolon();
    return this.finishNode(node, "ObjectTypeProperty");
  };

  pp$8.flowParseObjectTypeCallProperty = function (node, isStatic) {
    var valueNode = this.startNode();
    node.static = isStatic;
    node.value = this.flowParseObjectTypeMethodish(valueNode);
    this.flowObjectTypeSemicolon();
    return this.finishNode(node, "ObjectTypeCallProperty");
  };

  pp$8.flowParseObjectType = function (allowStatic, allowExact, allowSpread) {
    var oldInType = this.state.inType;
    this.state.inType = true;

    var nodeStart = this.startNode();
    var node = void 0;
    var propertyKey = void 0;
    var isStatic = false;

    nodeStart.callProperties = [];
    nodeStart.properties = [];
    nodeStart.indexers = [];

    var endDelim = void 0;
    var exact = void 0;
    if (allowExact && this.match(types.braceBarL)) {
      this.expect(types.braceBarL);
      endDelim = types.braceBarR;
      exact = true;
    } else {
      this.expect(types.braceL);
      endDelim = types.braceR;
      exact = false;
    }

    nodeStart.exact = exact;

    while (!this.match(endDelim)) {
      var optional = false;
      var startPos = this.state.start;
      var startLoc = this.state.startLoc;
      node = this.startNode();
      if (allowStatic && this.isContextual("static") && this.lookahead().type !== types.colon) {
        this.next();
        isStatic = true;
      }

      var variancePos = this.state.start;
      var variance = this.flowParseVariance();

      if (this.match(types.bracketL)) {
        nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));
      } else if (this.match(types.parenL) || this.isRelational("<")) {
        if (variance) {
          this.unexpected(variancePos);
        }
        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));
      } else {
        if (this.match(types.ellipsis)) {
          if (!allowSpread) {
            this.unexpected(null, "Spread operator cannot appear in class or interface definitions");
          }
          if (variance) {
            this.unexpected(variance.start, "Spread properties cannot have variance");
          }
          this.expect(types.ellipsis);
          node.argument = this.flowParseType();
          this.flowObjectTypeSemicolon();
          nodeStart.properties.push(this.finishNode(node, "ObjectTypeSpreadProperty"));
        } else {
          propertyKey = this.flowParseObjectPropertyKey();
          if (this.isRelational("<") || this.match(types.parenL)) {
            // This is a method property
            if (variance) {
              this.unexpected(variance.start);
            }
            nodeStart.properties.push(this.flowParseObjectTypeMethod(startPos, startLoc, isStatic, propertyKey));
          } else {
            if (this.eat(types.question)) {
              optional = true;
            }
            node.key = propertyKey;
            node.value = this.flowParseTypeInitialiser();
            node.optional = optional;
            node.static = isStatic;
            node.variance = variance;
            this.flowObjectTypeSemicolon();
            nodeStart.properties.push(this.finishNode(node, "ObjectTypeProperty"));
          }
        }
      }

      isStatic = false;
    }

    this.expect(endDelim);

    var out = this.finishNode(nodeStart, "ObjectTypeAnnotation");

    this.state.inType = oldInType;

    return out;
  };

  pp$8.flowObjectTypeSemicolon = function () {
    if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {
      this.unexpected();
    }
  };

  pp$8.flowParseQualifiedTypeIdentifier = function (startPos, startLoc, id) {
    startPos = startPos || this.state.start;
    startLoc = startLoc || this.state.startLoc;
    var node = id || this.parseIdentifier();

    while (this.eat(types.dot)) {
      var node2 = this.startNodeAt(startPos, startLoc);
      node2.qualification = node;
      node2.id = this.parseIdentifier();
      node = this.finishNode(node2, "QualifiedTypeIdentifier");
    }

    return node;
  };

  pp$8.flowParseGenericType = function (startPos, startLoc, id) {
    var node = this.startNodeAt(startPos, startLoc);

    node.typeParameters = null;
    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterInstantiation();
    }

    return this.finishNode(node, "GenericTypeAnnotation");
  };

  pp$8.flowParseTypeofType = function () {
    var node = this.startNode();
    this.expect(types._typeof);
    node.argument = this.flowParsePrimaryType();
    return this.finishNode(node, "TypeofTypeAnnotation");
  };

  pp$8.flowParseTupleType = function () {
    var node = this.startNode();
    node.types = [];
    this.expect(types.bracketL);
    // We allow trailing commas
    while (this.state.pos < this.input.length && !this.match(types.bracketR)) {
      node.types.push(this.flowParseType());
      if (this.match(types.bracketR)) break;
      this.expect(types.comma);
    }
    this.expect(types.bracketR);
    return this.finishNode(node, "TupleTypeAnnotation");
  };

  pp$8.flowParseFunctionTypeParam = function () {
    var name = null;
    var optional = false;
    var typeAnnotation = null;
    var node = this.startNode();
    var lh = this.lookahead();
    if (lh.type === types.colon || lh.type === types.question) {
      name = this.parseIdentifier();
      if (this.eat(types.question)) {
        optional = true;
      }
      typeAnnotation = this.flowParseTypeInitialiser();
    } else {
      typeAnnotation = this.flowParseType();
    }
    node.name = name;
    node.optional = optional;
    node.typeAnnotation = typeAnnotation;
    return this.finishNode(node, "FunctionTypeParam");
  };

  pp$8.reinterpretTypeAsFunctionTypeParam = function (type) {
    var node = this.startNodeAt(type.start, type.loc.start);
    node.name = null;
    node.optional = false;
    node.typeAnnotation = type;
    return this.finishNode(node, "FunctionTypeParam");
  };

  pp$8.flowParseFunctionTypeParams = function () {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    var ret = { params: params, rest: null };
    while (!this.match(types.parenR) && !this.match(types.ellipsis)) {
      ret.params.push(this.flowParseFunctionTypeParam());
      if (!this.match(types.parenR)) {
        this.expect(types.comma);
      }
    }
    if (this.eat(types.ellipsis)) {
      ret.rest = this.flowParseFunctionTypeParam();
    }
    return ret;
  };

  pp$8.flowIdentToTypeAnnotation = function (startPos, startLoc, node, id) {
    switch (id.name) {
      case "any":
        return this.finishNode(node, "AnyTypeAnnotation");

      case "void":
        return this.finishNode(node, "VoidTypeAnnotation");

      case "bool":
      case "boolean":
        return this.finishNode(node, "BooleanTypeAnnotation");

      case "mixed":
        return this.finishNode(node, "MixedTypeAnnotation");

      case "empty":
        return this.finishNode(node, "EmptyTypeAnnotation");

      case "number":
        return this.finishNode(node, "NumberTypeAnnotation");

      case "string":
        return this.finishNode(node, "StringTypeAnnotation");

      default:
        return this.flowParseGenericType(startPos, startLoc, id);
    }
  };

  // The parsing of types roughly parallels the parsing of expressions, and
  // primary types are kind of like primary expressions...they're the
  // primitives with which other types are constructed.
  pp$8.flowParsePrimaryType = function () {
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    var node = this.startNode();
    var tmp = void 0;
    var type = void 0;
    var isGroupedType = false;
    var oldNoAnonFunctionType = this.state.noAnonFunctionType;

    switch (this.state.type) {
      case types.name:
        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());

      case types.braceL:
        return this.flowParseObjectType(false, false, true);

      case types.braceBarL:
        return this.flowParseObjectType(false, true, true);

      case types.bracketL:
        return this.flowParseTupleType();

      case types.relational:
        if (this.state.value === "<") {
          node.typeParameters = this.flowParseTypeParameterDeclaration();
          this.expect(types.parenL);
          tmp = this.flowParseFunctionTypeParams();
          node.params = tmp.params;
          node.rest = tmp.rest;
          this.expect(types.parenR);

          this.expect(types.arrow);

          node.returnType = this.flowParseType();

          return this.finishNode(node, "FunctionTypeAnnotation");
        }
        break;

      case types.parenL:
        this.next();

        // Check to see if this is actually a grouped type
        if (!this.match(types.parenR) && !this.match(types.ellipsis)) {
          if (this.match(types.name)) {
            var token = this.lookahead().type;
            isGroupedType = token !== types.question && token !== types.colon;
          } else {
            isGroupedType = true;
          }
        }

        if (isGroupedType) {
          this.state.noAnonFunctionType = false;
          type = this.flowParseType();
          this.state.noAnonFunctionType = oldNoAnonFunctionType;

          // A `,` or a `) =>` means this is an anonymous function type
          if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {
            this.expect(types.parenR);
            return type;
          } else {
            // Eat a comma if there is one
            this.eat(types.comma);
          }
        }

        if (type) {
          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);
        } else {
          tmp = this.flowParseFunctionTypeParams();
        }

        node.params = tmp.params;
        node.rest = tmp.rest;

        this.expect(types.parenR);

        this.expect(types.arrow);

        node.returnType = this.flowParseType();

        node.typeParameters = null;

        return this.finishNode(node, "FunctionTypeAnnotation");

      case types.string:
        return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");

      case types._true:case types._false:
        node.value = this.match(types._true);
        this.next();
        return this.finishNode(node, "BooleanLiteralTypeAnnotation");

      case types.plusMin:
        if (this.state.value === "-") {
          this.next();
          if (!this.match(types.num)) this.unexpected(null, "Unexpected token, expected number");

          return this.parseLiteral(-this.state.value, "NumericLiteralTypeAnnotation", node.start, node.loc.start);
        }

        this.unexpected();
      case types.num:
        return this.parseLiteral(this.state.value, "NumericLiteralTypeAnnotation");

      case types._null:
        node.value = this.match(types._null);
        this.next();
        return this.finishNode(node, "NullLiteralTypeAnnotation");

      case types._this:
        node.value = this.match(types._this);
        this.next();
        return this.finishNode(node, "ThisTypeAnnotation");

      case types.star:
        this.next();
        return this.finishNode(node, "ExistentialTypeParam");

      default:
        if (this.state.type.keyword === "typeof") {
          return this.flowParseTypeofType();
        }
    }

    this.unexpected();
  };

  pp$8.flowParsePostfixType = function () {
    var startPos = this.state.start,
        startLoc = this.state.startLoc;
    var type = this.flowParsePrimaryType();
    while (!this.canInsertSemicolon() && this.match(types.bracketL)) {
      var node = this.startNodeAt(startPos, startLoc);
      node.elementType = type;
      this.expect(types.bracketL);
      this.expect(types.bracketR);
      type = this.finishNode(node, "ArrayTypeAnnotation");
    }
    return type;
  };

  pp$8.flowParsePrefixType = function () {
    var node = this.startNode();
    if (this.eat(types.question)) {
      node.typeAnnotation = this.flowParsePrefixType();
      return this.finishNode(node, "NullableTypeAnnotation");
    } else {
      return this.flowParsePostfixType();
    }
  };

  pp$8.flowParseAnonFunctionWithoutParens = function () {
    var param = this.flowParsePrefixType();
    if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {
      var node = this.startNodeAt(param.start, param.loc.start);
      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];
      node.rest = null;
      node.returnType = this.flowParseType();
      node.typeParameters = null;
      return this.finishNode(node, "FunctionTypeAnnotation");
    }
    return param;
  };

  pp$8.flowParseIntersectionType = function () {
    var node = this.startNode();
    this.eat(types.bitwiseAND);
    var type = this.flowParseAnonFunctionWithoutParens();
    node.types = [type];
    while (this.eat(types.bitwiseAND)) {
      node.types.push(this.flowParseAnonFunctionWithoutParens());
    }
    return node.types.length === 1 ? type : this.finishNode(node, "IntersectionTypeAnnotation");
  };

  pp$8.flowParseUnionType = function () {
    var node = this.startNode();
    this.eat(types.bitwiseOR);
    var type = this.flowParseIntersectionType();
    node.types = [type];
    while (this.eat(types.bitwiseOR)) {
      node.types.push(this.flowParseIntersectionType());
    }
    return node.types.length === 1 ? type : this.finishNode(node, "UnionTypeAnnotation");
  };

  pp$8.flowParseType = function () {
    var oldInType = this.state.inType;
    this.state.inType = true;
    var type = this.flowParseUnionType();
    this.state.inType = oldInType;
    return type;
  };

  pp$8.flowParseTypeAnnotation = function () {
    var node = this.startNode();
    node.typeAnnotation = this.flowParseTypeInitialiser();
    return this.finishNode(node, "TypeAnnotation");
  };

  pp$8.flowParseTypeAndPredicateAnnotation = function () {
    var node = this.startNode();

    var _flowParseTypeAndPred2 = this.flowParseTypeAndPredicateInitialiser();

    node.typeAnnotation = _flowParseTypeAndPred2[0];
    node.predicate = _flowParseTypeAndPred2[1];

    return this.finishNode(node, "TypeAnnotation");
  };

  pp$8.flowParseTypeAnnotatableIdentifier = function () {
    var ident = this.flowParseRestrictedIdentifier();
    if (this.match(types.colon)) {
      ident.typeAnnotation = this.flowParseTypeAnnotation();
      this.finishNode(ident, ident.type);
    }
    return ident;
  };

  pp$8.typeCastToParameter = function (node) {
    node.expression.typeAnnotation = node.typeAnnotation;

    return this.finishNodeAt(node.expression, node.expression.type, node.typeAnnotation.end, node.typeAnnotation.loc.end);
  };

  pp$8.flowParseVariance = function () {
    var variance = null;
    if (this.match(types.plusMin)) {
      if (this.state.value === "+") {
        variance = "plus";
      } else if (this.state.value === "-") {
        variance = "minus";
      }
      this.next();
    }
    return variance;
  };

  var flowPlugin = function (instance) {
    // plain function return types: function name(): string {}
    instance.extend("parseFunctionBody", function (inner) {
      return function (node, allowExpression) {
        if (this.match(types.colon) && !allowExpression) {
          // if allowExpression is true then we're parsing an arrow function and if
          // there's a return type then it's been handled elsewhere
          node.returnType = this.flowParseTypeAndPredicateAnnotation();
        }

        return inner.call(this, node, allowExpression);
      };
    });

    // interfaces
    instance.extend("parseStatement", function (inner) {
      return function (declaration, topLevel) {
        // strict mode handling of `interface` since it's a reserved word
        if (this.state.strict && this.match(types.name) && this.state.value === "interface") {
          var node = this.startNode();
          this.next();
          return this.flowParseInterface(node);
        } else {
          return inner.call(this, declaration, topLevel);
        }
      };
    });

    // declares, interfaces and type aliases
    instance.extend("parseExpressionStatement", function (inner) {
      return function (node, expr) {
        if (expr.type === "Identifier") {
          if (expr.name === "declare") {
            if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {
              return this.flowParseDeclare(node);
            }
          } else if (this.match(types.name)) {
            if (expr.name === "interface") {
              return this.flowParseInterface(node);
            } else if (expr.name === "type") {
              return this.flowParseTypeAlias(node);
            } else if (expr.name === "opaque") {
              return this.flowParseOpaqueType(node, false);
            }
          }
        }

        return inner.call(this, node, expr);
      };
    });

    // export type
    instance.extend("shouldParseExportDeclaration", function (inner) {
      return function () {
        return this.isContextual("type") || this.isContextual("interface") || this.isContextual("opaque") || inner.call(this);
      };
    });

    instance.extend("isExportDefaultSpecifier", function (inner) {
      return function () {
        if (this.match(types.name) && (this.state.value === "type" || this.state.value === "interface" || this.state.value === "opaque")) {
          return false;
        }

        return inner.call(this);
      };
    });

    instance.extend("parseConditional", function (inner) {
      return function (expr, noIn, startPos, startLoc, refNeedsArrowPos) {
        // only do the expensive clone if there is a question mark
        // and if we come from inside parens
        if (refNeedsArrowPos && this.match(types.question)) {
          var state = this.state.clone();
          try {
            return inner.call(this, expr, noIn, startPos, startLoc);
          } catch (err) {
            if (err instanceof SyntaxError) {
              this.state = state;
              refNeedsArrowPos.start = err.pos || this.state.start;
              return expr;
            } else {
              // istanbul ignore next: no such error is expected
              throw err;
            }
          }
        }

        return inner.call(this, expr, noIn, startPos, startLoc);
      };
    });

    instance.extend("parseParenItem", function (inner) {
      return function (node, startPos, startLoc) {
        node = inner.call(this, node, startPos, startLoc);
        if (this.eat(types.question)) {
          node.optional = true;
        }

        if (this.match(types.colon)) {
          var typeCastNode = this.startNodeAt(startPos, startLoc);
          typeCastNode.expression = node;
          typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();

          return this.finishNode(typeCastNode, "TypeCastExpression");
        }

        return node;
      };
    });

    instance.extend("parseExport", function (inner) {
      return function (node) {
        node = inner.call(this, node);
        if (node.type === "ExportNamedDeclaration") {
          node.exportKind = node.exportKind || "value";
        }
        return node;
      };
    });

    instance.extend("parseExportDeclaration", function (inner) {
      return function (node) {
        if (this.isContextual("type")) {
          node.exportKind = "type";

          var declarationNode = this.startNode();
          this.next();

          if (this.match(types.braceL)) {
            // export type { foo, bar };
            node.specifiers = this.parseExportSpecifiers();
            this.parseExportFrom(node);
            return null;
          } else {
            // export type Foo = Bar;
            return this.flowParseTypeAlias(declarationNode);
          }
        } else if (this.isContextual("opaque")) {
          node.exportKind = "type";

          var _declarationNode = this.startNode();
          this.next();
          // export opaque type Foo = Bar;
          return this.flowParseOpaqueType(_declarationNode, false);
        } else if (this.isContextual("interface")) {
          node.exportKind = "type";
          var _declarationNode2 = this.startNode();
          this.next();
          return this.flowParseInterface(_declarationNode2);
        } else {
          return inner.call(this, node);
        }
      };
    });

    instance.extend("parseClassId", function (inner) {
      return function (node) {
        inner.apply(this, arguments);
        if (this.isRelational("<")) {
          node.typeParameters = this.flowParseTypeParameterDeclaration();
        }
      };
    });

    // don't consider `void` to be a keyword as then it'll use the void token type
    // and set startExpr
    instance.extend("isKeyword", function (inner) {
      return function (name) {
        if (this.state.inType && name === "void") {
          return false;
        } else {
          return inner.call(this, name);
        }
      };
    });

    // ensure that inside flow types, we bypass the jsx parser plugin
    instance.extend("readToken", function (inner) {
      return function (code) {
        if (this.state.inType && (code === 62 || code === 60)) {
          return this.finishOp(types.relational, 1);
        } else {
          return inner.call(this, code);
        }
      };
    });

    // don't lex any token as a jsx one inside a flow type
    instance.extend("jsx_readToken", function (inner) {
      return function () {
        if (!this.state.inType) return inner.call(this);
      };
    });

    instance.extend("toAssignable", function (inner) {
      return function (node, isBinding, contextDescription) {
        if (node.type === "TypeCastExpression") {
          return inner.call(this, this.typeCastToParameter(node), isBinding, contextDescription);
        } else {
          return inner.call(this, node, isBinding, contextDescription);
        }
      };
    });

    // turn type casts that we found in function parameter head into type annotated params
    instance.extend("toAssignableList", function (inner) {
      return function (exprList, isBinding, contextDescription) {
        for (var i = 0; i < exprList.length; i++) {
          var expr = exprList[i];
          if (expr && expr.type === "TypeCastExpression") {
            exprList[i] = this.typeCastToParameter(expr);
          }
        }
        return inner.call(this, exprList, isBinding, contextDescription);
      };
    });

    // this is a list of nodes, from something like a call expression, we need to filter the
    // type casts that we've found that are illegal in this context
    instance.extend("toReferencedList", function () {
      return function (exprList) {
        for (var i = 0; i < exprList.length; i++) {
          var expr = exprList[i];
          if (expr && expr._exprListItem && expr.type === "TypeCastExpression") {
            this.raise(expr.start, "Unexpected type cast");
          }
        }

        return exprList;
      };
    });

    // parse an item inside a expression list eg. `(NODE, NODE)` where NODE represents
    // the position where this function is called
    instance.extend("parseExprListItem", function (inner) {
      return function () {
        var container = this.startNode();

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var node = inner.call.apply(inner, [this].concat(args));
        if (this.match(types.colon)) {
          container._exprListItem = true;
          container.expression = node;
          container.typeAnnotation = this.flowParseTypeAnnotation();
          return this.finishNode(container, "TypeCastExpression");
        } else {
          return node;
        }
      };
    });

    instance.extend("checkLVal", function (inner) {
      return function (node) {
        if (node.type !== "TypeCastExpression") {
          return inner.apply(this, arguments);
        }
      };
    });

    // parse class property type annotations
    instance.extend("parseClassProperty", function (inner) {
      return function (node) {
        delete node.variancePos;
        if (this.match(types.colon)) {
          node.typeAnnotation = this.flowParseTypeAnnotation();
        }
        return inner.call(this, node);
      };
    });

    // determine whether or not we're currently in the position where a class method would appear
    instance.extend("isClassMethod", function (inner) {
      return function () {
        return this.isRelational("<") || inner.call(this);
      };
    });

    // determine whether or not we're currently in the position where a class property would appear
    instance.extend("isClassProperty", function (inner) {
      return function () {
        return this.match(types.colon) || inner.call(this);
      };
    });

    instance.extend("isNonstaticConstructor", function (inner) {
      return function (method) {
        return !this.match(types.colon) && inner.call(this, method);
      };
    });

    // parse type parameters for class methods
    instance.extend("parseClassMethod", function (inner) {
      return function (classBody, method) {
        if (method.variance) {
          this.unexpected(method.variancePos);
        }
        delete method.variance;
        delete method.variancePos;
        if (this.isRelational("<")) {
          method.typeParameters = this.flowParseTypeParameterDeclaration();
        }

        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }

        inner.call.apply(inner, [this, classBody, method].concat(args));
      };
    });

    // parse a the super class type parameters and implements
    instance.extend("parseClassSuper", function (inner) {
      return function (node, isStatement) {
        inner.call(this, node, isStatement);
        if (node.superClass && this.isRelational("<")) {
          node.superTypeParameters = this.flowParseTypeParameterInstantiation();
        }
        if (this.isContextual("implements")) {
          this.next();
          var implemented = node.implements = [];
          do {
            var _node = this.startNode();
            _node.id = this.parseIdentifier();
            if (this.isRelational("<")) {
              _node.typeParameters = this.flowParseTypeParameterInstantiation();
            } else {
              _node.typeParameters = null;
            }
            implemented.push(this.finishNode(_node, "ClassImplements"));
          } while (this.eat(types.comma));
        }
      };
    });

    instance.extend("parsePropertyName", function (inner) {
      return function (node) {
        var variancePos = this.state.start;
        var variance = this.flowParseVariance();
        var key = inner.call(this, node);
        node.variance = variance;
        node.variancePos = variancePos;
        return key;
      };
    });

    // parse type parameters for object method shorthand
    instance.extend("parseObjPropValue", function (inner) {
      return function (prop) {
        if (prop.variance) {
          this.unexpected(prop.variancePos);
        }
        delete prop.variance;
        delete prop.variancePos;

        var typeParameters = void 0;

        // method shorthand
        if (this.isRelational("<")) {
          typeParameters = this.flowParseTypeParameterDeclaration();
          if (!this.match(types.parenL)) this.unexpected();
        }

        inner.apply(this, arguments);

        // add typeParameters if we found them
        if (typeParameters) {
          (prop.value || prop).typeParameters = typeParameters;
        }
      };
    });

    instance.extend("parseAssignableListItemTypes", function () {
      return function (param) {
        if (this.eat(types.question)) {
          param.optional = true;
        }
        if (this.match(types.colon)) {
          param.typeAnnotation = this.flowParseTypeAnnotation();
        }
        this.finishNode(param, param.type);
        return param;
      };
    });

    instance.extend("parseMaybeDefault", function (inner) {
      return function () {
        for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }

        var node = inner.apply(this, args);

        if (node.type === "AssignmentPattern" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {
          this.raise(node.typeAnnotation.start, "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`");
        }

        return node;
      };
    });

    // parse typeof and type imports
    instance.extend("parseImportSpecifiers", function (inner) {
      return function (node) {
        node.importKind = "value";

        var kind = null;
        if (this.match(types._typeof)) {
          kind = "typeof";
        } else if (this.isContextual("type")) {
          kind = "type";
        }
        if (kind) {
          var lh = this.lookahead();
          if (lh.type === types.name && lh.value !== "from" || lh.type === types.braceL || lh.type === types.star) {
            this.next();
            node.importKind = kind;
          }
        }

        inner.call(this, node);
      };
    });

    // parse import-type/typeof shorthand
    instance.extend("parseImportSpecifier", function () {
      return function (node) {
        var specifier = this.startNode();
        var firstIdentLoc = this.state.start;
        var firstIdent = this.parseIdentifier(true);

        var specifierTypeKind = null;
        if (firstIdent.name === "type") {
          specifierTypeKind = "type";
        } else if (firstIdent.name === "typeof") {
          specifierTypeKind = "typeof";
        }

        var isBinding = false;
        if (this.isContextual("as")) {
          var as_ident = this.parseIdentifier(true);
          if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {
            // `import {type as ,` or `import {type as }`
            specifier.imported = as_ident;
            specifier.importKind = specifierTypeKind;
            specifier.local = as_ident.__clone();
          } else {
            // `import {type as foo`
            specifier.imported = firstIdent;
            specifier.importKind = null;
            specifier.local = this.parseIdentifier();
          }
        } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {
          // `import {type foo`
          specifier.imported = this.parseIdentifier(true);
          specifier.importKind = specifierTypeKind;
          if (this.eatContextual("as")) {
            specifier.local = this.parseIdentifier();
          } else {
            isBinding = true;
            specifier.local = specifier.imported.__clone();
          }
        } else {
          isBinding = true;
          specifier.imported = firstIdent;
          specifier.importKind = null;
          specifier.local = specifier.imported.__clone();
        }

        if ((node.importKind === "type" || node.importKind === "typeof") && (specifier.importKind === "type" || specifier.importKind === "typeof")) {
          this.raise(firstIdentLoc, "`The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements`");
        }

        if (isBinding) this.checkReservedWord(specifier.local.name, specifier.start, true, true);

        this.checkLVal(specifier.local, true, undefined, "import specifier");
        node.specifiers.push(this.finishNode(specifier, "ImportSpecifier"));
      };
    });

    // parse function type parameters - function foo<T>() {}
    instance.extend("parseFunctionParams", function (inner) {
      return function (node) {
        if (this.isRelational("<")) {
          node.typeParameters = this.flowParseTypeParameterDeclaration();
        }
        inner.call(this, node);
      };
    });

    // parse flow type annotations on variable declarator heads - let foo: string = bar
    instance.extend("parseVarHead", function (inner) {
      return function (decl) {
        inner.call(this, decl);
        if (this.match(types.colon)) {
          decl.id.typeAnnotation = this.flowParseTypeAnnotation();
          this.finishNode(decl.id, decl.id.type);
        }
      };
    });

    // parse the return type of an async arrow function - let foo = (async (): number => {});
    instance.extend("parseAsyncArrowFromCallExpression", function (inner) {
      return function (node, call) {
        if (this.match(types.colon)) {
          var oldNoAnonFunctionType = this.state.noAnonFunctionType;
          this.state.noAnonFunctionType = true;
          node.returnType = this.flowParseTypeAnnotation();
          this.state.noAnonFunctionType = oldNoAnonFunctionType;
        }

        return inner.call(this, node, call);
      };
    });

    // todo description
    instance.extend("shouldParseAsyncArrow", function (inner) {
      return function () {
        return this.match(types.colon) || inner.call(this);
      };
    });

    // We need to support type parameter declarations for arrow functions. This
    // is tricky. There are three situations we need to handle
    //
    // 1. This is either JSX or an arrow function. We'll try JSX first. If that
    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX
    //    error.
    // 2. This is an arrow function. We'll parse the type parameter declaration,
    //    parse the rest, make sure the rest is an arrow function, and go from
    //    there
    // 3. This is neither. Just call the inner function
    instance.extend("parseMaybeAssign", function (inner) {
      return function () {
        var jsxError = null;

        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        if (types.jsxTagStart && this.match(types.jsxTagStart)) {
          var state = this.state.clone();
          try {
            return inner.apply(this, args);
          } catch (err) {
            if (err instanceof SyntaxError) {
              this.state = state;

              // Remove `tc.j_expr` and `tc.j_oTag` from context added
              // by parsing `jsxTagStart` to stop the JSX plugin from
              // messing with the tokens
              this.state.context.length -= 2;

              jsxError = err;
            } else {
              // istanbul ignore next: no such error is expected
              throw err;
            }
          }
        }

        if (jsxError != null || this.isRelational("<")) {
          var arrowExpression = void 0;
          var typeParameters = void 0;
          try {
            typeParameters = this.flowParseTypeParameterDeclaration();

            arrowExpression = inner.apply(this, args);
            arrowExpression.typeParameters = typeParameters;
            arrowExpression.start = typeParameters.start;
            arrowExpression.loc.start = typeParameters.loc.start;
          } catch (err) {
            throw jsxError || err;
          }

          if (arrowExpression.type === "ArrowFunctionExpression") {
            return arrowExpression;
          } else if (jsxError != null) {
            throw jsxError;
          } else {
            this.raise(typeParameters.start, "Expected an arrow function after this type parameter declaration");
          }
        }

        return inner.apply(this, args);
      };
    });

    // handle return types for arrow functions
    instance.extend("parseArrow", function (inner) {
      return function (node) {
        if (this.match(types.colon)) {
          var state = this.state.clone();
          try {
            var oldNoAnonFunctionType = this.state.noAnonFunctionType;
            this.state.noAnonFunctionType = true;
            var returnType = this.flowParseTypeAndPredicateAnnotation();
            this.state.noAnonFunctionType = oldNoAnonFunctionType;

            if (this.canInsertSemicolon()) this.unexpected();
            if (!this.match(types.arrow)) this.unexpected();
            // assign after it is clear it is an arrow
            node.returnType = returnType;
          } catch (err) {
            if (err instanceof SyntaxError) {
              this.state = state;
            } else {
              // istanbul ignore next: no such error is expected
              throw err;
            }
          }
        }

        return inner.call(this, node);
      };
    });

    instance.extend("shouldParseArrow", function (inner) {
      return function () {
        return this.match(types.colon) || inner.call(this);
      };
    });
  };

  // Adapted from String.fromcodepoint to export the function without modifying String
  /*! https://mths.be/fromcodepoint v0.2.1 by @mathias */

  // The MIT License (MIT)
  // Copyright (c) Mathias Bynens
  //
  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
  // associated documentation files (the "Software"), to deal in the Software without restriction,
  // including without limitation the rights to use, copy, modify, merge, publish, distribute,
  // sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
  // furnished to do so, subject to the following conditions:
  //
  // The above copyright notice and this permission notice shall be included in all copies or
  // substantial portions of the Software.
  //
  // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
  // NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  // NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

  var fromCodePoint = String.fromCodePoint;

  if (!fromCodePoint) {
    var stringFromCharCode = String.fromCharCode;
    var floor = Math.floor;
    fromCodePoint = function fromCodePoint() {
      var MAX_SIZE = 0x4000;
      var codeUnits = [];
      var highSurrogate = void 0;
      var lowSurrogate = void 0;
      var index = -1;
      var length = arguments.length;
      if (!length) {
        return "";
      }
      var result = "";
      while (++index < length) {
        var codePoint = Number(arguments[index]);
        if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`
        codePoint < 0 || // not a valid Unicode code point
        codePoint > 0x10FFFF || // not a valid Unicode code point
        floor(codePoint) != codePoint // not an integer
        ) {
            throw RangeError("Invalid code point: " + codePoint);
          }
        if (codePoint <= 0xFFFF) {
          // BMP code point
          codeUnits.push(codePoint);
        } else {
          // Astral code point; split in surrogate halves
          // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
          codePoint -= 0x10000;
          highSurrogate = (codePoint >> 10) + 0xD800;
          lowSurrogate = codePoint % 0x400 + 0xDC00;
          codeUnits.push(highSurrogate, lowSurrogate);
        }
        if (index + 1 == length || codeUnits.length > MAX_SIZE) {
          result += stringFromCharCode.apply(null, codeUnits);
          codeUnits.length = 0;
        }
      }
      return result;
    };
  }

  var fromCodePoint$1 = fromCodePoint;

  var XHTMLEntities = {
    quot: "\"",
    amp: "&",
    apos: "'",
    lt: "<",
    gt: ">",
    nbsp: "\xA0",
    iexcl: "\xA1",
    cent: "\xA2",
    pound: "\xA3",
    curren: "\xA4",
    yen: "\xA5",
    brvbar: "\xA6",
    sect: "\xA7",
    uml: "\xA8",
    copy: "\xA9",
    ordf: "\xAA",
    laquo: "\xAB",
    not: "\xAC",
    shy: "\xAD",
    reg: "\xAE",
    macr: "\xAF",
    deg: "\xB0",
    plusmn: "\xB1",
    sup2: "\xB2",
    sup3: "\xB3",
    acute: "\xB4",
    micro: "\xB5",
    para: "\xB6",
    middot: "\xB7",
    cedil: "\xB8",
    sup1: "\xB9",
    ordm: "\xBA",
    raquo: "\xBB",
    frac14: "\xBC",
    frac12: "\xBD",
    frac34: "\xBE",
    iquest: "\xBF",
    Agrave: "\xC0",
    Aacute: "\xC1",
    Acirc: "\xC2",
    Atilde: "\xC3",
    Auml: "\xC4",
    Aring: "\xC5",
    AElig: "\xC6",
    Ccedil: "\xC7",
    Egrave: "\xC8",
    Eacute: "\xC9",
    Ecirc: "\xCA",
    Euml: "\xCB",
    Igrave: "\xCC",
    Iacute: "\xCD",
    Icirc: "\xCE",
    Iuml: "\xCF",
    ETH: "\xD0",
    Ntilde: "\xD1",
    Ograve: "\xD2",
    Oacute: "\xD3",
    Ocirc: "\xD4",
    Otilde: "\xD5",
    Ouml: "\xD6",
    times: "\xD7",
    Oslash: "\xD8",
    Ugrave: "\xD9",
    Uacute: "\xDA",
    Ucirc: "\xDB",
    Uuml: "\xDC",
    Yacute: "\xDD",
    THORN: "\xDE",
    szlig: "\xDF",
    agrave: "\xE0",
    aacute: "\xE1",
    acirc: "\xE2",
    atilde: "\xE3",
    auml: "\xE4",
    aring: "\xE5",
    aelig: "\xE6",
    ccedil: "\xE7",
    egrave: "\xE8",
    eacute: "\xE9",
    ecirc: "\xEA",
    euml: "\xEB",
    igrave: "\xEC",
    iacute: "\xED",
    icirc: "\xEE",
    iuml: "\xEF",
    eth: "\xF0",
    ntilde: "\xF1",
    ograve: "\xF2",
    oacute: "\xF3",
    ocirc: "\xF4",
    otilde: "\xF5",
    ouml: "\xF6",
    divide: "\xF7",
    oslash: "\xF8",
    ugrave: "\xF9",
    uacute: "\xFA",
    ucirc: "\xFB",
    uuml: "\xFC",
    yacute: "\xFD",
    thorn: "\xFE",
    yuml: "\xFF",
    OElig: "\u0152",
    oelig: "\u0153",
    Scaron: "\u0160",
    scaron: "\u0161",
    Yuml: "\u0178",
    fnof: "\u0192",
    circ: "\u02C6",
    tilde: "\u02DC",
    Alpha: "\u0391",
    Beta: "\u0392",
    Gamma: "\u0393",
    Delta: "\u0394",
    Epsilon: "\u0395",
    Zeta: "\u0396",
    Eta: "\u0397",
    Theta: "\u0398",
    Iota: "\u0399",
    Kappa: "\u039A",
    Lambda: "\u039B",
    Mu: "\u039C",
    Nu: "\u039D",
    Xi: "\u039E",
    Omicron: "\u039F",
    Pi: "\u03A0",
    Rho: "\u03A1",
    Sigma: "\u03A3",
    Tau: "\u03A4",
    Upsilon: "\u03A5",
    Phi: "\u03A6",
    Chi: "\u03A7",
    Psi: "\u03A8",
    Omega: "\u03A9",
    alpha: "\u03B1",
    beta: "\u03B2",
    gamma: "\u03B3",
    delta: "\u03B4",
    epsilon: "\u03B5",
    zeta: "\u03B6",
    eta: "\u03B7",
    theta: "\u03B8",
    iota: "\u03B9",
    kappa: "\u03BA",
    lambda: "\u03BB",
    mu: "\u03BC",
    nu: "\u03BD",
    xi: "\u03BE",
    omicron: "\u03BF",
    pi: "\u03C0",
    rho: "\u03C1",
    sigmaf: "\u03C2",
    sigma: "\u03C3",
    tau: "\u03C4",
    upsilon: "\u03C5",
    phi: "\u03C6",
    chi: "\u03C7",
    psi: "\u03C8",
    omega: "\u03C9",
    thetasym: "\u03D1",
    upsih: "\u03D2",
    piv: "\u03D6",
    ensp: "\u2002",
    emsp: "\u2003",
    thinsp: "\u2009",
    zwnj: "\u200C",
    zwj: "\u200D",
    lrm: "\u200E",
    rlm: "\u200F",
    ndash: "\u2013",
    mdash: "\u2014",
    lsquo: "\u2018",
    rsquo: "\u2019",
    sbquo: "\u201A",
    ldquo: "\u201C",
    rdquo: "\u201D",
    bdquo: "\u201E",
    dagger: "\u2020",
    Dagger: "\u2021",
    bull: "\u2022",
    hellip: "\u2026",
    permil: "\u2030",
    prime: "\u2032",
    Prime: "\u2033",
    lsaquo: "\u2039",
    rsaquo: "\u203A",
    oline: "\u203E",
    frasl: "\u2044",
    euro: "\u20AC",
    image: "\u2111",
    weierp: "\u2118",
    real: "\u211C",
    trade: "\u2122",
    alefsym: "\u2135",
    larr: "\u2190",
    uarr: "\u2191",
    rarr: "\u2192",
    darr: "\u2193",
    harr: "\u2194",
    crarr: "\u21B5",
    lArr: "\u21D0",
    uArr: "\u21D1",
    rArr: "\u21D2",
    dArr: "\u21D3",
    hArr: "\u21D4",
    forall: "\u2200",
    part: "\u2202",
    exist: "\u2203",
    empty: "\u2205",
    nabla: "\u2207",
    isin: "\u2208",
    notin: "\u2209",
    ni: "\u220B",
    prod: "\u220F",
    sum: "\u2211",
    minus: "\u2212",
    lowast: "\u2217",
    radic: "\u221A",
    prop: "\u221D",
    infin: "\u221E",
    ang: "\u2220",
    and: "\u2227",
    or: "\u2228",
    cap: "\u2229",
    cup: "\u222A",
    "int": "\u222B",
    there4: "\u2234",
    sim: "\u223C",
    cong: "\u2245",
    asymp: "\u2248",
    ne: "\u2260",
    equiv: "\u2261",
    le: "\u2264",
    ge: "\u2265",
    sub: "\u2282",
    sup: "\u2283",
    nsub: "\u2284",
    sube: "\u2286",
    supe: "\u2287",
    oplus: "\u2295",
    otimes: "\u2297",
    perp: "\u22A5",
    sdot: "\u22C5",
    lceil: "\u2308",
    rceil: "\u2309",
    lfloor: "\u230A",
    rfloor: "\u230B",
    lang: "\u2329",
    rang: "\u232A",
    loz: "\u25CA",
    spades: "\u2660",
    clubs: "\u2663",
    hearts: "\u2665",
    diams: "\u2666"
  };

  var HEX_NUMBER = /^[\da-fA-F]+$/;
  var DECIMAL_NUMBER = /^\d+$/;

  types$1.j_oTag = new TokContext("<tag", false);
  types$1.j_cTag = new TokContext("</tag", false);
  types$1.j_expr = new TokContext("<tag>...</tag>", true, true);

  types.jsxName = new TokenType("jsxName");
  types.jsxText = new TokenType("jsxText", { beforeExpr: true });
  types.jsxTagStart = new TokenType("jsxTagStart", { startsExpr: true });
  types.jsxTagEnd = new TokenType("jsxTagEnd");

  types.jsxTagStart.updateContext = function () {
    this.state.context.push(types$1.j_expr); // treat as beginning of JSX expression
    this.state.context.push(types$1.j_oTag); // start opening tag context
    this.state.exprAllowed = false;
  };

  types.jsxTagEnd.updateContext = function (prevType) {
    var out = this.state.context.pop();
    if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {
      this.state.context.pop();
      this.state.exprAllowed = this.curContext() === types$1.j_expr;
    } else {
      this.state.exprAllowed = true;
    }
  };

  var pp$9 = Parser.prototype;

  // Reads inline JSX contents token.

  pp$9.jsxReadToken = function () {
    var out = "";
    var chunkStart = this.state.pos;
    for (;;) {
      if (this.state.pos >= this.input.length) {
        this.raise(this.state.start, "Unterminated JSX contents");
      }

      var ch = this.input.charCodeAt(this.state.pos);

      switch (ch) {
        case 60: // "<"
        case 123:
          // "{"
          if (this.state.pos === this.state.start) {
            if (ch === 60 && this.state.exprAllowed) {
              ++this.state.pos;
              return this.finishToken(types.jsxTagStart);
            }
            return this.getTokenFromCode(ch);
          }
          out += this.input.slice(chunkStart, this.state.pos);
          return this.finishToken(types.jsxText, out);

        case 38:
          // "&"
          out += this.input.slice(chunkStart, this.state.pos);
          out += this.jsxReadEntity();
          chunkStart = this.state.pos;
          break;

        default:
          if (isNewLine(ch)) {
            out += this.input.slice(chunkStart, this.state.pos);
            out += this.jsxReadNewLine(true);
            chunkStart = this.state.pos;
          } else {
            ++this.state.pos;
          }
      }
    }
  };

  pp$9.jsxReadNewLine = function (normalizeCRLF) {
    var ch = this.input.charCodeAt(this.state.pos);
    var out = void 0;
    ++this.state.pos;
    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {
      ++this.state.pos;
      out = normalizeCRLF ? "\n" : "\r\n";
    } else {
      out = String.fromCharCode(ch);
    }
    ++this.state.curLine;
    this.state.lineStart = this.state.pos;

    return out;
  };

  pp$9.jsxReadString = function (quote) {
    var out = "";
    var chunkStart = ++this.state.pos;
    for (;;) {
      if (this.state.pos >= this.input.length) {
        this.raise(this.state.start, "Unterminated string constant");
      }

      var ch = this.input.charCodeAt(this.state.pos);
      if (ch === quote) break;
      if (ch === 38) {
        // "&"
        out += this.input.slice(chunkStart, this.state.pos);
        out += this.jsxReadEntity();
        chunkStart = this.state.pos;
      } else if (isNewLine(ch)) {
        out += this.input.slice(chunkStart, this.state.pos);
        out += this.jsxReadNewLine(false);
        chunkStart = this.state.pos;
      } else {
        ++this.state.pos;
      }
    }
    out += this.input.slice(chunkStart, this.state.pos++);
    return this.finishToken(types.string, out);
  };

  pp$9.jsxReadEntity = function () {
    var str = "";
    var count = 0;
    var entity = void 0;
    var ch = this.input[this.state.pos];

    var startPos = ++this.state.pos;
    while (this.state.pos < this.input.length && count++ < 10) {
      ch = this.input[this.state.pos++];
      if (ch === ";") {
        if (str[0] === "#") {
          if (str[1] === "x") {
            str = str.substr(2);
            if (HEX_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 16));
          } else {
            str = str.substr(1);
            if (DECIMAL_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 10));
          }
        } else {
          entity = XHTMLEntities[str];
        }
        break;
      }
      str += ch;
    }
    if (!entity) {
      this.state.pos = startPos;
      return "&";
    }
    return entity;
  };

  // Read a JSX identifier (valid tag or attribute name).
  //
  // Optimized version since JSX identifiers can"t contain
  // escape characters and so can be read as single slice.
  // Also assumes that first character was already checked
  // by isIdentifierStart in readToken.

  pp$9.jsxReadWord = function () {
    var ch = void 0;
    var start = this.state.pos;
    do {
      ch = this.input.charCodeAt(++this.state.pos);
    } while (isIdentifierChar(ch) || ch === 45); // "-"
    return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));
  };

  // Transforms JSX element name to string.

  function getQualifiedJSXName(object) {
    if (object.type === "JSXIdentifier") {
      return object.name;
    }

    if (object.type === "JSXNamespacedName") {
      return object.namespace.name + ":" + object.name.name;
    }

    if (object.type === "JSXMemberExpression") {
      return getQualifiedJSXName(object.object) + "." + getQualifiedJSXName(object.property);
    }
  }

  // Parse next token as JSX identifier

  pp$9.jsxParseIdentifier = function () {
    var node = this.startNode();
    if (this.match(types.jsxName)) {
      node.name = this.state.value;
    } else if (this.state.type.keyword) {
      node.name = this.state.type.keyword;
    } else {
      this.unexpected();
    }
    this.next();
    return this.finishNode(node, "JSXIdentifier");
  };

  // Parse namespaced identifier.

  pp$9.jsxParseNamespacedName = function () {
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    var name = this.jsxParseIdentifier();
    if (!this.eat(types.colon)) return name;

    var node = this.startNodeAt(startPos, startLoc);
    node.namespace = name;
    node.name = this.jsxParseIdentifier();
    return this.finishNode(node, "JSXNamespacedName");
  };

  // Parses element name in any form - namespaced, member
  // or single identifier.

  pp$9.jsxParseElementName = function () {
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    var node = this.jsxParseNamespacedName();
    while (this.eat(types.dot)) {
      var newNode = this.startNodeAt(startPos, startLoc);
      newNode.object = node;
      newNode.property = this.jsxParseIdentifier();
      node = this.finishNode(newNode, "JSXMemberExpression");
    }
    return node;
  };

  // Parses any type of JSX attribute value.

  pp$9.jsxParseAttributeValue = function () {
    var node = void 0;
    switch (this.state.type) {
      case types.braceL:
        node = this.jsxParseExpressionContainer();
        if (node.expression.type === "JSXEmptyExpression") {
          this.raise(node.start, "JSX attributes must only be assigned a non-empty expression");
        } else {
          return node;
        }

      case types.jsxTagStart:
      case types.string:
        node = this.parseExprAtom();
        node.extra = null;
        return node;

      default:
        this.raise(this.state.start, "JSX value should be either an expression or a quoted JSX text");
    }
  };

  // JSXEmptyExpression is unique type since it doesn't actually parse anything,
  // and so it should start at the end of last read token (left brace) and finish
  // at the beginning of the next one (right brace).

  pp$9.jsxParseEmptyExpression = function () {
    var node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);
    return this.finishNodeAt(node, "JSXEmptyExpression", this.state.start, this.state.startLoc);
  };

  // Parse JSX spread child

  pp$9.jsxParseSpreadChild = function () {
    var node = this.startNode();
    this.expect(types.braceL);
    this.expect(types.ellipsis);
    node.expression = this.parseExpression();
    this.expect(types.braceR);

    return this.finishNode(node, "JSXSpreadChild");
  };

  // Parses JSX expression enclosed into curly brackets.


  pp$9.jsxParseExpressionContainer = function () {
    var node = this.startNode();
    this.next();
    if (this.match(types.braceR)) {
      node.expression = this.jsxParseEmptyExpression();
    } else {
      node.expression = this.parseExpression();
    }
    this.expect(types.braceR);
    return this.finishNode(node, "JSXExpressionContainer");
  };

  // Parses following JSX attribute name-value pair.

  pp$9.jsxParseAttribute = function () {
    var node = this.startNode();
    if (this.eat(types.braceL)) {
      this.expect(types.ellipsis);
      node.argument = this.parseMaybeAssign();
      this.expect(types.braceR);
      return this.finishNode(node, "JSXSpreadAttribute");
    }
    node.name = this.jsxParseNamespacedName();
    node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;
    return this.finishNode(node, "JSXAttribute");
  };

  // Parses JSX opening tag starting after "<".

  pp$9.jsxParseOpeningElementAt = function (startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    node.attributes = [];
    node.name = this.jsxParseElementName();
    while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {
      node.attributes.push(this.jsxParseAttribute());
    }
    node.selfClosing = this.eat(types.slash);
    this.expect(types.jsxTagEnd);
    return this.finishNode(node, "JSXOpeningElement");
  };

  // Parses JSX closing tag starting after "</".

  pp$9.jsxParseClosingElementAt = function (startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    node.name = this.jsxParseElementName();
    this.expect(types.jsxTagEnd);
    return this.finishNode(node, "JSXClosingElement");
  };

  // Parses entire JSX element, including it"s opening tag
  // (starting after "<"), attributes, contents and closing tag.

  pp$9.jsxParseElementAt = function (startPos, startLoc) {
    var node = this.startNodeAt(startPos, startLoc);
    var children = [];
    var openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);
    var closingElement = null;

    if (!openingElement.selfClosing) {
      contents: for (;;) {
        switch (this.state.type) {
          case types.jsxTagStart:
            startPos = this.state.start;startLoc = this.state.startLoc;
            this.next();
            if (this.eat(types.slash)) {
              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);
              break contents;
            }
            children.push(this.jsxParseElementAt(startPos, startLoc));
            break;

          case types.jsxText:
            children.push(this.parseExprAtom());
            break;

          case types.braceL:
            if (this.lookahead().type === types.ellipsis) {
              children.push(this.jsxParseSpreadChild());
            } else {
              children.push(this.jsxParseExpressionContainer());
            }

            break;

          // istanbul ignore next - should never happen
          default:
            this.unexpected();
        }
      }

      if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {
        this.raise(closingElement.start, "Expected corresponding JSX closing tag for <" + getQualifiedJSXName(openingElement.name) + ">");
      }
    }

    node.openingElement = openingElement;
    node.closingElement = closingElement;
    node.children = children;
    if (this.match(types.relational) && this.state.value === "<") {
      this.raise(this.state.start, "Adjacent JSX elements must be wrapped in an enclosing tag");
    }
    return this.finishNode(node, "JSXElement");
  };

  // Parses entire JSX element from current position.

  pp$9.jsxParseElement = function () {
    var startPos = this.state.start;
    var startLoc = this.state.startLoc;
    this.next();
    return this.jsxParseElementAt(startPos, startLoc);
  };

  var jsxPlugin = function (instance) {
    instance.extend("parseExprAtom", function (inner) {
      return function (refShortHandDefaultPos) {
        if (this.match(types.jsxText)) {
          var node = this.parseLiteral(this.state.value, "JSXText");
          // https://github.com/babel/babel/issues/2078
          node.extra = null;
          return node;
        } else if (this.match(types.jsxTagStart)) {
          return this.jsxParseElement();
        } else {
          return inner.call(this, refShortHandDefaultPos);
        }
      };
    });

    instance.extend("readToken", function (inner) {
      return function (code) {
        if (this.state.inPropertyName) return inner.call(this, code);

        var context = this.curContext();

        if (context === types$1.j_expr) {
          return this.jsxReadToken();
        }

        if (context === types$1.j_oTag || context === types$1.j_cTag) {
          if (isIdentifierStart(code)) {
            return this.jsxReadWord();
          }

          if (code === 62) {
            ++this.state.pos;
            return this.finishToken(types.jsxTagEnd);
          }

          if ((code === 34 || code === 39) && context === types$1.j_oTag) {
            return this.jsxReadString(code);
          }
        }

        if (code === 60 && this.state.exprAllowed) {
          ++this.state.pos;
          return this.finishToken(types.jsxTagStart);
        }

        return inner.call(this, code);
      };
    });

    instance.extend("updateContext", function (inner) {
      return function (prevType) {
        if (this.match(types.braceL)) {
          var curContext = this.curContext();
          if (curContext === types$1.j_oTag) {
            this.state.context.push(types$1.braceExpression);
          } else if (curContext === types$1.j_expr) {
            this.state.context.push(types$1.templateQuasi);
          } else {
            inner.call(this, prevType);
          }
          this.state.exprAllowed = true;
        } else if (this.match(types.slash) && prevType === types.jsxTagStart) {
          this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore
          this.state.context.push(types$1.j_cTag); // reconsider as closing tag context
          this.state.exprAllowed = false;
        } else {
          return inner.call(this, prevType);
        }
      };
    });
  };

  plugins.estree = estreePlugin;
  plugins.flow = flowPlugin;
  plugins.jsx = jsxPlugin;

  function parse(input, options) {
    return new Parser(options, input).parse();
  }

  function parseExpression(input, options) {
    var parser = new Parser(options, input);
    if (parser.options.strictMode) {
      parser.state.strict = true;
    }
    return parser.getExpression();
  }

  exports.parse = parse;
  exports.parseExpression = parseExpression;
  exports.tokTypes = types;
});
System.registerDynamic('npm:core-js@2.5.1/library/fn/object/get-own-property-symbols.js', ['../../modules/es6.symbol', '../../modules/_core', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('../../modules/es6.symbol');
  module.exports = $__require('../../modules/_core').Object.getOwnPropertySymbols;
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/object/get-own-property-symbols.js", ["core-js/library/fn/object/get-own-property-symbols"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/object/get-own-property-symbols"), __esModule: true };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-sap.js', ['./_export', './_core', './_fails', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // most Object methods by ES6 should accept primitives
  var $export = $__require('./_export');
  var core = $__require('./_core');
  var fails = $__require('./_fails');
  module.exports = function (KEY, exec) {
    var fn = (core.Object || {})[KEY] || Object[KEY];
    var exp = {};
    exp[KEY] = exec(fn);
    $export($export.S + $export.F * fails(function () {
      fn(1);
    }), 'Object', exp);
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es6.object.keys.js', ['./_to-object', './_object-keys', './_object-sap', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 19.1.2.14 Object.keys(O)
  var toObject = $__require('./_to-object');
  var $keys = $__require('./_object-keys');

  $__require('./_object-sap')('keys', function () {
    return function keys(it) {
      return $keys(toObject(it));
    };
  });
});
System.registerDynamic('npm:core-js@2.5.1/library/fn/object/keys.js', ['../../modules/es6.object.keys', '../../modules/_core', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('../../modules/es6.object.keys');
  module.exports = $__require('../../modules/_core').Object.keys;
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/object/keys.js", ["core-js/library/fn/object/keys"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/object/keys"), __esModule: true };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es6.object.create.js', ['./_export', './_object-create', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var $export = $__require('./_export');
  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  $export($export.S, 'Object', { create: $__require('./_object-create') });
});
System.registerDynamic('npm:core-js@2.5.1/library/fn/object/create.js', ['../../modules/es6.object.create', '../../modules/_core', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('../../modules/es6.object.create');
  var $Object = $__require('../../modules/_core').Object;
  module.exports = function create(P, D) {
    return $Object.create(P, D);
  };
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/object/create.js", ["core-js/library/fn/object/create"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/object/create"), __esModule: true };
});
System.registerDynamic("npm:babel-types@6.26.0/lib/retrievers.js", ["babel-runtime/core-js/object/create", "./index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _create = $__require("babel-runtime/core-js/object/create");

  var _create2 = _interopRequireDefault(_create);

  exports.getBindingIdentifiers = getBindingIdentifiers;
  exports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;

  var _index = $__require("./index");

  var t = _interopRequireWildcard(_index);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function getBindingIdentifiers(node, duplicates, outerOnly) {
    var search = [].concat(node);
    var ids = (0, _create2.default)(null);

    while (search.length) {
      var id = search.shift();
      if (!id) continue;

      var keys = t.getBindingIdentifiers.keys[id.type];

      if (t.isIdentifier(id)) {
        if (duplicates) {
          var _ids = ids[id.name] = ids[id.name] || [];
          _ids.push(id);
        } else {
          ids[id.name] = id;
        }
        continue;
      }

      if (t.isExportDeclaration(id)) {
        if (t.isDeclaration(id.declaration)) {
          search.push(id.declaration);
        }
        continue;
      }

      if (outerOnly) {
        if (t.isFunctionDeclaration(id)) {
          search.push(id.id);
          continue;
        }

        if (t.isFunctionExpression(id)) {
          continue;
        }
      }

      if (keys) {
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          if (id[key]) {
            search = search.concat(id[key]);
          }
        }
      }
    }

    return ids;
  }

  getBindingIdentifiers.keys = {
    DeclareClass: ["id"],
    DeclareFunction: ["id"],
    DeclareModule: ["id"],
    DeclareVariable: ["id"],
    InterfaceDeclaration: ["id"],
    TypeAlias: ["id"],
    OpaqueType: ["id"],

    CatchClause: ["param"],
    LabeledStatement: ["label"],
    UnaryExpression: ["argument"],
    AssignmentExpression: ["left"],

    ImportSpecifier: ["local"],
    ImportNamespaceSpecifier: ["local"],
    ImportDefaultSpecifier: ["local"],
    ImportDeclaration: ["specifiers"],

    ExportSpecifier: ["exported"],
    ExportNamespaceSpecifier: ["exported"],
    ExportDefaultSpecifier: ["exported"],

    FunctionDeclaration: ["id", "params"],
    FunctionExpression: ["id", "params"],

    ClassDeclaration: ["id"],
    ClassExpression: ["id"],

    RestElement: ["argument"],
    UpdateExpression: ["argument"],

    RestProperty: ["argument"],
    ObjectProperty: ["value"],

    AssignmentPattern: ["left"],
    ArrayPattern: ["elements"],
    ObjectPattern: ["properties"],

    VariableDeclaration: ["declarations"],
    VariableDeclarator: ["id"]
  };

  function getOuterBindingIdentifiers(node, duplicates) {
    return getBindingIdentifiers(node, duplicates, true);
  }
});
System.registerDynamic('npm:esutils@2.0.2/lib/ast.js', [], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /*
      Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>
    
      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions are met:
    
        * Redistributions of source code must retain the above copyright
          notice, this list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above copyright
          notice, this list of conditions and the following disclaimer in the
          documentation and/or other materials provided with the distribution.
    
      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'
      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    */

    (function () {
        'use strict';

        function isExpression(node) {
            if (node == null) {
                return false;
            }
            switch (node.type) {
                case 'ArrayExpression':
                case 'AssignmentExpression':
                case 'BinaryExpression':
                case 'CallExpression':
                case 'ConditionalExpression':
                case 'FunctionExpression':
                case 'Identifier':
                case 'Literal':
                case 'LogicalExpression':
                case 'MemberExpression':
                case 'NewExpression':
                case 'ObjectExpression':
                case 'SequenceExpression':
                case 'ThisExpression':
                case 'UnaryExpression':
                case 'UpdateExpression':
                    return true;
            }
            return false;
        }

        function isIterationStatement(node) {
            if (node == null) {
                return false;
            }
            switch (node.type) {
                case 'DoWhileStatement':
                case 'ForInStatement':
                case 'ForStatement':
                case 'WhileStatement':
                    return true;
            }
            return false;
        }

        function isStatement(node) {
            if (node == null) {
                return false;
            }
            switch (node.type) {
                case 'BlockStatement':
                case 'BreakStatement':
                case 'ContinueStatement':
                case 'DebuggerStatement':
                case 'DoWhileStatement':
                case 'EmptyStatement':
                case 'ExpressionStatement':
                case 'ForInStatement':
                case 'ForStatement':
                case 'IfStatement':
                case 'LabeledStatement':
                case 'ReturnStatement':
                case 'SwitchStatement':
                case 'ThrowStatement':
                case 'TryStatement':
                case 'VariableDeclaration':
                case 'WhileStatement':
                case 'WithStatement':
                    return true;
            }
            return false;
        }

        function isSourceElement(node) {
            return isStatement(node) || node != null && node.type === 'FunctionDeclaration';
        }

        function trailingStatement(node) {
            switch (node.type) {
                case 'IfStatement':
                    if (node.alternate != null) {
                        return node.alternate;
                    }
                    return node.consequent;

                case 'LabeledStatement':
                case 'ForStatement':
                case 'ForInStatement':
                case 'WhileStatement':
                case 'WithStatement':
                    return node.body;
            }
            return null;
        }

        function isProblematicIfStatement(node) {
            var current;

            if (node.type !== 'IfStatement') {
                return false;
            }
            if (node.alternate == null) {
                return false;
            }
            current = node.consequent;
            do {
                if (current.type === 'IfStatement') {
                    if (current.alternate == null) {
                        return true;
                    }
                }
                current = trailingStatement(current);
            } while (current);

            return false;
        }

        module.exports = {
            isExpression: isExpression,
            isStatement: isStatement,
            isIterationStatement: isIterationStatement,
            isSourceElement: isSourceElement,
            isProblematicIfStatement: isProblematicIfStatement,

            trailingStatement: trailingStatement
        };
    })();
    /* vim: set sw=4 ts=4 et tw=80 : */
});
System.registerDynamic('npm:esutils@2.0.2/lib/code.js', [], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /*
      Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>
      Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>
    
      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions are met:
    
        * Redistributions of source code must retain the above copyright
          notice, this list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above copyright
          notice, this list of conditions and the following disclaimer in the
          documentation and/or other materials provided with the distribution.
    
      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    */

    (function () {
        'use strict';

        var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;

        // See `tools/generate-identifier-regex.js`.
        ES5Regex = {
            // ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierStart:
            NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
            // ECMAScript 5.1/Unicode v7.0.0 NonAsciiIdentifierPart:
            NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/
        };

        ES6Regex = {
            // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierStart:
            NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
            // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierPart:
            NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
        };

        function isDecimalDigit(ch) {
            return 0x30 <= ch && ch <= 0x39; // 0..9
        }

        function isHexDigit(ch) {
            return 0x30 <= ch && ch <= 0x39 || // 0..9
            0x61 <= ch && ch <= 0x66 || // a..f
            0x41 <= ch && ch <= 0x46; // A..F
        }

        function isOctalDigit(ch) {
            return ch >= 0x30 && ch <= 0x37; // 0..7
        }

        // 7.2 White Space

        NON_ASCII_WHITESPACES = [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF];

        function isWhiteSpace(ch) {
            return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 || ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;
        }

        // 7.3 Line Terminators

        function isLineTerminator(ch) {
            return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;
        }

        // 7.6 Identifier Names and Identifiers

        function fromCodePoint(cp) {
            if (cp <= 0xFFFF) {
                return String.fromCharCode(cp);
            }
            var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);
            var cu2 = String.fromCharCode((cp - 0x10000) % 0x400 + 0xDC00);
            return cu1 + cu2;
        }

        IDENTIFIER_START = new Array(0x80);
        for (ch = 0; ch < 0x80; ++ch) {
            IDENTIFIER_START[ch] = ch >= 0x61 && ch <= 0x7A || // a..z
            ch >= 0x41 && ch <= 0x5A || // A..Z
            ch === 0x24 || ch === 0x5F; // $ (dollar) and _ (underscore)
        }

        IDENTIFIER_PART = new Array(0x80);
        for (ch = 0; ch < 0x80; ++ch) {
            IDENTIFIER_PART[ch] = ch >= 0x61 && ch <= 0x7A || // a..z
            ch >= 0x41 && ch <= 0x5A || // A..Z
            ch >= 0x30 && ch <= 0x39 || // 0..9
            ch === 0x24 || ch === 0x5F; // $ (dollar) and _ (underscore)
        }

        function isIdentifierStartES5(ch) {
            return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
        }

        function isIdentifierPartES5(ch) {
            return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
        }

        function isIdentifierStartES6(ch) {
            return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));
        }

        function isIdentifierPartES6(ch) {
            return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));
        }

        module.exports = {
            isDecimalDigit: isDecimalDigit,
            isHexDigit: isHexDigit,
            isOctalDigit: isOctalDigit,
            isWhiteSpace: isWhiteSpace,
            isLineTerminator: isLineTerminator,
            isIdentifierStartES5: isIdentifierStartES5,
            isIdentifierPartES5: isIdentifierPartES5,
            isIdentifierStartES6: isIdentifierStartES6,
            isIdentifierPartES6: isIdentifierPartES6
        };
    })();
    /* vim: set sw=4 ts=4 et tw=80 : */
});
System.registerDynamic('npm:esutils@2.0.2/lib/keyword.js', ['./code'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /*
      Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>
    
      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions are met:
    
        * Redistributions of source code must retain the above copyright
          notice, this list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above copyright
          notice, this list of conditions and the following disclaimer in the
          documentation and/or other materials provided with the distribution.
    
      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    */

    (function () {
        'use strict';

        var code = $__require('./code');

        function isStrictModeReservedWordES6(id) {
            switch (id) {
                case 'implements':
                case 'interface':
                case 'package':
                case 'private':
                case 'protected':
                case 'public':
                case 'static':
                case 'let':
                    return true;
                default:
                    return false;
            }
        }

        function isKeywordES5(id, strict) {
            // yield should not be treated as keyword under non-strict mode.
            if (!strict && id === 'yield') {
                return false;
            }
            return isKeywordES6(id, strict);
        }

        function isKeywordES6(id, strict) {
            if (strict && isStrictModeReservedWordES6(id)) {
                return true;
            }

            switch (id.length) {
                case 2:
                    return id === 'if' || id === 'in' || id === 'do';
                case 3:
                    return id === 'var' || id === 'for' || id === 'new' || id === 'try';
                case 4:
                    return id === 'this' || id === 'else' || id === 'case' || id === 'void' || id === 'with' || id === 'enum';
                case 5:
                    return id === 'while' || id === 'break' || id === 'catch' || id === 'throw' || id === 'const' || id === 'yield' || id === 'class' || id === 'super';
                case 6:
                    return id === 'return' || id === 'typeof' || id === 'delete' || id === 'switch' || id === 'export' || id === 'import';
                case 7:
                    return id === 'default' || id === 'finally' || id === 'extends';
                case 8:
                    return id === 'function' || id === 'continue' || id === 'debugger';
                case 10:
                    return id === 'instanceof';
                default:
                    return false;
            }
        }

        function isReservedWordES5(id, strict) {
            return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);
        }

        function isReservedWordES6(id, strict) {
            return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);
        }

        function isRestrictedWord(id) {
            return id === 'eval' || id === 'arguments';
        }

        function isIdentifierNameES5(id) {
            var i, iz, ch;

            if (id.length === 0) {
                return false;
            }

            ch = id.charCodeAt(0);
            if (!code.isIdentifierStartES5(ch)) {
                return false;
            }

            for (i = 1, iz = id.length; i < iz; ++i) {
                ch = id.charCodeAt(i);
                if (!code.isIdentifierPartES5(ch)) {
                    return false;
                }
            }
            return true;
        }

        function decodeUtf16(lead, trail) {
            return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;
        }

        function isIdentifierNameES6(id) {
            var i, iz, ch, lowCh, check;

            if (id.length === 0) {
                return false;
            }

            check = code.isIdentifierStartES6;
            for (i = 0, iz = id.length; i < iz; ++i) {
                ch = id.charCodeAt(i);
                if (0xD800 <= ch && ch <= 0xDBFF) {
                    ++i;
                    if (i >= iz) {
                        return false;
                    }
                    lowCh = id.charCodeAt(i);
                    if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {
                        return false;
                    }
                    ch = decodeUtf16(ch, lowCh);
                }
                if (!check(ch)) {
                    return false;
                }
                check = code.isIdentifierPartES6;
            }
            return true;
        }

        function isIdentifierES5(id, strict) {
            return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);
        }

        function isIdentifierES6(id, strict) {
            return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);
        }

        module.exports = {
            isKeywordES5: isKeywordES5,
            isKeywordES6: isKeywordES6,
            isReservedWordES5: isReservedWordES5,
            isReservedWordES6: isReservedWordES6,
            isRestrictedWord: isRestrictedWord,
            isIdentifierNameES5: isIdentifierNameES5,
            isIdentifierNameES6: isIdentifierNameES6,
            isIdentifierES5: isIdentifierES5,
            isIdentifierES6: isIdentifierES6
        };
    })();
    /* vim: set sw=4 ts=4 et tw=80 : */
});
System.registerDynamic("npm:esutils@2.0.2.json", [], true, function() {
  return {
    "main": "lib/utils.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:esutils@2.0.2/lib/utils.js', ['./ast', './code', './keyword'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /*
    Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>
  
    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:
  
      * Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.
      * Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.
  
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
    ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
    DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
    THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */

  (function () {
    'use strict';

    exports.ast = $__require('./ast');
    exports.code = $__require('./code');
    exports.keyword = $__require('./keyword');
  })();
  /* vim: set sw=4 ts=4 et tw=80 : */
});
System.registerDynamic("npm:babel-types@6.26.0/lib/validators.js", ["babel-runtime/core-js/object/keys", "babel-runtime/helpers/typeof", "babel-runtime/core-js/get-iterator", "./retrievers", "esutils", "./index", "./constants"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _keys = $__require("babel-runtime/core-js/object/keys");

  var _keys2 = _interopRequireDefault(_keys);

  var _typeof2 = $__require("babel-runtime/helpers/typeof");

  var _typeof3 = _interopRequireDefault(_typeof2);

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.isBinding = isBinding;
  exports.isReferenced = isReferenced;
  exports.isValidIdentifier = isValidIdentifier;
  exports.isLet = isLet;
  exports.isBlockScoped = isBlockScoped;
  exports.isVar = isVar;
  exports.isSpecifierDefault = isSpecifierDefault;
  exports.isScope = isScope;
  exports.isImmutable = isImmutable;
  exports.isNodesEquivalent = isNodesEquivalent;

  var _retrievers = $__require("./retrievers");

  var _esutils = $__require("esutils");

  var _esutils2 = _interopRequireDefault(_esutils);

  var _index = $__require("./index");

  var t = _interopRequireWildcard(_index);

  var _constants = $__require("./constants");

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function isBinding(node, parent) {
    var keys = _retrievers.getBindingIdentifiers.keys[parent.type];
    if (keys) {
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var val = parent[key];
        if (Array.isArray(val)) {
          if (val.indexOf(node) >= 0) return true;
        } else {
          if (val === node) return true;
        }
      }
    }

    return false;
  }

  function isReferenced(node, parent) {
    switch (parent.type) {
      case "BindExpression":
        return parent.object === node || parent.callee === node;

      case "MemberExpression":
      case "JSXMemberExpression":
        if (parent.property === node && parent.computed) {
          return true;
        } else if (parent.object === node) {
          return true;
        } else {
          return false;
        }

      case "MetaProperty":
        return false;

      case "ObjectProperty":
        if (parent.key === node) {
          return parent.computed;
        }

      case "VariableDeclarator":
        return parent.id !== node;

      case "ArrowFunctionExpression":
      case "FunctionDeclaration":
      case "FunctionExpression":
        for (var _iterator = parent.params, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var param = _ref;

          if (param === node) return false;
        }

        return parent.id !== node;

      case "ExportSpecifier":
        if (parent.source) {
          return false;
        } else {
          return parent.local === node;
        }

      case "ExportNamespaceSpecifier":
      case "ExportDefaultSpecifier":
        return false;

      case "JSXAttribute":
        return parent.name !== node;

      case "ClassProperty":
        if (parent.key === node) {
          return parent.computed;
        } else {
          return parent.value === node;
        }

      case "ImportDefaultSpecifier":
      case "ImportNamespaceSpecifier":
      case "ImportSpecifier":
        return false;

      case "ClassDeclaration":
      case "ClassExpression":
        return parent.id !== node;

      case "ClassMethod":
      case "ObjectMethod":
        return parent.key === node && parent.computed;

      case "LabeledStatement":
        return false;

      case "CatchClause":
        return parent.param !== node;

      case "RestElement":
        return false;

      case "AssignmentExpression":
        return parent.right === node;

      case "AssignmentPattern":
        return parent.right === node;

      case "ObjectPattern":
      case "ArrayPattern":
        return false;
    }

    return true;
  }

  function isValidIdentifier(name) {
    if (typeof name !== "string" || _esutils2.default.keyword.isReservedWordES6(name, true)) {
      return false;
    } else if (name === "await") {
      return false;
    } else {
      return _esutils2.default.keyword.isIdentifierNameES6(name);
    }
  }

  function isLet(node) {
    return t.isVariableDeclaration(node) && (node.kind !== "var" || node[_constants.BLOCK_SCOPED_SYMBOL]);
  }

  function isBlockScoped(node) {
    return t.isFunctionDeclaration(node) || t.isClassDeclaration(node) || t.isLet(node);
  }

  function isVar(node) {
    return t.isVariableDeclaration(node, { kind: "var" }) && !node[_constants.BLOCK_SCOPED_SYMBOL];
  }

  function isSpecifierDefault(specifier) {
    return t.isImportDefaultSpecifier(specifier) || t.isIdentifier(specifier.imported || specifier.exported, { name: "default" });
  }

  function isScope(node, parent) {
    if (t.isBlockStatement(node) && t.isFunction(parent, { body: node })) {
      return false;
    }

    return t.isScopable(node);
  }

  function isImmutable(node) {
    if (t.isType(node.type, "Immutable")) return true;

    if (t.isIdentifier(node)) {
      if (node.name === "undefined") {
        return true;
      } else {
        return false;
      }
    }

    return false;
  }

  function isNodesEquivalent(a, b) {
    if ((typeof a === "undefined" ? "undefined" : (0, _typeof3.default)(a)) !== "object" || (typeof a === "undefined" ? "undefined" : (0, _typeof3.default)(a)) !== "object" || a == null || b == null) {
      return a === b;
    }

    if (a.type !== b.type) {
      return false;
    }

    var fields = (0, _keys2.default)(t.NODE_FIELDS[a.type] || a.type);

    for (var _iterator2 = fields, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var field = _ref2;

      if ((0, _typeof3.default)(a[field]) !== (0, _typeof3.default)(b[field])) {
        return false;
      }

      if (Array.isArray(a[field])) {
        if (!Array.isArray(b[field])) {
          return false;
        }
        if (a[field].length !== b[field].length) {
          return false;
        }

        for (var i = 0; i < a[field].length; i++) {
          if (!isNodesEquivalent(a[field][i], b[field][i])) {
            return false;
          }
        }
        continue;
      }

      if (!isNodesEquivalent(a[field], b[field])) {
        return false;
      }
    }

    return true;
  }
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es6.number.max-safe-integer.js', ['./_export', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 20.1.2.6 Number.MAX_SAFE_INTEGER
  var $export = $__require('./_export');

  $export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });
});
System.registerDynamic('npm:core-js@2.5.1/library/fn/number/max-safe-integer.js', ['../../modules/es6.number.max-safe-integer', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('../../modules/es6.number.max-safe-integer');
  module.exports = 0x1fffffffffffff;
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/number/max-safe-integer.js", ["core-js/library/fn/number/max-safe-integer"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/number/max-safe-integer"), __esModule: true };
});
System.registerDynamic('npm:lodash@4.17.4/isPlainObject.js', ['./_baseGetTag', './_getPrototype', './isObjectLike'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseGetTag = $__require('./_baseGetTag'),
      getPrototype = $__require('./_getPrototype'),
      isObjectLike = $__require('./isObjectLike');

  /** `Object#toString` result references. */
  var objectTag = '[object Object]';

  /** Used for built-in method references. */
  var funcProto = Function.prototype,
      objectProto = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to infer the `Object` constructor. */
  var objectCtorString = funcToString.call(Object);

  /**
   * Checks if `value` is a plain object, that is, an object created by the
   * `Object` constructor or one with a `[[Prototype]]` of `null`.
   *
   * @static
   * @memberOf _
   * @since 0.8.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   * }
   *
   * _.isPlainObject(new Foo);
   * // => false
   *
   * _.isPlainObject([1, 2, 3]);
   * // => false
   *
   * _.isPlainObject({ 'x': 0, 'y': 0 });
   * // => true
   *
   * _.isPlainObject(Object.create(null));
   * // => true
   */
  function isPlainObject(value) {
    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
      return false;
    }
    var proto = getPrototype(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
  }

  module.exports = isPlainObject;
});
System.registerDynamic('npm:lodash@4.17.4/_baseIsRegExp.js', ['./_baseGetTag', './isObjectLike'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseGetTag = $__require('./_baseGetTag'),
      isObjectLike = $__require('./isObjectLike');

  /** `Object#toString` result references. */
  var regexpTag = '[object RegExp]';

  /**
   * The base implementation of `_.isRegExp` without Node.js optimizations.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
   */
  function baseIsRegExp(value) {
    return isObjectLike(value) && baseGetTag(value) == regexpTag;
  }

  module.exports = baseIsRegExp;
});
System.registerDynamic('npm:lodash@4.17.4/isRegExp.js', ['./_baseIsRegExp', './_baseUnary', './_nodeUtil'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseIsRegExp = $__require('./_baseIsRegExp'),
      baseUnary = $__require('./_baseUnary'),
      nodeUtil = $__require('./_nodeUtil');

  /* Node.js helper references. */
  var nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;

  /**
   * Checks if `value` is classified as a `RegExp` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
   * @example
   *
   * _.isRegExp(/abc/);
   * // => true
   *
   * _.isRegExp('/abc/');
   * // => false
   */
  var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

  module.exports = isRegExp;
});
System.registerDynamic("npm:babel-types@6.26.0/lib/converters.js", ["babel-runtime/core-js/number/max-safe-integer", "babel-runtime/core-js/json/stringify", "babel-runtime/core-js/get-iterator", "lodash/isPlainObject", "lodash/isRegExp", "./index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _maxSafeInteger = $__require("babel-runtime/core-js/number/max-safe-integer");

  var _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);

  var _stringify = $__require("babel-runtime/core-js/json/stringify");

  var _stringify2 = _interopRequireDefault(_stringify);

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  exports.toComputedKey = toComputedKey;
  exports.toSequenceExpression = toSequenceExpression;
  exports.toKeyAlias = toKeyAlias;
  exports.toIdentifier = toIdentifier;
  exports.toBindingIdentifierName = toBindingIdentifierName;
  exports.toStatement = toStatement;
  exports.toExpression = toExpression;
  exports.toBlock = toBlock;
  exports.valueToNode = valueToNode;

  var _isPlainObject = $__require("lodash/isPlainObject");

  var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

  var _isRegExp = $__require("lodash/isRegExp");

  var _isRegExp2 = _interopRequireDefault(_isRegExp);

  var _index = $__require("./index");

  var t = _interopRequireWildcard(_index);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function toComputedKey(node) {
    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key || node.property;

    if (!node.computed) {
      if (t.isIdentifier(key)) key = t.stringLiteral(key.name);
    }
    return key;
  }

  function gatherSequenceExpressions(nodes, scope, declars) {
    var exprs = [];
    var ensureLastUndefined = true;

    for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var node = _ref;

      ensureLastUndefined = false;

      if (t.isExpression(node)) {
        exprs.push(node);
      } else if (t.isExpressionStatement(node)) {
        exprs.push(node.expression);
      } else if (t.isVariableDeclaration(node)) {
        if (node.kind !== "var") return;

        for (var _iterator2 = node.declarations, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
          var _ref2;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var declar = _ref2;

          var bindings = t.getBindingIdentifiers(declar);
          for (var key in bindings) {
            declars.push({
              kind: node.kind,
              id: bindings[key]
            });
          }

          if (declar.init) {
            exprs.push(t.assignmentExpression("=", declar.id, declar.init));
          }
        }

        ensureLastUndefined = true;
      } else if (t.isIfStatement(node)) {
        var consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();
        var alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();
        if (!consequent || !alternate) return;

        exprs.push(t.conditionalExpression(node.test, consequent, alternate));
      } else if (t.isBlockStatement(node)) {
        var body = gatherSequenceExpressions(node.body, scope, declars);
        if (!body) return;

        exprs.push(body);
      } else if (t.isEmptyStatement(node)) {
        ensureLastUndefined = true;
      } else {
        return;
      }
    }

    if (ensureLastUndefined) {
      exprs.push(scope.buildUndefinedNode());
    }

    if (exprs.length === 1) {
      return exprs[0];
    } else {
      return t.sequenceExpression(exprs);
    }
  }

  function toSequenceExpression(nodes, scope) {
    if (!nodes || !nodes.length) return;

    var declars = [];
    var result = gatherSequenceExpressions(nodes, scope, declars);
    if (!result) return;

    for (var _iterator3 = declars, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
      var _ref3;

      if (_isArray3) {
        if (_i3 >= _iterator3.length) break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done) break;
        _ref3 = _i3.value;
      }

      var declar = _ref3;

      scope.push(declar);
    }

    return result;
  }

  function toKeyAlias(node) {
    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key;

    var alias = void 0;

    if (node.kind === "method") {
      return toKeyAlias.increment() + "";
    } else if (t.isIdentifier(key)) {
      alias = key.name;
    } else if (t.isStringLiteral(key)) {
      alias = (0, _stringify2.default)(key.value);
    } else {
      alias = (0, _stringify2.default)(t.removePropertiesDeep(t.cloneDeep(key)));
    }

    if (node.computed) {
      alias = "[" + alias + "]";
    }

    if (node.static) {
      alias = "static:" + alias;
    }

    return alias;
  }

  toKeyAlias.uid = 0;

  toKeyAlias.increment = function () {
    if (toKeyAlias.uid >= _maxSafeInteger2.default) {
      return toKeyAlias.uid = 0;
    } else {
      return toKeyAlias.uid++;
    }
  };

  function toIdentifier(name) {
    name = name + "";

    name = name.replace(/[^a-zA-Z0-9$_]/g, "-");

    name = name.replace(/^[-0-9]+/, "");

    name = name.replace(/[-\s]+(.)?/g, function (match, c) {
      return c ? c.toUpperCase() : "";
    });

    if (!t.isValidIdentifier(name)) {
      name = "_" + name;
    }

    return name || "_";
  }

  function toBindingIdentifierName(name) {
    name = toIdentifier(name);
    if (name === "eval" || name === "arguments") name = "_" + name;
    return name;
  }

  function toStatement(node, ignore) {
    if (t.isStatement(node)) {
      return node;
    }

    var mustHaveId = false;
    var newType = void 0;

    if (t.isClass(node)) {
      mustHaveId = true;
      newType = "ClassDeclaration";
    } else if (t.isFunction(node)) {
      mustHaveId = true;
      newType = "FunctionDeclaration";
    } else if (t.isAssignmentExpression(node)) {
      return t.expressionStatement(node);
    }

    if (mustHaveId && !node.id) {
      newType = false;
    }

    if (!newType) {
      if (ignore) {
        return false;
      } else {
        throw new Error("cannot turn " + node.type + " to a statement");
      }
    }

    node.type = newType;

    return node;
  }

  function toExpression(node) {
    if (t.isExpressionStatement(node)) {
      node = node.expression;
    }

    if (t.isExpression(node)) {
      return node;
    }

    if (t.isClass(node)) {
      node.type = "ClassExpression";
    } else if (t.isFunction(node)) {
      node.type = "FunctionExpression";
    }

    if (!t.isExpression(node)) {
      throw new Error("cannot turn " + node.type + " to an expression");
    }

    return node;
  }

  function toBlock(node, parent) {
    if (t.isBlockStatement(node)) {
      return node;
    }

    if (t.isEmptyStatement(node)) {
      node = [];
    }

    if (!Array.isArray(node)) {
      if (!t.isStatement(node)) {
        if (t.isFunction(parent)) {
          node = t.returnStatement(node);
        } else {
          node = t.expressionStatement(node);
        }
      }

      node = [node];
    }

    return t.blockStatement(node);
  }

  function valueToNode(value) {
    if (value === undefined) {
      return t.identifier("undefined");
    }

    if (value === true || value === false) {
      return t.booleanLiteral(value);
    }

    if (value === null) {
      return t.nullLiteral();
    }

    if (typeof value === "string") {
      return t.stringLiteral(value);
    }

    if (typeof value === "number") {
      return t.numericLiteral(value);
    }

    if ((0, _isRegExp2.default)(value)) {
      var pattern = value.source;
      var flags = value.toString().match(/\/([a-z]+|)$/)[1];
      return t.regExpLiteral(pattern, flags);
    }

    if (Array.isArray(value)) {
      return t.arrayExpression(value.map(t.valueToNode));
    }

    if ((0, _isPlainObject2.default)(value)) {
      var props = [];
      for (var key in value) {
        var nodeKey = void 0;
        if (t.isValidIdentifier(key)) {
          nodeKey = t.identifier(key);
        } else {
          nodeKey = t.stringLiteral(key);
        }
        props.push(t.objectProperty(nodeKey, t.valueToNode(value[key])));
      }
      return t.objectExpression(props);
    }

    throw new Error("don't know how to turn this value into a node");
  }
});
System.registerDynamic("npm:babel-types@6.26.0/lib/flow.js", ["./index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.createUnionTypeAnnotation = createUnionTypeAnnotation;
  exports.removeTypeDuplicates = removeTypeDuplicates;
  exports.createTypeAnnotationBasedOnTypeof = createTypeAnnotationBasedOnTypeof;

  var _index = $__require("./index");

  var t = _interopRequireWildcard(_index);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function createUnionTypeAnnotation(types) {
    var flattened = removeTypeDuplicates(types);

    if (flattened.length === 1) {
      return flattened[0];
    } else {
      return t.unionTypeAnnotation(flattened);
    }
  }

  function removeTypeDuplicates(nodes) {
    var generics = {};
    var bases = {};

    var typeGroups = [];

    var types = [];

    for (var i = 0; i < nodes.length; i++) {
      var node = nodes[i];
      if (!node) continue;

      if (types.indexOf(node) >= 0) {
        continue;
      }

      if (t.isAnyTypeAnnotation(node)) {
        return [node];
      }

      if (t.isFlowBaseAnnotation(node)) {
        bases[node.type] = node;
        continue;
      }

      if (t.isUnionTypeAnnotation(node)) {
        if (typeGroups.indexOf(node.types) < 0) {
          nodes = nodes.concat(node.types);
          typeGroups.push(node.types);
        }
        continue;
      }

      if (t.isGenericTypeAnnotation(node)) {
        var name = node.id.name;

        if (generics[name]) {
          var existing = generics[name];
          if (existing.typeParameters) {
            if (node.typeParameters) {
              existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));
            }
          } else {
            existing = node.typeParameters;
          }
        } else {
          generics[name] = node;
        }

        continue;
      }

      types.push(node);
    }

    for (var type in bases) {
      types.push(bases[type]);
    }

    for (var _name in generics) {
      types.push(generics[_name]);
    }

    return types;
  }

  function createTypeAnnotationBasedOnTypeof(type) {
    if (type === "string") {
      return t.stringTypeAnnotation();
    } else if (type === "number") {
      return t.numberTypeAnnotation();
    } else if (type === "undefined") {
      return t.voidTypeAnnotation();
    } else if (type === "boolean") {
      return t.booleanTypeAnnotation();
    } else if (type === "function") {
      return t.genericTypeAnnotation(t.identifier("Function"));
    } else if (type === "object") {
      return t.genericTypeAnnotation(t.identifier("Object"));
    } else if (type === "symbol") {
      return t.genericTypeAnnotation(t.identifier("Symbol"));
    } else {
      throw new Error("Invalid typeof value");
    }
  }
});
System.registerDynamic("npm:to-fast-properties@1.0.3.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic("npm:to-fast-properties@1.0.3/index.js", [], true, function ($__require, exports, module) {
	'use strict';

	var global = this || self,
	    GLOBAL = global;
	module.exports = function toFastproperties(o) {
		function Sub() {}
		Sub.prototype = o;
		var receiver = new Sub(); // create an instance
		function ic() {
			return typeof receiver.foo;
		} // perform access
		ic();
		ic();
		return o;
		eval("o" + o); // ensure no dead code elimination
	};
});
System.registerDynamic('npm:lodash@4.17.4/_stackClear.js', ['./_ListCache'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var ListCache = $__require('./_ListCache');

  /**
   * Removes all key-value entries from the stack.
   *
   * @private
   * @name clear
   * @memberOf Stack
   */
  function stackClear() {
    this.__data__ = new ListCache();
    this.size = 0;
  }

  module.exports = stackClear;
});
System.registerDynamic('npm:lodash@4.17.4/_stackDelete.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Removes `key` and its value from the stack.
   *
   * @private
   * @name delete
   * @memberOf Stack
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function stackDelete(key) {
    var data = this.__data__,
        result = data['delete'](key);

    this.size = data.size;
    return result;
  }

  module.exports = stackDelete;
});
System.registerDynamic("npm:lodash@4.17.4/_stackGet.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Gets the stack value for `key`.
   *
   * @private
   * @name get
   * @memberOf Stack
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function stackGet(key) {
    return this.__data__.get(key);
  }

  module.exports = stackGet;
});
System.registerDynamic("npm:lodash@4.17.4/_stackHas.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Checks if a stack value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Stack
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function stackHas(key) {
    return this.__data__.has(key);
  }

  module.exports = stackHas;
});
System.registerDynamic('npm:lodash@4.17.4/_stackSet.js', ['./_ListCache', './_Map', './_MapCache'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var ListCache = $__require('./_ListCache'),
      Map = $__require('./_Map'),
      MapCache = $__require('./_MapCache');

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /**
   * Sets the stack `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Stack
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the stack cache instance.
   */
  function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
      var pairs = data.__data__;
      if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }

  module.exports = stackSet;
});
System.registerDynamic('npm:lodash@4.17.4/_Stack.js', ['./_ListCache', './_stackClear', './_stackDelete', './_stackGet', './_stackHas', './_stackSet'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var ListCache = $__require('./_ListCache'),
      stackClear = $__require('./_stackClear'),
      stackDelete = $__require('./_stackDelete'),
      stackGet = $__require('./_stackGet'),
      stackHas = $__require('./_stackHas'),
      stackSet = $__require('./_stackSet');

  /**
   * Creates a stack cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
  }

  // Add methods to `Stack`.
  Stack.prototype.clear = stackClear;
  Stack.prototype['delete'] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;

  module.exports = Stack;
});
System.registerDynamic("npm:lodash@4.17.4/_arrayEach.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  module.exports = arrayEach;
});
System.registerDynamic('npm:lodash@4.17.4/_baseAssign.js', ['./_copyObject', './keys'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var copyObject = $__require('./_copyObject'),
      keys = $__require('./keys');

  /**
   * The base implementation of `_.assign` without support for multiple sources
   * or `customizer` functions.
   *
   * @private
   * @param {Object} object The destination object.
   * @param {Object} source The source object.
   * @returns {Object} Returns `object`.
   */
  function baseAssign(object, source) {
    return object && copyObject(source, keys(source), object);
  }

  module.exports = baseAssign;
});
System.registerDynamic('npm:lodash@4.17.4/_baseAssignIn.js', ['./_copyObject', './keysIn'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var copyObject = $__require('./_copyObject'),
      keysIn = $__require('./keysIn');

  /**
   * The base implementation of `_.assignIn` without support for multiple sources
   * or `customizer` functions.
   *
   * @private
   * @param {Object} object The destination object.
   * @param {Object} source The source object.
   * @returns {Object} Returns `object`.
   */
  function baseAssignIn(object, source) {
    return object && copyObject(source, keysIn(source), object);
  }

  module.exports = baseAssignIn;
});
System.registerDynamic('npm:lodash@4.17.4/_cloneBuffer.js', ['./_root'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var root = $__require('./_root');

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Built-in value references. */
  var Buffer = moduleExports ? root.Buffer : undefined,
      allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

  /**
   * Creates a clone of  `buffer`.
   *
   * @private
   * @param {Buffer} buffer The buffer to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Buffer} Returns the cloned buffer.
   */
  function cloneBuffer(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var length = buffer.length,
        result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

    buffer.copy(result);
    return result;
  }

  module.exports = cloneBuffer;
});
System.registerDynamic("npm:lodash@4.17.4/_copyArray.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Copies the values of `source` to `array`.
   *
   * @private
   * @param {Array} source The array to copy values from.
   * @param {Array} [array=[]] The array to copy values to.
   * @returns {Array} Returns `array`.
   */
  function copyArray(source, array) {
    var index = -1,
        length = source.length;

    array || (array = Array(length));
    while (++index < length) {
      array[index] = source[index];
    }
    return array;
  }

  module.exports = copyArray;
});
System.registerDynamic('npm:lodash@4.17.4/_copySymbols.js', ['./_copyObject', './_getSymbols'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var copyObject = $__require('./_copyObject'),
      getSymbols = $__require('./_getSymbols');

  /**
   * Copies own symbols of `source` to `object`.
   *
   * @private
   * @param {Object} source The object to copy symbols from.
   * @param {Object} [object={}] The object to copy symbols to.
   * @returns {Object} Returns `object`.
   */
  function copySymbols(source, object) {
    return copyObject(source, getSymbols(source), object);
  }

  module.exports = copySymbols;
});
System.registerDynamic('npm:lodash@4.17.4/_assignValue.js', ['./_baseAssignValue', './eq'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseAssignValue = $__require('./_baseAssignValue'),
      eq = $__require('./eq');

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Assigns `value` to `key` of `object` if the existing value is not equivalent
   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {string} key The key of the property to assign.
   * @param {*} value The value to assign.
   */
  function assignValue(object, key, value) {
    var objValue = object[key];
    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
      baseAssignValue(object, key, value);
    }
  }

  module.exports = assignValue;
});
System.registerDynamic('npm:lodash@4.17.4/_defineProperty.js', ['./_getNative'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var getNative = $__require('./_getNative');

  var defineProperty = function () {
    try {
      var func = getNative(Object, 'defineProperty');
      func({}, '', {});
      return func;
    } catch (e) {}
  }();

  module.exports = defineProperty;
});
System.registerDynamic('npm:lodash@4.17.4/_baseAssignValue.js', ['./_defineProperty'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var defineProperty = $__require('./_defineProperty');

  /**
   * The base implementation of `assignValue` and `assignMergeValue` without
   * value checks.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {string} key The key of the property to assign.
   * @param {*} value The value to assign.
   */
  function baseAssignValue(object, key, value) {
    if (key == '__proto__' && defineProperty) {
      defineProperty(object, key, {
        'configurable': true,
        'enumerable': true,
        'value': value,
        'writable': true
      });
    } else {
      object[key] = value;
    }
  }

  module.exports = baseAssignValue;
});
System.registerDynamic('npm:lodash@4.17.4/_copyObject.js', ['./_assignValue', './_baseAssignValue'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var assignValue = $__require('./_assignValue'),
      baseAssignValue = $__require('./_baseAssignValue');

  /**
   * Copies properties of `source` to `object`.
   *
   * @private
   * @param {Object} source The object to copy properties from.
   * @param {Array} props The property identifiers to copy.
   * @param {Object} [object={}] The object to copy properties to.
   * @param {Function} [customizer] The function to customize copied values.
   * @returns {Object} Returns `object`.
   */
  function copyObject(source, props, object, customizer) {
    var isNew = !object;
    object || (object = {});

    var index = -1,
        length = props.length;

    while (++index < length) {
      var key = props[index];

      var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

      if (newValue === undefined) {
        newValue = source[key];
      }
      if (isNew) {
        baseAssignValue(object, key, newValue);
      } else {
        assignValue(object, key, newValue);
      }
    }
    return object;
  }

  module.exports = copyObject;
});
System.registerDynamic('npm:lodash@4.17.4/_copySymbolsIn.js', ['./_copyObject', './_getSymbolsIn'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var copyObject = $__require('./_copyObject'),
      getSymbolsIn = $__require('./_getSymbolsIn');

  /**
   * Copies own and inherited symbols of `source` to `object`.
   *
   * @private
   * @param {Object} source The object to copy symbols from.
   * @param {Object} [object={}] The object to copy symbols to.
   * @returns {Object} Returns `object`.
   */
  function copySymbolsIn(source, object) {
    return copyObject(source, getSymbolsIn(source), object);
  }

  module.exports = copySymbolsIn;
});
System.registerDynamic('npm:lodash@4.17.4/_getAllKeys.js', ['./_baseGetAllKeys', './_getSymbols', './keys'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseGetAllKeys = $__require('./_baseGetAllKeys'),
      getSymbols = $__require('./_getSymbols'),
      keys = $__require('./keys');

  /**
   * Creates an array of own enumerable property names and symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
  }

  module.exports = getAllKeys;
});
System.registerDynamic('npm:lodash@4.17.4/_baseGetAllKeys.js', ['./_arrayPush', './isArray'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var arrayPush = $__require('./_arrayPush'),
      isArray = $__require('./isArray');

  /**
   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
   * `keysFunc` and `symbolsFunc` to get the enumerable property names and
   * symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @param {Function} symbolsFunc The function to get the symbols of `object`.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
  }

  module.exports = baseGetAllKeys;
});
System.registerDynamic("npm:lodash@4.17.4/_arrayPush.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  module.exports = arrayPush;
});
System.registerDynamic("npm:lodash@4.17.4/_arrayFilter.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  module.exports = arrayFilter;
});
System.registerDynamic('npm:lodash@4.17.4/_getSymbols.js', ['./_arrayFilter', './stubArray'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var arrayFilter = $__require('./_arrayFilter'),
      stubArray = $__require('./stubArray');

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Built-in value references. */
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetSymbols = Object.getOwnPropertySymbols;

  /**
   * Creates an array of the own enumerable symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of symbols.
   */
  var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
    if (object == null) {
      return [];
    }
    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function (symbol) {
      return propertyIsEnumerable.call(object, symbol);
    });
  };

  module.exports = getSymbols;
});
System.registerDynamic("npm:lodash@4.17.4/stubArray.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * This method returns a new empty array.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {Array} Returns the new empty array.
   * @example
   *
   * var arrays = _.times(2, _.stubArray);
   *
   * console.log(arrays);
   * // => [[], []]
   *
   * console.log(arrays[0] === arrays[1]);
   * // => false
   */
  function stubArray() {
    return [];
  }

  module.exports = stubArray;
});
System.registerDynamic('npm:lodash@4.17.4/_getSymbolsIn.js', ['./_arrayPush', './_getPrototype', './_getSymbols', './stubArray'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var arrayPush = $__require('./_arrayPush'),
      getPrototype = $__require('./_getPrototype'),
      getSymbols = $__require('./_getSymbols'),
      stubArray = $__require('./stubArray');

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetSymbols = Object.getOwnPropertySymbols;

  /**
   * Creates an array of the own and inherited enumerable symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of symbols.
   */
  var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
    var result = [];
    while (object) {
      arrayPush(result, getSymbols(object));
      object = getPrototype(object);
    }
    return result;
  };

  module.exports = getSymbolsIn;
});
System.registerDynamic("npm:lodash@4.17.4/_nativeKeysIn.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * This function is like
   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * except that it includes inherited enumerable properties.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function nativeKeysIn(object) {
    var result = [];
    if (object != null) {
      for (var key in Object(object)) {
        result.push(key);
      }
    }
    return result;
  }

  module.exports = nativeKeysIn;
});
System.registerDynamic('npm:lodash@4.17.4/_baseKeysIn.js', ['./isObject', './_isPrototype', './_nativeKeysIn'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var isObject = $__require('./isObject'),
      isPrototype = $__require('./_isPrototype'),
      nativeKeysIn = $__require('./_nativeKeysIn');

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeysIn(object) {
    if (!isObject(object)) {
      return nativeKeysIn(object);
    }
    var isProto = isPrototype(object),
        result = [];

    for (var key in object) {
      if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
        result.push(key);
      }
    }
    return result;
  }

  module.exports = baseKeysIn;
});
System.registerDynamic('npm:lodash@4.17.4/keysIn.js', ['./_arrayLikeKeys', './_baseKeysIn', './isArrayLike'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var arrayLikeKeys = $__require('./_arrayLikeKeys'),
      baseKeysIn = $__require('./_baseKeysIn'),
      isArrayLike = $__require('./isArrayLike');

  /**
   * Creates an array of the own and inherited enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keysIn(new Foo);
   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
   */
  function keysIn(object) {
    return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
  }

  module.exports = keysIn;
});
System.registerDynamic('npm:lodash@4.17.4/_getAllKeysIn.js', ['./_baseGetAllKeys', './_getSymbolsIn', './keysIn'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseGetAllKeys = $__require('./_baseGetAllKeys'),
      getSymbolsIn = $__require('./_getSymbolsIn'),
      keysIn = $__require('./keysIn');

  /**
   * Creates an array of own and inherited enumerable property names and
   * symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function getAllKeysIn(object) {
    return baseGetAllKeys(object, keysIn, getSymbolsIn);
  }

  module.exports = getAllKeysIn;
});
System.registerDynamic('npm:lodash@4.17.4/_DataView.js', ['./_getNative', './_root'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var getNative = $__require('./_getNative'),
        root = $__require('./_root');

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(root, 'DataView');

    module.exports = DataView;
});
System.registerDynamic('npm:lodash@4.17.4/_Promise.js', ['./_getNative', './_root'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var getNative = $__require('./_getNative'),
        root = $__require('./_root');

    /* Built-in method references that are verified to be native. */
    var Promise = getNative(root, 'Promise');

    module.exports = Promise;
});
System.registerDynamic('npm:lodash@4.17.4/_WeakMap.js', ['./_getNative', './_root'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var getNative = $__require('./_getNative'),
        root = $__require('./_root');

    /* Built-in method references that are verified to be native. */
    var WeakMap = getNative(root, 'WeakMap');

    module.exports = WeakMap;
});
System.registerDynamic('npm:lodash@4.17.4/_getTag.js', ['./_DataView', './_Map', './_Promise', './_Set', './_WeakMap', './_baseGetTag', './_toSource'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var DataView = $__require('./_DataView'),
        Map = $__require('./_Map'),
        Promise = $__require('./_Promise'),
        Set = $__require('./_Set'),
        WeakMap = $__require('./_WeakMap'),
        baseGetTag = $__require('./_baseGetTag'),
        toSource = $__require('./_toSource');

    /** `Object#toString` result references. */
    var mapTag = '[object Map]',
        objectTag = '[object Object]',
        promiseTag = '[object Promise]',
        setTag = '[object Set]',
        weakMapTag = '[object WeakMap]';

    var dataViewTag = '[object DataView]';

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
        getTag = function (value) {
            var result = baseGetTag(value),
                Ctor = result == objectTag ? value.constructor : undefined,
                ctorString = Ctor ? toSource(Ctor) : '';

            if (ctorString) {
                switch (ctorString) {
                    case dataViewCtorString:
                        return dataViewTag;
                    case mapCtorString:
                        return mapTag;
                    case promiseCtorString:
                        return promiseTag;
                    case setCtorString:
                        return setTag;
                    case weakMapCtorString:
                        return weakMapTag;
                }
            }
            return result;
        };
    }

    module.exports = getTag;
});
System.registerDynamic('npm:lodash@4.17.4/_initCloneArray.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Initializes an array clone.
   *
   * @private
   * @param {Array} array The array to clone.
   * @returns {Array} Returns the initialized clone.
   */
  function initCloneArray(array) {
    var length = array.length,
        result = array.constructor(length);

    // Add properties assigned by `RegExp#exec`.
    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
      result.index = array.index;
      result.input = array.input;
    }
    return result;
  }

  module.exports = initCloneArray;
});
System.registerDynamic('npm:lodash@4.17.4/_cloneDataView.js', ['./_cloneArrayBuffer'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var cloneArrayBuffer = $__require('./_cloneArrayBuffer');

  /**
   * Creates a clone of `dataView`.
   *
   * @private
   * @param {Object} dataView The data view to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned data view.
   */
  function cloneDataView(dataView, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
  }

  module.exports = cloneDataView;
});
System.registerDynamic("npm:lodash@4.17.4/_addMapEntry.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `map.set` because it's not chainable in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  module.exports = addMapEntry;
});
System.registerDynamic("npm:lodash@4.17.4/_mapToArray.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function (value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  module.exports = mapToArray;
});
System.registerDynamic('npm:lodash@4.17.4/_cloneMap.js', ['./_addMapEntry', './_arrayReduce', './_mapToArray'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var addMapEntry = $__require('./_addMapEntry'),
      arrayReduce = $__require('./_arrayReduce'),
      mapToArray = $__require('./_mapToArray');

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1;

  /**
   * Creates a clone of `map`.
   *
   * @private
   * @param {Object} map The map to clone.
   * @param {Function} cloneFunc The function to clone values.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned map.
   */
  function cloneMap(map, isDeep, cloneFunc) {
    var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
    return arrayReduce(array, addMapEntry, new map.constructor());
  }

  module.exports = cloneMap;
});
System.registerDynamic("npm:lodash@4.17.4/_cloneRegExp.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /**
   * Creates a clone of `regexp`.
   *
   * @private
   * @param {Object} regexp The regexp to clone.
   * @returns {Object} Returns the cloned regexp.
   */
  function cloneRegExp(regexp) {
    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
    result.lastIndex = regexp.lastIndex;
    return result;
  }

  module.exports = cloneRegExp;
});
System.registerDynamic("npm:lodash@4.17.4/_addSetEntry.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    // Don't return `set.add` because it's not chainable in IE 11.
    set.add(value);
    return set;
  }

  module.exports = addSetEntry;
});
System.registerDynamic("npm:lodash@4.17.4/_arrayReduce.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  module.exports = arrayReduce;
});
System.registerDynamic('npm:lodash@4.17.4/_cloneSet.js', ['./_addSetEntry', './_arrayReduce', './_setToArray'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var addSetEntry = $__require('./_addSetEntry'),
      arrayReduce = $__require('./_arrayReduce'),
      setToArray = $__require('./_setToArray');

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1;

  /**
   * Creates a clone of `set`.
   *
   * @private
   * @param {Object} set The set to clone.
   * @param {Function} cloneFunc The function to clone values.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned set.
   */
  function cloneSet(set, isDeep, cloneFunc) {
    var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
    return arrayReduce(array, addSetEntry, new set.constructor());
  }

  module.exports = cloneSet;
});
System.registerDynamic('npm:lodash@4.17.4/_cloneSymbol.js', ['./_Symbol'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var Symbol = $__require('./_Symbol');

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = Symbol ? Symbol.prototype : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  /**
   * Creates a clone of the `symbol` object.
   *
   * @private
   * @param {Object} symbol The symbol object to clone.
   * @returns {Object} Returns the cloned symbol object.
   */
  function cloneSymbol(symbol) {
    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
  }

  module.exports = cloneSymbol;
});
System.registerDynamic('npm:lodash@4.17.4/_Uint8Array.js', ['./_root'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var root = $__require('./_root');

  /** Built-in value references. */
  var Uint8Array = root.Uint8Array;

  module.exports = Uint8Array;
});
System.registerDynamic('npm:lodash@4.17.4/_cloneArrayBuffer.js', ['./_Uint8Array'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var Uint8Array = $__require('./_Uint8Array');

  /**
   * Creates a clone of `arrayBuffer`.
   *
   * @private
   * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
   * @returns {ArrayBuffer} Returns the cloned array buffer.
   */
  function cloneArrayBuffer(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array(result).set(new Uint8Array(arrayBuffer));
    return result;
  }

  module.exports = cloneArrayBuffer;
});
System.registerDynamic('npm:lodash@4.17.4/_cloneTypedArray.js', ['./_cloneArrayBuffer'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var cloneArrayBuffer = $__require('./_cloneArrayBuffer');

  /**
   * Creates a clone of `typedArray`.
   *
   * @private
   * @param {Object} typedArray The typed array to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned typed array.
   */
  function cloneTypedArray(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }

  module.exports = cloneTypedArray;
});
System.registerDynamic('npm:lodash@4.17.4/_initCloneByTag.js', ['./_cloneArrayBuffer', './_cloneDataView', './_cloneMap', './_cloneRegExp', './_cloneSet', './_cloneSymbol', './_cloneTypedArray'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var cloneArrayBuffer = $__require('./_cloneArrayBuffer'),
      cloneDataView = $__require('./_cloneDataView'),
      cloneMap = $__require('./_cloneMap'),
      cloneRegExp = $__require('./_cloneRegExp'),
      cloneSet = $__require('./_cloneSet'),
      cloneSymbol = $__require('./_cloneSymbol'),
      cloneTypedArray = $__require('./_cloneTypedArray');

  /** `Object#toString` result references. */
  var boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /**
   * Initializes an object clone based on its `toStringTag`.
   *
   * **Note:** This function only supports cloning values with tags of
   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
   *
   * @private
   * @param {Object} object The object to clone.
   * @param {string} tag The `toStringTag` of the object to clone.
   * @param {Function} cloneFunc The function to clone values.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the initialized clone.
   */
  function initCloneByTag(object, tag, cloneFunc, isDeep) {
    var Ctor = object.constructor;
    switch (tag) {
      case arrayBufferTag:
        return cloneArrayBuffer(object);

      case boolTag:
      case dateTag:
        return new Ctor(+object);

      case dataViewTag:
        return cloneDataView(object, isDeep);

      case float32Tag:case float64Tag:
      case int8Tag:case int16Tag:case int32Tag:
      case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:
        return cloneTypedArray(object, isDeep);

      case mapTag:
        return cloneMap(object, isDeep, cloneFunc);

      case numberTag:
      case stringTag:
        return new Ctor(object);

      case regexpTag:
        return cloneRegExp(object);

      case setTag:
        return cloneSet(object, isDeep, cloneFunc);

      case symbolTag:
        return cloneSymbol(object);
    }
  }

  module.exports = initCloneByTag;
});
System.registerDynamic('npm:lodash@4.17.4/_baseCreate.js', ['./isObject'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var isObject = $__require('./isObject');

  /** Built-in value references. */
  var objectCreate = Object.create;

  /**
   * The base implementation of `_.create` without support for assigning
   * properties to the created object.
   *
   * @private
   * @param {Object} proto The object to inherit from.
   * @returns {Object} Returns the new object.
   */
  var baseCreate = function () {
    function object() {}
    return function (proto) {
      if (!isObject(proto)) {
        return {};
      }
      if (objectCreate) {
        return objectCreate(proto);
      }
      object.prototype = proto;
      var result = new object();
      object.prototype = undefined;
      return result;
    };
  }();

  module.exports = baseCreate;
});
System.registerDynamic('npm:lodash@4.17.4/_getPrototype.js', ['./_overArg'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var overArg = $__require('./_overArg');

  /** Built-in value references. */
  var getPrototype = overArg(Object.getPrototypeOf, Object);

  module.exports = getPrototype;
});
System.registerDynamic('npm:lodash@4.17.4/_initCloneObject.js', ['./_baseCreate', './_getPrototype', './_isPrototype'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var baseCreate = $__require('./_baseCreate'),
        getPrototype = $__require('./_getPrototype'),
        isPrototype = $__require('./_isPrototype');

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
        return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
    }

    module.exports = initCloneObject;
});
System.registerDynamic("npm:lodash@4.17.4/_baseTimes.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  module.exports = baseTimes;
});
System.registerDynamic('npm:lodash@4.17.4/_baseIsArguments.js', ['./_baseGetTag', './isObjectLike'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseGetTag = $__require('./_baseGetTag'),
      isObjectLike = $__require('./isObjectLike');

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]';

  /**
   * The base implementation of `_.isArguments`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   */
  function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
  }

  module.exports = baseIsArguments;
});
System.registerDynamic('npm:lodash@4.17.4/isArguments.js', ['./_baseIsArguments', './isObjectLike'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var baseIsArguments = $__require('./_baseIsArguments'),
        isObjectLike = $__require('./isObjectLike');

    /** Used for built-in method references. */
    var objectProto = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Built-in value references. */
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function () {
        return arguments;
    }()) ? baseIsArguments : function (value) {
        return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
    };

    module.exports = isArguments;
});
System.registerDynamic("npm:lodash@4.17.4/isArray.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Checks if `value` is classified as an `Array` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array, else `false`.
   * @example
   *
   * _.isArray([1, 2, 3]);
   * // => true
   *
   * _.isArray(document.body.children);
   * // => false
   *
   * _.isArray('abc');
   * // => false
   *
   * _.isArray(_.noop);
   * // => false
   */
  var isArray = Array.isArray;

  module.exports = isArray;
});
System.registerDynamic("npm:lodash@4.17.4/stubFalse.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * This method returns `false`.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {boolean} Returns `false`.
   * @example
   *
   * _.times(2, _.stubFalse);
   * // => [false, false]
   */
  function stubFalse() {
    return false;
  }

  module.exports = stubFalse;
});
System.registerDynamic('npm:lodash@4.17.4/isBuffer.js', ['./_root', './stubFalse'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var root = $__require('./_root'),
      stubFalse = $__require('./stubFalse');

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Built-in value references. */
  var Buffer = moduleExports ? root.Buffer : undefined;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

  /**
   * Checks if `value` is a buffer.
   *
   * @static
   * @memberOf _
   * @since 4.3.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
   * @example
   *
   * _.isBuffer(new Buffer(2));
   * // => true
   *
   * _.isBuffer(new Uint8Array(2));
   * // => false
   */
  var isBuffer = nativeIsBuffer || stubFalse;

  module.exports = isBuffer;
});
System.registerDynamic('npm:lodash@4.17.4/_isIndex.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
  }

  module.exports = isIndex;
});
System.registerDynamic('npm:lodash@4.17.4/isObjectLike.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike(value) {
    return value != null && typeof value == 'object';
  }

  module.exports = isObjectLike;
});
System.registerDynamic('npm:lodash@4.17.4/_baseIsTypedArray.js', ['./_baseGetTag', './isLength', './isObjectLike'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var baseGetTag = $__require('./_baseGetTag'),
        isLength = $__require('./isLength'),
        isObjectLike = $__require('./isObjectLike');

    /** `Object#toString` result references. */
    var argsTag = '[object Arguments]',
        arrayTag = '[object Array]',
        boolTag = '[object Boolean]',
        dateTag = '[object Date]',
        errorTag = '[object Error]',
        funcTag = '[object Function]',
        mapTag = '[object Map]',
        numberTag = '[object Number]',
        objectTag = '[object Object]',
        regexpTag = '[object RegExp]',
        setTag = '[object Set]',
        stringTag = '[object String]',
        weakMapTag = '[object WeakMap]';

    var arrayBufferTag = '[object ArrayBuffer]',
        dataViewTag = '[object DataView]',
        float32Tag = '[object Float32Array]',
        float64Tag = '[object Float64Array]',
        int8Tag = '[object Int8Array]',
        int16Tag = '[object Int16Array]',
        int32Tag = '[object Int32Array]',
        uint8Tag = '[object Uint8Array]',
        uint8ClampedTag = '[object Uint8ClampedArray]',
        uint16Tag = '[object Uint16Array]',
        uint32Tag = '[object Uint32Array]';

    /** Used to identify `toStringTag` values of typed arrays. */
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    module.exports = baseIsTypedArray;
});
System.registerDynamic("npm:lodash@4.17.4/_baseUnary.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function (value) {
      return func(value);
    };
  }

  module.exports = baseUnary;
});
System.registerDynamic('npm:lodash@4.17.4/_nodeUtil.js', ['./_freeGlobal'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var freeGlobal = $__require('./_freeGlobal');

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = function () {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }();

  module.exports = nodeUtil;
});
System.registerDynamic('npm:lodash@4.17.4/isTypedArray.js', ['./_baseIsTypedArray', './_baseUnary', './_nodeUtil'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseIsTypedArray = $__require('./_baseIsTypedArray'),
      baseUnary = $__require('./_baseUnary'),
      nodeUtil = $__require('./_nodeUtil');

  /* Node.js helper references. */
  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /**
   * Checks if `value` is classified as a typed array.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   * @example
   *
   * _.isTypedArray(new Uint8Array);
   * // => true
   *
   * _.isTypedArray([]);
   * // => false
   */
  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

  module.exports = isTypedArray;
});
System.registerDynamic('npm:lodash@4.17.4/_arrayLikeKeys.js', ['./_baseTimes', './isArguments', './isArray', './isBuffer', './_isIndex', './isTypedArray'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseTimes = $__require('./_baseTimes'),
      isArguments = $__require('./isArguments'),
      isArray = $__require('./isArray'),
      isBuffer = $__require('./isBuffer'),
      isIndex = $__require('./_isIndex'),
      isTypedArray = $__require('./isTypedArray');

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Creates an array of the enumerable property names of the array-like `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @param {boolean} inherited Specify returning inherited property names.
   * @returns {Array} Returns the array of property names.
   */
  function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value),
        isArg = !isArr && isArguments(value),
        isBuff = !isArr && !isArg && isBuffer(value),
        isType = !isArr && !isArg && !isBuff && isTypedArray(value),
        skipIndexes = isArr || isArg || isBuff || isType,
        result = skipIndexes ? baseTimes(value.length, String) : [],
        length = result.length;

    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (
      // Safari 9 has enumerable `arguments.length` in strict mode.
      key == 'length' ||
      // Node.js 0.10 has enumerable non-index properties on buffers.
      isBuff && (key == 'offset' || key == 'parent') ||
      // PhantomJS 2 has enumerable non-index properties on typed arrays.
      isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') ||
      // Skip index properties.
      isIndex(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }

  module.exports = arrayLikeKeys;
});
System.registerDynamic('npm:lodash@4.17.4/_isPrototype.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /**
   * Checks if `value` is likely a prototype object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
   */
  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;

    return value === proto;
  }

  module.exports = isPrototype;
});
System.registerDynamic("npm:lodash@4.17.4/_overArg.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function (arg) {
      return func(transform(arg));
    };
  }

  module.exports = overArg;
});
System.registerDynamic('npm:lodash@4.17.4/_nativeKeys.js', ['./_overArg'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var overArg = $__require('./_overArg');

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeKeys = overArg(Object.keys, Object);

  module.exports = nativeKeys;
});
System.registerDynamic('npm:lodash@4.17.4/_baseKeys.js', ['./_isPrototype', './_nativeKeys'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var isPrototype = $__require('./_isPrototype'),
      nativeKeys = $__require('./_nativeKeys');

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeys(object) {
    if (!isPrototype(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }
    return result;
  }

  module.exports = baseKeys;
});
System.registerDynamic('npm:lodash@4.17.4/isLength.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /**
   * Checks if `value` is a valid array-like length.
   *
   * **Note:** This method is loosely based on
   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
   * @example
   *
   * _.isLength(3);
   * // => true
   *
   * _.isLength(Number.MIN_VALUE);
   * // => false
   *
   * _.isLength(Infinity);
   * // => false
   *
   * _.isLength('3');
   * // => false
   */
  function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  module.exports = isLength;
});
System.registerDynamic('npm:lodash@4.17.4/isArrayLike.js', ['./isFunction', './isLength'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var isFunction = $__require('./isFunction'),
      isLength = $__require('./isLength');

  /**
   * Checks if `value` is array-like. A value is considered array-like if it's
   * not a function and has a `value.length` that's an integer greater than or
   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
   * @example
   *
   * _.isArrayLike([1, 2, 3]);
   * // => true
   *
   * _.isArrayLike(document.body.children);
   * // => true
   *
   * _.isArrayLike('abc');
   * // => true
   *
   * _.isArrayLike(_.noop);
   * // => false
   */
  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
  }

  module.exports = isArrayLike;
});
System.registerDynamic('npm:lodash@4.17.4/keys.js', ['./_arrayLikeKeys', './_baseKeys', './isArrayLike'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var arrayLikeKeys = $__require('./_arrayLikeKeys'),
      baseKeys = $__require('./_baseKeys'),
      isArrayLike = $__require('./isArrayLike');

  /**
   * Creates an array of the own enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects. See the
   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * for more details.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keys(new Foo);
   * // => ['a', 'b'] (iteration order is not guaranteed)
   *
   * _.keys('hi');
   * // => ['0', '1']
   */
  function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  }

  module.exports = keys;
});
System.registerDynamic('npm:lodash@4.17.4/_baseClone.js', ['./_Stack', './_arrayEach', './_assignValue', './_baseAssign', './_baseAssignIn', './_cloneBuffer', './_copyArray', './_copySymbols', './_copySymbolsIn', './_getAllKeys', './_getAllKeysIn', './_getTag', './_initCloneArray', './_initCloneByTag', './_initCloneObject', './isArray', './isBuffer', './isObject', './keys'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var Stack = $__require('./_Stack'),
      arrayEach = $__require('./_arrayEach'),
      assignValue = $__require('./_assignValue'),
      baseAssign = $__require('./_baseAssign'),
      baseAssignIn = $__require('./_baseAssignIn'),
      cloneBuffer = $__require('./_cloneBuffer'),
      copyArray = $__require('./_copyArray'),
      copySymbols = $__require('./_copySymbols'),
      copySymbolsIn = $__require('./_copySymbolsIn'),
      getAllKeys = $__require('./_getAllKeys'),
      getAllKeysIn = $__require('./_getAllKeysIn'),
      getTag = $__require('./_getTag'),
      initCloneArray = $__require('./_initCloneArray'),
      initCloneByTag = $__require('./_initCloneByTag'),
      initCloneObject = $__require('./_initCloneObject'),
      isArray = $__require('./isArray'),
      isBuffer = $__require('./isBuffer'),
      isObject = $__require('./isObject'),
      keys = $__require('./keys');

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      weakMapTag = '[object WeakMap]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

  /**
   * The base implementation of `_.clone` and `_.cloneDeep` which tracks
   * traversed objects.
   *
   * @private
   * @param {*} value The value to clone.
   * @param {boolean} bitmask The bitmask flags.
   *  1 - Deep clone
   *  2 - Flatten inherited properties
   *  4 - Clone symbols
   * @param {Function} [customizer] The function to customize cloning.
   * @param {string} [key] The key of `value`.
   * @param {Object} [object] The parent object of `value`.
   * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
   * @returns {*} Returns the cloned value.
   */
  function baseClone(value, bitmask, customizer, key, object, stack) {
    var result,
        isDeep = bitmask & CLONE_DEEP_FLAG,
        isFlat = bitmask & CLONE_FLAT_FLAG,
        isFull = bitmask & CLONE_SYMBOLS_FLAG;

    if (customizer) {
      result = object ? customizer(value, key, object, stack) : customizer(value);
    }
    if (result !== undefined) {
      return result;
    }
    if (!isObject(value)) {
      return value;
    }
    var isArr = isArray(value);
    if (isArr) {
      result = initCloneArray(value);
      if (!isDeep) {
        return copyArray(value, result);
      }
    } else {
      var tag = getTag(value),
          isFunc = tag == funcTag || tag == genTag;

      if (isBuffer(value)) {
        return cloneBuffer(value, isDeep);
      }
      if (tag == objectTag || tag == argsTag || isFunc && !object) {
        result = isFlat || isFunc ? {} : initCloneObject(value);
        if (!isDeep) {
          return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
        }
      } else {
        if (!cloneableTags[tag]) {
          return object ? value : {};
        }
        result = initCloneByTag(value, tag, baseClone, isDeep);
      }
    }
    // Check for circular references and return its corresponding clone.
    stack || (stack = new Stack());
    var stacked = stack.get(value);
    if (stacked) {
      return stacked;
    }
    stack.set(value, result);

    var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;

    var props = isArr ? undefined : keysFunc(value);
    arrayEach(props || value, function (subValue, key) {
      if (props) {
        key = subValue;
        subValue = value[key];
      }
      // Recursively populate clone (susceptible to call stack limits).
      assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
    return result;
  }

  module.exports = baseClone;
});
System.registerDynamic('npm:lodash@4.17.4/clone.js', ['./_baseClone'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseClone = $__require('./_baseClone');

  /** Used to compose bitmasks for cloning. */
  var CLONE_SYMBOLS_FLAG = 4;

  /**
   * Creates a shallow clone of `value`.
   *
   * **Note:** This method is loosely based on the
   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
   * and supports cloning arrays, array buffers, booleans, date objects, maps,
   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
   * arrays. The own enumerable properties of `arguments` objects are cloned
   * as plain objects. An empty object is returned for uncloneable values such
   * as error objects, functions, DOM nodes, and WeakMaps.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to clone.
   * @returns {*} Returns the cloned value.
   * @see _.cloneDeep
   * @example
   *
   * var objects = [{ 'a': 1 }, { 'b': 2 }];
   *
   * var shallow = _.clone(objects);
   * console.log(shallow[0] === objects[0]);
   * // => true
   */
  function clone(value) {
    return baseClone(value, CLONE_SYMBOLS_FLAG);
  }

  module.exports = clone;
});
System.registerDynamic('npm:lodash@4.17.4/_hashClear.js', ['./_nativeCreate'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var nativeCreate = $__require('./_nativeCreate');

  /**
   * Removes all key-value entries from the hash.
   *
   * @private
   * @name clear
   * @memberOf Hash
   */
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
  }

  module.exports = hashClear;
});
System.registerDynamic("npm:lodash@4.17.4/_hashDelete.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Removes `key` and its value from the hash.
   *
   * @private
   * @name delete
   * @memberOf Hash
   * @param {Object} hash The hash to modify.
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }

  module.exports = hashDelete;
});
System.registerDynamic('npm:lodash@4.17.4/_hashGet.js', ['./_nativeCreate'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var nativeCreate = $__require('./_nativeCreate');

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Gets the hash value for `key`.
   *
   * @private
   * @name get
   * @memberOf Hash
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }

  module.exports = hashGet;
});
System.registerDynamic('npm:lodash@4.17.4/_hashHas.js', ['./_nativeCreate'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var nativeCreate = $__require('./_nativeCreate');

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Checks if a hash value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Hash
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  }

  module.exports = hashHas;
});
System.registerDynamic('npm:lodash@4.17.4/_nativeCreate.js', ['./_getNative'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var getNative = $__require('./_getNative');

  /* Built-in method references that are verified to be native. */
  var nativeCreate = getNative(Object, 'create');

  module.exports = nativeCreate;
});
System.registerDynamic('npm:lodash@4.17.4/_hashSet.js', ['./_nativeCreate'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var nativeCreate = $__require('./_nativeCreate');

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /**
   * Sets the hash `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Hash
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the hash instance.
   */
  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
  }

  module.exports = hashSet;
});
System.registerDynamic('npm:lodash@4.17.4/_Hash.js', ['./_hashClear', './_hashDelete', './_hashGet', './_hashHas', './_hashSet'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var hashClear = $__require('./_hashClear'),
        hashDelete = $__require('./_hashDelete'),
        hashGet = $__require('./_hashGet'),
        hashHas = $__require('./_hashHas'),
        hashSet = $__require('./_hashSet');

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;

        this.clear();
        while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
        }
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    module.exports = Hash;
});
System.registerDynamic("npm:lodash@4.17.4/_listCacheClear.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Removes all key-value entries from the list cache.
   *
   * @private
   * @name clear
   * @memberOf ListCache
   */
  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }

  module.exports = listCacheClear;
});
System.registerDynamic('npm:lodash@4.17.4/_listCacheDelete.js', ['./_assocIndexOf'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var assocIndexOf = $__require('./_assocIndexOf');

  /** Used for built-in method references. */
  var arrayProto = Array.prototype;

  /** Built-in value references. */
  var splice = arrayProto.splice;

  /**
   * Removes `key` and its value from the list cache.
   *
   * @private
   * @name delete
   * @memberOf ListCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function listCacheDelete(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    --this.size;
    return true;
  }

  module.exports = listCacheDelete;
});
System.registerDynamic('npm:lodash@4.17.4/_listCacheGet.js', ['./_assocIndexOf'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var assocIndexOf = $__require('./_assocIndexOf');

  /**
   * Gets the list cache value for `key`.
   *
   * @private
   * @name get
   * @memberOf ListCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function listCacheGet(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    return index < 0 ? undefined : data[index][1];
  }

  module.exports = listCacheGet;
});
System.registerDynamic('npm:lodash@4.17.4/_listCacheHas.js', ['./_assocIndexOf'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var assocIndexOf = $__require('./_assocIndexOf');

  /**
   * Checks if a list cache value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf ListCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }

  module.exports = listCacheHas;
});
System.registerDynamic("npm:lodash@4.17.4/eq.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Performs a
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * comparison between two values to determine if they are equivalent.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.eq(object, object);
   * // => true
   *
   * _.eq(object, other);
   * // => false
   *
   * _.eq('a', 'a');
   * // => true
   *
   * _.eq('a', Object('a'));
   * // => false
   *
   * _.eq(NaN, NaN);
   * // => true
   */
  function eq(value, other) {
    return value === other || value !== value && other !== other;
  }

  module.exports = eq;
});
System.registerDynamic('npm:lodash@4.17.4/_assocIndexOf.js', ['./eq'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var eq = $__require('./eq');

  /**
   * Gets the index at which the `key` is found in `array` of key-value pairs.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} key The key to search for.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function assocIndexOf(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }

  module.exports = assocIndexOf;
});
System.registerDynamic('npm:lodash@4.17.4/_listCacheSet.js', ['./_assocIndexOf'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var assocIndexOf = $__require('./_assocIndexOf');

  /**
   * Sets the list cache `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf ListCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the list cache instance.
   */
  function listCacheSet(key, value) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }

  module.exports = listCacheSet;
});
System.registerDynamic('npm:lodash@4.17.4/_ListCache.js', ['./_listCacheClear', './_listCacheDelete', './_listCacheGet', './_listCacheHas', './_listCacheSet'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var listCacheClear = $__require('./_listCacheClear'),
        listCacheDelete = $__require('./_listCacheDelete'),
        listCacheGet = $__require('./_listCacheGet'),
        listCacheHas = $__require('./_listCacheHas'),
        listCacheSet = $__require('./_listCacheSet');

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;

        this.clear();
        while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
        }
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    module.exports = ListCache;
});
System.registerDynamic('npm:lodash@4.17.4/_Map.js', ['./_getNative', './_root'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var getNative = $__require('./_getNative'),
        root = $__require('./_root');

    /* Built-in method references that are verified to be native. */
    var Map = getNative(root, 'Map');

    module.exports = Map;
});
System.registerDynamic('npm:lodash@4.17.4/_mapCacheClear.js', ['./_Hash', './_ListCache', './_Map'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var Hash = $__require('./_Hash'),
      ListCache = $__require('./_ListCache'),
      Map = $__require('./_Map');

  /**
   * Removes all key-value entries from the map.
   *
   * @private
   * @name clear
   * @memberOf MapCache
   */
  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      'hash': new Hash(),
      'map': new (Map || ListCache)(),
      'string': new Hash()
    };
  }

  module.exports = mapCacheClear;
});
System.registerDynamic('npm:lodash@4.17.4/_mapCacheDelete.js', ['./_getMapData'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var getMapData = $__require('./_getMapData');

  /**
   * Removes `key` and its value from the map.
   *
   * @private
   * @name delete
   * @memberOf MapCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
  }

  module.exports = mapCacheDelete;
});
System.registerDynamic('npm:lodash@4.17.4/_mapCacheGet.js', ['./_getMapData'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var getMapData = $__require('./_getMapData');

  /**
   * Gets the map value for `key`.
   *
   * @private
   * @name get
   * @memberOf MapCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }

  module.exports = mapCacheGet;
});
System.registerDynamic('npm:lodash@4.17.4/_mapCacheHas.js', ['./_getMapData'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var getMapData = $__require('./_getMapData');

  /**
   * Checks if a map value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf MapCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }

  module.exports = mapCacheHas;
});
System.registerDynamic('npm:lodash@4.17.4/_isKeyable.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Checks if `value` is suitable for use as unique object key.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
   */
  function isKeyable(value) {
    var type = typeof value;
    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
  }

  module.exports = isKeyable;
});
System.registerDynamic('npm:lodash@4.17.4/_getMapData.js', ['./_isKeyable'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var isKeyable = $__require('./_isKeyable');

  /**
   * Gets the data for `map`.
   *
   * @private
   * @param {Object} map The map to query.
   * @param {string} key The reference key.
   * @returns {*} Returns the map data.
   */
  function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
  }

  module.exports = getMapData;
});
System.registerDynamic('npm:lodash@4.17.4/_mapCacheSet.js', ['./_getMapData'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var getMapData = $__require('./_getMapData');

  /**
   * Sets the map `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf MapCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the map cache instance.
   */
  function mapCacheSet(key, value) {
    var data = getMapData(this, key),
        size = data.size;

    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }

  module.exports = mapCacheSet;
});
System.registerDynamic('npm:lodash@4.17.4/_MapCache.js', ['./_mapCacheClear', './_mapCacheDelete', './_mapCacheGet', './_mapCacheHas', './_mapCacheSet'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var mapCacheClear = $__require('./_mapCacheClear'),
        mapCacheDelete = $__require('./_mapCacheDelete'),
        mapCacheGet = $__require('./_mapCacheGet'),
        mapCacheHas = $__require('./_mapCacheHas'),
        mapCacheSet = $__require('./_mapCacheSet');

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;

        this.clear();
        while (++index < length) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
        }
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    module.exports = MapCache;
});
System.registerDynamic('npm:lodash@4.17.4/_setCacheAdd.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /**
   * Adds `value` to the array cache.
   *
   * @private
   * @name add
   * @memberOf SetCache
   * @alias push
   * @param {*} value The value to cache.
   * @returns {Object} Returns the cache instance.
   */
  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }

  module.exports = setCacheAdd;
});
System.registerDynamic("npm:lodash@4.17.4/_setCacheHas.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Checks if `value` is in the array cache.
   *
   * @private
   * @name has
   * @memberOf SetCache
   * @param {*} value The value to search for.
   * @returns {number} Returns `true` if `value` is found, else `false`.
   */
  function setCacheHas(value) {
    return this.__data__.has(value);
  }

  module.exports = setCacheHas;
});
System.registerDynamic('npm:lodash@4.17.4/_SetCache.js', ['./_MapCache', './_setCacheAdd', './_setCacheHas'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var MapCache = $__require('./_MapCache'),
        setCacheAdd = $__require('./_setCacheAdd'),
        setCacheHas = $__require('./_setCacheHas');

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
        var index = -1,
            length = values == null ? 0 : values.length;

        this.__data__ = new MapCache();
        while (++index < length) {
            this.add(values[index]);
        }
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    module.exports = SetCache;
});
System.registerDynamic("npm:lodash@4.17.4/_baseFindIndex.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while (fromRight ? index-- : ++index < length) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  module.exports = baseFindIndex;
});
System.registerDynamic("npm:lodash@4.17.4/_baseIsNaN.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  module.exports = baseIsNaN;
});
System.registerDynamic("npm:lodash@4.17.4/_strictIndexOf.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  module.exports = strictIndexOf;
});
System.registerDynamic('npm:lodash@4.17.4/_baseIndexOf.js', ['./_baseFindIndex', './_baseIsNaN', './_strictIndexOf'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var baseFindIndex = $__require('./_baseFindIndex'),
        baseIsNaN = $__require('./_baseIsNaN'),
        strictIndexOf = $__require('./_strictIndexOf');

    /**
     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} fromIndex The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function baseIndexOf(array, value, fromIndex) {
        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }

    module.exports = baseIndexOf;
});
System.registerDynamic('npm:lodash@4.17.4/_arrayIncludes.js', ['./_baseIndexOf'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseIndexOf = $__require('./_baseIndexOf');

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  module.exports = arrayIncludes;
});
System.registerDynamic("npm:lodash@4.17.4/_arrayIncludesWith.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  module.exports = arrayIncludesWith;
});
System.registerDynamic("npm:lodash@4.17.4/_cacheHas.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  module.exports = cacheHas;
});
System.registerDynamic('npm:lodash@4.17.4/_Symbol.js', ['./_root'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var root = $__require('./_root');

  /** Built-in value references. */
  var Symbol = root.Symbol;

  module.exports = Symbol;
});
System.registerDynamic('npm:lodash@4.17.4/_getRawTag.js', ['./_Symbol'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var Symbol = $__require('./_Symbol');

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString;

  /** Built-in value references. */
  var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

  /**
   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the raw `toStringTag`.
   */
  function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag),
        tag = value[symToStringTag];

    try {
      value[symToStringTag] = undefined;
      var unmasked = true;
    } catch (e) {}

    var result = nativeObjectToString.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag] = tag;
      } else {
        delete value[symToStringTag];
      }
    }
    return result;
  }

  module.exports = getRawTag;
});
System.registerDynamic("npm:lodash@4.17.4/_objectToString.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString;

  /**
   * Converts `value` to a string using `Object.prototype.toString`.
   *
   * @private
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   */
  function objectToString(value) {
    return nativeObjectToString.call(value);
  }

  module.exports = objectToString;
});
System.registerDynamic('npm:lodash@4.17.4/_baseGetTag.js', ['./_Symbol', './_getRawTag', './_objectToString'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var Symbol = $__require('./_Symbol'),
        getRawTag = $__require('./_getRawTag'),
        objectToString = $__require('./_objectToString');

    /** `Object#toString` result references. */
    var nullTag = '[object Null]',
        undefinedTag = '[object Undefined]';

    /** Built-in value references. */
    var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
        if (value == null) {
            return value === undefined ? undefinedTag : nullTag;
        }
        return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }

    module.exports = baseGetTag;
});
System.registerDynamic('npm:lodash@4.17.4/isFunction.js', ['./_baseGetTag', './isObject'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var baseGetTag = $__require('./_baseGetTag'),
        isObject = $__require('./isObject');

    /** `Object#toString` result references. */
    var asyncTag = '[object AsyncFunction]',
        funcTag = '[object Function]',
        genTag = '[object GeneratorFunction]',
        proxyTag = '[object Proxy]';

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
        if (!isObject(value)) {
            return false;
        }
        // The use of `Object#toString` avoids issues with the `typeof` operator
        // in Safari 9 which returns 'object' for typed arrays and other constructors.
        var tag = baseGetTag(value);
        return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    module.exports = isFunction;
});
System.registerDynamic('npm:lodash@4.17.4/_coreJsData.js', ['./_root'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var root = $__require('./_root');

  /** Used to detect overreaching core-js shims. */
  var coreJsData = root['__core-js_shared__'];

  module.exports = coreJsData;
});
System.registerDynamic('npm:lodash@4.17.4/_isMasked.js', ['./_coreJsData'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var coreJsData = $__require('./_coreJsData');

  /** Used to detect methods masquerading as native. */
  var maskSrcKey = function () {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? 'Symbol(src)_1.' + uid : '';
  }();

  /**
   * Checks if `func` has its source masked.
   *
   * @private
   * @param {Function} func The function to check.
   * @returns {boolean} Returns `true` if `func` is masked, else `false`.
   */
  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }

  module.exports = isMasked;
});
System.registerDynamic('npm:lodash@4.17.4/isObject.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject(value) {
    var type = typeof value;
    return value != null && (type == 'object' || type == 'function');
  }

  module.exports = isObject;
});
System.registerDynamic('npm:lodash@4.17.4/_toSource.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Used for built-in method references. */
  var funcProto = Function.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /**
   * Converts `func` to its source code.
   *
   * @private
   * @param {Function} func The function to convert.
   * @returns {string} Returns the source code.
   */
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}
      try {
        return func + '';
      } catch (e) {}
    }
    return '';
  }

  module.exports = toSource;
});
System.registerDynamic('npm:lodash@4.17.4/_baseIsNative.js', ['./isFunction', './_isMasked', './isObject', './_toSource'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var isFunction = $__require('./isFunction'),
      isMasked = $__require('./_isMasked'),
      isObject = $__require('./isObject'),
      toSource = $__require('./_toSource');

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used for built-in method references. */
  var funcProto = Function.prototype,
      objectProto = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to detect if a method is native. */
  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

  /**
   * The base implementation of `_.isNative` without bad shim checks.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a native function,
   *  else `false`.
   */
  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }

  module.exports = baseIsNative;
});
System.registerDynamic("npm:lodash@4.17.4/_getValue.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  module.exports = getValue;
});
System.registerDynamic('npm:lodash@4.17.4/_getNative.js', ['./_baseIsNative', './_getValue'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseIsNative = $__require('./_baseIsNative'),
      getValue = $__require('./_getValue');

  /**
   * Gets the native function at `key` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the method to get.
   * @returns {*} Returns the function if it's native, else `undefined`.
   */
  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  }

  module.exports = getNative;
});
System.registerDynamic('npm:lodash@4.17.4/_freeGlobal.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  module.exports = freeGlobal;
});
System.registerDynamic('npm:lodash@4.17.4/_root.js', ['./_freeGlobal'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var freeGlobal = $__require('./_freeGlobal');

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  module.exports = root;
});
System.registerDynamic('npm:lodash@4.17.4/_Set.js', ['./_getNative', './_root'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    var getNative = $__require('./_getNative'),
        root = $__require('./_root');

    /* Built-in method references that are verified to be native. */
    var Set = getNative(root, 'Set');

    module.exports = Set;
});
System.registerDynamic("npm:lodash@4.17.4/noop.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * This method returns `undefined`.
   *
   * @static
   * @memberOf _
   * @since 2.3.0
   * @category Util
   * @example
   *
   * _.times(2, _.noop);
   * // => [undefined, undefined]
   */
  function noop() {
    // No operation performed.
  }

  module.exports = noop;
});
System.registerDynamic('npm:lodash@4.17.4/_createSet.js', ['./_Set', './noop', './_setToArray'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var Set = $__require('./_Set'),
      noop = $__require('./noop'),
      setToArray = $__require('./_setToArray');

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /**
   * Creates a set object of `values`.
   *
   * @private
   * @param {Array} values The values to add to the set.
   * @returns {Object} Returns the new set.
   */
  var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
    return new Set(values);
  };

  module.exports = createSet;
});
System.registerDynamic("npm:lodash@4.17.4/_setToArray.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function (value) {
      result[++index] = value;
    });
    return result;
  }

  module.exports = setToArray;
});
System.registerDynamic('npm:lodash@4.17.4/_baseUniq.js', ['./_SetCache', './_arrayIncludes', './_arrayIncludesWith', './_cacheHas', './_createSet', './_setToArray'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var SetCache = $__require('./_SetCache'),
      arrayIncludes = $__require('./_arrayIncludes'),
      arrayIncludesWith = $__require('./_arrayIncludesWith'),
      cacheHas = $__require('./_cacheHas'),
      createSet = $__require('./_createSet'),
      setToArray = $__require('./_setToArray');

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /**
   * The base implementation of `_.uniqBy` without support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} [iteratee] The iteratee invoked per element.
   * @param {Function} [comparator] The comparator invoked per element.
   * @returns {Array} Returns the new duplicate free array.
   */
  function baseUniq(array, iteratee, comparator) {
    var index = -1,
        includes = arrayIncludes,
        length = array.length,
        isCommon = true,
        result = [],
        seen = result;

    if (comparator) {
      isCommon = false;
      includes = arrayIncludesWith;
    } else if (length >= LARGE_ARRAY_SIZE) {
      var set = iteratee ? null : createSet(array);
      if (set) {
        return setToArray(set);
      }
      isCommon = false;
      includes = cacheHas;
      seen = new SetCache();
    } else {
      seen = iteratee ? [] : result;
    }
    outer: while (++index < length) {
      var value = array[index],
          computed = iteratee ? iteratee(value) : value;

      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee) {
          seen.push(computed);
        }
        result.push(value);
      } else if (!includes(seen, computed, comparator)) {
        if (seen !== result) {
          seen.push(computed);
        }
        result.push(value);
      }
    }
    return result;
  }

  module.exports = baseUniq;
});
System.registerDynamic("npm:lodash@4.17.4.json", [], true, function() {
  return {
    "main": "lodash.js",
    "map": {
      "buffer": "@empty",
      "process": "@empty"
    },
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    }
  };
});

System.registerDynamic('npm:lodash@4.17.4/uniq.js', ['./_baseUniq'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var baseUniq = $__require('./_baseUniq');

  /**
   * Creates a duplicate-free version of an array, using
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons, in which only the first occurrence of each element
   * is kept. The order of result values is determined by the order they occur
   * in the array.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to inspect.
   * @returns {Array} Returns the new duplicate free array.
   * @example
   *
   * _.uniq([2, 1, 2]);
   * // => [2, 1]
   */
  function uniq(array) {
    return array && array.length ? baseUniq(array) : [];
  }

  module.exports = uniq;
});
System.registerDynamic('npm:core-js@2.5.1/library/fn/symbol/for.js', ['../../modules/es6.symbol', '../../modules/_core', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('../../modules/es6.symbol');
  module.exports = $__require('../../modules/_core').Symbol['for'];
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/symbol/for.js", ["core-js/library/fn/symbol/for"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/symbol/for"), __esModule: true };
});
System.registerDynamic("npm:babel-types@6.26.0/lib/constants.js", ["babel-runtime/core-js/symbol/for"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = undefined;

  var _for = $__require("babel-runtime/core-js/symbol/for");

  var _for2 = _interopRequireDefault(_for);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var STATEMENT_OR_BLOCK_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"];
  var FLATTENABLE_KEYS = exports.FLATTENABLE_KEYS = ["body", "expressions"];
  var FOR_INIT_KEYS = exports.FOR_INIT_KEYS = ["left", "init"];
  var COMMENT_KEYS = exports.COMMENT_KEYS = ["leadingComments", "trailingComments", "innerComments"];

  var LOGICAL_OPERATORS = exports.LOGICAL_OPERATORS = ["||", "&&"];
  var UPDATE_OPERATORS = exports.UPDATE_OPERATORS = ["++", "--"];

  var BOOLEAN_NUMBER_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = [">", "<", ">=", "<="];
  var EQUALITY_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = ["==", "===", "!=", "!=="];
  var COMPARISON_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = [].concat(EQUALITY_BINARY_OPERATORS, ["in", "instanceof"]);
  var BOOLEAN_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = [].concat(COMPARISON_BINARY_OPERATORS, BOOLEAN_NUMBER_BINARY_OPERATORS);
  var NUMBER_BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"];
  var BINARY_OPERATORS = exports.BINARY_OPERATORS = ["+"].concat(NUMBER_BINARY_OPERATORS, BOOLEAN_BINARY_OPERATORS);

  var BOOLEAN_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = ["delete", "!"];
  var NUMBER_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = ["+", "-", "++", "--", "~"];
  var STRING_UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = ["typeof"];
  var UNARY_OPERATORS = exports.UNARY_OPERATORS = ["void"].concat(BOOLEAN_UNARY_OPERATORS, NUMBER_UNARY_OPERATORS, STRING_UNARY_OPERATORS);

  var INHERIT_KEYS = exports.INHERIT_KEYS = {
    optional: ["typeAnnotation", "typeParameters", "returnType"],
    force: ["start", "loc", "end"]
  };

  var BLOCK_SCOPED_SYMBOL = exports.BLOCK_SCOPED_SYMBOL = (0, _for2.default)("var used to be block scoped");
  var NOT_LOCAL_BINDING = exports.NOT_LOCAL_BINDING = (0, _for2.default)("should not be considered a local binding");
});
System.registerDynamic("npm:babel-types@6.26.0/lib/definitions/core.js", ["../index", "../constants", "./index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _index = $__require("../index");

  var t = _interopRequireWildcard(_index);

  var _constants = $__require("../constants");

  var _index2 = $__require("./index");

  var _index3 = _interopRequireDefault(_index2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  (0, _index3.default)("ArrayExpression", {
    fields: {
      elements: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeOrValueType)("null", "Expression", "SpreadElement"))),
        default: []
      }
    },
    visitor: ["elements"],
    aliases: ["Expression"]
  });

  (0, _index3.default)("AssignmentExpression", {
    fields: {
      operator: {
        validate: (0, _index2.assertValueType)("string")
      },
      left: {
        validate: (0, _index2.assertNodeType)("LVal")
      },
      right: {
        validate: (0, _index2.assertNodeType)("Expression")
      }
    },
    builder: ["operator", "left", "right"],
    visitor: ["left", "right"],
    aliases: ["Expression"]
  });

  (0, _index3.default)("BinaryExpression", {
    builder: ["operator", "left", "right"],
    fields: {
      operator: {
        validate: _index2.assertOneOf.apply(undefined, _constants.BINARY_OPERATORS)
      },
      left: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      right: {
        validate: (0, _index2.assertNodeType)("Expression")
      }
    },
    visitor: ["left", "right"],
    aliases: ["Binary", "Expression"]
  });

  (0, _index3.default)("Directive", {
    visitor: ["value"],
    fields: {
      value: {
        validate: (0, _index2.assertNodeType)("DirectiveLiteral")
      }
    }
  });

  (0, _index3.default)("DirectiveLiteral", {
    builder: ["value"],
    fields: {
      value: {
        validate: (0, _index2.assertValueType)("string")
      }
    }
  });

  (0, _index3.default)("BlockStatement", {
    builder: ["body", "directives"],
    visitor: ["directives", "body"],
    fields: {
      directives: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Directive"))),
        default: []
      },
      body: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))
      }
    },
    aliases: ["Scopable", "BlockParent", "Block", "Statement"]
  });

  (0, _index3.default)("BreakStatement", {
    visitor: ["label"],
    fields: {
      label: {
        validate: (0, _index2.assertNodeType)("Identifier"),
        optional: true
      }
    },
    aliases: ["Statement", "Terminatorless", "CompletionStatement"]
  });

  (0, _index3.default)("CallExpression", {
    visitor: ["callee", "arguments"],
    fields: {
      callee: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      arguments: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression", "SpreadElement")))
      }
    },
    aliases: ["Expression"]
  });

  (0, _index3.default)("CatchClause", {
    visitor: ["param", "body"],
    fields: {
      param: {
        validate: (0, _index2.assertNodeType)("Identifier")
      },
      body: {
        validate: (0, _index2.assertNodeType)("BlockStatement")
      }
    },
    aliases: ["Scopable"]
  });

  (0, _index3.default)("ConditionalExpression", {
    visitor: ["test", "consequent", "alternate"],
    fields: {
      test: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      consequent: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      alternate: {
        validate: (0, _index2.assertNodeType)("Expression")
      }
    },
    aliases: ["Expression", "Conditional"]
  });

  (0, _index3.default)("ContinueStatement", {
    visitor: ["label"],
    fields: {
      label: {
        validate: (0, _index2.assertNodeType)("Identifier"),
        optional: true
      }
    },
    aliases: ["Statement", "Terminatorless", "CompletionStatement"]
  });

  (0, _index3.default)("DebuggerStatement", {
    aliases: ["Statement"]
  });

  (0, _index3.default)("DoWhileStatement", {
    visitor: ["test", "body"],
    fields: {
      test: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      body: {
        validate: (0, _index2.assertNodeType)("Statement")
      }
    },
    aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"]
  });

  (0, _index3.default)("EmptyStatement", {
    aliases: ["Statement"]
  });

  (0, _index3.default)("ExpressionStatement", {
    visitor: ["expression"],
    fields: {
      expression: {
        validate: (0, _index2.assertNodeType)("Expression")
      }
    },
    aliases: ["Statement", "ExpressionWrapper"]
  });

  (0, _index3.default)("File", {
    builder: ["program", "comments", "tokens"],
    visitor: ["program"],
    fields: {
      program: {
        validate: (0, _index2.assertNodeType)("Program")
      }
    }
  });

  (0, _index3.default)("ForInStatement", {
    visitor: ["left", "right", "body"],
    aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
    fields: {
      left: {
        validate: (0, _index2.assertNodeType)("VariableDeclaration", "LVal")
      },
      right: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      body: {
        validate: (0, _index2.assertNodeType)("Statement")
      }
    }
  });

  (0, _index3.default)("ForStatement", {
    visitor: ["init", "test", "update", "body"],
    aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"],
    fields: {
      init: {
        validate: (0, _index2.assertNodeType)("VariableDeclaration", "Expression"),
        optional: true
      },
      test: {
        validate: (0, _index2.assertNodeType)("Expression"),
        optional: true
      },
      update: {
        validate: (0, _index2.assertNodeType)("Expression"),
        optional: true
      },
      body: {
        validate: (0, _index2.assertNodeType)("Statement")
      }
    }
  });

  (0, _index3.default)("FunctionDeclaration", {
    builder: ["id", "params", "body", "generator", "async"],
    visitor: ["id", "params", "body", "returnType", "typeParameters"],
    fields: {
      id: {
        validate: (0, _index2.assertNodeType)("Identifier")
      },
      params: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("LVal")))
      },
      body: {
        validate: (0, _index2.assertNodeType)("BlockStatement")
      },
      generator: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      },
      async: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      }
    },
    aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"]
  });

  (0, _index3.default)("FunctionExpression", {
    inherits: "FunctionDeclaration",
    aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
    fields: {
      id: {
        validate: (0, _index2.assertNodeType)("Identifier"),
        optional: true
      },
      params: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("LVal")))
      },
      body: {
        validate: (0, _index2.assertNodeType)("BlockStatement")
      },
      generator: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      },
      async: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      }
    }
  });

  (0, _index3.default)("Identifier", {
    builder: ["name"],
    visitor: ["typeAnnotation"],
    aliases: ["Expression", "LVal"],
    fields: {
      name: {
        validate: function validate(node, key, val) {
          if (!t.isValidIdentifier(val)) {}
        }
      },
      decorators: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))
      }
    }
  });

  (0, _index3.default)("IfStatement", {
    visitor: ["test", "consequent", "alternate"],
    aliases: ["Statement", "Conditional"],
    fields: {
      test: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      consequent: {
        validate: (0, _index2.assertNodeType)("Statement")
      },
      alternate: {
        optional: true,
        validate: (0, _index2.assertNodeType)("Statement")
      }
    }
  });

  (0, _index3.default)("LabeledStatement", {
    visitor: ["label", "body"],
    aliases: ["Statement"],
    fields: {
      label: {
        validate: (0, _index2.assertNodeType)("Identifier")
      },
      body: {
        validate: (0, _index2.assertNodeType)("Statement")
      }
    }
  });

  (0, _index3.default)("StringLiteral", {
    builder: ["value"],
    fields: {
      value: {
        validate: (0, _index2.assertValueType)("string")
      }
    },
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });

  (0, _index3.default)("NumericLiteral", {
    builder: ["value"],
    deprecatedAlias: "NumberLiteral",
    fields: {
      value: {
        validate: (0, _index2.assertValueType)("number")
      }
    },
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });

  (0, _index3.default)("NullLiteral", {
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });

  (0, _index3.default)("BooleanLiteral", {
    builder: ["value"],
    fields: {
      value: {
        validate: (0, _index2.assertValueType)("boolean")
      }
    },
    aliases: ["Expression", "Pureish", "Literal", "Immutable"]
  });

  (0, _index3.default)("RegExpLiteral", {
    builder: ["pattern", "flags"],
    deprecatedAlias: "RegexLiteral",
    aliases: ["Expression", "Literal"],
    fields: {
      pattern: {
        validate: (0, _index2.assertValueType)("string")
      },
      flags: {
        validate: (0, _index2.assertValueType)("string"),
        default: ""
      }
    }
  });

  (0, _index3.default)("LogicalExpression", {
    builder: ["operator", "left", "right"],
    visitor: ["left", "right"],
    aliases: ["Binary", "Expression"],
    fields: {
      operator: {
        validate: _index2.assertOneOf.apply(undefined, _constants.LOGICAL_OPERATORS)
      },
      left: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      right: {
        validate: (0, _index2.assertNodeType)("Expression")
      }
    }
  });

  (0, _index3.default)("MemberExpression", {
    builder: ["object", "property", "computed"],
    visitor: ["object", "property"],
    aliases: ["Expression", "LVal"],
    fields: {
      object: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      property: {
        validate: function validate(node, key, val) {
          var expectedType = node.computed ? "Expression" : "Identifier";
          (0, _index2.assertNodeType)(expectedType)(node, key, val);
        }
      },
      computed: {
        default: false
      }
    }
  });

  (0, _index3.default)("NewExpression", {
    visitor: ["callee", "arguments"],
    aliases: ["Expression"],
    fields: {
      callee: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      arguments: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression", "SpreadElement")))
      }
    }
  });

  (0, _index3.default)("Program", {
    visitor: ["directives", "body"],
    builder: ["body", "directives"],
    fields: {
      directives: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Directive"))),
        default: []
      },
      body: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))
      }
    },
    aliases: ["Scopable", "BlockParent", "Block", "FunctionParent"]
  });

  (0, _index3.default)("ObjectExpression", {
    visitor: ["properties"],
    aliases: ["Expression"],
    fields: {
      properties: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("ObjectMethod", "ObjectProperty", "SpreadProperty")))
      }
    }
  });

  (0, _index3.default)("ObjectMethod", {
    builder: ["kind", "key", "params", "body", "computed"],
    fields: {
      kind: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("string"), (0, _index2.assertOneOf)("method", "get", "set")),
        default: "method"
      },
      computed: {
        validate: (0, _index2.assertValueType)("boolean"),
        default: false
      },
      key: {
        validate: function validate(node, key, val) {
          var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
          _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);
        }
      },
      decorators: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))
      },
      body: {
        validate: (0, _index2.assertNodeType)("BlockStatement")
      },
      generator: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      },
      async: {
        default: false,
        validate: (0, _index2.assertValueType)("boolean")
      }
    },
    visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
    aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"]
  });

  (0, _index3.default)("ObjectProperty", {
    builder: ["key", "value", "computed", "shorthand", "decorators"],
    fields: {
      computed: {
        validate: (0, _index2.assertValueType)("boolean"),
        default: false
      },
      key: {
        validate: function validate(node, key, val) {
          var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
          _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);
        }
      },
      value: {
        validate: (0, _index2.assertNodeType)("Expression", "Pattern", "RestElement")
      },
      shorthand: {
        validate: (0, _index2.assertValueType)("boolean"),
        default: false
      },
      decorators: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator"))),
        optional: true
      }
    },
    visitor: ["key", "value", "decorators"],
    aliases: ["UserWhitespacable", "Property", "ObjectMember"]
  });

  (0, _index3.default)("RestElement", {
    visitor: ["argument", "typeAnnotation"],
    aliases: ["LVal"],
    fields: {
      argument: {
        validate: (0, _index2.assertNodeType)("LVal")
      },
      decorators: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))
      }
    }
  });

  (0, _index3.default)("ReturnStatement", {
    visitor: ["argument"],
    aliases: ["Statement", "Terminatorless", "CompletionStatement"],
    fields: {
      argument: {
        validate: (0, _index2.assertNodeType)("Expression"),
        optional: true
      }
    }
  });

  (0, _index3.default)("SequenceExpression", {
    visitor: ["expressions"],
    fields: {
      expressions: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression")))
      }
    },
    aliases: ["Expression"]
  });

  (0, _index3.default)("SwitchCase", {
    visitor: ["test", "consequent"],
    fields: {
      test: {
        validate: (0, _index2.assertNodeType)("Expression"),
        optional: true
      },
      consequent: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))
      }
    }
  });

  (0, _index3.default)("SwitchStatement", {
    visitor: ["discriminant", "cases"],
    aliases: ["Statement", "BlockParent", "Scopable"],
    fields: {
      discriminant: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      cases: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("SwitchCase")))
      }
    }
  });

  (0, _index3.default)("ThisExpression", {
    aliases: ["Expression"]
  });

  (0, _index3.default)("ThrowStatement", {
    visitor: ["argument"],
    aliases: ["Statement", "Terminatorless", "CompletionStatement"],
    fields: {
      argument: {
        validate: (0, _index2.assertNodeType)("Expression")
      }
    }
  });

  (0, _index3.default)("TryStatement", {
    visitor: ["block", "handler", "finalizer"],
    aliases: ["Statement"],
    fields: {
      body: {
        validate: (0, _index2.assertNodeType)("BlockStatement")
      },
      handler: {
        optional: true,
        handler: (0, _index2.assertNodeType)("BlockStatement")
      },
      finalizer: {
        optional: true,
        validate: (0, _index2.assertNodeType)("BlockStatement")
      }
    }
  });

  (0, _index3.default)("UnaryExpression", {
    builder: ["operator", "argument", "prefix"],
    fields: {
      prefix: {
        default: true
      },
      argument: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      operator: {
        validate: _index2.assertOneOf.apply(undefined, _constants.UNARY_OPERATORS)
      }
    },
    visitor: ["argument"],
    aliases: ["UnaryLike", "Expression"]
  });

  (0, _index3.default)("UpdateExpression", {
    builder: ["operator", "argument", "prefix"],
    fields: {
      prefix: {
        default: false
      },
      argument: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      operator: {
        validate: _index2.assertOneOf.apply(undefined, _constants.UPDATE_OPERATORS)
      }
    },
    visitor: ["argument"],
    aliases: ["Expression"]
  });

  (0, _index3.default)("VariableDeclaration", {
    builder: ["kind", "declarations"],
    visitor: ["declarations"],
    aliases: ["Statement", "Declaration"],
    fields: {
      kind: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("string"), (0, _index2.assertOneOf)("var", "let", "const"))
      },
      declarations: {
        validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("VariableDeclarator")))
      }
    }
  });

  (0, _index3.default)("VariableDeclarator", {
    visitor: ["id", "init"],
    fields: {
      id: {
        validate: (0, _index2.assertNodeType)("LVal")
      },
      init: {
        optional: true,
        validate: (0, _index2.assertNodeType)("Expression")
      }
    }
  });

  (0, _index3.default)("WhileStatement", {
    visitor: ["test", "body"],
    aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
    fields: {
      test: {
        validate: (0, _index2.assertNodeType)("Expression")
      },
      body: {
        validate: (0, _index2.assertNodeType)("BlockStatement", "Statement")
      }
    }
  });

  (0, _index3.default)("WithStatement", {
    visitor: ["object", "body"],
    aliases: ["Statement"],
    fields: {
      object: {
        object: (0, _index2.assertNodeType)("Expression")
      },
      body: {
        validate: (0, _index2.assertNodeType)("BlockStatement", "Statement")
      }
    }
  });
});
System.registerDynamic("npm:babel-types@6.26.0/lib/definitions/es2015.js", ["./index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _index = $__require("./index");

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  (0, _index2.default)("AssignmentPattern", {
    visitor: ["left", "right"],
    aliases: ["Pattern", "LVal"],
    fields: {
      left: {
        validate: (0, _index.assertNodeType)("Identifier")
      },
      right: {
        validate: (0, _index.assertNodeType)("Expression")
      },
      decorators: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))
      }
    }
  });

  (0, _index2.default)("ArrayPattern", {
    visitor: ["elements", "typeAnnotation"],
    aliases: ["Pattern", "LVal"],
    fields: {
      elements: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Identifier", "Pattern", "RestElement")))
      },
      decorators: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))
      }
    }
  });

  (0, _index2.default)("ArrowFunctionExpression", {
    builder: ["params", "body", "async"],
    visitor: ["params", "body", "returnType", "typeParameters"],
    aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
    fields: {
      params: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("LVal")))
      },
      body: {
        validate: (0, _index.assertNodeType)("BlockStatement", "Expression")
      },
      async: {
        validate: (0, _index.assertValueType)("boolean"),
        default: false
      }
    }
  });

  (0, _index2.default)("ClassBody", {
    visitor: ["body"],
    fields: {
      body: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ClassMethod", "ClassProperty")))
      }
    }
  });

  (0, _index2.default)("ClassDeclaration", {
    builder: ["id", "superClass", "body", "decorators"],
    visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"],
    aliases: ["Scopable", "Class", "Statement", "Declaration", "Pureish"],
    fields: {
      id: {
        validate: (0, _index.assertNodeType)("Identifier")
      },
      body: {
        validate: (0, _index.assertNodeType)("ClassBody")
      },
      superClass: {
        optional: true,
        validate: (0, _index.assertNodeType)("Expression")
      },
      decorators: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))
      }
    }
  });

  (0, _index2.default)("ClassExpression", {
    inherits: "ClassDeclaration",
    aliases: ["Scopable", "Class", "Expression", "Pureish"],
    fields: {
      id: {
        optional: true,
        validate: (0, _index.assertNodeType)("Identifier")
      },
      body: {
        validate: (0, _index.assertNodeType)("ClassBody")
      },
      superClass: {
        optional: true,
        validate: (0, _index.assertNodeType)("Expression")
      },
      decorators: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))
      }
    }
  });

  (0, _index2.default)("ExportAllDeclaration", {
    visitor: ["source"],
    aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
    fields: {
      source: {
        validate: (0, _index.assertNodeType)("StringLiteral")
      }
    }
  });

  (0, _index2.default)("ExportDefaultDeclaration", {
    visitor: ["declaration"],
    aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
    fields: {
      declaration: {
        validate: (0, _index.assertNodeType)("FunctionDeclaration", "ClassDeclaration", "Expression")
      }
    }
  });

  (0, _index2.default)("ExportNamedDeclaration", {
    visitor: ["declaration", "specifiers", "source"],
    aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
    fields: {
      declaration: {
        validate: (0, _index.assertNodeType)("Declaration"),
        optional: true
      },
      specifiers: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ExportSpecifier")))
      },
      source: {
        validate: (0, _index.assertNodeType)("StringLiteral"),
        optional: true
      }
    }
  });

  (0, _index2.default)("ExportSpecifier", {
    visitor: ["local", "exported"],
    aliases: ["ModuleSpecifier"],
    fields: {
      local: {
        validate: (0, _index.assertNodeType)("Identifier")
      },
      exported: {
        validate: (0, _index.assertNodeType)("Identifier")
      }
    }
  });

  (0, _index2.default)("ForOfStatement", {
    visitor: ["left", "right", "body"],
    aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
    fields: {
      left: {
        validate: (0, _index.assertNodeType)("VariableDeclaration", "LVal")
      },
      right: {
        validate: (0, _index.assertNodeType)("Expression")
      },
      body: {
        validate: (0, _index.assertNodeType)("Statement")
      }
    }
  });

  (0, _index2.default)("ImportDeclaration", {
    visitor: ["specifiers", "source"],
    aliases: ["Statement", "Declaration", "ModuleDeclaration"],
    fields: {
      specifiers: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier")))
      },
      source: {
        validate: (0, _index.assertNodeType)("StringLiteral")
      }
    }
  });

  (0, _index2.default)("ImportDefaultSpecifier", {
    visitor: ["local"],
    aliases: ["ModuleSpecifier"],
    fields: {
      local: {
        validate: (0, _index.assertNodeType)("Identifier")
      }
    }
  });

  (0, _index2.default)("ImportNamespaceSpecifier", {
    visitor: ["local"],
    aliases: ["ModuleSpecifier"],
    fields: {
      local: {
        validate: (0, _index.assertNodeType)("Identifier")
      }
    }
  });

  (0, _index2.default)("ImportSpecifier", {
    visitor: ["local", "imported"],
    aliases: ["ModuleSpecifier"],
    fields: {
      local: {
        validate: (0, _index.assertNodeType)("Identifier")
      },
      imported: {
        validate: (0, _index.assertNodeType)("Identifier")
      },
      importKind: {
        validate: (0, _index.assertOneOf)(null, "type", "typeof")
      }
    }
  });

  (0, _index2.default)("MetaProperty", {
    visitor: ["meta", "property"],
    aliases: ["Expression"],
    fields: {
      meta: {
        validate: (0, _index.assertValueType)("string")
      },
      property: {
        validate: (0, _index.assertValueType)("string")
      }
    }
  });

  (0, _index2.default)("ClassMethod", {
    aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"],
    builder: ["kind", "key", "params", "body", "computed", "static"],
    visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
    fields: {
      kind: {
        validate: (0, _index.chain)((0, _index.assertValueType)("string"), (0, _index.assertOneOf)("get", "set", "method", "constructor")),
        default: "method"
      },
      computed: {
        default: false,
        validate: (0, _index.assertValueType)("boolean")
      },
      static: {
        default: false,
        validate: (0, _index.assertValueType)("boolean")
      },
      key: {
        validate: function validate(node, key, val) {
          var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];
          _index.assertNodeType.apply(undefined, expectedTypes)(node, key, val);
        }
      },
      params: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("LVal")))
      },
      body: {
        validate: (0, _index.assertNodeType)("BlockStatement")
      },
      generator: {
        default: false,
        validate: (0, _index.assertValueType)("boolean")
      },
      async: {
        default: false,
        validate: (0, _index.assertValueType)("boolean")
      }
    }
  });

  (0, _index2.default)("ObjectPattern", {
    visitor: ["properties", "typeAnnotation"],
    aliases: ["Pattern", "LVal"],
    fields: {
      properties: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("RestProperty", "Property")))
      },
      decorators: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))
      }
    }
  });

  (0, _index2.default)("SpreadElement", {
    visitor: ["argument"],
    aliases: ["UnaryLike"],
    fields: {
      argument: {
        validate: (0, _index.assertNodeType)("Expression")
      }
    }
  });

  (0, _index2.default)("Super", {
    aliases: ["Expression"]
  });

  (0, _index2.default)("TaggedTemplateExpression", {
    visitor: ["tag", "quasi"],
    aliases: ["Expression"],
    fields: {
      tag: {
        validate: (0, _index.assertNodeType)("Expression")
      },
      quasi: {
        validate: (0, _index.assertNodeType)("TemplateLiteral")
      }
    }
  });

  (0, _index2.default)("TemplateElement", {
    builder: ["value", "tail"],
    fields: {
      value: {},
      tail: {
        validate: (0, _index.assertValueType)("boolean"),
        default: false
      }
    }
  });

  (0, _index2.default)("TemplateLiteral", {
    visitor: ["quasis", "expressions"],
    aliases: ["Expression", "Literal"],
    fields: {
      quasis: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("TemplateElement")))
      },
      expressions: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Expression")))
      }
    }
  });

  (0, _index2.default)("YieldExpression", {
    builder: ["argument", "delegate"],
    visitor: ["argument"],
    aliases: ["Expression", "Terminatorless"],
    fields: {
      delegate: {
        validate: (0, _index.assertValueType)("boolean"),
        default: false
      },
      argument: {
        optional: true,
        validate: (0, _index.assertNodeType)("Expression")
      }
    }
  });
});
System.registerDynamic("npm:babel-types@6.26.0/lib/definitions/flow.js", ["./index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _index = $__require("./index");

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  (0, _index2.default)("AnyTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });

  (0, _index2.default)("ArrayTypeAnnotation", {
    visitor: ["elementType"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("BooleanTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });

  (0, _index2.default)("BooleanLiteralTypeAnnotation", {
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("NullLiteralTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });

  (0, _index2.default)("ClassImplements", {
    visitor: ["id", "typeParameters"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("ClassProperty", {
    visitor: ["key", "value", "typeAnnotation", "decorators"],
    builder: ["key", "value", "typeAnnotation", "decorators", "computed"],
    aliases: ["Property"],
    fields: {
      computed: {
        validate: (0, _index.assertValueType)("boolean"),
        default: false
      }
    }
  });

  (0, _index2.default)("DeclareClass", {
    visitor: ["id", "typeParameters", "extends", "body"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("DeclareFunction", {
    visitor: ["id"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("DeclareInterface", {
    visitor: ["id", "typeParameters", "extends", "body"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("DeclareModule", {
    visitor: ["id", "body"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("DeclareModuleExports", {
    visitor: ["typeAnnotation"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("DeclareTypeAlias", {
    visitor: ["id", "typeParameters", "right"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("DeclareOpaqueType", {
    visitor: ["id", "typeParameters", "supertype"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("DeclareVariable", {
    visitor: ["id"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("DeclareExportDeclaration", {
    visitor: ["declaration", "specifiers", "source"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("ExistentialTypeParam", {
    aliases: ["Flow"]
  });

  (0, _index2.default)("FunctionTypeAnnotation", {
    visitor: ["typeParameters", "params", "rest", "returnType"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("FunctionTypeParam", {
    visitor: ["name", "typeAnnotation"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("GenericTypeAnnotation", {
    visitor: ["id", "typeParameters"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("InterfaceExtends", {
    visitor: ["id", "typeParameters"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("InterfaceDeclaration", {
    visitor: ["id", "typeParameters", "extends", "body"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("IntersectionTypeAnnotation", {
    visitor: ["types"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("MixedTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"]
  });

  (0, _index2.default)("EmptyTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"]
  });

  (0, _index2.default)("NullableTypeAnnotation", {
    visitor: ["typeAnnotation"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("NumericLiteralTypeAnnotation", {
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("NumberTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });

  (0, _index2.default)("StringLiteralTypeAnnotation", {
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("StringTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });

  (0, _index2.default)("ThisTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });

  (0, _index2.default)("TupleTypeAnnotation", {
    visitor: ["types"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("TypeofTypeAnnotation", {
    visitor: ["argument"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("TypeAlias", {
    visitor: ["id", "typeParameters", "right"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("OpaqueType", {
    visitor: ["id", "typeParameters", "impltype", "supertype"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {}
  });

  (0, _index2.default)("TypeAnnotation", {
    visitor: ["typeAnnotation"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("TypeCastExpression", {
    visitor: ["expression", "typeAnnotation"],
    aliases: ["Flow", "ExpressionWrapper", "Expression"],
    fields: {}
  });

  (0, _index2.default)("TypeParameter", {
    visitor: ["bound"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("TypeParameterDeclaration", {
    visitor: ["params"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("TypeParameterInstantiation", {
    visitor: ["params"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("ObjectTypeAnnotation", {
    visitor: ["properties", "indexers", "callProperties"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("ObjectTypeCallProperty", {
    visitor: ["value"],
    aliases: ["Flow", "UserWhitespacable"],
    fields: {}
  });

  (0, _index2.default)("ObjectTypeIndexer", {
    visitor: ["id", "key", "value"],
    aliases: ["Flow", "UserWhitespacable"],
    fields: {}
  });

  (0, _index2.default)("ObjectTypeProperty", {
    visitor: ["key", "value"],
    aliases: ["Flow", "UserWhitespacable"],
    fields: {}
  });

  (0, _index2.default)("ObjectTypeSpreadProperty", {
    visitor: ["argument"],
    aliases: ["Flow", "UserWhitespacable"],
    fields: {}
  });

  (0, _index2.default)("QualifiedTypeIdentifier", {
    visitor: ["id", "qualification"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("UnionTypeAnnotation", {
    visitor: ["types"],
    aliases: ["Flow"],
    fields: {}
  });

  (0, _index2.default)("VoidTypeAnnotation", {
    aliases: ["Flow", "FlowBaseAnnotation"],
    fields: {}
  });
});
System.registerDynamic("npm:babel-types@6.26.0/lib/definitions/jsx.js", ["./index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _index = $__require("./index");

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  (0, _index2.default)("JSXAttribute", {
    visitor: ["name", "value"],
    aliases: ["JSX", "Immutable"],
    fields: {
      name: {
        validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXNamespacedName")
      },
      value: {
        optional: true,
        validate: (0, _index.assertNodeType)("JSXElement", "StringLiteral", "JSXExpressionContainer")
      }
    }
  });

  (0, _index2.default)("JSXClosingElement", {
    visitor: ["name"],
    aliases: ["JSX", "Immutable"],
    fields: {
      name: {
        validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXMemberExpression")
      }
    }
  });

  (0, _index2.default)("JSXElement", {
    builder: ["openingElement", "closingElement", "children", "selfClosing"],
    visitor: ["openingElement", "children", "closingElement"],
    aliases: ["JSX", "Immutable", "Expression"],
    fields: {
      openingElement: {
        validate: (0, _index.assertNodeType)("JSXOpeningElement")
      },
      closingElement: {
        optional: true,
        validate: (0, _index.assertNodeType)("JSXClosingElement")
      },
      children: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("JSXText", "JSXExpressionContainer", "JSXSpreadChild", "JSXElement")))
      }
    }
  });

  (0, _index2.default)("JSXEmptyExpression", {
    aliases: ["JSX", "Expression"]
  });

  (0, _index2.default)("JSXExpressionContainer", {
    visitor: ["expression"],
    aliases: ["JSX", "Immutable"],
    fields: {
      expression: {
        validate: (0, _index.assertNodeType)("Expression")
      }
    }
  });

  (0, _index2.default)("JSXSpreadChild", {
    visitor: ["expression"],
    aliases: ["JSX", "Immutable"],
    fields: {
      expression: {
        validate: (0, _index.assertNodeType)("Expression")
      }
    }
  });

  (0, _index2.default)("JSXIdentifier", {
    builder: ["name"],
    aliases: ["JSX", "Expression"],
    fields: {
      name: {
        validate: (0, _index.assertValueType)("string")
      }
    }
  });

  (0, _index2.default)("JSXMemberExpression", {
    visitor: ["object", "property"],
    aliases: ["JSX", "Expression"],
    fields: {
      object: {
        validate: (0, _index.assertNodeType)("JSXMemberExpression", "JSXIdentifier")
      },
      property: {
        validate: (0, _index.assertNodeType)("JSXIdentifier")
      }
    }
  });

  (0, _index2.default)("JSXNamespacedName", {
    visitor: ["namespace", "name"],
    aliases: ["JSX"],
    fields: {
      namespace: {
        validate: (0, _index.assertNodeType)("JSXIdentifier")
      },
      name: {
        validate: (0, _index.assertNodeType)("JSXIdentifier")
      }
    }
  });

  (0, _index2.default)("JSXOpeningElement", {
    builder: ["name", "attributes", "selfClosing"],
    visitor: ["name", "attributes"],
    aliases: ["JSX", "Immutable"],
    fields: {
      name: {
        validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXMemberExpression")
      },
      selfClosing: {
        default: false,
        validate: (0, _index.assertValueType)("boolean")
      },
      attributes: {
        validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("JSXAttribute", "JSXSpreadAttribute")))
      }
    }
  });

  (0, _index2.default)("JSXSpreadAttribute", {
    visitor: ["argument"],
    aliases: ["JSX"],
    fields: {
      argument: {
        validate: (0, _index.assertNodeType)("Expression")
      }
    }
  });

  (0, _index2.default)("JSXText", {
    aliases: ["JSX", "Immutable"],
    builder: ["value"],
    fields: {
      value: {
        validate: (0, _index.assertValueType)("string")
      }
    }
  });
});
System.registerDynamic("npm:babel-types@6.26.0/lib/definitions/misc.js", ["./index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _index = $__require("./index");

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  (0, _index2.default)("Noop", {
    visitor: []
  });

  (0, _index2.default)("ParenthesizedExpression", {
    visitor: ["expression"],
    aliases: ["Expression", "ExpressionWrapper"],
    fields: {
      expression: {
        validate: (0, _index.assertNodeType)("Expression")
      }
    }
  });
});
System.registerDynamic("npm:babel-types@6.26.0/lib/definitions/experimental.js", ["./index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _index = $__require("./index");

  var _index2 = _interopRequireDefault(_index);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  (0, _index2.default)("AwaitExpression", {
    builder: ["argument"],
    visitor: ["argument"],
    aliases: ["Expression", "Terminatorless"],
    fields: {
      argument: {
        validate: (0, _index.assertNodeType)("Expression")
      }
    }
  });

  (0, _index2.default)("ForAwaitStatement", {
    visitor: ["left", "right", "body"],
    aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
    fields: {
      left: {
        validate: (0, _index.assertNodeType)("VariableDeclaration", "LVal")
      },
      right: {
        validate: (0, _index.assertNodeType)("Expression")
      },
      body: {
        validate: (0, _index.assertNodeType)("Statement")
      }
    }
  });

  (0, _index2.default)("BindExpression", {
    visitor: ["object", "callee"],
    aliases: ["Expression"],
    fields: {}
  });

  (0, _index2.default)("Import", {
    aliases: ["Expression"]
  });

  (0, _index2.default)("Decorator", {
    visitor: ["expression"],
    fields: {
      expression: {
        validate: (0, _index.assertNodeType)("Expression")
      }
    }
  });

  (0, _index2.default)("DoExpression", {
    visitor: ["body"],
    aliases: ["Expression"],
    fields: {
      body: {
        validate: (0, _index.assertNodeType)("BlockStatement")
      }
    }
  });

  (0, _index2.default)("ExportDefaultSpecifier", {
    visitor: ["exported"],
    aliases: ["ModuleSpecifier"],
    fields: {
      exported: {
        validate: (0, _index.assertNodeType)("Identifier")
      }
    }
  });

  (0, _index2.default)("ExportNamespaceSpecifier", {
    visitor: ["exported"],
    aliases: ["ModuleSpecifier"],
    fields: {
      exported: {
        validate: (0, _index.assertNodeType)("Identifier")
      }
    }
  });

  (0, _index2.default)("RestProperty", {
    visitor: ["argument"],
    aliases: ["UnaryLike"],
    fields: {
      argument: {
        validate: (0, _index.assertNodeType)("LVal")
      }
    }
  });

  (0, _index2.default)("SpreadProperty", {
    visitor: ["argument"],
    aliases: ["UnaryLike"],
    fields: {
      argument: {
        validate: (0, _index.assertNodeType)("Expression")
      }
    }
  });
});
System.registerDynamic("npm:babel-types@6.26.0/lib/definitions/init.js", ["./index", "./core", "./es2015", "./flow", "./jsx", "./misc", "./experimental"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  $__require("./index");

  $__require("./core");

  $__require("./es2015");

  $__require("./flow");

  $__require("./jsx");

  $__require("./misc");

  $__require("./experimental");
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_classof.js', ['./_cof', './_wks', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // getting tag from 19.1.3.6 Object.prototype.toString()
  var cof = $__require('./_cof');
  var TAG = $__require('./_wks')('toStringTag');
  // ES3 wrong here
  var ARG = cof(function () {
    return arguments;
  }()) == 'Arguments';

  // fallback for IE11 Script Access Denied error
  var tryGet = function (it, key) {
    try {
      return it[key];
    } catch (e) {/* empty */}
  };

  module.exports = function (it) {
    var O, T, B;
    return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/core.get-iterator-method.js', ['./_classof', './_wks', './_iterators', './_core', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var classof = $__require('./_classof');
  var ITERATOR = $__require('./_wks')('iterator');
  var Iterators = $__require('./_iterators');
  module.exports = $__require('./_core').getIteratorMethod = function (it) {
    if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/core.get-iterator.js', ['./_an-object', './core.get-iterator-method', './_core', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var anObject = $__require('./_an-object');
  var get = $__require('./core.get-iterator-method');
  module.exports = $__require('./_core').getIterator = function (it) {
    var iterFn = get(it);
    if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
    return anObject(iterFn.call(it));
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/fn/get-iterator.js', ['../modules/web.dom.iterable', '../modules/es6.string.iterator', '../modules/core.get-iterator', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('../modules/web.dom.iterable');
  $__require('../modules/es6.string.iterator');
  module.exports = $__require('../modules/core.get-iterator');
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/get-iterator.js", ["core-js/library/fn/get-iterator"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/get-iterator"), __esModule: true };
});
System.registerDynamic('npm:core-js@2.5.1/library/fn/json/stringify.js', ['../../modules/_core', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var core = $__require('../../modules/_core');
  var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
  module.exports = function stringify(it) {
    // eslint-disable-line no-unused-vars
    return $JSON.stringify.apply($JSON, arguments);
  };
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/json/stringify.js", ["core-js/library/fn/json/stringify"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/json/stringify"), __esModule: true };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_string-at.js', ['./_to-integer', './_defined', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var toInteger = $__require('./_to-integer');
  var defined = $__require('./_defined');
  // true  -> String#at
  // false -> String#codePointAt
  module.exports = function (TO_STRING) {
    return function (that, pos) {
      var s = String(defined(that));
      var i = toInteger(pos);
      var l = s.length;
      var a, b;
      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es6.string.iterator.js', ['./_string-at', './_iter-define', 'process'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var $at = $__require('./_string-at')(true);

  // 21.1.3.27 String.prototype[@@iterator]()
  $__require('./_iter-define')(String, 'String', function (iterated) {
    this._t = String(iterated); // target
    this._i = 0; // next index
    // 21.1.5.2.1 %StringIteratorPrototype%.next()
  }, function () {
    var O = this._t;
    var index = this._i;
    var point;
    if (index >= O.length) return { value: undefined, done: true };
    point = $at(O, index);
    this._i += point.length;
    return { value: point, done: false };
  });
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_add-to-unscopables.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  module.exports = function () {/* empty */};
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_iter-step.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  module.exports = function (done, value) {
    return { value: value, done: !!done };
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_iter-create.js', ['./_object-create', './_property-desc', './_set-to-string-tag', './_hide', './_wks', 'process'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var create = $__require('./_object-create');
  var descriptor = $__require('./_property-desc');
  var setToStringTag = $__require('./_set-to-string-tag');
  var IteratorPrototype = {};

  // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
  $__require('./_hide')(IteratorPrototype, $__require('./_wks')('iterator'), function () {
    return this;
  });

  module.exports = function (Constructor, NAME, next) {
    Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
    setToStringTag(Constructor, NAME + ' Iterator');
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_to-object.js', ['./_defined', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 7.1.13 ToObject(argument)
  var defined = $__require('./_defined');
  module.exports = function (it) {
    return Object(defined(it));
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-gpo.js', ['./_has', './_to-object', './_shared-key', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
  var has = $__require('./_has');
  var toObject = $__require('./_to-object');
  var IE_PROTO = $__require('./_shared-key')('IE_PROTO');
  var ObjectProto = Object.prototype;

  module.exports = Object.getPrototypeOf || function (O) {
    O = toObject(O);
    if (has(O, IE_PROTO)) return O[IE_PROTO];
    if (typeof O.constructor == 'function' && O instanceof O.constructor) {
      return O.constructor.prototype;
    }return O instanceof Object ? ObjectProto : null;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_iter-define.js', ['./_library', './_export', './_redefine', './_hide', './_has', './_iterators', './_iter-create', './_set-to-string-tag', './_object-gpo', './_wks', 'process'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var LIBRARY = $__require('./_library');
  var $export = $__require('./_export');
  var redefine = $__require('./_redefine');
  var hide = $__require('./_hide');
  var has = $__require('./_has');
  var Iterators = $__require('./_iterators');
  var $iterCreate = $__require('./_iter-create');
  var setToStringTag = $__require('./_set-to-string-tag');
  var getPrototypeOf = $__require('./_object-gpo');
  var ITERATOR = $__require('./_wks')('iterator');
  var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
  var FF_ITERATOR = '@@iterator';
  var KEYS = 'keys';
  var VALUES = 'values';

  var returnThis = function () {
    return this;
  };

  module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
    $iterCreate(Constructor, NAME, next);
    var getMethod = function (kind) {
      if (!BUGGY && kind in proto) return proto[kind];
      switch (kind) {
        case KEYS:
          return function keys() {
            return new Constructor(this, kind);
          };
        case VALUES:
          return function values() {
            return new Constructor(this, kind);
          };
      }return function entries() {
        return new Constructor(this, kind);
      };
    };
    var TAG = NAME + ' Iterator';
    var DEF_VALUES = DEFAULT == VALUES;
    var VALUES_BUG = false;
    var proto = Base.prototype;
    var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
    var $default = $native || getMethod(DEFAULT);
    var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
    var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
    var methods, key, IteratorPrototype;
    // Fix native
    if ($anyNative) {
      IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
      if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
        // Set @@toStringTag to native iterators
        setToStringTag(IteratorPrototype, TAG, true);
        // fix for some old engines
        if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
      }
    }
    // fix Array#{values, @@iterator}.name in V8 / FF
    if (DEF_VALUES && $native && $native.name !== VALUES) {
      VALUES_BUG = true;
      $default = function values() {
        return $native.call(this);
      };
    }
    // Define iterator
    if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
      hide(proto, ITERATOR, $default);
    }
    // Plug for library
    Iterators[NAME] = $default;
    Iterators[TAG] = returnThis;
    if (DEFAULT) {
      methods = {
        values: DEF_VALUES ? $default : getMethod(VALUES),
        keys: IS_SET ? $default : getMethod(KEYS),
        entries: $entries
      };
      if (FORCED) for (key in methods) {
        if (!(key in proto)) redefine(proto, key, methods[key]);
      } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es6.array.iterator.js', ['./_add-to-unscopables', './_iter-step', './_iterators', './_to-iobject', './_iter-define', 'process'], true, function ($__require, exports, module) {
  'use strict';

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var addToUnscopables = $__require('./_add-to-unscopables');
  var step = $__require('./_iter-step');
  var Iterators = $__require('./_iterators');
  var toIObject = $__require('./_to-iobject');

  // 22.1.3.4 Array.prototype.entries()
  // 22.1.3.13 Array.prototype.keys()
  // 22.1.3.29 Array.prototype.values()
  // 22.1.3.30 Array.prototype[@@iterator]()
  module.exports = $__require('./_iter-define')(Array, 'Array', function (iterated, kind) {
    this._t = toIObject(iterated); // target
    this._i = 0; // next index
    this._k = kind; // kind
    // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
  }, function () {
    var O = this._t;
    var kind = this._k;
    var index = this._i++;
    if (!O || index >= O.length) {
      this._t = undefined;
      return step(1);
    }
    if (kind == 'keys') return step(0, index);
    if (kind == 'values') return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');

  // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
  Iterators.Arguments = Iterators.Array;

  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_iterators.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  module.exports = {};
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/web.dom.iterable.js', ['./es6.array.iterator', './_global', './_hide', './_iterators', './_wks', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('./es6.array.iterator');
  var global = $__require('./_global');
  var hide = $__require('./_hide');
  var Iterators = $__require('./_iterators');
  var TO_STRING_TAG = $__require('./_wks')('toStringTag');

  var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' + 'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' + 'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' + 'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' + 'TextTrackList,TouchList').split(',');

  for (var i = 0; i < DOMIterables.length; i++) {
    var NAME = DOMIterables[i];
    var Collection = global[NAME];
    var proto = Collection && Collection.prototype;
    if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = Iterators.Array;
  }
});
System.registerDynamic('npm:core-js@2.5.1/library/fn/symbol/iterator.js', ['../../modules/es6.string.iterator', '../../modules/web.dom.iterable', '../../modules/_wks-ext', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('../../modules/es6.string.iterator');
  $__require('../../modules/web.dom.iterable');
  module.exports = $__require('../../modules/_wks-ext').f('iterator');
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/symbol/iterator.js", ["core-js/library/fn/symbol/iterator"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/symbol/iterator"), __esModule: true };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_a-function.js', ['process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  module.exports = function (it) {
    if (typeof it != 'function') throw TypeError(it + ' is not a function!');
    return it;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_ctx.js', ['./_a-function', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // optional / simple context binding
  var aFunction = $__require('./_a-function');
  module.exports = function (fn, that, length) {
    aFunction(fn);
    if (that === undefined) return fn;
    switch (length) {
      case 1:
        return function (a) {
          return fn.call(that, a);
        };
      case 2:
        return function (a, b) {
          return fn.call(that, a, b);
        };
      case 3:
        return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
    }
    return function () /* ...args */{
      return fn.apply(that, arguments);
    };
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_export.js', ['./_global', './_core', './_ctx', './_hide', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var global = $__require('./_global');
  var core = $__require('./_core');
  var ctx = $__require('./_ctx');
  var hide = $__require('./_hide');
  var PROTOTYPE = 'prototype';

  var $export = function (type, name, source) {
    var IS_FORCED = type & $export.F;
    var IS_GLOBAL = type & $export.G;
    var IS_STATIC = type & $export.S;
    var IS_PROTO = type & $export.P;
    var IS_BIND = type & $export.B;
    var IS_WRAP = type & $export.W;
    var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
    var expProto = exports[PROTOTYPE];
    var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
    var key, own, out;
    if (IS_GLOBAL) source = name;
    for (key in source) {
      // contains in native
      own = !IS_FORCED && target && target[key] !== undefined;
      if (own && key in exports) continue;
      // export native or passed
      out = own ? target[key] : source[key];
      // prevent global pollution for namespaces
      exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
      // bind timers to global for call from export context
      : IS_BIND && own ? ctx(out, global)
      // wrap global constructors for prevent change them in library
      : IS_WRAP && target[key] == out ? function (C) {
        var F = function (a, b, c) {
          if (this instanceof C) {
            switch (arguments.length) {
              case 0:
                return new C();
              case 1:
                return new C(a);
              case 2:
                return new C(a, b);
            }return new C(a, b, c);
          }return C.apply(this, arguments);
        };
        F[PROTOTYPE] = C[PROTOTYPE];
        return F;
        // make static versions for prototype methods
      }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
      if (IS_PROTO) {
        (exports.virtual || (exports.virtual = {}))[key] = out;
        // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
        if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
      }
    }
  };
  // type bitmap
  $export.F = 1; // forced
  $export.G = 2; // global
  $export.S = 4; // static
  $export.P = 8; // proto
  $export.B = 16; // bind
  $export.W = 32; // wrap
  $export.U = 64; // safe
  $export.R = 128; // real proto method for `library`
  module.exports = $export;
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_redefine.js', ['./_hide', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require('./_hide');
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_meta.js', ['./_uid', './_is-object', './_has', './_object-dp', './_fails', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var META = $__require('./_uid')('meta');
  var isObject = $__require('./_is-object');
  var has = $__require('./_has');
  var setDesc = $__require('./_object-dp').f;
  var id = 0;
  var isExtensible = Object.isExtensible || function () {
    return true;
  };
  var FREEZE = !$__require('./_fails')(function () {
    return isExtensible(Object.preventExtensions({}));
  });
  var setMeta = function (it) {
    setDesc(it, META, { value: {
        i: 'O' + ++id, // object ID
        w: {} // weak collections IDs
      } });
  };
  var fastKey = function (it, create) {
    // return primitive with prefix
    if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if (!has(it, META)) {
      // can't set metadata to uncaught frozen object
      if (!isExtensible(it)) return 'F';
      // not necessary to add metadata
      if (!create) return 'E';
      // add missing metadata
      setMeta(it);
      // return object ID
    }return it[META].i;
  };
  var getWeak = function (it, create) {
    if (!has(it, META)) {
      // can't set metadata to uncaught frozen object
      if (!isExtensible(it)) return true;
      // not necessary to add metadata
      if (!create) return false;
      // add missing metadata
      setMeta(it);
      // return hash weak collections IDs
    }return it[META].w;
  };
  // add metadata on freeze-family methods calling
  var onFreeze = function (it) {
    if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
    return it;
  };
  var meta = module.exports = {
    KEY: META,
    NEED: false,
    fastKey: fastKey,
    getWeak: getWeak,
    onFreeze: onFreeze
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_set-to-string-tag.js', ['./_object-dp', './_has', './_wks', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var def = $__require('./_object-dp').f;
  var has = $__require('./_has');
  var TAG = $__require('./_wks')('toStringTag');

  module.exports = function (it, tag, stat) {
    if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_enum-keys.js', ['./_object-keys', './_object-gops', './_object-pie', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // all enumerable object keys, includes symbols
  var getKeys = $__require('./_object-keys');
  var gOPS = $__require('./_object-gops');
  var pIE = $__require('./_object-pie');
  module.exports = function (it) {
    var result = getKeys(it);
    var getSymbols = gOPS.f;
    if (getSymbols) {
      var symbols = getSymbols(it);
      var isEnum = pIE.f;
      var i = 0;
      var key;
      while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
    }return result;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_is-array.js', ['./_cof', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 7.2.2 IsArray(argument)
  var cof = $__require('./_cof');
  module.exports = Array.isArray || function isArray(arg) {
    return cof(arg) == 'Array';
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-dps.js', ['./_object-dp', './_an-object', './_object-keys', './_descriptors', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var dP = $__require('./_object-dp');
  var anObject = $__require('./_an-object');
  var getKeys = $__require('./_object-keys');

  module.exports = $__require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject(O);
    var keys = getKeys(Properties);
    var length = keys.length;
    var i = 0;
    var P;
    while (length > i) dP.f(O, P = keys[i++], Properties[P]);
    return O;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_html.js', ['./_global', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var document = $__require('./_global').document;
  module.exports = document && document.documentElement;
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-create.js', ['./_an-object', './_object-dps', './_enum-bug-keys', './_shared-key', './_dom-create', './_html', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  var anObject = $__require('./_an-object');
  var dPs = $__require('./_object-dps');
  var enumBugKeys = $__require('./_enum-bug-keys');
  var IE_PROTO = $__require('./_shared-key')('IE_PROTO');
  var Empty = function () {/* empty */};
  var PROTOTYPE = 'prototype';

  // Create object with fake `null` prototype: use iframe Object with cleared prototype
  var createDict = function () {
    // Thrash, waste and sodomy: IE GC bug
    var iframe = $__require('./_dom-create')('iframe');
    var i = enumBugKeys.length;
    var lt = '<';
    var gt = '>';
    var iframeDocument;
    iframe.style.display = 'none';
    $__require('./_html').appendChild(iframe);
    iframe.src = 'javascript:'; // eslint-disable-line no-script-url
    // createDict = iframe.contentWindow.Object;
    // html.removeChild(iframe);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
    iframeDocument.close();
    createDict = iframeDocument.F;
    while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
    return createDict();
  };

  module.exports = Object.create || function create(O, Properties) {
    var result;
    if (O !== null) {
      Empty[PROTOTYPE] = anObject(O);
      result = new Empty();
      Empty[PROTOTYPE] = null;
      // add "__proto__" for Object.getPrototypeOf polyfill
      result[IE_PROTO] = O;
    } else result = createDict();
    return Properties === undefined ? result : dPs(result, Properties);
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-gopn-ext.js', ['./_to-iobject', './_object-gopn', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
  var toIObject = $__require('./_to-iobject');
  var gOPN = $__require('./_object-gopn').f;
  var toString = {}.toString;

  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

  var getWindowNames = function (it) {
    try {
      return gOPN(it);
    } catch (e) {
      return windowNames.slice();
    }
  };

  module.exports.f = function getOwnPropertyNames(it) {
    return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-gopd.js', ['./_object-pie', './_property-desc', './_to-iobject', './_to-primitive', './_has', './_ie8-dom-define', './_descriptors', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var pIE = $__require('./_object-pie');
  var createDesc = $__require('./_property-desc');
  var toIObject = $__require('./_to-iobject');
  var toPrimitive = $__require('./_to-primitive');
  var has = $__require('./_has');
  var IE8_DOM_DEFINE = $__require('./_ie8-dom-define');
  var gOPD = Object.getOwnPropertyDescriptor;

  exports.f = $__require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {
    O = toIObject(O);
    P = toPrimitive(P, true);
    if (IE8_DOM_DEFINE) try {
      return gOPD(O, P);
    } catch (e) {/* empty */}
    if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-keys.js', ['./_object-keys-internal', './_enum-bug-keys', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 19.1.2.14 / 15.2.3.14 Object.keys(O)
  var $keys = $__require('./_object-keys-internal');
  var enumBugKeys = $__require('./_enum-bug-keys');

  module.exports = Object.keys || function keys(O) {
    return $keys(O, enumBugKeys);
  };
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_has.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  var hasOwnProperty = {}.hasOwnProperty;
  module.exports = function (it, key) {
    return hasOwnProperty.call(it, key);
  };
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_cof.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  var toString = {}.toString;

  module.exports = function (it) {
    return toString.call(it).slice(8, -1);
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_iobject.js', ['./_cof', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // fallback for non-array-like ES3 and non-enumerable old V8 strings
  var cof = $__require('./_cof');
  // eslint-disable-next-line no-prototype-builtins
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
    return cof(it) == 'String' ? it.split('') : Object(it);
  };
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_defined.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  // 7.2.1 RequireObjectCoercible(argument)
  module.exports = function (it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_to-iobject.js', ['./_iobject', './_defined', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // to indexed object, toObject with fallback for non-array-like ES3 strings
  var IObject = $__require('./_iobject');
  var defined = $__require('./_defined');
  module.exports = function (it) {
    return IObject(defined(it));
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_to-length.js', ['./_to-integer', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 7.1.15 ToLength
  var toInteger = $__require('./_to-integer');
  var min = Math.min;
  module.exports = function (it) {
    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
  };
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_to-integer.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  // 7.1.4 ToInteger
  var ceil = Math.ceil;
  var floor = Math.floor;
  module.exports = function (it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_to-absolute-index.js', ['./_to-integer', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var toInteger = $__require('./_to-integer');
  var max = Math.max;
  var min = Math.min;
  module.exports = function (index, length) {
    index = toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_array-includes.js', ['./_to-iobject', './_to-length', './_to-absolute-index', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // false -> Array#indexOf
  // true  -> Array#includes
  var toIObject = $__require('./_to-iobject');
  var toLength = $__require('./_to-length');
  var toAbsoluteIndex = $__require('./_to-absolute-index');
  module.exports = function (IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = toIObject($this);
      var length = toLength(O.length);
      var index = toAbsoluteIndex(fromIndex, length);
      var value;
      // Array#includes uses SameValueZero equality algorithm
      // eslint-disable-next-line no-self-compare
      if (IS_INCLUDES && el != el) while (length > index) {
        value = O[index++];
        // eslint-disable-next-line no-self-compare
        if (value != value) return true;
        // Array#indexOf ignores holes, Array#includes - not
      } else for (; length > index; index++) if (IS_INCLUDES || index in O) {
        if (O[index] === el) return IS_INCLUDES || index || 0;
      }return !IS_INCLUDES && -1;
    };
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_shared-key.js', ['./_shared', './_uid', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var shared = $__require('./_shared')('keys');
  var uid = $__require('./_uid');
  module.exports = function (key) {
    return shared[key] || (shared[key] = uid(key));
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-keys-internal.js', ['./_has', './_to-iobject', './_array-includes', './_shared-key', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var has = $__require('./_has');
  var toIObject = $__require('./_to-iobject');
  var arrayIndexOf = $__require('./_array-includes')(false);
  var IE_PROTO = $__require('./_shared-key')('IE_PROTO');

  module.exports = function (object, names) {
    var O = toIObject(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
    // Don't enum bug & hidden keys
    while (names.length > i) if (has(O, key = names[i++])) {
      ~arrayIndexOf(result, key) || result.push(key);
    }
    return result;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_enum-bug-keys.js', ['process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // IE 8- don't enum bug keys
  module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-gopn.js', ['./_object-keys-internal', './_enum-bug-keys', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
  var $keys = $__require('./_object-keys-internal');
  var hiddenKeys = $__require('./_enum-bug-keys').concat('length', 'prototype');

  exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return $keys(O, hiddenKeys);
  };
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_object-pie.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.f = {}.propertyIsEnumerable;
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_object-gops.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  exports.f = Object.getOwnPropertySymbols;
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_property-desc.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  module.exports = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_hide.js', ['./_object-dp', './_property-desc', './_descriptors', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var dP = $__require('./_object-dp');
  var createDesc = $__require('./_property-desc');
  module.exports = $__require('./_descriptors') ? function (object, key, value) {
    return dP.f(object, key, createDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es6.symbol.js', ['./_global', './_has', './_descriptors', './_export', './_redefine', './_meta', './_fails', './_shared', './_set-to-string-tag', './_uid', './_wks', './_wks-ext', './_wks-define', './_enum-keys', './_is-array', './_an-object', './_to-iobject', './_to-primitive', './_property-desc', './_object-create', './_object-gopn-ext', './_object-gopd', './_object-dp', './_object-keys', './_object-gopn', './_object-pie', './_object-gops', './_library', './_hide', 'process'], true, function ($__require, exports, module) {
  'use strict';
  // ECMAScript 6 symbols shim

  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var global = $__require('./_global');
  var has = $__require('./_has');
  var DESCRIPTORS = $__require('./_descriptors');
  var $export = $__require('./_export');
  var redefine = $__require('./_redefine');
  var META = $__require('./_meta').KEY;
  var $fails = $__require('./_fails');
  var shared = $__require('./_shared');
  var setToStringTag = $__require('./_set-to-string-tag');
  var uid = $__require('./_uid');
  var wks = $__require('./_wks');
  var wksExt = $__require('./_wks-ext');
  var wksDefine = $__require('./_wks-define');
  var enumKeys = $__require('./_enum-keys');
  var isArray = $__require('./_is-array');
  var anObject = $__require('./_an-object');
  var toIObject = $__require('./_to-iobject');
  var toPrimitive = $__require('./_to-primitive');
  var createDesc = $__require('./_property-desc');
  var _create = $__require('./_object-create');
  var gOPNExt = $__require('./_object-gopn-ext');
  var $GOPD = $__require('./_object-gopd');
  var $DP = $__require('./_object-dp');
  var $keys = $__require('./_object-keys');
  var gOPD = $GOPD.f;
  var dP = $DP.f;
  var gOPN = gOPNExt.f;
  var $Symbol = global.Symbol;
  var $JSON = global.JSON;
  var _stringify = $JSON && $JSON.stringify;
  var PROTOTYPE = 'prototype';
  var HIDDEN = wks('_hidden');
  var TO_PRIMITIVE = wks('toPrimitive');
  var isEnum = {}.propertyIsEnumerable;
  var SymbolRegistry = shared('symbol-registry');
  var AllSymbols = shared('symbols');
  var OPSymbols = shared('op-symbols');
  var ObjectProto = Object[PROTOTYPE];
  var USE_NATIVE = typeof $Symbol == 'function';
  var QObject = global.QObject;
  // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
  var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

  // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
  var setSymbolDesc = DESCRIPTORS && $fails(function () {
    return _create(dP({}, 'a', {
      get: function () {
        return dP(this, 'a', { value: 7 }).a;
      }
    })).a != 7;
  }) ? function (it, key, D) {
    var protoDesc = gOPD(ObjectProto, key);
    if (protoDesc) delete ObjectProto[key];
    dP(it, key, D);
    if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
  } : dP;

  var wrap = function (tag) {
    var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
    sym._k = tag;
    return sym;
  };

  var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
    return typeof it == 'symbol';
  } : function (it) {
    return it instanceof $Symbol;
  };

  var $defineProperty = function defineProperty(it, key, D) {
    if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
    anObject(it);
    key = toPrimitive(key, true);
    anObject(D);
    if (has(AllSymbols, key)) {
      if (!D.enumerable) {
        if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
        D = _create(D, { enumerable: createDesc(0, false) });
      }return setSymbolDesc(it, key, D);
    }return dP(it, key, D);
  };
  var $defineProperties = function defineProperties(it, P) {
    anObject(it);
    var keys = enumKeys(P = toIObject(P));
    var i = 0;
    var l = keys.length;
    var key;
    while (l > i) $defineProperty(it, key = keys[i++], P[key]);
    return it;
  };
  var $create = function create(it, P) {
    return P === undefined ? _create(it) : $defineProperties(_create(it), P);
  };
  var $propertyIsEnumerable = function propertyIsEnumerable(key) {
    var E = isEnum.call(this, key = toPrimitive(key, true));
    if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
    return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };
  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
    it = toIObject(it);
    key = toPrimitive(key, true);
    if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
    var D = gOPD(it, key);
    if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
    return D;
  };
  var $getOwnPropertyNames = function getOwnPropertyNames(it) {
    var names = gOPN(toIObject(it));
    var result = [];
    var i = 0;
    var key;
    while (names.length > i) {
      if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
    }return result;
  };
  var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
    var IS_OP = it === ObjectProto;
    var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
    var result = [];
    var i = 0;
    var key;
    while (names.length > i) {
      if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
    }return result;
  };

  // 19.4.1.1 Symbol([description])
  if (!USE_NATIVE) {
    $Symbol = function Symbol() {
      if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
      var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
      var $set = function (value) {
        if (this === ObjectProto) $set.call(OPSymbols, value);
        if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, createDesc(1, value));
      };
      if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
      return wrap(tag);
    };
    redefine($Symbol[PROTOTYPE], 'toString', function toString() {
      return this._k;
    });

    $GOPD.f = $getOwnPropertyDescriptor;
    $DP.f = $defineProperty;
    $__require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
    $__require('./_object-pie').f = $propertyIsEnumerable;
    $__require('./_object-gops').f = $getOwnPropertySymbols;

    if (DESCRIPTORS && !$__require('./_library')) {
      redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }

    wksExt.f = function (name) {
      return wrap(wks(name));
    };
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

  for (var es6Symbols =
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) wks(es6Symbols[j++]);

  for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

  $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
    // 19.4.2.1 Symbol.for(key)
    'for': function (key) {
      return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
    },
    // 19.4.2.5 Symbol.keyFor(sym)
    keyFor: function keyFor(sym) {
      if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
      for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
    },
    useSetter: function () {
      setter = true;
    },
    useSimple: function () {
      setter = false;
    }
  });

  $export($export.S + $export.F * !USE_NATIVE, 'Object', {
    // 19.1.2.2 Object.create(O [, Properties])
    create: $create,
    // 19.1.2.4 Object.defineProperty(O, P, Attributes)
    defineProperty: $defineProperty,
    // 19.1.2.3 Object.defineProperties(O, Properties)
    defineProperties: $defineProperties,
    // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    // 19.1.2.7 Object.getOwnPropertyNames(O)
    getOwnPropertyNames: $getOwnPropertyNames,
    // 19.1.2.8 Object.getOwnPropertySymbols(O)
    getOwnPropertySymbols: $getOwnPropertySymbols
  });

  // 24.3.2 JSON.stringify(value [, replacer [, space]])
  $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
    var S = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    // WebKit converts symbol values to JSON as null
    // V8 throws on boxed symbols
    return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
  })), 'JSON', {
    stringify: function stringify(it) {
      if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      var args = [it];
      var i = 1;
      var replacer, $replacer;
      while (arguments.length > i) args.push(arguments[i++]);
      replacer = args[1];
      if (typeof replacer == 'function') $replacer = replacer;
      if ($replacer || !isArray(replacer)) replacer = function (key, value) {
        if ($replacer) value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return _stringify.apply($JSON, args);
    }
  });

  // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
  $Symbol[PROTOTYPE][TO_PRIMITIVE] || $__require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
  // 19.4.3.5 Symbol.prototype[@@toStringTag]
  setToStringTag($Symbol, 'Symbol');
  // 20.2.1.9 Math[@@toStringTag]
  setToStringTag(Math, 'Math', true);
  // 24.3.3 JSON[@@toStringTag]
  setToStringTag(global.JSON, 'JSON', true);
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/es6.object.to-string.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es7.symbol.async-iterator.js', ['./_wks-define', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('./_wks-define')('asyncIterator');
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_library.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  module.exports = true;
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_shared.js', ['./_global', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var global = $__require('./_global');
  var SHARED = '__core-js_shared__';
  var store = global[SHARED] || (global[SHARED] = {});
  module.exports = function (key) {
    return store[key] || (store[key] = {});
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_uid.js', ['process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var id = 0;
  var px = Math.random();
  module.exports = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_wks.js', ['./_shared', './_uid', './_global', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var store = $__require('./_shared')('wks');
  var uid = $__require('./_uid');
  var Symbol = $__require('./_global').Symbol;
  var USE_SYMBOL = typeof Symbol == 'function';

  var $exports = module.exports = function (name) {
    return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
  };

  $exports.store = store;
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_wks-ext.js', ['./_wks', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  exports.f = $__require('./_wks');
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_an-object.js', ['./_is-object', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var isObject = $__require('./_is-object');
  module.exports = function (it) {
    if (!isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_global.js', ['process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_dom-create.js', ['./_is-object', './_global', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var isObject = $__require('./_is-object');
  var document = $__require('./_global').document;
  // typeof document.createElement is 'object' in old IE
  var is = isObject(document) && isObject(document.createElement);
  module.exports = function (it) {
    return is ? document.createElement(it) : {};
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_ie8-dom-define.js', ['./_descriptors', './_fails', './_dom-create', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  module.exports = !$__require('./_descriptors') && !$__require('./_fails')(function () {
    return Object.defineProperty($__require('./_dom-create')('div'), 'a', { get: function () {
        return 7;
      } }).a != 7;
  });
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_is-object.js', ['process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  module.exports = function (it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_to-primitive.js', ['./_is-object', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // 7.1.1 ToPrimitive(input [, PreferredType])
  var isObject = $__require('./_is-object');
  // instead of the ES6 spec version, we didn't implement @@toPrimitive case
  // and the second argument - flag - preferred type is a string
  module.exports = function (it, S) {
    if (!isObject(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
  };
});
System.registerDynamic("npm:core-js@2.5.1/library/modules/_fails.js", ["process"], true, function ($__require, exports, module) {
  var process = $__require("process");
  var global = this || self,
      GLOBAL = global;
  module.exports = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_descriptors.js', ['./_fails', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  // Thank's IE8 for his funny defineProperty
  module.exports = !$__require('./_fails')(function () {
    return Object.defineProperty({}, 'a', { get: function () {
        return 7;
      } }).a != 7;
  });
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_object-dp.js', ['./_an-object', './_ie8-dom-define', './_to-primitive', './_descriptors', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var anObject = $__require('./_an-object');
  var IE8_DOM_DEFINE = $__require('./_ie8-dom-define');
  var toPrimitive = $__require('./_to-primitive');
  var dP = Object.defineProperty;

  exports.f = $__require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPrimitive(P, true);
    anObject(Attributes);
    if (IE8_DOM_DEFINE) try {
      return dP(O, P, Attributes);
    } catch (e) {/* empty */}
    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_wks-define.js', ['./_global', './_core', './_library', './_wks-ext', './_object-dp', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var global = $__require('./_global');
  var core = $__require('./_core');
  var LIBRARY = $__require('./_library');
  var wksExt = $__require('./_wks-ext');
  var defineProperty = $__require('./_object-dp').f;
  module.exports = function (name) {
    var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
    if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
  };
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/es7.symbol.observable.js', ['./_wks-define', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('./_wks-define')('observable');
});
System.registerDynamic('npm:core-js@2.5.1/library/modules/_core.js', ['process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  var core = module.exports = { version: '2.5.1' };
  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
});
System.registerDynamic("npm:jspm-nodelibs-process@0.2.1.json", [], true, function() {
  return {
    "main": "./process.js"
  };
});

System.registerDynamic('npm:jspm-nodelibs-process@0.2.1/process.js', ['@system-env'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    // From https://github.com/defunctzombie/node-process/blob/master/browser.js
    // shim for using process in browser

    var productionEnv = $__require('@system-env').production;

    var process = module.exports = {};
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;

    function cleanUpNextTick() {
        draining = false;
        if (currentQueue.length) {
            queue = currentQueue.concat(queue);
        } else {
            queueIndex = -1;
        }
        if (queue.length) {
            drainQueue();
        }
    }

    function drainQueue() {
        if (draining) {
            return;
        }
        var timeout = setTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
                if (currentQueue) {
                    currentQueue[queueIndex].run();
                }
            }
            queueIndex = -1;
            len = queue.length;
        }
        currentQueue = null;
        draining = false;
        clearTimeout(timeout);
    }

    process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
            }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
            setTimeout(drainQueue, 0);
        }
    };

    // v8 likes predictible objects
    function Item(fun, array) {
        this.fun = fun;
        this.array = array;
    }
    Item.prototype.run = function () {
        this.fun.apply(null, this.array);
    };
    process.title = 'browser';
    process.browser = true;
    process.env = {
        NODE_ENV: productionEnv ? 'production' : 'development'
    };
    process.argv = [];
    process.version = ''; // empty string to avoid regexp issues
    process.versions = {};

    function noop() {}

    process.on = noop;
    process.addListener = noop;
    process.once = noop;
    process.off = noop;
    process.removeListener = noop;
    process.removeAllListeners = noop;
    process.emit = noop;

    process.binding = function (name) {
        throw new Error('process.binding is not supported');
    };

    process.cwd = function () {
        return '/';
    };
    process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
    };
    process.umask = function () {
        return 0;
    };
});
System.registerDynamic("npm:core-js@2.5.1.json", [], true, function() {
  return {
    "main": "index.js",
    "format": "cjs",
    "meta": {
      "*": {
        "globals": {
          "process": "process"
        }
      },
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./build": "./build/index.js",
      "./core": "./core/index.js",
      "./es5": "./es5/index.js",
      "./es6": "./es6/index.js",
      "./es7": "./es7/index.js",
      "./fn/array": "./fn/array/index.js",
      "./fn/array/virtual": "./fn/array/virtual/index.js",
      "./fn/date": "./fn/date/index.js",
      "./fn/dom-collections": "./fn/dom-collections/index.js",
      "./fn/error": "./fn/error/index.js",
      "./fn/function": "./fn/function/index.js",
      "./fn/function/virtual": "./fn/function/virtual/index.js",
      "./fn/json": "./fn/json/index.js",
      "./fn/map": "./fn/map/index.js",
      "./fn/math": "./fn/math/index.js",
      "./fn/number": "./fn/number/index.js",
      "./fn/number/virtual": "./fn/number/virtual/index.js",
      "./fn/object": "./fn/object/index.js",
      "./fn/promise": "./fn/promise/index.js",
      "./fn/reflect": "./fn/reflect/index.js",
      "./fn/regexp": "./fn/regexp/index.js",
      "./fn/set": "./fn/set/index.js",
      "./fn/string": "./fn/string/index.js",
      "./fn/string/virtual": "./fn/string/virtual/index.js",
      "./fn/symbol": "./fn/symbol/index.js",
      "./fn/system": "./fn/system/index.js",
      "./fn/typed": "./fn/typed/index.js",
      "./fn/weak-map": "./fn/weak-map/index.js",
      "./fn/weak-set": "./fn/weak-set/index.js",
      "./library": "./library/index.js",
      "./library/core": "./library/core/index.js",
      "./library/es5": "./library/es5/index.js",
      "./library/es6": "./library/es6/index.js",
      "./library/es7": "./library/es7/index.js",
      "./library/fn/array": "./library/fn/array/index.js",
      "./library/fn/array/virtual": "./library/fn/array/virtual/index.js",
      "./library/fn/date": "./library/fn/date/index.js",
      "./library/fn/dom-collections": "./library/fn/dom-collections/index.js",
      "./library/fn/error": "./library/fn/error/index.js",
      "./library/fn/function": "./library/fn/function/index.js",
      "./library/fn/function/virtual": "./library/fn/function/virtual/index.js",
      "./library/fn/json": "./library/fn/json/index.js",
      "./library/fn/map": "./library/fn/map/index.js",
      "./library/fn/math": "./library/fn/math/index.js",
      "./library/fn/number": "./library/fn/number/index.js",
      "./library/fn/number/virtual": "./library/fn/number/virtual/index.js",
      "./library/fn/object": "./library/fn/object/index.js",
      "./library/fn/promise": "./library/fn/promise/index.js",
      "./library/fn/reflect": "./library/fn/reflect/index.js",
      "./library/fn/regexp": "./library/fn/regexp/index.js",
      "./library/fn/set": "./library/fn/set/index.js",
      "./library/fn/string": "./library/fn/string/index.js",
      "./library/fn/string/virtual": "./library/fn/string/virtual/index.js",
      "./library/fn/symbol": "./library/fn/symbol/index.js",
      "./library/fn/system": "./library/fn/system/index.js",
      "./library/fn/typed": "./library/fn/typed/index.js",
      "./library/fn/weak-map": "./library/fn/weak-map/index.js",
      "./library/fn/weak-set": "./library/fn/weak-set/index.js",
      "./library/stage": "./library/stage/index.js",
      "./library/web": "./library/web/index.js",
      "./package": "./package.json",
      "./stage": "./stage/index.js",
      "./web": "./web/index.js"
    }
  };
});

System.registerDynamic('npm:core-js@2.5.1/library/fn/symbol/index.js', ['../../modules/es6.symbol', '../../modules/es6.object.to-string', '../../modules/es7.symbol.async-iterator', '../../modules/es7.symbol.observable', '../../modules/_core', 'process'], true, function ($__require, exports, module) {
  var process = $__require('process');
  var global = this || self,
      GLOBAL = global;
  $__require('../../modules/es6.symbol');
  $__require('../../modules/es6.object.to-string');
  $__require('../../modules/es7.symbol.async-iterator');
  $__require('../../modules/es7.symbol.observable');
  module.exports = $__require('../../modules/_core').Symbol;
});
System.registerDynamic("npm:babel-runtime@6.26.0/core-js/symbol.js", ["core-js/library/fn/symbol"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = { "default": $__require("core-js/library/fn/symbol"), __esModule: true };
});
System.registerDynamic("npm:babel-runtime@6.26.0.json", [], true, function() {
  return {
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./regenerator": "./regenerator/index.js"
    }
  };
});

System.registerDynamic("npm:babel-runtime@6.26.0/helpers/typeof.js", ["../core-js/symbol/iterator", "../core-js/symbol"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _iterator = $__require("../core-js/symbol/iterator");

  var _iterator2 = _interopRequireDefault(_iterator);

  var _symbol = $__require("../core-js/symbol");

  var _symbol2 = _interopRequireDefault(_symbol);

  var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj;
  };

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof(obj);
  } : function (obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
  };
});
System.registerDynamic("npm:babel-types@6.26.0/lib/definitions/index.js", ["babel-runtime/core-js/get-iterator", "babel-runtime/core-js/json/stringify", "babel-runtime/helpers/typeof", "../index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = undefined;

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  var _stringify = $__require("babel-runtime/core-js/json/stringify");

  var _stringify2 = _interopRequireDefault(_stringify);

  var _typeof2 = $__require("babel-runtime/helpers/typeof");

  var _typeof3 = _interopRequireDefault(_typeof2);

  exports.assertEach = assertEach;
  exports.assertOneOf = assertOneOf;
  exports.assertNodeType = assertNodeType;
  exports.assertNodeOrValueType = assertNodeOrValueType;
  exports.assertValueType = assertValueType;
  exports.chain = chain;
  exports.default = defineType;

  var _index = $__require("../index");

  var t = _interopRequireWildcard(_index);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var VISITOR_KEYS = exports.VISITOR_KEYS = {};
  var ALIAS_KEYS = exports.ALIAS_KEYS = {};
  var NODE_FIELDS = exports.NODE_FIELDS = {};
  var BUILDER_KEYS = exports.BUILDER_KEYS = {};
  var DEPRECATED_KEYS = exports.DEPRECATED_KEYS = {};

  function getType(val) {
    if (Array.isArray(val)) {
      return "array";
    } else if (val === null) {
      return "null";
    } else if (val === undefined) {
      return "undefined";
    } else {
      return typeof val === "undefined" ? "undefined" : (0, _typeof3.default)(val);
    }
  }

  function assertEach(callback) {
    function validator(node, key, val) {
      if (!Array.isArray(val)) return;

      for (var i = 0; i < val.length; i++) {
        callback(node, key + "[" + i + "]", val[i]);
      }
    }
    validator.each = callback;
    return validator;
  }

  function assertOneOf() {
    for (var _len = arguments.length, vals = Array(_len), _key = 0; _key < _len; _key++) {
      vals[_key] = arguments[_key];
    }

    function validate(node, key, val) {
      if (vals.indexOf(val) < 0) {
        throw new TypeError("Property " + key + " expected value to be one of " + (0, _stringify2.default)(vals) + " but got " + (0, _stringify2.default)(val));
      }
    }

    validate.oneOf = vals;

    return validate;
  }

  function assertNodeType() {
    for (var _len2 = arguments.length, types = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      types[_key2] = arguments[_key2];
    }

    function validate(node, key, val) {
      var valid = false;

      for (var _iterator = types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var type = _ref;

        if (t.is(type, val)) {
          valid = true;
          break;
        }
      }

      if (!valid) {
        throw new TypeError("Property " + key + " of " + node.type + " expected node to be of a type " + (0, _stringify2.default)(types) + " " + ("but instead got " + (0, _stringify2.default)(val && val.type)));
      }
    }

    validate.oneOfNodeTypes = types;

    return validate;
  }

  function assertNodeOrValueType() {
    for (var _len3 = arguments.length, types = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      types[_key3] = arguments[_key3];
    }

    function validate(node, key, val) {
      var valid = false;

      for (var _iterator2 = types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var type = _ref2;

        if (getType(val) === type || t.is(type, val)) {
          valid = true;
          break;
        }
      }

      if (!valid) {
        throw new TypeError("Property " + key + " of " + node.type + " expected node to be of a type " + (0, _stringify2.default)(types) + " " + ("but instead got " + (0, _stringify2.default)(val && val.type)));
      }
    }

    validate.oneOfNodeOrValueTypes = types;

    return validate;
  }

  function assertValueType(type) {
    function validate(node, key, val) {
      var valid = getType(val) === type;

      if (!valid) {
        throw new TypeError("Property " + key + " expected type of " + type + " but got " + getType(val));
      }
    }

    validate.type = type;

    return validate;
  }

  function chain() {
    for (var _len4 = arguments.length, fns = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      fns[_key4] = arguments[_key4];
    }

    function validate() {
      for (var _iterator3 = fns, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
        var _ref3;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref3 = _i3.value;
        }

        var fn = _ref3;

        fn.apply(undefined, arguments);
      }
    }
    validate.chainOf = fns;
    return validate;
  }

  function defineType(type) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var inherits = opts.inherits && store[opts.inherits] || {};

    opts.fields = opts.fields || inherits.fields || {};
    opts.visitor = opts.visitor || inherits.visitor || [];
    opts.aliases = opts.aliases || inherits.aliases || [];
    opts.builder = opts.builder || inherits.builder || opts.visitor || [];

    if (opts.deprecatedAlias) {
      DEPRECATED_KEYS[opts.deprecatedAlias] = type;
    }

    for (var _iterator4 = opts.visitor.concat(opts.builder), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {
      var _ref4;

      if (_isArray4) {
        if (_i4 >= _iterator4.length) break;
        _ref4 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done) break;
        _ref4 = _i4.value;
      }

      var _key5 = _ref4;

      opts.fields[_key5] = opts.fields[_key5] || {};
    }

    for (var key in opts.fields) {
      var field = opts.fields[key];

      if (opts.builder.indexOf(key) === -1) {
        field.optional = true;
      }
      if (field.default === undefined) {
        field.default = null;
      } else if (!field.validate) {
        field.validate = assertValueType(getType(field.default));
      }
    }

    VISITOR_KEYS[type] = opts.visitor;
    BUILDER_KEYS[type] = opts.builder;
    NODE_FIELDS[type] = opts.fields;
    ALIAS_KEYS[type] = opts.aliases;

    store[type] = opts;
  }

  var store = {};
});
System.registerDynamic("npm:babel-types@6.26.0/lib/react.js", ["./index"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.isReactComponent = undefined;
  exports.isCompatTag = isCompatTag;
  exports.buildChildren = buildChildren;

  var _index = $__require("./index");

  var t = _interopRequireWildcard(_index);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  var isReactComponent = exports.isReactComponent = t.buildMatchMemberExpression("React.Component");

  function isCompatTag(tagName) {
    return !!tagName && /^[a-z]|\-/.test(tagName);
  }

  function cleanJSXElementLiteralChild(child, args) {
    var lines = child.value.split(/\r\n|\n|\r/);

    var lastNonEmptyLine = 0;

    for (var i = 0; i < lines.length; i++) {
      if (lines[i].match(/[^ \t]/)) {
        lastNonEmptyLine = i;
      }
    }

    var str = "";

    for (var _i = 0; _i < lines.length; _i++) {
      var line = lines[_i];

      var isFirstLine = _i === 0;
      var isLastLine = _i === lines.length - 1;
      var isLastNonEmptyLine = _i === lastNonEmptyLine;

      var trimmedLine = line.replace(/\t/g, " ");

      if (!isFirstLine) {
        trimmedLine = trimmedLine.replace(/^[ ]+/, "");
      }

      if (!isLastLine) {
        trimmedLine = trimmedLine.replace(/[ ]+$/, "");
      }

      if (trimmedLine) {
        if (!isLastNonEmptyLine) {
          trimmedLine += " ";
        }

        str += trimmedLine;
      }
    }

    if (str) args.push(t.stringLiteral(str));
  }

  function buildChildren(node) {
    var elems = [];

    for (var i = 0; i < node.children.length; i++) {
      var child = node.children[i];

      if (t.isJSXText(child)) {
        cleanJSXElementLiteralChild(child, elems);
        continue;
      }

      if (t.isJSXExpressionContainer(child)) child = child.expression;
      if (t.isJSXEmptyExpression(child)) continue;

      elems.push(child);
    }

    return elems;
  }
});
System.registerDynamic("npm:babel-types@6.26.0.json", [], true, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib": "./lib/index.js",
      "./lib/definitions": "./lib/definitions/index.js"
    }
  };
});

System.registerDynamic("npm:babel-types@6.26.0/lib/index.js", ["babel-runtime/core-js/object/get-own-property-symbols", "babel-runtime/core-js/get-iterator", "babel-runtime/core-js/object/keys", "babel-runtime/core-js/json/stringify", "./constants", "./retrievers", "./validators", "./converters", "./flow", "to-fast-properties", "lodash/clone", "lodash/uniq", "./definitions/init", "./definitions", "./react"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.createTypeAnnotationBasedOnTypeof = exports.removeTypeDuplicates = exports.createUnionTypeAnnotation = exports.valueToNode = exports.toBlock = exports.toExpression = exports.toStatement = exports.toBindingIdentifierName = exports.toIdentifier = exports.toKeyAlias = exports.toSequenceExpression = exports.toComputedKey = exports.isNodesEquivalent = exports.isImmutable = exports.isScope = exports.isSpecifierDefault = exports.isVar = exports.isBlockScoped = exports.isLet = exports.isValidIdentifier = exports.isReferenced = exports.isBinding = exports.getOuterBindingIdentifiers = exports.getBindingIdentifiers = exports.TYPES = exports.react = exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = exports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = undefined;

  var _getOwnPropertySymbols = $__require("babel-runtime/core-js/object/get-own-property-symbols");

  var _getOwnPropertySymbols2 = _interopRequireDefault(_getOwnPropertySymbols);

  var _getIterator2 = $__require("babel-runtime/core-js/get-iterator");

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  var _keys = $__require("babel-runtime/core-js/object/keys");

  var _keys2 = _interopRequireDefault(_keys);

  var _stringify = $__require("babel-runtime/core-js/json/stringify");

  var _stringify2 = _interopRequireDefault(_stringify);

  var _constants = $__require("./constants");

  Object.defineProperty(exports, "STATEMENT_OR_BLOCK_KEYS", {
    enumerable: true,
    get: function get() {
      return _constants.STATEMENT_OR_BLOCK_KEYS;
    }
  });
  Object.defineProperty(exports, "FLATTENABLE_KEYS", {
    enumerable: true,
    get: function get() {
      return _constants.FLATTENABLE_KEYS;
    }
  });
  Object.defineProperty(exports, "FOR_INIT_KEYS", {
    enumerable: true,
    get: function get() {
      return _constants.FOR_INIT_KEYS;
    }
  });
  Object.defineProperty(exports, "COMMENT_KEYS", {
    enumerable: true,
    get: function get() {
      return _constants.COMMENT_KEYS;
    }
  });
  Object.defineProperty(exports, "LOGICAL_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.LOGICAL_OPERATORS;
    }
  });
  Object.defineProperty(exports, "UPDATE_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.UPDATE_OPERATORS;
    }
  });
  Object.defineProperty(exports, "BOOLEAN_NUMBER_BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.BOOLEAN_NUMBER_BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "EQUALITY_BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.EQUALITY_BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "COMPARISON_BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.COMPARISON_BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "BOOLEAN_BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.BOOLEAN_BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "NUMBER_BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.NUMBER_BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "BINARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.BINARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "BOOLEAN_UNARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.BOOLEAN_UNARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "NUMBER_UNARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.NUMBER_UNARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "STRING_UNARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.STRING_UNARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "UNARY_OPERATORS", {
    enumerable: true,
    get: function get() {
      return _constants.UNARY_OPERATORS;
    }
  });
  Object.defineProperty(exports, "INHERIT_KEYS", {
    enumerable: true,
    get: function get() {
      return _constants.INHERIT_KEYS;
    }
  });
  Object.defineProperty(exports, "BLOCK_SCOPED_SYMBOL", {
    enumerable: true,
    get: function get() {
      return _constants.BLOCK_SCOPED_SYMBOL;
    }
  });
  Object.defineProperty(exports, "NOT_LOCAL_BINDING", {
    enumerable: true,
    get: function get() {
      return _constants.NOT_LOCAL_BINDING;
    }
  });
  exports.is = is;
  exports.isType = isType;
  exports.validate = validate;
  exports.shallowEqual = shallowEqual;
  exports.appendToMemberExpression = appendToMemberExpression;
  exports.prependToMemberExpression = prependToMemberExpression;
  exports.ensureBlock = ensureBlock;
  exports.clone = clone;
  exports.cloneWithoutLoc = cloneWithoutLoc;
  exports.cloneDeep = cloneDeep;
  exports.buildMatchMemberExpression = buildMatchMemberExpression;
  exports.removeComments = removeComments;
  exports.inheritsComments = inheritsComments;
  exports.inheritTrailingComments = inheritTrailingComments;
  exports.inheritLeadingComments = inheritLeadingComments;
  exports.inheritInnerComments = inheritInnerComments;
  exports.inherits = inherits;
  exports.assertNode = assertNode;
  exports.isNode = isNode;
  exports.traverseFast = traverseFast;
  exports.removeProperties = removeProperties;
  exports.removePropertiesDeep = removePropertiesDeep;

  var _retrievers = $__require("./retrievers");

  Object.defineProperty(exports, "getBindingIdentifiers", {
    enumerable: true,
    get: function get() {
      return _retrievers.getBindingIdentifiers;
    }
  });
  Object.defineProperty(exports, "getOuterBindingIdentifiers", {
    enumerable: true,
    get: function get() {
      return _retrievers.getOuterBindingIdentifiers;
    }
  });

  var _validators = $__require("./validators");

  Object.defineProperty(exports, "isBinding", {
    enumerable: true,
    get: function get() {
      return _validators.isBinding;
    }
  });
  Object.defineProperty(exports, "isReferenced", {
    enumerable: true,
    get: function get() {
      return _validators.isReferenced;
    }
  });
  Object.defineProperty(exports, "isValidIdentifier", {
    enumerable: true,
    get: function get() {
      return _validators.isValidIdentifier;
    }
  });
  Object.defineProperty(exports, "isLet", {
    enumerable: true,
    get: function get() {
      return _validators.isLet;
    }
  });
  Object.defineProperty(exports, "isBlockScoped", {
    enumerable: true,
    get: function get() {
      return _validators.isBlockScoped;
    }
  });
  Object.defineProperty(exports, "isVar", {
    enumerable: true,
    get: function get() {
      return _validators.isVar;
    }
  });
  Object.defineProperty(exports, "isSpecifierDefault", {
    enumerable: true,
    get: function get() {
      return _validators.isSpecifierDefault;
    }
  });
  Object.defineProperty(exports, "isScope", {
    enumerable: true,
    get: function get() {
      return _validators.isScope;
    }
  });
  Object.defineProperty(exports, "isImmutable", {
    enumerable: true,
    get: function get() {
      return _validators.isImmutable;
    }
  });
  Object.defineProperty(exports, "isNodesEquivalent", {
    enumerable: true,
    get: function get() {
      return _validators.isNodesEquivalent;
    }
  });

  var _converters = $__require("./converters");

  Object.defineProperty(exports, "toComputedKey", {
    enumerable: true,
    get: function get() {
      return _converters.toComputedKey;
    }
  });
  Object.defineProperty(exports, "toSequenceExpression", {
    enumerable: true,
    get: function get() {
      return _converters.toSequenceExpression;
    }
  });
  Object.defineProperty(exports, "toKeyAlias", {
    enumerable: true,
    get: function get() {
      return _converters.toKeyAlias;
    }
  });
  Object.defineProperty(exports, "toIdentifier", {
    enumerable: true,
    get: function get() {
      return _converters.toIdentifier;
    }
  });
  Object.defineProperty(exports, "toBindingIdentifierName", {
    enumerable: true,
    get: function get() {
      return _converters.toBindingIdentifierName;
    }
  });
  Object.defineProperty(exports, "toStatement", {
    enumerable: true,
    get: function get() {
      return _converters.toStatement;
    }
  });
  Object.defineProperty(exports, "toExpression", {
    enumerable: true,
    get: function get() {
      return _converters.toExpression;
    }
  });
  Object.defineProperty(exports, "toBlock", {
    enumerable: true,
    get: function get() {
      return _converters.toBlock;
    }
  });
  Object.defineProperty(exports, "valueToNode", {
    enumerable: true,
    get: function get() {
      return _converters.valueToNode;
    }
  });

  var _flow = $__require("./flow");

  Object.defineProperty(exports, "createUnionTypeAnnotation", {
    enumerable: true,
    get: function get() {
      return _flow.createUnionTypeAnnotation;
    }
  });
  Object.defineProperty(exports, "removeTypeDuplicates", {
    enumerable: true,
    get: function get() {
      return _flow.removeTypeDuplicates;
    }
  });
  Object.defineProperty(exports, "createTypeAnnotationBasedOnTypeof", {
    enumerable: true,
    get: function get() {
      return _flow.createTypeAnnotationBasedOnTypeof;
    }
  });

  var _toFastProperties = $__require("to-fast-properties");

  var _toFastProperties2 = _interopRequireDefault(_toFastProperties);

  var _clone = $__require("lodash/clone");

  var _clone2 = _interopRequireDefault(_clone);

  var _uniq = $__require("lodash/uniq");

  var _uniq2 = _interopRequireDefault(_uniq);

  $__require("./definitions/init");

  var _definitions = $__require("./definitions");

  var _react2 = $__require("./react");

  var _react = _interopRequireWildcard(_react2);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var t = exports;

  function registerType(type) {
    var is = t["is" + type];
    if (!is) {
      is = t["is" + type] = function (node, opts) {
        return t.is(type, node, opts);
      };
    }

    t["assert" + type] = function (node, opts) {
      opts = opts || {};
      if (!is(node, opts)) {
        throw new Error("Expected type " + (0, _stringify2.default)(type) + " with option " + (0, _stringify2.default)(opts));
      }
    };
  }

  exports.VISITOR_KEYS = _definitions.VISITOR_KEYS;
  exports.ALIAS_KEYS = _definitions.ALIAS_KEYS;
  exports.NODE_FIELDS = _definitions.NODE_FIELDS;
  exports.BUILDER_KEYS = _definitions.BUILDER_KEYS;
  exports.DEPRECATED_KEYS = _definitions.DEPRECATED_KEYS;
  exports.react = _react;

  for (var type in t.VISITOR_KEYS) {
    registerType(type);
  }

  t.FLIPPED_ALIAS_KEYS = {};

  (0, _keys2.default)(t.ALIAS_KEYS).forEach(function (type) {
    t.ALIAS_KEYS[type].forEach(function (alias) {
      var types = t.FLIPPED_ALIAS_KEYS[alias] = t.FLIPPED_ALIAS_KEYS[alias] || [];
      types.push(type);
    });
  });

  (0, _keys2.default)(t.FLIPPED_ALIAS_KEYS).forEach(function (type) {
    t[type.toUpperCase() + "_TYPES"] = t.FLIPPED_ALIAS_KEYS[type];
    registerType(type);
  });

  var TYPES = exports.TYPES = (0, _keys2.default)(t.VISITOR_KEYS).concat((0, _keys2.default)(t.FLIPPED_ALIAS_KEYS)).concat((0, _keys2.default)(t.DEPRECATED_KEYS));

  function is(type, node, opts) {
    if (!node) return false;

    var matches = isType(node.type, type);
    if (!matches) return false;

    if (typeof opts === "undefined") {
      return true;
    } else {
      return t.shallowEqual(node, opts);
    }
  }

  function isType(nodeType, targetType) {
    if (nodeType === targetType) return true;

    if (t.ALIAS_KEYS[targetType]) return false;

    var aliases = t.FLIPPED_ALIAS_KEYS[targetType];
    if (aliases) {
      if (aliases[0] === nodeType) return true;

      for (var _iterator = aliases, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var alias = _ref;

        if (nodeType === alias) return true;
      }
    }

    return false;
  }

  (0, _keys2.default)(t.BUILDER_KEYS).forEach(function (type) {
    var keys = t.BUILDER_KEYS[type];

    function builder() {
      if (arguments.length > keys.length) {
        throw new Error("t." + type + ": Too many arguments passed. Received " + arguments.length + " but can receive " + ("no more than " + keys.length));
      }

      var node = {};
      node.type = type;

      var i = 0;

      for (var _iterator2 = keys, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var _key = _ref2;

        var field = t.NODE_FIELDS[type][_key];

        var arg = arguments[i++];
        if (arg === undefined) arg = (0, _clone2.default)(field.default);

        node[_key] = arg;
      }

      for (var key in node) {
        validate(node, key, node[key]);
      }

      return node;
    }

    t[type] = builder;
    t[type[0].toLowerCase() + type.slice(1)] = builder;
  });

  var _loop = function _loop(_type) {
    var newType = t.DEPRECATED_KEYS[_type];

    function proxy(fn) {
      return function () {
        console.trace("The node type " + _type + " has been renamed to " + newType);
        return fn.apply(this, arguments);
      };
    }

    t[_type] = t[_type[0].toLowerCase() + _type.slice(1)] = proxy(t[newType]);
    t["is" + _type] = proxy(t["is" + newType]);
    t["assert" + _type] = proxy(t["assert" + newType]);
  };

  for (var _type in t.DEPRECATED_KEYS) {
    _loop(_type);
  }

  function validate(node, key, val) {
    if (!node) return;

    var fields = t.NODE_FIELDS[node.type];
    if (!fields) return;

    var field = fields[key];
    if (!field || !field.validate) return;
    if (field.optional && val == null) return;

    field.validate(node, key, val);
  }

  function shallowEqual(actual, expected) {
    var keys = (0, _keys2.default)(expected);

    for (var _iterator3 = keys, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {
      var _ref3;

      if (_isArray3) {
        if (_i3 >= _iterator3.length) break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done) break;
        _ref3 = _i3.value;
      }

      var key = _ref3;

      if (actual[key] !== expected[key]) {
        return false;
      }
    }

    return true;
  }

  function appendToMemberExpression(member, append, computed) {
    member.object = t.memberExpression(member.object, member.property, member.computed);
    member.property = append;
    member.computed = !!computed;
    return member;
  }

  function prependToMemberExpression(member, prepend) {
    member.object = t.memberExpression(prepend, member.object);
    return member;
  }

  function ensureBlock(node) {
    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "body";

    return node[key] = t.toBlock(node[key], node);
  }

  function clone(node) {
    if (!node) return node;
    var newNode = {};
    for (var key in node) {
      if (key[0] === "_") continue;
      newNode[key] = node[key];
    }
    return newNode;
  }

  function cloneWithoutLoc(node) {
    var newNode = clone(node);
    delete newNode.loc;
    return newNode;
  }

  function cloneDeep(node) {
    if (!node) return node;
    var newNode = {};

    for (var key in node) {
      if (key[0] === "_") continue;

      var val = node[key];

      if (val) {
        if (val.type) {
          val = t.cloneDeep(val);
        } else if (Array.isArray(val)) {
          val = val.map(t.cloneDeep);
        }
      }

      newNode[key] = val;
    }

    return newNode;
  }

  function buildMatchMemberExpression(match, allowPartial) {
    var parts = match.split(".");

    return function (member) {
      if (!t.isMemberExpression(member)) return false;

      var search = [member];
      var i = 0;

      while (search.length) {
        var node = search.shift();

        if (allowPartial && i === parts.length) {
          return true;
        }

        if (t.isIdentifier(node)) {
          if (parts[i] !== node.name) return false;
        } else if (t.isStringLiteral(node)) {
          if (parts[i] !== node.value) return false;
        } else if (t.isMemberExpression(node)) {
          if (node.computed && !t.isStringLiteral(node.property)) {
            return false;
          } else {
            search.push(node.object);
            search.push(node.property);
            continue;
          }
        } else {
          return false;
        }

        if (++i > parts.length) {
          return false;
        }
      }

      return true;
    };
  }

  function removeComments(node) {
    for (var _iterator4 = t.COMMENT_KEYS, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {
      var _ref4;

      if (_isArray4) {
        if (_i4 >= _iterator4.length) break;
        _ref4 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done) break;
        _ref4 = _i4.value;
      }

      var key = _ref4;

      delete node[key];
    }
    return node;
  }

  function inheritsComments(child, parent) {
    inheritTrailingComments(child, parent);
    inheritLeadingComments(child, parent);
    inheritInnerComments(child, parent);
    return child;
  }

  function inheritTrailingComments(child, parent) {
    _inheritComments("trailingComments", child, parent);
  }

  function inheritLeadingComments(child, parent) {
    _inheritComments("leadingComments", child, parent);
  }

  function inheritInnerComments(child, parent) {
    _inheritComments("innerComments", child, parent);
  }

  function _inheritComments(key, child, parent) {
    if (child && parent) {
      child[key] = (0, _uniq2.default)([].concat(child[key], parent[key]).filter(Boolean));
    }
  }

  function inherits(child, parent) {
    if (!child || !parent) return child;

    for (var _iterator5 = t.INHERIT_KEYS.optional, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {
      var _ref5;

      if (_isArray5) {
        if (_i5 >= _iterator5.length) break;
        _ref5 = _iterator5[_i5++];
      } else {
        _i5 = _iterator5.next();
        if (_i5.done) break;
        _ref5 = _i5.value;
      }

      var _key2 = _ref5;

      if (child[_key2] == null) {
        child[_key2] = parent[_key2];
      }
    }

    for (var key in parent) {
      if (key[0] === "_") child[key] = parent[key];
    }

    for (var _iterator6 = t.INHERIT_KEYS.force, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6);;) {
      var _ref6;

      if (_isArray6) {
        if (_i6 >= _iterator6.length) break;
        _ref6 = _iterator6[_i6++];
      } else {
        _i6 = _iterator6.next();
        if (_i6.done) break;
        _ref6 = _i6.value;
      }

      var _key3 = _ref6;

      child[_key3] = parent[_key3];
    }

    t.inheritsComments(child, parent);

    return child;
  }

  function assertNode(node) {
    if (!isNode(node)) {
      throw new TypeError("Not a valid node " + (node && node.type));
    }
  }

  function isNode(node) {
    return !!(node && _definitions.VISITOR_KEYS[node.type]);
  }

  (0, _toFastProperties2.default)(t);
  (0, _toFastProperties2.default)(t.VISITOR_KEYS);

  function traverseFast(node, enter, opts) {
    if (!node) return;

    var keys = t.VISITOR_KEYS[node.type];
    if (!keys) return;

    opts = opts || {};
    enter(node, opts);

    for (var _iterator7 = keys, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7);;) {
      var _ref7;

      if (_isArray7) {
        if (_i7 >= _iterator7.length) break;
        _ref7 = _iterator7[_i7++];
      } else {
        _i7 = _iterator7.next();
        if (_i7.done) break;
        _ref7 = _i7.value;
      }

      var key = _ref7;

      var subNode = node[key];

      if (Array.isArray(subNode)) {
        for (var _iterator8 = subNode, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : (0, _getIterator3.default)(_iterator8);;) {
          var _ref8;

          if (_isArray8) {
            if (_i8 >= _iterator8.length) break;
            _ref8 = _iterator8[_i8++];
          } else {
            _i8 = _iterator8.next();
            if (_i8.done) break;
            _ref8 = _i8.value;
          }

          var _node = _ref8;

          traverseFast(_node, enter, opts);
        }
      } else {
        traverseFast(subNode, enter, opts);
      }
    }
  }

  var CLEAR_KEYS = ["tokens", "start", "end", "loc", "raw", "rawValue"];

  var CLEAR_KEYS_PLUS_COMMENTS = t.COMMENT_KEYS.concat(["comments"]).concat(CLEAR_KEYS);

  function removeProperties(node, opts) {
    opts = opts || {};
    var map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;
    for (var _iterator9 = map, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : (0, _getIterator3.default)(_iterator9);;) {
      var _ref9;

      if (_isArray9) {
        if (_i9 >= _iterator9.length) break;
        _ref9 = _iterator9[_i9++];
      } else {
        _i9 = _iterator9.next();
        if (_i9.done) break;
        _ref9 = _i9.value;
      }

      var _key4 = _ref9;

      if (node[_key4] != null) node[_key4] = undefined;
    }

    for (var key in node) {
      if (key[0] === "_" && node[key] != null) node[key] = undefined;
    }

    var syms = (0, _getOwnPropertySymbols2.default)(node);
    for (var _iterator10 = syms, _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : (0, _getIterator3.default)(_iterator10);;) {
      var _ref10;

      if (_isArray10) {
        if (_i10 >= _iterator10.length) break;
        _ref10 = _iterator10[_i10++];
      } else {
        _i10 = _iterator10.next();
        if (_i10.done) break;
        _ref10 = _i10.value;
      }

      var sym = _ref10;

      node[sym] = null;
    }
  }

  function removePropertiesDeep(tree, opts) {
    traverseFast(tree, removeProperties, opts);
    return tree;
  }
});
System.registerDynamic("npm:babel-template@6.26.0.json", [], true, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib": "./lib/index.js"
    }
  };
});

System.registerDynamic("npm:babel-template@6.26.0/lib/index.js", ["babel-runtime/core-js/symbol", "lodash/cloneDeep", "lodash/assign", "lodash/has", "babel-traverse", "babylon", "babel-types"], true, function ($__require, exports, module) {
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _symbol = $__require("babel-runtime/core-js/symbol");

  var _symbol2 = _interopRequireDefault(_symbol);

  exports.default = function (code, opts) {
    var stack = void 0;
    try {
      throw new Error();
    } catch (error) {
      if (error.stack) {
        stack = error.stack.split("\n").slice(1).join("\n");
      }
    }

    opts = (0, _assign2.default)({
      allowReturnOutsideFunction: true,
      allowSuperOutsideMethod: true,
      preserveComments: false
    }, opts);

    var _getAst = function getAst() {
      var ast = void 0;

      try {
        ast = babylon.parse(code, opts);

        ast = _babelTraverse2.default.removeProperties(ast, { preserveComments: opts.preserveComments });

        _babelTraverse2.default.cheap(ast, function (node) {
          node[FROM_TEMPLATE] = true;
        });
      } catch (err) {
        err.stack = err.stack + "from\n" + stack;
        throw err;
      }

      _getAst = function getAst() {
        return ast;
      };

      return ast;
    };

    return function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return useTemplate(_getAst(), args);
    };
  };

  var _cloneDeep = $__require("lodash/cloneDeep");

  var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

  var _assign = $__require("lodash/assign");

  var _assign2 = _interopRequireDefault(_assign);

  var _has = $__require("lodash/has");

  var _has2 = _interopRequireDefault(_has);

  var _babelTraverse = $__require("babel-traverse");

  var _babelTraverse2 = _interopRequireDefault(_babelTraverse);

  var _babylon = $__require("babylon");

  var babylon = _interopRequireWildcard(_babylon);

  var _babelTypes = $__require("babel-types");

  var t = _interopRequireWildcard(_babelTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var FROM_TEMPLATE = "_fromTemplate";
  var TEMPLATE_SKIP = (0, _symbol2.default)();

  function useTemplate(ast, nodes) {
    ast = (0, _cloneDeep2.default)(ast);
    var _ast = ast,
        program = _ast.program;

    if (nodes.length) {
      (0, _babelTraverse2.default)(ast, templateVisitor, null, nodes);
    }

    if (program.body.length > 1) {
      return program.body;
    } else {
      return program.body[0];
    }
  }

  var templateVisitor = {
    noScope: true,

    enter: function enter(path, args) {
      var node = path.node;

      if (node[TEMPLATE_SKIP]) return path.skip();

      if (t.isExpressionStatement(node)) {
        node = node.expression;
      }

      var replacement = void 0;

      if (t.isIdentifier(node) && node[FROM_TEMPLATE]) {
        if ((0, _has2.default)(args[0], node.name)) {
          replacement = args[0][node.name];
        } else if (node.name[0] === "$") {
          var i = +node.name.slice(1);
          if (args[i]) replacement = args[i];
        }
      }

      if (replacement === null) {
        path.remove();
      }

      if (replacement) {
        replacement[TEMPLATE_SKIP] = true;
        path.replaceInline(replacement);
      }
    },
    exit: function exit(_ref) {
      var node = _ref.node;

      if (!node.loc) _babelTraverse2.default.clearNode(node);
    }
  };
  module.exports = exports["default"];
});
System.registerDynamic("npm:babel-plugin-transform-decorators-legacy@1.3.4.json", [], true, function() {
  return {
    "main": "lib/index.js",
    "format": "cjs",
    "meta": {
      "*.json": {
        "format": "json"
      }
    },
    "map": {
      "./lib": "./lib/index.js"
    }
  };
});

System.registerDynamic('npm:babel-plugin-transform-decorators-legacy@1.3.4/lib/index.js', ['babel-plugin-syntax-decorators', 'babel-template'], true, function ($__require, exports, module) {
    'use strict';

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    exports.default = function (_ref) {
        var t = _ref.types;

        /**
         * Add a helper to take an initial descriptor, apply some decorators to it, and optionally
         * define the property.
         */
        function ensureApplyDecoratedDescriptorHelper(path, state) {
            if (!state.applyDecoratedDescriptor) {
                state.applyDecoratedDescriptor = path.scope.generateUidIdentifier('applyDecoratedDescriptor');
                var helper = buildApplyDecoratedDescriptor({
                    NAME: state.applyDecoratedDescriptor
                });
                path.scope.getProgramParent().path.unshiftContainer('body', helper);
            }

            return state.applyDecoratedDescriptor;
        }

        /**
         * Add a helper to call as a replacement for class property definition.
         */
        function ensureInitializerDefineProp(path, state) {
            if (!state.initializerDefineProp) {
                state.initializerDefineProp = path.scope.generateUidIdentifier('initDefineProp');
                var helper = buildInitializerDefineProperty({
                    NAME: state.initializerDefineProp
                });
                path.scope.getProgramParent().path.unshiftContainer('body', helper);
            }

            return state.initializerDefineProp;
        }

        /**
         * Add a helper that will throw a useful error if the transform fails to detect the class
         * property assignment, so users know something failed.
         */
        function ensureInitializerWarning(path, state) {
            if (!state.initializerWarningHelper) {
                state.initializerWarningHelper = path.scope.generateUidIdentifier('initializerWarningHelper');
                var helper = buildInitializerWarningHelper({
                    NAME: state.initializerWarningHelper
                });
                path.scope.getProgramParent().path.unshiftContainer('body', helper);
            }

            return state.initializerWarningHelper;
        }

        /**
         * If the decorator expressions are non-identifiers, hoist them to before the class so we can be sure
         * that they are evaluated in order.
         */
        function applyEnsureOrdering(path) {
            // TODO: This should probably also hoist computed properties.
            var decorators = (path.isClass() ? [path].concat(path.get('body.body')) : path.get('properties')).reduce(function (acc, prop) {
                return acc.concat(prop.node.decorators || []);
            }, []);

            var identDecorators = decorators.filter(function (decorator) {
                return !t.isIdentifier(decorator.expression);
            });
            if (identDecorators.length === 0) return;

            return t.sequenceExpression(identDecorators.map(function (decorator) {
                var expression = decorator.expression;
                var id = decorator.expression = path.scope.generateDeclaredUidIdentifier('dec');
                return t.assignmentExpression('=', id, expression);
            }).concat([path.node]));
        }

        /**
         * Given a class expression with class-level decorators, create a new expression
         * with the proper decorated behavior.
         */
        function applyClassDecorators(classPath, state) {
            var decorators = classPath.node.decorators || [];
            classPath.node.decorators = null;

            if (decorators.length === 0) return;

            var name = classPath.scope.generateDeclaredUidIdentifier('class');

            return decorators.map(function (dec) {
                return dec.expression;
            }).reverse().reduce(function (acc, decorator) {
                return buildClassDecorator({
                    CLASS_REF: name,
                    DECORATOR: decorator,
                    INNER: acc
                }).expression;
            }, classPath.node);
        }

        /**
         * Given a class expression with method-level decorators, create a new expression
         * with the proper decorated behavior.
         */
        function applyMethodDecorators(path, state) {
            var hasMethodDecorators = path.node.body.body.some(function (node) {
                return (node.decorators || []).length > 0;
            });

            if (!hasMethodDecorators) return;

            return applyTargetDecorators(path, state, path.node.body.body);
        }

        /**
         * Given an object expression with property decorators, create a new expression
         * with the proper decorated behavior.
         */
        function applyObjectDecorators(path, state) {
            var hasMethodDecorators = path.node.properties.some(function (node) {
                return (node.decorators || []).length > 0;
            });

            if (!hasMethodDecorators) return;

            return applyTargetDecorators(path, state, path.node.properties);
        }

        /**
         * A helper to pull out property decorators into a sequence expression.
         */
        function applyTargetDecorators(path, state, decoratedProps) {
            var descName = path.scope.generateDeclaredUidIdentifier('desc');
            var valueTemp = path.scope.generateDeclaredUidIdentifier('value');

            var name = path.scope.generateDeclaredUidIdentifier(path.isClass() ? 'class' : 'obj');

            var exprs = decoratedProps.reduce(function (acc, node) {
                var decorators = node.decorators || [];
                node.decorators = null;

                if (decorators.length === 0) return acc;

                if (node.computed) {
                    throw path.buildCodeFrameError('Computed method/property decorators are not yet supported.');
                }

                var property = t.isLiteral(node.key) ? node.key : t.stringLiteral(node.key.name);

                var target = path.isClass() && !node.static ? buildClassPrototype({
                    CLASS_REF: name
                }).expression : name;

                if (t.isClassProperty(node, { static: false })) {
                    var descriptor = path.scope.generateDeclaredUidIdentifier('descriptor');

                    var initializer = node.value ? t.functionExpression(null, [], t.blockStatement([t.returnStatement(node.value)])) : t.nullLiteral();
                    node.value = t.callExpression(ensureInitializerWarning(path, state), [descriptor, t.thisExpression()]);

                    acc = acc.concat([t.assignmentExpression('=', descriptor, t.callExpression(ensureApplyDecoratedDescriptorHelper(path, state), [target, property, t.arrayExpression(decorators.map(function (dec) {
                        return dec.expression;
                    })), t.objectExpression([t.objectProperty(t.identifier('enumerable'), t.booleanLiteral(true)), t.objectProperty(t.identifier('initializer'), initializer)])]))]);
                } else {
                    acc = acc.concat(t.callExpression(ensureApplyDecoratedDescriptorHelper(path, state), [target, property, t.arrayExpression(decorators.map(function (dec) {
                        return dec.expression;
                    })), t.isObjectProperty(node) || t.isClassProperty(node, { static: true }) ? buildGetObjectInitializer({
                        TEMP: path.scope.generateDeclaredUidIdentifier('init'),
                        TARGET: target,
                        PROPERTY: property
                    }).expression : buildGetDescriptor({
                        TARGET: target,
                        PROPERTY: property
                    }).expression, target]));
                }

                return acc;
            }, []);

            return t.sequenceExpression([t.assignmentExpression('=', name, path.node), t.sequenceExpression(exprs), name]);
        }

        return {
            inherits: $__require("babel-plugin-syntax-decorators"),

            visitor: {
                ExportDefaultDeclaration: function ExportDefaultDeclaration(path) {
                    if (!path.get("declaration").isClassDeclaration()) return;

                    var node = path.node;

                    var ref = node.declaration.id || path.scope.generateUidIdentifier("default");
                    node.declaration.id = ref;

                    // Split the class declaration and the export into two separate statements.
                    path.replaceWith(node.declaration);
                    path.insertAfter(t.exportNamedDeclaration(null, [t.exportSpecifier(ref, t.identifier('default'))]));
                },
                ClassDeclaration: function ClassDeclaration(path) {
                    var node = path.node;

                    var ref = node.id || path.scope.generateUidIdentifier("class");

                    path.replaceWith(t.variableDeclaration("let", [t.variableDeclarator(ref, t.toExpression(node))]));
                },
                ClassExpression: function ClassExpression(path, state) {
                    // Create a replacement for the class node if there is one. We do one pass to replace classes with
                    // class decorators, and a second pass to process method decorators.
                    var decoratedClass = applyEnsureOrdering(path) || applyClassDecorators(path, state) || applyMethodDecorators(path, state);

                    if (decoratedClass) path.replaceWith(decoratedClass);
                },
                ObjectExpression: function ObjectExpression(path, state) {
                    var decoratedObject = applyEnsureOrdering(path) || applyObjectDecorators(path, state);

                    if (decoratedObject) path.replaceWith(decoratedObject);
                },
                AssignmentExpression: function AssignmentExpression(path, state) {
                    if (!state.initializerWarningHelper) return;

                    if (!path.get('left').isMemberExpression()) return;
                    if (!path.get('left.property').isIdentifier()) return;
                    if (!path.get('right').isCallExpression()) return;
                    if (!path.get('right.callee').isIdentifier({ name: state.initializerWarningHelper.name })) return;

                    path.replaceWith(t.callExpression(ensureInitializerDefineProp(path, state), [path.get('left.object').node, t.stringLiteral(path.get('left.property').node.name), path.get('right.arguments')[0].node, path.get('right.arguments')[1].node]));
                }
            }
        };
    };

    var _babelTemplate = $__require('babel-template');

    var _babelTemplate2 = _interopRequireDefault(_babelTemplate);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    var buildClassDecorator = (0, _babelTemplate2.default)('\n  DECORATOR(CLASS_REF = INNER) || CLASS_REF;\n');

    var buildClassPrototype = (0, _babelTemplate2.default)('\n  CLASS_REF.prototype;\n');

    var buildGetDescriptor = (0, _babelTemplate2.default)('\n    Object.getOwnPropertyDescriptor(TARGET, PROPERTY);\n');

    var buildGetObjectInitializer = (0, _babelTemplate2.default)('\n    (TEMP = Object.getOwnPropertyDescriptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n');

    var buildInitializerWarningHelper = (0, _babelTemplate2.default)('\n    function NAME(descriptor, context){\n        throw new Error(\'Decorating class property failed. Please ensure that transform-class-properties is enabled.\');\n    }\n');

    var buildInitializerDefineProperty = (0, _babelTemplate2.default)('\n    function NAME(target, property, descriptor, context){\n        if (!descriptor) return;\n\n        Object.defineProperty(target, property, {\n            enumerable: descriptor.enumerable,\n            configurable: descriptor.configurable,\n            writable: descriptor.writable,\n            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0,\n        });\n    }\n');

    var buildApplyDecoratedDescriptor = (0, _babelTemplate2.default)('\n    function NAME(target, property, decorators, descriptor, context){\n        var desc = {};\n        Object[\'ke\' + \'ys\'](descriptor).forEach(function(key){\n            desc[key] = descriptor[key];\n        });\n        desc.enumerable = !!desc.enumerable;\n        desc.configurable = !!desc.configurable;\n        if (\'value\' in desc || desc.initializer){\n            desc.writable = true;\n        }\n\n        desc = decorators.slice().reverse().reduce(function(desc, decorator){\n            return decorator(target, property, desc) || desc;\n        }, desc);\n\n        if (context && desc.initializer !== void 0){\n            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n            desc.initializer = undefined;\n        }\n\n        if (desc.initializer === void 0){\n            // This is a hack to avoid this being processed by \'transform-runtime\'.\n            // See issue #9.\n            Object[\'define\' + \'Property\'](target, property, desc);\n            desc = null;\n        }\n\n        return desc;\n    }\n');

    ;
});
!function (a) {
  function b(a) {
    Object.defineProperty(this, a, { enumerable: !0, get: function () {
        return this[o][a];
      } });
  }function c(a) {
    if ("undefined" != typeof System && System.isModule ? System.isModule(a) : "[object Module]" === Object.prototype.toString.call(a)) return a;var b = { default: a, __useDefault: a };if (a && a.__esModule) for (var c in a) Object.hasOwnProperty.call(a, c) && (b[c] = a[c]);return new d(b);
  }function d(a) {
    Object.defineProperty(this, o, { value: a }), Object.keys(a).forEach(b, this);
  }function e(a) {
    return "@node/" === a.substr(0, 6) ? m(a, c(p(a.substr(6))), {}) : n[a];
  }function f(a) {
    var b = e(a);if (!b) throw new Error('Module "' + a + '" expected, but not contained in build.');if (b.module) return b.module;var c = b.linkRecord;return g(b, c), l(b, c, []), b.module;
  }function g(a, b) {
    if (!b.depLoads) {
      b.declare && h(a, b), b.depLoads = [];for (var c = 0; c < b.deps.length; c++) {
        var d = e(b.deps[c]);b.depLoads.push(d), d.linkRecord && g(d, d.linkRecord);var f = b.setters && b.setters[c];f && (f(d.module || d.linkRecord.moduleObj), d.importerSetters.push(f));
      }return a;
    }
  }function h(b, c) {
    var d = c.moduleObj,
        e = b.importerSetters,
        f = !1,
        g = c.declare.call(a, function (a, b) {
      if (!f) {
        if ("object" == typeof a) for (var c in a) "__useDefault" !== c && (d[c] = a[c]);else d[a] = b;f = !0;for (var g = 0; g < e.length; g++) e[g](d);return f = !1, b;
      }
    }, { id: b.key });"function" != typeof g ? (c.setters = g.setters, c.execute = g.execute) : (c.setters = [], c.execute = g);
  }function i(a, b, c) {
    return n[a] = { key: a, module: void 0, importerSetters: [], linkRecord: { deps: b, depLoads: void 0, declare: c, setters: void 0, execute: void 0, moduleObj: {} } };
  }function j(a, b, c, d) {
    var e = {};return n[a] = { key: a, module: void 0, importerSetters: [], linkRecord: { deps: b, depLoads: void 0, declare: void 0, execute: d, executingRequire: c, moduleObj: { default: e, __useDefault: e }, setters: void 0 } };
  }function k(a, b, c) {
    return function (d) {
      for (var e = 0; e < a.length; e++) if (a[e] === d) {
        var f,
            g = b[e],
            h = g.linkRecord;return f = h ? -1 === c.indexOf(g) ? l(g, h, c) : h.moduleObj : g.module, "__useDefault" in f ? f.__useDefault : f;
      }
    };
  }function l(b, c, e) {
    if (e.push(b), b.module) return b.module;if (c.setters) {
      for (var f = 0; f < c.deps.length; f++) {
        var g = c.depLoads[f],
            h = g.linkRecord;h && -1 === e.indexOf(g) && l(g, h, h.setters ? e : []);
      }c.execute.call(q);
    } else {
      var i = { id: b.key },
          j = c.moduleObj;Object.defineProperty(i, "exports", { configurable: !0, set: function (a) {
          j.default = j.__useDefault = a;
        }, get: function () {
          return j.__useDefault;
        } });var m = k(c.deps, c.depLoads, e);if (!c.executingRequire) for (var f = 0; f < c.deps.length; f++) m(c.deps[f]);var n = c.execute.call(a, m, j.__useDefault, i);void 0 !== n && (j.default = j.__useDefault = n);var o = j.__useDefault;if (o && o.__esModule) for (var p in o) Object.hasOwnProperty.call(o, p) && (j[p] = o[p]);
    }var i = b.module = new d(c.moduleObj);if (!c.setters) for (var f = 0; f < b.importerSetters.length; f++) b.importerSetters[f](i);return i;
  }function m(a, b) {
    return n[a] = { key: a, module: b, importerSetters: [], linkRecord: void 0 };
  }var n = {},
      o = "undefined" != typeof Symbol ? Symbol() : "@@baseObject";d.prototype = Object.create(null), "undefined" != typeof Symbol && Symbol.toStringTag && (d.prototype[Symbol.toStringTag] = "Module");var p = "undefined" != typeof System && System._nodeRequire || "undefined" != typeof require && void 0 !== require.resolve && "undefined" != typeof process && process.platform && require,
      q = {};return Object.freeze && Object.freeze(q), function (a, b, e, g) {
    return function (h) {
      h(function (h) {
        var k = { _nodeRequire: p, register: i, registerDynamic: j, registry: { get: function (a) {
              return n[a].module;
            }, set: m }, newModule: function (a) {
            return new d(a);
          } };m("@empty", new d({}));for (var l = 0; l < b.length; l++) m(b[l], c(arguments[l], {}));g(k);var o = f(a[0]);if (a.length > 1) for (var l = 1; l < a.length; l++) f(a[l]);return e ? o.__useDefault : (o instanceof d && Object.defineProperty(o, "__esModule", { value: !0 }), o);
      });
    };
  };
}("undefined" != typeof self ? self : "undefined" != typeof global ? global : this)(["a"], [], !1, function (a) {
  var b = this.require,
      c = this.exports,
      d = this.module;a.registerDynamic("b", ["d", "e", "f", "10", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function f(a, b) {
      var c = [],
          d = s.functionExpression(null, [s.identifier("global")], s.blockStatement(c)),
          e = s.program([s.expressionStatement(s.callExpression(d, [k.get("selfGlobal")]))]);return c.push(s.variableDeclaration("var", [s.variableDeclarator(a, s.assignmentExpression("=", s.memberExpression(s.identifier("global"), a), s.objectExpression([])))])), b(c), e;
    }function g(a, b) {
      var c = [];return c.push(s.variableDeclaration("var", [s.variableDeclarator(a, s.identifier("global"))])), b(c), s.program([t({ FACTORY_PARAMETERS: s.identifier("global"), BROWSER_ARGUMENTS: s.assignmentExpression("=", s.memberExpression(s.identifier("root"), a), s.objectExpression([])), COMMON_ARGUMENTS: s.identifier("exports"), AMD_ARGUMENTS: s.arrayExpression([s.stringLiteral("exports")]), FACTORY_BODY: c, UMD_ROOT: s.identifier("this") })]);
    }function h(a, b) {
      var c = [];return c.push(s.variableDeclaration("var", [s.variableDeclarator(a, s.objectExpression([]))])), b(c), c.push(s.expressionStatement(a)), s.program(c);
    }function i(a, b, c) {
      k.list.forEach(function (d) {
        if (!(c && c.indexOf(d) < 0)) {
          var e = s.identifier(d);a.push(s.expressionStatement(s.assignmentExpression("=", s.memberExpression(b, e), k.get(d))));
        }
      });
    }a("c"), this || self;b.__esModule = !0, b.default = function (a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "global",
          c = s.identifier("babelHelpers"),
          d = function (b) {
        return i(b, c, a);
      },
          e = void 0,
          j = { global: f, umd: g, var: h }[b];if (!j) throw new Error(o.get("unsupportedOutputType", b));return e = j(c, d), (0, m.default)(e).code;
    };var j = a("d"),
        k = e(j),
        l = a("e"),
        m = d(l),
        n = a("f"),
        o = e(n),
        p = a("10"),
        q = d(p),
        r = a("11"),
        s = e(r),
        t = (0, q.default)('\n  (function (root, factory) {\n    if (typeof define === "function" && define.amd) {\n      define(AMD_ARGUMENTS, factory);\n    } else if (typeof exports === "object") {\n      factory(COMMON_ARGUMENTS);\n    } else {\n      factory(BROWSER_ARGUMENTS);\n    }\n  })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n    FACTORY_BODY\n  });\n');c.exports = b.default;
  }), a.registerDynamic("12", [], !0, function () {
    return { name: "babel-core", version: "6.25.0", description: "Babel compiler core.", author: "Sebastian McKenzie <sebmck@gmail.com>", homepage: "https://babeljs.io/", license: "MIT", repository: "https://github.com/babel/babel/tree/master/packages/babel-core", keywords: ["6to5", "babel", "classes", "const", "es6", "harmony", "let", "modules", "transpile", "transpiler", "var", "babel-core", "compiler"], scripts: { bench: "make bench", test: "make test" }, dependencies: { "babel-code-frame": "^6.22.0", "babel-generator": "^6.25.0", "babel-helpers": "^6.24.1", "babel-messages": "^6.23.0", "babel-template": "^6.25.0", "babel-runtime": "^6.22.0", "babel-register": "^6.24.1", "babel-traverse": "^6.25.0", "babel-types": "^6.25.0", babylon: "^6.17.2", "convert-source-map": "^1.1.0", debug: "^2.1.1", json5: "^0.5.0", lodash: "^4.2.0", minimatch: "^3.0.2", "path-is-absolute": "^1.0.0", private: "^0.1.6", slash: "^1.0.0", "source-map": "^0.5.0" }, devDependencies: { "babel-helper-fixtures": "^6.22.0", "babel-helper-transform-fixture-test-runner": "^6.24.1", "babel-polyfill": "^6.23.0" } };
  }), a.registerDynamic("13", ["11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }a("c"), this || self;b.__esModule = !0, b.default = function (a, b, c) {
      if (a) {
        if ("Program" === a.type) return f.file(a, b || [], c || []);if ("File" === a.type) return a;
      }throw new Error("Not a valid ast?");
    };var e = a("11"),
        f = d(e);c.exports = b.default;
  }), a.registerDynamic("14", ["10"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("10"),
        f = d(e),
        g = {};b.default = g, g.typeof = (0, f.default)('\n  (typeof Symbol === "function" && typeof Symbol.iterator === "symbol")\n    ? function (obj) { return typeof obj; }\n    : function (obj) {\n        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype\n          ? "symbol"\n          : typeof obj;\n      };\n'), g.jsx = (0, f.default)('\n  (function () {\n    var REACT_ELEMENT_TYPE = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;\n\n    return function createRawReactElement (type, props, key, children) {\n      var defaultProps = type && type.defaultProps;\n      var childrenLength = arguments.length - 3;\n\n      if (!props && childrenLength !== 0) {\n        // If we\'re going to assign props.children, we create a new object now\n        // to avoid mutating defaultProps.\n        props = {};\n      }\n      if (props && defaultProps) {\n        for (var propName in defaultProps) {\n          if (props[propName] === void 0) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      } else if (!props) {\n        props = defaultProps || {};\n      }\n\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 3];\n        }\n        props.children = childArray;\n      }\n\n      return {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key === undefined ? null : \'\' + key,\n        ref: null,\n        props: props,\n        _owner: null,\n      };\n    };\n\n  })()\n'), g.asyncIterator = (0, f.default)('\n  (function (iterable) {\n    if (typeof Symbol === "function") {\n      if (Symbol.asyncIterator) {\n        var method = iterable[Symbol.asyncIterator];\n        if (method != null) return method.call(iterable);\n      }\n      if (Symbol.iterator) {\n        return iterable[Symbol.iterator]();\n      }\n    }\n    throw new TypeError("Object is not async iterable");\n  })\n'), g.asyncGenerator = (0, f.default)('\n  (function () {\n    function AwaitValue(value) {\n      this.value = value;\n    }\n\n    function AsyncGenerator(gen) {\n      var front, back;\n\n      function send(key, arg) {\n        return new Promise(function (resolve, reject) {\n          var request = {\n            key: key,\n            arg: arg,\n            resolve: resolve,\n            reject: reject,\n            next: null\n          };\n\n          if (back) {\n            back = back.next = request;\n          } else {\n            front = back = request;\n            resume(key, arg);\n          }\n        });\n      }\n\n      function resume(key, arg) {\n        try {\n          var result = gen[key](arg)\n          var value = result.value;\n          if (value instanceof AwaitValue) {\n            Promise.resolve(value.value).then(\n              function (arg) { resume("next", arg); },\n              function (arg) { resume("throw", arg); });\n          } else {\n            settle(result.done ? "return" : "normal", result.value);\n          }\n        } catch (err) {\n          settle("throw", err);\n        }\n      }\n\n      function settle(type, value) {\n        switch (type) {\n          case "return":\n            front.resolve({ value: value, done: true });\n            break;\n          case "throw":\n            front.reject(value);\n            break;\n          default:\n            front.resolve({ value: value, done: false });\n            break;\n        }\n\n        front = front.next;\n        if (front) {\n          resume(front.key, front.arg);\n        } else {\n          back = null;\n        }\n      }\n\n      this._invoke = send;\n\n      // Hide "return" method if generator return is not supported\n      if (typeof gen.return !== "function") {\n        this.return = undefined;\n      }\n    }\n\n    if (typeof Symbol === "function" && Symbol.asyncIterator) {\n      AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; };\n    }\n\n    AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };\n    AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };\n    AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };\n\n    return {\n      wrap: function (fn) {\n        return function () {\n          return new AsyncGenerator(fn.apply(this, arguments));\n        };\n      },\n      await: function (value) {\n        return new AwaitValue(value);\n      }\n    };\n\n  })()\n'), g.asyncGeneratorDelegate = (0, f.default)('\n  (function (inner, awaitWrap) {\n    var iter = {}, waiting = false;\n\n    function pump(key, value) {\n      waiting = true;\n      value = new Promise(function (resolve) { resolve(inner[key](value)); });\n      return { done: false, value: awaitWrap(value) };\n    };\n\n    if (typeof Symbol === "function" && Symbol.iterator) {\n      iter[Symbol.iterator] = function () { return this; };\n    }\n\n    iter.next = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n      return pump("next", value);\n    };\n\n    if (typeof inner.throw === "function") {\n      iter.throw = function (value) {\n        if (waiting) {\n          waiting = false;\n          throw value;\n        }\n        return pump("throw", value);\n      };\n    }\n\n    if (typeof inner.return === "function") {\n      iter.return = function (value) {\n        return pump("return", value);\n      };\n    }\n\n    return iter;\n  })\n'), g.asyncToGenerator = (0, f.default)('\n  (function (fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step("next", value);\n            }, function (err) {\n              step("throw", err);\n            });\n          }\n        }\n\n        return step("next");\n      });\n    };\n  })\n'), g.classCallCheck = (0, f.default)('\n  (function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError("Cannot call a class as a function");\n    }\n  });\n'), g.createClass = (0, f.default)('\n  (function() {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i ++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  })()\n'), g.defineEnumerableProperties = (0, f.default)('\n  (function (obj, descs) {\n    for (var key in descs) {\n      var desc = descs[key];\n      desc.configurable = desc.enumerable = true;\n      if ("value" in desc) desc.writable = true;\n      Object.defineProperty(obj, key, desc);\n    }\n    return obj;\n  })\n'), g.defaults = (0, f.default)("\n  (function (obj, defaults) {\n    var keys = Object.getOwnPropertyNames(defaults);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\n      if (value && value.configurable && obj[key] === undefined) {\n        Object.defineProperty(obj, key, value);\n      }\n    }\n    return obj;\n  })\n"), g.defineProperty = (0, f.default)("\n  (function (obj, key, value) {\n    // Shortcircuit the slow defineProperty path when possible.\n    // We are trying to avoid issues where setters defined on the\n    // prototype cause side effects under the fast path of simple\n    // assignment. By checking for existence of the property with\n    // the in operator, we can optimize most of this overhead away.\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  });\n"), g.extends = (0, f.default)("\n  Object.assign || (function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  })\n"), g.get = (0, f.default)('\n  (function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if ("value" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  });\n'), g.inherits = (0, f.default)('\n  (function (subClass, superClass) {\n    if (typeof superClass !== "function" && superClass !== null) {\n      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  })\n'), g.instanceof = (0, f.default)('\n  (function (left, right) {\n    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  });\n'), g.interopRequireDefault = (0, f.default)("\n  (function (obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  })\n"), g.interopRequireWildcard = (0, f.default)("\n  (function (obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n      newObj.default = obj;\n      return newObj;\n    }\n  })\n"), g.newArrowCheck = (0, f.default)('\n  (function (innerThis, boundThis) {\n    if (innerThis !== boundThis) {\n      throw new TypeError("Cannot instantiate an arrow function");\n    }\n  });\n'), g.objectDestructuringEmpty = (0, f.default)('\n  (function (obj) {\n    if (obj == null) throw new TypeError("Cannot destructure undefined");\n  });\n'), g.objectWithoutProperties = (0, f.default)("\n  (function (obj, keys) {\n    var target = {};\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n    return target;\n  })\n"), g.possibleConstructorReturn = (0, f.default)('\n  (function (self, call) {\n    if (!self) {\n      throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n    }\n    return call && (typeof call === "object" || typeof call === "function") ? call : self;\n  });\n'), g.selfGlobal = (0, f.default)('\n  typeof global === "undefined" ? self : global\n'), g.set = (0, f.default)('\n  (function set(object, property, value, receiver) {\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent !== null) {\n        set(parent, property, value, receiver);\n      }\n    } else if ("value" in desc && desc.writable) {\n      desc.value = value;\n    } else {\n      var setter = desc.set;\n\n      if (setter !== undefined) {\n        setter.call(receiver, value);\n      }\n    }\n\n    return value;\n  });\n'), g.slicedToArray = (0, f.default)('\n  (function () {\n    // Broken out into a separate function to avoid deoptimizations due to the try/catch for the\n    // array iterator case.\n    function sliceIterator(arr, i) {\n      // this is an expanded form of `for...of` that properly supports abrupt completions of\n      // iterators etc. variable names have been minimised to reduce the size of this massive\n      // helper. sometimes spec compliancy is annoying :(\n      //\n      // _n = _iteratorNormalCompletion\n      // _d = _didIteratorError\n      // _e = _iteratorError\n      // _i = _iterator\n      // _s = _step\n\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i["return"]) _i["return"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError("Invalid attempt to destructure non-iterable instance");\n      }\n    };\n  })();\n'), g.slicedToArrayLoose = (0, f.default)('\n  (function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      var _arr = [];\n      for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n        _arr.push(_step.value);\n        if (i && _arr.length === i) break;\n      }\n      return _arr;\n    } else {\n      throw new TypeError("Invalid attempt to destructure non-iterable instance");\n    }\n  });\n'), g.taggedTemplateLiteral = (0, f.default)("\n  (function (strings, raw) {\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: { value: Object.freeze(raw) }\n    }));\n  });\n"), g.taggedTemplateLiteralLoose = (0, f.default)("\n  (function (strings, raw) {\n    strings.raw = raw;\n    return strings;\n  });\n"), g.temporalRef = (0, f.default)('\n  (function (val, name, undef) {\n    if (val === undef) {\n      throw new ReferenceError(name + " is not defined - temporal dead zone");\n    } else {\n      return val;\n    }\n  })\n'), g.temporalUndefined = (0, f.default)("\n  ({})\n"), g.toArray = (0, f.default)("\n  (function (arr) {\n    return Array.isArray(arr) ? arr : Array.from(arr);\n  });\n"), g.toConsumableArray = (0, f.default)("\n  (function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  });\n"), c.exports = b.default;
  }), a.registerDynamic("d", ["15", "14"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      var b = i.default[a];if (!b) throw new ReferenceError("Unknown helper " + a);return b().expression;
    }this || self;b.__esModule = !0, b.list = void 0;var f = a("15"),
        g = d(f);b.get = e;var h = a("14"),
        i = d(h);b.list = (0, g.default)(i.default).map(function (a) {
      return a.replace(/^_/, "");
    }).filter(function (a) {
      return "__esModule" !== a;
    });b.default = e;
  }), a.registerDynamic("16", ["17", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b) {
      var c = a.node,
          d = c.source ? c.source.value : null,
          e = b.metadata.modules.exports,
          f = a.get("declaration");if (f.isStatement()) {
        var g = f.getBindingIdentifiers();for (var h in g) e.exported.push(h), e.specifiers.push({ kind: "local", local: h, exported: a.isExportDefaultDeclaration() ? "default" : h });
      }if (a.isExportNamedDeclaration() && c.specifiers) for (var j = c.specifiers, l = Array.isArray(j), m = 0, j = l ? j : (0, i.default)(j);;) {
        var n;if (l) {
          if (m >= j.length) break;n = j[m++];
        } else {
          if (m = j.next(), m.done) break;n = m.value;
        }var o = n,
            p = o.exported.name;e.exported.push(p), k.isExportDefaultSpecifier(o) && e.specifiers.push({ kind: "external", local: p, exported: p, source: d }), k.isExportNamespaceSpecifier(o) && e.specifiers.push({ kind: "external-namespace", exported: p, source: d });var q = o.local;q && (d && e.specifiers.push({ kind: "external", local: q.name, exported: p, source: d }), d || e.specifiers.push({ kind: "local", local: q.name, exported: p }));
      }a.isExportAllDeclaration() && e.specifiers.push({ kind: "external-all", source: d });
    }function g(a) {
      a.skip();
    }a("c"), this || self;b.__esModule = !0, b.ImportDeclaration = b.ModuleDeclaration = void 0;var h = a("17"),
        i = e(h);b.ExportDeclaration = f, b.Scope = g;var j = a("11"),
        k = d(j);b.ModuleDeclaration = { enter: function (a, b) {
        var c = a.node;c.source && (c.source.value = b.resolveModuleSource(c.source.value));
      } }, b.ImportDeclaration = { exit: function (a, b) {
        var c = a.node,
            d = [],
            e = [];b.metadata.modules.imports.push({ source: c.source.value, imported: e, specifiers: d });for (var f = a.get("specifiers"), g = Array.isArray(f), h = 0, f = g ? f : (0, i.default)(f);;) {
          var j;if (g) {
            if (h >= f.length) break;j = f[h++];
          } else {
            if (h = f.next(), h.done) break;j = h.value;
          }var k = j,
              l = k.node.local.name;if (k.isImportDefaultSpecifier() && (e.push("default"), d.push({ kind: "named", imported: "default", local: l })), k.isImportSpecifier()) {
            var m = k.node.imported.name;e.push(m), d.push({ kind: "named", imported: m, local: l });
          }k.isImportNamespaceSpecifier() && (e.push("*"), d.push({ kind: "namespace", local: l }));
        }
      } };
  }), a.registerDynamic("18", ["19", "1a", "1b"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return new h(a, "base64").toString();
    }function e(a) {
      return a.split(",").pop();
    }function f(a, c) {
      var d = b.mapFileCommentRegex.exec(a),
          e = d[1] || d[2],
          f = j.resolve(c, e);try {
        return i.readFileSync(f, "utf8");
      } catch (a) {
        throw new Error("An error occurred while trying to read the map file at " + f + "\n" + a);
      }
    }function g(a, b) {
      b = b || {}, b.isFileComment && (a = f(a, b.commentFileDir)), b.hasComment && (a = e(a)), b.isEncoded && (a = d(a)), (b.isJSON || b.isEncoded) && (a = JSON.parse(a)), this.sourcemap = a;
    }var h = a("1b"),
        i = (this || self, a("19")),
        j = a("1a");Object.defineProperty(b, "commentRegex", { get: function () {
        return (/^\s*\/(?:\/|\*)[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/gm
        );
      } }), Object.defineProperty(b, "mapFileCommentRegex", { get: function () {
        return (/(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/){1}[ \t]*$)/gm
        );
      } }), g.prototype.toJSON = function (a) {
      return JSON.stringify(this.sourcemap, null, a);
    }, g.prototype.toBase64 = function () {
      var a = this.toJSON();return new h(a).toString("base64");
    }, g.prototype.toComment = function (a) {
      var b = this.toBase64(),
          c = "sourceMappingURL=data:application/json;charset=utf-8;base64," + b;return a && a.multiline ? "/*# " + c + " */" : "//# " + c;
    }, g.prototype.toObject = function () {
      return JSON.parse(this.toJSON());
    }, g.prototype.addProperty = function (a, b) {
      if (this.sourcemap.hasOwnProperty(a)) throw new Error("property %s already exists on the sourcemap, use set property instead");return this.setProperty(a, b);
    }, g.prototype.setProperty = function (a, b) {
      return this.sourcemap[a] = b, this;
    }, g.prototype.getProperty = function (a) {
      return this.sourcemap[a];
    }, b.fromObject = function (a) {
      return new g(a);
    }, b.fromJSON = function (a) {
      return new g(a, { isJSON: !0 });
    }, b.fromBase64 = function (a) {
      return new g(a, { isEncoded: !0 });
    }, b.fromComment = function (a) {
      return a = a.replace(/^\/\*/g, "//").replace(/\*\/$/g, ""), new g(a, { isEncoded: !0, hasComment: !0 });
    }, b.fromMapFileComment = function (a, b) {
      return new g(a, { commentFileDir: b, isFileComment: !0, isJSON: !0 });
    }, b.fromSource = function (a) {
      var c = a.match(b.commentRegex);return c ? b.fromComment(c.pop()) : null;
    }, b.fromMapFileSource = function (a, c) {
      var d = a.match(b.mapFileCommentRegex);return d ? b.fromMapFileComment(d.pop(), c) : null;
    }, b.removeComments = function (a) {
      return a.replace(b.commentRegex, "");
    }, b.removeMapFileComments = function (a) {
      return a.replace(b.mapFileCommentRegex, "");
    }, b.generateMapFileComment = function (a, b) {
      var c = "sourceMappingURL=" + a;return b && b.multiline ? "/*# " + c + " */" : "//# " + c;
    };
  }), a.registerDynamic("1c", ["1f", "20", "21", "1d", "1e", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var e = a("1f"),
        f = d(e),
        g = a("20"),
        h = d(g),
        i = a("21"),
        j = d(i),
        k = a("1d"),
        l = d(k),
        m = a("1e"),
        n = (d(m), function (a) {
      function b(c, d) {
        var e = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};(0, f.default)(this, b);var g = (0, h.default)(this, a.call(this));return g.plugin = d, g.key = d.key, g.file = c, g.opts = e, g;
      }return (0, j.default)(b, a), b.prototype.addHelper = function () {
        var a;return (a = this.file).addHelper.apply(a, arguments);
      }, b.prototype.addImport = function () {
        var a;return (a = this.file).addImport.apply(a, arguments);
      }, b.prototype.getModuleName = function () {
        var a;return (a = this.file).getModuleName.apply(a, arguments);
      }, b.prototype.buildCodeFrameError = function () {
        var a;return (a = this.file).buildCodeFrameError.apply(a, arguments);
      }, b;
    }(l.default));b.default = n, c.exports = b.default;
  }), a.registerDynamic("22", [], !0, function (a, b, c) {
    "use strict";
    this || self;c.exports = Number.isNaN || function (a) {
      return a !== a;
    };
  }), a.registerDynamic("23", ["22"], !0, function (a, b, c) {
    "use strict";
    var d = (this || self, a("22"));c.exports = Number.isFinite || function (a) {
      return !("number" != typeof a || d(a) || a === 1 / 0 || a === -1 / 0);
    };
  }), a.registerDynamic("24", ["23"], !0, function (a, b, c) {
    "use strict";
    var d = (this || self, a("23"));c.exports = function (a, b) {
      if ("string" != typeof a) throw new TypeError("Expected `input` to be a string");if (b < 0 || !d(b)) throw new TypeError("Expected `count` to be a positive finite number");var c = "";do {
        1 & b && (c += a), a += a;
      } while (b >>= 1);return c;
    };
  }), a.registerDynamic("25", ["24"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      var b = 0,
          c = 0,
          d = 0;for (var e in a) {
        var f = a[e],
            g = f[0],
            h = f[1];(g > c || g === c && h > d) && (c = g, d = h, b = Number(e));
      }return b;
    }var e = (this || self, a("24")),
        f = /^(?:( )+|\t+)/;c.exports = function (a) {
      if ("string" != typeof a) throw new TypeError("Expected a string");var b,
          c,
          g = 0,
          h = 0,
          i = 0,
          j = {};a.split(/\n/g).forEach(function (a) {
        if (a) {
          var d,
              e = a.match(f);e ? (d = e[0].length, e[1] ? h++ : g++) : d = 0;var k = d - i;i = d, k ? (c = k > 0, b = j[c ? k : -k], b ? b[0]++ : b = j[k] = [1, 0]) : b && (b[1] += Number(c));
        }
      });var k,
          l,
          m = d(j);return m ? h >= g ? (k = "space", l = e(" ", m)) : (k = "tab", l = e("\t", m)) : (k = null, l = ""), { amount: m, type: k, indent: l };
    };
  }), a.registerDynamic("26", [], !0, function (a, b, c) {
    function d(a, c, e, f, g, h) {
      var i = Math.floor((c - a) / 2) + a,
          j = g(e, f[i], !0);return 0 === j ? i : j > 0 ? c - i > 1 ? d(i, c, e, f, g, h) : h == b.LEAST_UPPER_BOUND ? c < f.length ? c : -1 : i : i - a > 1 ? d(a, i, e, f, g, h) : h == b.LEAST_UPPER_BOUND ? i : a < 0 ? -1 : a;
    }this || self;b.GREATEST_LOWER_BOUND = 1, b.LEAST_UPPER_BOUND = 2, b.search = function (a, c, e, f) {
      if (0 === c.length) return -1;var g = d(-1, c.length, a, c, e, f || b.GREATEST_LOWER_BOUND);if (g < 0) return -1;for (; g - 1 >= 0 && 0 === e(c[g], c[g - 1], !0);) --g;return g;
    };
  }), a.registerDynamic("27", [], !0, function (a, b, c) {
    function d(a, b, c) {
      var d = a[b];a[b] = a[c], a[c] = d;
    }function e(a, b) {
      return Math.round(a + Math.random() * (b - a));
    }function f(a, b, c, g) {
      if (c < g) {
        var h = e(c, g),
            i = c - 1;d(a, h, g);for (var j = a[g], k = c; k < g; k++) b(a[k], j) <= 0 && (i += 1, d(a, i, k));d(a, i + 1, k);var l = i + 1;f(a, b, c, l - 1), f(a, b, l + 1, g);
      }
    }this || self;b.quickSort = function (a, b) {
      f(a, b, 0, a.length - 1);
    };
  }), a.registerDynamic("28", ["29", "26", "2a", "2b", "27"], !0, function (a, b, c) {
    function d(a) {
      var b = a;return "string" == typeof a && (b = JSON.parse(a.replace(/^\)\]\}'/, ""))), null != b.sections ? new g(b) : new e(b);
    }function e(a) {
      var b = a;"string" == typeof a && (b = JSON.parse(a.replace(/^\)\]\}'/, "")));var c = h.getArg(b, "version"),
          d = h.getArg(b, "sources"),
          e = h.getArg(b, "names", []),
          f = h.getArg(b, "sourceRoot", null),
          g = h.getArg(b, "sourcesContent", null),
          i = h.getArg(b, "mappings"),
          k = h.getArg(b, "file", null);if (c != this._version) throw new Error("Unsupported version: " + c);d = d.map(String).map(h.normalize).map(function (a) {
        return f && h.isAbsolute(f) && h.isAbsolute(a) ? h.relative(f, a) : a;
      }), this._names = j.fromArray(e.map(String), !0), this._sources = j.fromArray(d, !0), this.sourceRoot = f, this.sourcesContent = g, this._mappings = i, this.file = k;
    }function f() {
      this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
    }function g(a) {
      var b = a;"string" == typeof a && (b = JSON.parse(a.replace(/^\)\]\}'/, "")));var c = h.getArg(b, "version"),
          e = h.getArg(b, "sections");if (c != this._version) throw new Error("Unsupported version: " + c);this._sources = new j(), this._names = new j();var f = { line: -1, column: 0 };this._sections = e.map(function (a) {
        if (a.url) throw new Error("Support for url field in sections not implemented.");var b = h.getArg(a, "offset"),
            c = h.getArg(b, "line"),
            e = h.getArg(b, "column");if (c < f.line || c === f.line && e < f.column) throw new Error("Section offsets must be ordered and non-overlapping.");return f = b, { generatedOffset: { generatedLine: c + 1, generatedColumn: e + 1 }, consumer: new d(h.getArg(a, "map")) };
      });
    }var h = (this || self, a("29")),
        i = a("26"),
        j = a("2a").ArraySet,
        k = a("2b"),
        l = a("27").quickSort;d.fromSourceMap = function (a) {
      return e.fromSourceMap(a);
    }, d.prototype._version = 3, d.prototype.__generatedMappings = null, Object.defineProperty(d.prototype, "_generatedMappings", { get: function () {
        return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
      } }), d.prototype.__originalMappings = null, Object.defineProperty(d.prototype, "_originalMappings", { get: function () {
        return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
      } }), d.prototype._charIsMappingSeparator = function (a, b) {
      var c = a.charAt(b);return ";" === c || "," === c;
    }, d.prototype._parseMappings = function (a, b) {
      throw new Error("Subclasses must implement _parseMappings");
    }, d.GENERATED_ORDER = 1, d.ORIGINAL_ORDER = 2, d.GREATEST_LOWER_BOUND = 1, d.LEAST_UPPER_BOUND = 2, d.prototype.eachMapping = function (a, b, c) {
      var e,
          f = b || null,
          g = c || d.GENERATED_ORDER;switch (g) {case d.GENERATED_ORDER:
          e = this._generatedMappings;break;case d.ORIGINAL_ORDER:
          e = this._originalMappings;break;default:
          throw new Error("Unknown order of iteration.");}var i = this.sourceRoot;e.map(function (a) {
        var b = null === a.source ? null : this._sources.at(a.source);return null != b && null != i && (b = h.join(i, b)), { source: b, generatedLine: a.generatedLine, generatedColumn: a.generatedColumn, originalLine: a.originalLine, originalColumn: a.originalColumn, name: null === a.name ? null : this._names.at(a.name) };
      }, this).forEach(a, f);
    }, d.prototype.allGeneratedPositionsFor = function (a) {
      var b = h.getArg(a, "line"),
          c = { source: h.getArg(a, "source"), originalLine: b, originalColumn: h.getArg(a, "column", 0) };if (null != this.sourceRoot && (c.source = h.relative(this.sourceRoot, c.source)), !this._sources.has(c.source)) return [];c.source = this._sources.indexOf(c.source);var d = [],
          e = this._findMapping(c, this._originalMappings, "originalLine", "originalColumn", h.compareByOriginalPositions, i.LEAST_UPPER_BOUND);if (e >= 0) {
        var f = this._originalMappings[e];if (void 0 === a.column) for (var g = f.originalLine; f && f.originalLine === g;) d.push({ line: h.getArg(f, "generatedLine", null), column: h.getArg(f, "generatedColumn", null), lastColumn: h.getArg(f, "lastGeneratedColumn", null) }), f = this._originalMappings[++e];else for (var j = f.originalColumn; f && f.originalLine === b && f.originalColumn == j;) d.push({ line: h.getArg(f, "generatedLine", null), column: h.getArg(f, "generatedColumn", null), lastColumn: h.getArg(f, "lastGeneratedColumn", null) }), f = this._originalMappings[++e];
      }return d;
    }, b.SourceMapConsumer = d, e.prototype = Object.create(d.prototype), e.prototype.consumer = d, e.fromSourceMap = function (a) {
      var b = Object.create(e.prototype),
          c = b._names = j.fromArray(a._names.toArray(), !0),
          d = b._sources = j.fromArray(a._sources.toArray(), !0);b.sourceRoot = a._sourceRoot, b.sourcesContent = a._generateSourcesContent(b._sources.toArray(), b.sourceRoot), b.file = a._file;for (var g = a._mappings.toArray().slice(), i = b.__generatedMappings = [], k = b.__originalMappings = [], m = 0, n = g.length; m < n; m++) {
        var o = g[m],
            p = new f();p.generatedLine = o.generatedLine, p.generatedColumn = o.generatedColumn, o.source && (p.source = d.indexOf(o.source), p.originalLine = o.originalLine, p.originalColumn = o.originalColumn, o.name && (p.name = c.indexOf(o.name)), k.push(p)), i.push(p);
      }return l(b.__originalMappings, h.compareByOriginalPositions), b;
    }, e.prototype._version = 3, Object.defineProperty(e.prototype, "sources", { get: function () {
        return this._sources.toArray().map(function (a) {
          return null != this.sourceRoot ? h.join(this.sourceRoot, a) : a;
        }, this);
      } }), e.prototype._parseMappings = function (a, b) {
      for (var c, d, e, g, i, j = 1, m = 0, n = 0, o = 0, p = 0, q = 0, r = a.length, s = 0, t = {}, u = {}, v = [], w = []; s < r;) if (";" === a.charAt(s)) j++, s++, m = 0;else if ("," === a.charAt(s)) s++;else {
        for (c = new f(), c.generatedLine = j, g = s; g < r && !this._charIsMappingSeparator(a, g); g++);if (d = a.slice(s, g), e = t[d]) s += d.length;else {
          for (e = []; s < g;) k.decode(a, s, u), i = u.value, s = u.rest, e.push(i);if (2 === e.length) throw new Error("Found a source, but no line and column");if (3 === e.length) throw new Error("Found a source and line, but no column");t[d] = e;
        }c.generatedColumn = m + e[0], m = c.generatedColumn, e.length > 1 && (c.source = p + e[1], p += e[1], c.originalLine = n + e[2], n = c.originalLine, c.originalLine += 1, c.originalColumn = o + e[3], o = c.originalColumn, e.length > 4 && (c.name = q + e[4], q += e[4])), w.push(c), "number" == typeof c.originalLine && v.push(c);
      }l(w, h.compareByGeneratedPositionsDeflated), this.__generatedMappings = w, l(v, h.compareByOriginalPositions), this.__originalMappings = v;
    }, e.prototype._findMapping = function (a, b, c, d, e, f) {
      if (a[c] <= 0) throw new TypeError("Line must be greater than or equal to 1, got " + a[c]);if (a[d] < 0) throw new TypeError("Column must be greater than or equal to 0, got " + a[d]);return i.search(a, b, e, f);
    }, e.prototype.computeColumnSpans = function () {
      for (var a = 0; a < this._generatedMappings.length; ++a) {
        var b = this._generatedMappings[a];if (a + 1 < this._generatedMappings.length) {
          var c = this._generatedMappings[a + 1];if (b.generatedLine === c.generatedLine) {
            b.lastGeneratedColumn = c.generatedColumn - 1;continue;
          }
        }b.lastGeneratedColumn = 1 / 0;
      }
    }, e.prototype.originalPositionFor = function (a) {
      var b = { generatedLine: h.getArg(a, "line"), generatedColumn: h.getArg(a, "column") },
          c = this._findMapping(b, this._generatedMappings, "generatedLine", "generatedColumn", h.compareByGeneratedPositionsDeflated, h.getArg(a, "bias", d.GREATEST_LOWER_BOUND));if (c >= 0) {
        var e = this._generatedMappings[c];if (e.generatedLine === b.generatedLine) {
          var f = h.getArg(e, "source", null);null !== f && (f = this._sources.at(f), null != this.sourceRoot && (f = h.join(this.sourceRoot, f)));var g = h.getArg(e, "name", null);return null !== g && (g = this._names.at(g)), { source: f, line: h.getArg(e, "originalLine", null), column: h.getArg(e, "originalColumn", null), name: g };
        }
      }return { source: null, line: null, column: null, name: null };
    }, e.prototype.hasContentsOfAllSources = function () {
      return !!this.sourcesContent && this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function (a) {
        return null == a;
      });
    }, e.prototype.sourceContentFor = function (a, b) {
      if (!this.sourcesContent) return null;if (null != this.sourceRoot && (a = h.relative(this.sourceRoot, a)), this._sources.has(a)) return this.sourcesContent[this._sources.indexOf(a)];var c;if (null != this.sourceRoot && (c = h.urlParse(this.sourceRoot))) {
        var d = a.replace(/^file:\/\//, "");if ("file" == c.scheme && this._sources.has(d)) return this.sourcesContent[this._sources.indexOf(d)];if ((!c.path || "/" == c.path) && this._sources.has("/" + a)) return this.sourcesContent[this._sources.indexOf("/" + a)];
      }if (b) return null;throw new Error('"' + a + '" is not in the SourceMap.');
    }, e.prototype.generatedPositionFor = function (a) {
      var b = h.getArg(a, "source");if (null != this.sourceRoot && (b = h.relative(this.sourceRoot, b)), !this._sources.has(b)) return { line: null, column: null, lastColumn: null };b = this._sources.indexOf(b);var c = { source: b, originalLine: h.getArg(a, "line"), originalColumn: h.getArg(a, "column") },
          e = this._findMapping(c, this._originalMappings, "originalLine", "originalColumn", h.compareByOriginalPositions, h.getArg(a, "bias", d.GREATEST_LOWER_BOUND));if (e >= 0) {
        var f = this._originalMappings[e];if (f.source === c.source) return { line: h.getArg(f, "generatedLine", null), column: h.getArg(f, "generatedColumn", null), lastColumn: h.getArg(f, "lastGeneratedColumn", null) };
      }return { line: null, column: null, lastColumn: null };
    }, b.BasicSourceMapConsumer = e, g.prototype = Object.create(d.prototype), g.prototype.constructor = d, g.prototype._version = 3, Object.defineProperty(g.prototype, "sources", { get: function () {
        for (var a = [], b = 0; b < this._sections.length; b++) for (var c = 0; c < this._sections[b].consumer.sources.length; c++) a.push(this._sections[b].consumer.sources[c]);return a;
      } }), g.prototype.originalPositionFor = function (a) {
      var b = { generatedLine: h.getArg(a, "line"), generatedColumn: h.getArg(a, "column") },
          c = i.search(b, this._sections, function (a, b) {
        var c = a.generatedLine - b.generatedOffset.generatedLine;return c || a.generatedColumn - b.generatedOffset.generatedColumn;
      }),
          d = this._sections[c];return d ? d.consumer.originalPositionFor({ line: b.generatedLine - (d.generatedOffset.generatedLine - 1), column: b.generatedColumn - (d.generatedOffset.generatedLine === b.generatedLine ? d.generatedOffset.generatedColumn - 1 : 0), bias: a.bias }) : { source: null, line: null, column: null, name: null };
    }, g.prototype.hasContentsOfAllSources = function () {
      return this._sections.every(function (a) {
        return a.consumer.hasContentsOfAllSources();
      });
    }, g.prototype.sourceContentFor = function (a, b) {
      for (var c = 0; c < this._sections.length; c++) {
        var d = this._sections[c],
            e = d.consumer.sourceContentFor(a, !0);if (e) return e;
      }if (b) return null;throw new Error('"' + a + '" is not in the SourceMap.');
    }, g.prototype.generatedPositionFor = function (a) {
      for (var b = 0; b < this._sections.length; b++) {
        var c = this._sections[b];if (-1 !== c.consumer.sources.indexOf(h.getArg(a, "source"))) {
          var d = c.consumer.generatedPositionFor(a);if (d) {
            return { line: d.line + (c.generatedOffset.generatedLine - 1), column: d.column + (c.generatedOffset.generatedLine === d.line ? c.generatedOffset.generatedColumn - 1 : 0) };
          }
        }
      }return { line: null, column: null };
    }, g.prototype._parseMappings = function (a, b) {
      this.__generatedMappings = [], this.__originalMappings = [];for (var c = 0; c < this._sections.length; c++) for (var d = this._sections[c], e = d.consumer._generatedMappings, f = 0; f < e.length; f++) {
        var g = e[f],
            i = d.consumer._sources.at(g.source);null !== d.consumer.sourceRoot && (i = h.join(d.consumer.sourceRoot, i)), this._sources.add(i), i = this._sources.indexOf(i);var j = d.consumer._names.at(g.name);this._names.add(j), j = this._names.indexOf(j);var k = { source: i, generatedLine: g.generatedLine + (d.generatedOffset.generatedLine - 1), generatedColumn: g.generatedColumn + (d.generatedOffset.generatedLine === g.generatedLine ? d.generatedOffset.generatedColumn - 1 : 0), originalLine: g.originalLine, originalColumn: g.originalColumn, name: j };this.__generatedMappings.push(k), "number" == typeof k.originalLine && this.__originalMappings.push(k);
      }l(this.__generatedMappings, h.compareByGeneratedPositionsDeflated), l(this.__originalMappings, h.compareByOriginalPositions);
    }, b.IndexedSourceMapConsumer = g;
  }), a.registerDynamic("2c", [], !0, function (a, b, c) {
    var d = (this || self, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""));b.encode = function (a) {
      if (0 <= a && a < d.length) return d[a];throw new TypeError("Must be between 0 and 63: " + a);
    }, b.decode = function (a) {
      var b = 65,
          c = 97,
          d = 48;return b <= a && a <= 90 ? a - b : c <= a && a <= 122 ? a - c + 26 : d <= a && a <= 57 ? a - d + 52 : 43 == a ? 62 : 47 == a ? 63 : -1;
    };
  }), a.registerDynamic("2b", ["2c"], !0, function (a, b, c) {
    function d(a) {
      return a < 0 ? 1 + (-a << 1) : 0 + (a << 1);
    }function e(a) {
      var b = 1 == (1 & a),
          c = a >> 1;return b ? -c : c;
    }var f = (this || self, a("2c")),
        g = 5,
        h = 1 << g,
        i = h - 1,
        j = h;b.encode = function (a) {
      var b,
          c = "",
          e = d(a);do {
        b = e & i, e >>>= g, e > 0 && (b |= j), c += f.encode(b);
      } while (e > 0);return c;
    }, b.decode = function (a, b, c) {
      var d,
          h,
          k = a.length,
          l = 0,
          m = 0;do {
        if (b >= k) throw new Error("Expected more digits in base 64 VLQ value.");if (-1 === (h = f.decode(a.charCodeAt(b++)))) throw new Error("Invalid base64 digit: " + a.charAt(b - 1));d = !!(h & j), h &= i, l += h << m, m += g;
      } while (d);c.value = e(l), c.rest = b;
    };
  }), a.registerDynamic("2a", ["29"], !0, function (a, b, c) {
    function d() {
      this._array = [], this._set = Object.create(null);
    }var e = (this || self, a("29")),
        f = Object.prototype.hasOwnProperty;d.fromArray = function (a, b) {
      for (var c = new d(), e = 0, f = a.length; e < f; e++) c.add(a[e], b);return c;
    }, d.prototype.size = function () {
      return Object.getOwnPropertyNames(this._set).length;
    }, d.prototype.add = function (a, b) {
      var c = e.toSetString(a),
          d = f.call(this._set, c),
          g = this._array.length;d && !b || this._array.push(a), d || (this._set[c] = g);
    }, d.prototype.has = function (a) {
      var b = e.toSetString(a);return f.call(this._set, b);
    }, d.prototype.indexOf = function (a) {
      var b = e.toSetString(a);if (f.call(this._set, b)) return this._set[b];throw new Error('"' + a + '" is not in the set.');
    }, d.prototype.at = function (a) {
      if (a >= 0 && a < this._array.length) return this._array[a];throw new Error("No element indexed by " + a);
    }, d.prototype.toArray = function () {
      return this._array.slice();
    }, b.ArraySet = d;
  }), a.registerDynamic("2d", ["29"], !0, function (a, b, c) {
    function d(a, b) {
      var c = a.generatedLine,
          d = b.generatedLine,
          e = a.generatedColumn,
          g = b.generatedColumn;return d > c || d == c && g >= e || f.compareByGeneratedPositionsInflated(a, b) <= 0;
    }function e() {
      this._array = [], this._sorted = !0, this._last = { generatedLine: -1, generatedColumn: 0 };
    }var f = (this || self, a("29"));e.prototype.unsortedForEach = function (a, b) {
      this._array.forEach(a, b);
    }, e.prototype.add = function (a) {
      d(this._last, a) ? (this._last = a, this._array.push(a)) : (this._sorted = !1, this._array.push(a));
    }, e.prototype.toArray = function () {
      return this._sorted || (this._array.sort(f.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
    }, b.MappingList = e;
  }), a.registerDynamic("2e", ["2b", "29", "2a", "2d"], !0, function (a, b, c) {
    function d(a) {
      a || (a = {}), this._file = f.getArg(a, "file", null), this._sourceRoot = f.getArg(a, "sourceRoot", null), this._skipValidation = f.getArg(a, "skipValidation", !1), this._sources = new g(), this._names = new g(), this._mappings = new h(), this._sourcesContents = null;
    }var e = (this || self, a("2b")),
        f = a("29"),
        g = a("2a").ArraySet,
        h = a("2d").MappingList;d.prototype._version = 3, d.fromSourceMap = function (a) {
      var b = a.sourceRoot,
          c = new d({ file: a.file, sourceRoot: b });return a.eachMapping(function (a) {
        var d = { generated: { line: a.generatedLine, column: a.generatedColumn } };null != a.source && (d.source = a.source, null != b && (d.source = f.relative(b, d.source)), d.original = { line: a.originalLine, column: a.originalColumn }, null != a.name && (d.name = a.name)), c.addMapping(d);
      }), a.sources.forEach(function (b) {
        var d = a.sourceContentFor(b);null != d && c.setSourceContent(b, d);
      }), c;
    }, d.prototype.addMapping = function (a) {
      var b = f.getArg(a, "generated"),
          c = f.getArg(a, "original", null),
          d = f.getArg(a, "source", null),
          e = f.getArg(a, "name", null);this._skipValidation || this._validateMapping(b, c, d, e), null != d && (d = String(d), this._sources.has(d) || this._sources.add(d)), null != e && (e = String(e), this._names.has(e) || this._names.add(e)), this._mappings.add({ generatedLine: b.line, generatedColumn: b.column, originalLine: null != c && c.line, originalColumn: null != c && c.column, source: d, name: e });
    }, d.prototype.setSourceContent = function (a, b) {
      var c = a;null != this._sourceRoot && (c = f.relative(this._sourceRoot, c)), null != b ? (this._sourcesContents || (this._sourcesContents = Object.create(null)), this._sourcesContents[f.toSetString(c)] = b) : this._sourcesContents && (delete this._sourcesContents[f.toSetString(c)], 0 === Object.keys(this._sourcesContents).length && (this._sourcesContents = null));
    }, d.prototype.applySourceMap = function (a, b, c) {
      var d = b;if (null == b) {
        if (null == a.file) throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');d = a.file;
      }var e = this._sourceRoot;null != e && (d = f.relative(e, d));var h = new g(),
          i = new g();this._mappings.unsortedForEach(function (b) {
        if (b.source === d && null != b.originalLine) {
          var g = a.originalPositionFor({ line: b.originalLine, column: b.originalColumn });null != g.source && (b.source = g.source, null != c && (b.source = f.join(c, b.source)), null != e && (b.source = f.relative(e, b.source)), b.originalLine = g.line, b.originalColumn = g.column, null != g.name && (b.name = g.name));
        }var j = b.source;null == j || h.has(j) || h.add(j);var k = b.name;null == k || i.has(k) || i.add(k);
      }, this), this._sources = h, this._names = i, a.sources.forEach(function (b) {
        var d = a.sourceContentFor(b);null != d && (null != c && (b = f.join(c, b)), null != e && (b = f.relative(e, b)), this.setSourceContent(b, d));
      }, this);
    }, d.prototype._validateMapping = function (a, b, c, d) {
      if ((!(a && "line" in a && "column" in a && a.line > 0 && a.column >= 0) || b || c || d) && !(a && "line" in a && "column" in a && b && "line" in b && "column" in b && a.line > 0 && a.column >= 0 && b.line > 0 && b.column >= 0 && c)) throw new Error("Invalid mapping: " + JSON.stringify({ generated: a, source: c, original: b, name: d }));
    }, d.prototype._serializeMappings = function () {
      for (var a, b, c, d, g = 0, h = 1, i = 0, j = 0, k = 0, l = 0, m = "", n = this._mappings.toArray(), o = 0, p = n.length; o < p; o++) {
        if (b = n[o], a = "", b.generatedLine !== h) for (g = 0; b.generatedLine !== h;) a += ";", h++;else if (o > 0) {
          if (!f.compareByGeneratedPositionsInflated(b, n[o - 1])) continue;a += ",";
        }a += e.encode(b.generatedColumn - g), g = b.generatedColumn, null != b.source && (d = this._sources.indexOf(b.source), a += e.encode(d - l), l = d, a += e.encode(b.originalLine - 1 - j), j = b.originalLine - 1, a += e.encode(b.originalColumn - i), i = b.originalColumn, null != b.name && (c = this._names.indexOf(b.name), a += e.encode(c - k), k = c)), m += a;
      }return m;
    }, d.prototype._generateSourcesContent = function (a, b) {
      return a.map(function (a) {
        if (!this._sourcesContents) return null;null != b && (a = f.relative(b, a));var c = f.toSetString(a);return Object.prototype.hasOwnProperty.call(this._sourcesContents, c) ? this._sourcesContents[c] : null;
      }, this);
    }, d.prototype.toJSON = function () {
      var a = { version: this._version, sources: this._sources.toArray(), names: this._names.toArray(), mappings: this._serializeMappings() };return null != this._file && (a.file = this._file), null != this._sourceRoot && (a.sourceRoot = this._sourceRoot), this._sourcesContents && (a.sourcesContent = this._generateSourcesContent(a.sources, a.sourceRoot)), a;
    }, d.prototype.toString = function () {
      return JSON.stringify(this.toJSON());
    }, b.SourceMapGenerator = d;
  }), a.registerDynamic("29", [], !0, function (a, b, c) {
    function d(a, b, c) {
      if (b in a) return a[b];if (3 === arguments.length) return c;throw new Error('"' + b + '" is a required argument.');
    }function e(a) {
      var b = a.match(r);return b ? { scheme: b[1], auth: b[2], host: b[3], port: b[4], path: b[5] } : null;
    }function f(a) {
      var b = "";return a.scheme && (b += a.scheme + ":"), b += "//", a.auth && (b += a.auth + "@"), a.host && (b += a.host), a.port && (b += ":" + a.port), a.path && (b += a.path), b;
    }function g(a) {
      var c = a,
          d = e(a);if (d) {
        if (!d.path) return a;c = d.path;
      }for (var g, h = b.isAbsolute(c), i = c.split(/\/+/), j = 0, k = i.length - 1; k >= 0; k--) g = i[k], "." === g ? i.splice(k, 1) : ".." === g ? j++ : j > 0 && ("" === g ? (i.splice(k + 1, j), j = 0) : (i.splice(k, 2), j--));return c = i.join("/"), "" === c && (c = h ? "/" : "."), d ? (d.path = c, f(d)) : c;
    }function h(a, b) {
      "" === a && (a = "."), "" === b && (b = ".");var c = e(b),
          d = e(a);if (d && (a = d.path || "/"), c && !c.scheme) return d && (c.scheme = d.scheme), f(c);if (c || b.match(s)) return b;if (d && !d.host && !d.path) return d.host = b, f(d);var h = "/" === b.charAt(0) ? b : g(a.replace(/\/+$/, "") + "/" + b);return d ? (d.path = h, f(d)) : h;
    }function i(a, b) {
      "" === a && (a = "."), a = a.replace(/\/$/, "");for (var c = 0; 0 !== b.indexOf(a + "/");) {
        var d = a.lastIndexOf("/");if (d < 0) return b;if (a = a.slice(0, d), a.match(/^([^\/]+:\/)?\/*$/)) return b;++c;
      }return Array(c + 1).join("../") + b.substr(a.length + 1);
    }function j(a) {
      return a;
    }function k(a) {
      return m(a) ? "$" + a : a;
    }function l(a) {
      return m(a) ? a.slice(1) : a;
    }function m(a) {
      if (!a) return !1;var b = a.length;if (b < 9) return !1;if (95 !== a.charCodeAt(b - 1) || 95 !== a.charCodeAt(b - 2) || 111 !== a.charCodeAt(b - 3) || 116 !== a.charCodeAt(b - 4) || 111 !== a.charCodeAt(b - 5) || 114 !== a.charCodeAt(b - 6) || 112 !== a.charCodeAt(b - 7) || 95 !== a.charCodeAt(b - 8) || 95 !== a.charCodeAt(b - 9)) return !1;for (var c = b - 10; c >= 0; c--) if (36 !== a.charCodeAt(c)) return !1;return !0;
    }function n(a, b, c) {
      var d = a.source - b.source;return 0 !== d ? d : 0 !== (d = a.originalLine - b.originalLine) ? d : 0 !== (d = a.originalColumn - b.originalColumn) || c ? d : 0 !== (d = a.generatedColumn - b.generatedColumn) ? d : (d = a.generatedLine - b.generatedLine, 0 !== d ? d : a.name - b.name);
    }function o(a, b, c) {
      var d = a.generatedLine - b.generatedLine;return 0 !== d ? d : 0 !== (d = a.generatedColumn - b.generatedColumn) || c ? d : 0 !== (d = a.source - b.source) ? d : 0 !== (d = a.originalLine - b.originalLine) ? d : (d = a.originalColumn - b.originalColumn, 0 !== d ? d : a.name - b.name);
    }function p(a, b) {
      return a === b ? 0 : a > b ? 1 : -1;
    }function q(a, b) {
      var c = a.generatedLine - b.generatedLine;return 0 !== c ? c : 0 !== (c = a.generatedColumn - b.generatedColumn) ? c : 0 !== (c = p(a.source, b.source)) ? c : 0 !== (c = a.originalLine - b.originalLine) ? c : (c = a.originalColumn - b.originalColumn, 0 !== c ? c : p(a.name, b.name));
    }this || self;b.getArg = d;var r = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/,
        s = /^data:.+\,.+$/;b.urlParse = e, b.urlGenerate = f, b.normalize = g, b.join = h, b.isAbsolute = function (a) {
      return "/" === a.charAt(0) || !!a.match(r);
    }, b.relative = i;var t = function () {
      return !("__proto__" in Object.create(null));
    }();b.toSetString = t ? j : k, b.fromSetString = t ? j : l, b.compareByOriginalPositions = n, b.compareByGeneratedPositionsDeflated = o, b.compareByGeneratedPositionsInflated = q;
  }), a.registerDynamic("2f", ["2e", "29"], !0, function (a, b, c) {
    function d(a, b, c, d, e) {
      this.children = [], this.sourceContents = {}, this.line = null == a ? null : a, this.column = null == b ? null : b, this.source = null == c ? null : c, this.name = null == e ? null : e, this[h] = !0, null != d && this.add(d);
    }var e = (this || self, a("2e").SourceMapGenerator),
        f = a("29"),
        g = /(\r?\n)/,
        h = "$$$isSourceNode$$$";d.fromStringWithSourceMap = function (a, b, c) {
      function e(a, b) {
        if (null === a || void 0 === a.source) h.add(b);else {
          var e = c ? f.join(c, a.source) : a.source;h.add(new d(a.originalLine, a.originalColumn, e, b, a.name));
        }
      }var h = new d(),
          i = a.split(g),
          j = function () {
        return i.shift() + (i.shift() || "");
      },
          k = 1,
          l = 0,
          m = null;return b.eachMapping(function (a) {
        if (null !== m) {
          if (!(k < a.generatedLine)) {
            var b = i[0],
                c = b.substr(0, a.generatedColumn - l);return i[0] = b.substr(a.generatedColumn - l), l = a.generatedColumn, e(m, c), void (m = a);
          }e(m, j()), k++, l = 0;
        }for (; k < a.generatedLine;) h.add(j()), k++;if (l < a.generatedColumn) {
          var b = i[0];h.add(b.substr(0, a.generatedColumn)), i[0] = b.substr(a.generatedColumn), l = a.generatedColumn;
        }m = a;
      }, this), i.length > 0 && (m && e(m, j()), h.add(i.join(""))), b.sources.forEach(function (a) {
        var d = b.sourceContentFor(a);null != d && (null != c && (a = f.join(c, a)), h.setSourceContent(a, d));
      }), h;
    }, d.prototype.add = function (a) {
      if (Array.isArray(a)) a.forEach(function (a) {
        this.add(a);
      }, this);else {
        if (!a[h] && "string" != typeof a) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + a);a && this.children.push(a);
      }return this;
    }, d.prototype.prepend = function (a) {
      if (Array.isArray(a)) for (var b = a.length - 1; b >= 0; b--) this.prepend(a[b]);else {
        if (!a[h] && "string" != typeof a) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + a);this.children.unshift(a);
      }return this;
    }, d.prototype.walk = function (a) {
      for (var b, c = 0, d = this.children.length; c < d; c++) b = this.children[c], b[h] ? b.walk(a) : "" !== b && a(b, { source: this.source, line: this.line, column: this.column, name: this.name });
    }, d.prototype.join = function (a) {
      var b,
          c,
          d = this.children.length;if (d > 0) {
        for (b = [], c = 0; c < d - 1; c++) b.push(this.children[c]), b.push(a);b.push(this.children[c]), this.children = b;
      }return this;
    }, d.prototype.replaceRight = function (a, b) {
      var c = this.children[this.children.length - 1];return c[h] ? c.replaceRight(a, b) : "string" == typeof c ? this.children[this.children.length - 1] = c.replace(a, b) : this.children.push("".replace(a, b)), this;
    }, d.prototype.setSourceContent = function (a, b) {
      this.sourceContents[f.toSetString(a)] = b;
    }, d.prototype.walkSourceContents = function (a) {
      for (var b = 0, c = this.children.length; b < c; b++) this.children[b][h] && this.children[b].walkSourceContents(a);for (var d = Object.keys(this.sourceContents), b = 0, c = d.length; b < c; b++) a(f.fromSetString(d[b]), this.sourceContents[d[b]]);
    }, d.prototype.toString = function () {
      var a = "";return this.walk(function (b) {
        a += b;
      }), a;
    }, d.prototype.toStringWithSourceMap = function (a) {
      var b = { code: "", line: 1, column: 0 },
          c = new e(a),
          d = !1,
          f = null,
          g = null,
          h = null,
          i = null;return this.walk(function (a, e) {
        b.code += a, null !== e.source && null !== e.line && null !== e.column ? (f === e.source && g === e.line && h === e.column && i === e.name || c.addMapping({ source: e.source, original: { line: e.line, column: e.column }, generated: { line: b.line, column: b.column }, name: e.name }), f = e.source, g = e.line, h = e.column, i = e.name, d = !0) : d && (c.addMapping({ generated: { line: b.line, column: b.column } }), f = null, d = !1);for (var j = 0, k = a.length; j < k; j++) 10 === a.charCodeAt(j) ? (b.line++, b.column = 0, j + 1 === k ? (f = null, d = !1) : d && c.addMapping({ source: e.source, original: { line: e.line, column: e.column }, generated: { line: b.line, column: b.column }, name: e.name })) : b.column++;
      }), this.walkSourceContents(function (a, b) {
        c.setSourceContent(a, b);
      }), { code: b.code, map: c };
    }, b.SourceNode = d;
  }), a.registerDynamic("30", ["2e", "28", "2f"], !0, function (a, b, c) {
    this || self;b.SourceMapGenerator = a("2e").SourceMapGenerator, b.SourceMapConsumer = a("28").SourceMapConsumer, b.SourceNode = a("2f").SourceNode;
  }), a.registerDynamic("31", ["15", "32", "1f", "30"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("15"),
        f = d(e),
        g = a("32"),
        h = d(g),
        i = a("1f"),
        j = d(i),
        k = a("30"),
        l = d(k),
        m = function () {
      function a(b, c) {
        (0, j.default)(this, a), this._cachedMap = null, this._code = c, this._opts = b, this._rawMappings = [];
      }return a.prototype.get = function () {
        if (!this._cachedMap) {
          var a = this._cachedMap = new l.default.SourceMapGenerator({ file: this._opts.sourceMapTarget, sourceRoot: this._opts.sourceRoot }),
              b = this._code;"string" == typeof b ? a.setSourceContent(this._opts.sourceFileName, b) : "object" === (void 0 === b ? "undefined" : (0, h.default)(b)) && (0, f.default)(b).forEach(function (c) {
            a.setSourceContent(c, b[c]);
          }), this._rawMappings.forEach(a.addMapping, a);
        }return this._cachedMap.toJSON();
      }, a.prototype.getRawMappings = function () {
        return this._rawMappings.slice();
      }, a.prototype.mark = function (a, b, c, d, e, f) {
        this._lastGenLine !== a && null === c || this._lastGenLine === a && this._lastSourceLine === c && this._lastSourceColumn === d || (this._cachedMap = null, this._lastGenLine = a, this._lastSourceLine = c, this._lastSourceColumn = d, this._rawMappings.push({ name: e || void 0, generated: { line: a, column: b }, source: null == c ? void 0 : f || this._opts.sourceFileName, original: null == c ? void 0 : { line: c, column: d } }));
      }, a;
    }();b.default = m, c.exports = b.default;
  }), a.registerDynamic("33", ["34", "35", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self, a("34"));a("35")("WeakSet", function (a) {
      return function () {
        return a(this, arguments.length > 0 ? arguments[0] : void 0);
      };
    }, { add: function (a) {
        return d.def(this, a, !0);
      } }, d, !1, !0);
  }), a.registerDynamic("36", ["37", "38", "33", "39", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("37"), a("38"), a("33"), c.exports = a("39").WeakSet;
  }), a.registerDynamic("3a", ["36"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("36"), __esModule: !0 };
  }), a.registerDynamic("3b", ["3c", "3d", "3e"], !0, function (a, b, c) {
    function d(a, b, c) {
      var d = null == a ? 0 : a.length;if (!d) return -1;var i = null == c ? 0 : g(c);return i < 0 && (i = h(d + i, 0)), e(a, f(b, 3), i);
    }var e = (this || self, a("3c")),
        f = a("3d"),
        g = a("3e"),
        h = Math.max;c.exports = d;
  }), a.registerDynamic("3f", ["40", "3b"], !0, function (a, b, c) {
    var d = (this || self, a("40")),
        e = a("3b"),
        f = d(e);c.exports = f;
  }), a.registerDynamic("40", ["3d", "41", "42"], !0, function (a, b, c) {
    function d(a) {
      return function (b, c, d) {
        var h = Object(b);if (!f(b)) {
          var i = e(c, 3);b = g(b), c = function (a) {
            return i(h[a], a, h);
          };
        }var j = a(b, c, d);return j > -1 ? h[i ? b[j] : j] : void 0;
      };
    }var e = (this || self, a("3d")),
        f = a("41"),
        g = a("42");c.exports = d;
  }), a.registerDynamic("43", ["3c", "3d", "3e"], !0, function (a, b, c) {
    function d(a, b, c) {
      var d = null == a ? 0 : a.length;if (!d) return -1;var j = d - 1;return void 0 !== c && (j = g(c), j = c < 0 ? h(d + j, 0) : i(j, d - 1)), e(a, f(b, 3), j, !0);
    }var e = (this || self, a("3c")),
        f = a("3d"),
        g = a("3e"),
        h = Math.max,
        i = Math.min;c.exports = d;
  }), a.registerDynamic("44", ["40", "43"], !0, function (a, b, c) {
    var d = (this || self, a("40")),
        e = a("43"),
        f = d(e);c.exports = f;
  }), a.registerDynamic("45", ["3e"], !0, function (a, b, c) {
    function d(a) {
      return "number" == typeof a && a == e(a);
    }var e = (this || self, a("3e"));c.exports = d;
  }), a.registerDynamic("46", [], !0, function (a, b, c) {
    "use strict";
    this || self;c.exports = function (a) {
      for (var b = a.length; /[\s\uFEFF\u00A0]/.test(a[b - 1]);) b--;return a.slice(0, b);
    };
  }), a.registerDynamic("47", [], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      var b = a.length;if (b % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");return "=" === a[b - 2] ? 2 : "=" === a[b - 1] ? 1 : 0;
    }function e(a) {
      return 3 * a.length / 4 - d(a);
    }function f(a) {
      var b,
          c,
          e,
          f,
          g,
          h,
          i = a.length;g = d(a), h = new l(3 * i / 4 - g), e = g > 0 ? i - 4 : i;var j = 0;for (b = 0, c = 0; b < e; b += 4, c += 3) f = k[a.charCodeAt(b)] << 18 | k[a.charCodeAt(b + 1)] << 12 | k[a.charCodeAt(b + 2)] << 6 | k[a.charCodeAt(b + 3)], h[j++] = f >> 16 & 255, h[j++] = f >> 8 & 255, h[j++] = 255 & f;return 2 === g ? (f = k[a.charCodeAt(b)] << 2 | k[a.charCodeAt(b + 1)] >> 4, h[j++] = 255 & f) : 1 === g && (f = k[a.charCodeAt(b)] << 10 | k[a.charCodeAt(b + 1)] << 4 | k[a.charCodeAt(b + 2)] >> 2, h[j++] = f >> 8 & 255, h[j++] = 255 & f), h;
    }function g(a) {
      return j[a >> 18 & 63] + j[a >> 12 & 63] + j[a >> 6 & 63] + j[63 & a];
    }function h(a, b, c) {
      for (var d, e = [], f = b; f < c; f += 3) d = (a[f] << 16) + (a[f + 1] << 8) + a[f + 2], e.push(g(d));return e.join("");
    }function i(a) {
      for (var b, c = a.length, d = c % 3, e = "", f = [], g = 16383, i = 0, k = c - d; i < k; i += g) f.push(h(a, i, i + g > k ? k : i + g));return 1 === d ? (b = a[c - 1], e += j[b >> 2], e += j[b << 4 & 63], e += "==") : 2 === d && (b = (a[c - 2] << 8) + a[c - 1], e += j[b >> 10], e += j[b >> 4 & 63], e += j[b << 2 & 63], e += "="), f.push(e), f.join("");
    }this || self;b.byteLength = e, b.toByteArray = f, b.fromByteArray = i;for (var j = [], k = [], l = "undefined" != typeof Uint8Array ? Uint8Array : Array, m = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = 0, o = m.length; n < o; ++n) j[n] = m[n], k[m.charCodeAt(n)] = n;k["-".charCodeAt(0)] = 62, k["_".charCodeAt(0)] = 63;
  }), a.registerDynamic("48", [], !0, function (a, b, c) {
    this || self;b.read = function (a, b, c, d, e) {
      var f,
          g,
          h = 8 * e - d - 1,
          i = (1 << h) - 1,
          j = i >> 1,
          k = -7,
          l = c ? e - 1 : 0,
          m = c ? -1 : 1,
          n = a[b + l];for (l += m, f = n & (1 << -k) - 1, n >>= -k, k += h; k > 0; f = 256 * f + a[b + l], l += m, k -= 8);for (g = f & (1 << -k) - 1, f >>= -k, k += d; k > 0; g = 256 * g + a[b + l], l += m, k -= 8);if (0 === f) f = 1 - j;else {
        if (f === i) return g ? NaN : 1 / 0 * (n ? -1 : 1);g += Math.pow(2, d), f -= j;
      }return (n ? -1 : 1) * g * Math.pow(2, f - d);
    }, b.write = function (a, b, c, d, e, f) {
      var g,
          h,
          i,
          j = 8 * f - e - 1,
          k = (1 << j) - 1,
          l = k >> 1,
          m = 23 === e ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
          n = d ? 0 : f - 1,
          o = d ? 1 : -1,
          p = b < 0 || 0 === b && 1 / b < 0 ? 1 : 0;for (b = Math.abs(b), isNaN(b) || b === 1 / 0 ? (h = isNaN(b) ? 1 : 0, g = k) : (g = Math.floor(Math.log(b) / Math.LN2), b * (i = Math.pow(2, -g)) < 1 && (g--, i *= 2), b += g + l >= 1 ? m / i : m * Math.pow(2, 1 - l), b * i >= 2 && (g++, i /= 2), g + l >= k ? (h = 0, g = k) : g + l >= 1 ? (h = (b * i - 1) * Math.pow(2, e), g += l) : (h = b * Math.pow(2, l - 1) * Math.pow(2, e), g = 0)); e >= 8; a[c + n] = 255 & h, n += o, h /= 256, e -= 8);for (g = g << e | h, j += e; j > 0; a[c + n] = 255 & g, n += o, g /= 256, j -= 8);a[c + n - o] |= 128 * p;
    };
  }), a.registerDynamic("49", ["47", "48"], !0, function (a, b, c) {
    "use strict";
    function d() {
      try {
        var a = new Uint8Array(1);return a.__proto__ = { __proto__: Uint8Array.prototype, foo: function () {
            return 42;
          } }, 42 === a.foo();
      } catch (a) {
        return !1;
      }
    }function e(a) {
      if (a > Y) throw new RangeError("Invalid typed array length");var b = new Uint8Array(a);return b.__proto__ = f.prototype, b;
    }function f(a, b, c) {
      if ("number" == typeof a) {
        if ("string" == typeof b) throw new Error("If encoding is specified then the first argument must be a string");return j(a);
      }return g(a, b, c);
    }function g(a, b, c) {
      if ("number" == typeof a) throw new TypeError('"value" argument must not be a number');return a instanceof ArrayBuffer ? m(a, b, c) : "string" == typeof a ? k(a, b) : n(a);
    }function h(a) {
      if ("number" != typeof a) throw new TypeError('"size" argument must be a number');if (a < 0) throw new RangeError('"size" argument must not be negative');
    }function i(a, b, c) {
      return h(a), a <= 0 ? e(a) : void 0 !== b ? "string" == typeof c ? e(a).fill(b, c) : e(a).fill(b) : e(a);
    }function j(a) {
      return h(a), e(a < 0 ? 0 : 0 | o(a));
    }function k(a, b) {
      if ("string" == typeof b && "" !== b || (b = "utf8"), !f.isEncoding(b)) throw new TypeError('"encoding" must be a valid string encoding');var c = 0 | q(a, b),
          d = e(c),
          g = d.write(a, b);return g !== c && (d = d.slice(0, g)), d;
    }function l(a) {
      for (var b = a.length < 0 ? 0 : 0 | o(a.length), c = e(b), d = 0; d < b; d += 1) c[d] = 255 & a[d];return c;
    }function m(a, b, c) {
      if (b < 0 || a.byteLength < b) throw new RangeError("'offset' is out of bounds");if (a.byteLength < b + (c || 0)) throw new RangeError("'length' is out of bounds");var d;return d = void 0 === b && void 0 === c ? new Uint8Array(a) : void 0 === c ? new Uint8Array(a, b) : new Uint8Array(a, b, c), d.__proto__ = f.prototype, d;
    }function n(a) {
      if (f.isBuffer(a)) {
        var b = 0 | o(a.length),
            c = e(b);return 0 === c.length ? c : (a.copy(c, 0, 0, b), c);
      }if (a) {
        if (U(a) || "length" in a) return "number" != typeof a.length || V(a.length) ? e(0) : l(a);if ("Buffer" === a.type && Array.isArray(a.data)) return l(a.data);
      }throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
    }function o(a) {
      if (a >= Y) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + Y.toString(16) + " bytes");return 0 | a;
    }function p(a) {
      return +a != a && (a = 0), f.alloc(+a);
    }function q(a, b) {
      if (f.isBuffer(a)) return a.length;if (U(a) || a instanceof ArrayBuffer) return a.byteLength;"string" != typeof a && (a = "" + a);var c = a.length;if (0 === c) return 0;for (var d = !1;;) switch (b) {case "ascii":case "latin1":case "binary":
          return c;case "utf8":case "utf-8":case void 0:
          return P(a).length;case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":
          return 2 * c;case "hex":
          return c >>> 1;case "base64":
          return S(a).length;default:
          if (d) return P(a).length;b = ("" + b).toLowerCase(), d = !0;}
    }function r(a, b, c) {
      var d = !1;if ((void 0 === b || b < 0) && (b = 0), b > this.length) return "";if ((void 0 === c || c > this.length) && (c = this.length), c <= 0) return "";if (c >>>= 0, b >>>= 0, c <= b) return "";for (a || (a = "utf8");;) switch (a) {case "hex":
          return G(this, b, c);case "utf8":case "utf-8":
          return C(this, b, c);case "ascii":
          return E(this, b, c);case "latin1":case "binary":
          return F(this, b, c);case "base64":
          return B(this, b, c);case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":
          return H(this, b, c);default:
          if (d) throw new TypeError("Unknown encoding: " + a);a = (a + "").toLowerCase(), d = !0;}
    }function s(a, b, c) {
      var d = a[b];a[b] = a[c], a[c] = d;
    }function t(a, b, c, d, e) {
      if (0 === a.length) return -1;if ("string" == typeof c ? (d = c, c = 0) : c > 2147483647 ? c = 2147483647 : c < -2147483648 && (c = -2147483648), c = +c, V(c) && (c = e ? 0 : a.length - 1), c < 0 && (c = a.length + c), c >= a.length) {
        if (e) return -1;c = a.length - 1;
      } else if (c < 0) {
        if (!e) return -1;c = 0;
      }if ("string" == typeof b && (b = f.from(b, d)), f.isBuffer(b)) return 0 === b.length ? -1 : u(a, b, c, d, e);if ("number" == typeof b) return b &= 255, "function" == typeof Uint8Array.prototype.indexOf ? e ? Uint8Array.prototype.indexOf.call(a, b, c) : Uint8Array.prototype.lastIndexOf.call(a, b, c) : u(a, [b], c, d, e);throw new TypeError("val must be string, number or Buffer");
    }function u(a, b, c, d, e) {
      function f(a, b) {
        return 1 === g ? a[b] : a.readUInt16BE(b * g);
      }var g = 1,
          h = a.length,
          i = b.length;if (void 0 !== d && ("ucs2" === (d = String(d).toLowerCase()) || "ucs-2" === d || "utf16le" === d || "utf-16le" === d)) {
        if (a.length < 2 || b.length < 2) return -1;g = 2, h /= 2, i /= 2, c /= 2;
      }var j;if (e) {
        var k = -1;for (j = c; j < h; j++) if (f(a, j) === f(b, -1 === k ? 0 : j - k)) {
          if (-1 === k && (k = j), j - k + 1 === i) return k * g;
        } else -1 !== k && (j -= j - k), k = -1;
      } else for (c + i > h && (c = h - i), j = c; j >= 0; j--) {
        for (var l = !0, m = 0; m < i; m++) if (f(a, j + m) !== f(b, m)) {
          l = !1;break;
        }if (l) return j;
      }return -1;
    }function v(a, b, c, d) {
      c = Number(c) || 0;var e = a.length - c;d ? (d = Number(d)) > e && (d = e) : d = e;var f = b.length;if (f % 2 != 0) throw new TypeError("Invalid hex string");d > f / 2 && (d = f / 2);for (var g = 0; g < d; ++g) {
        var h = parseInt(b.substr(2 * g, 2), 16);if (V(h)) return g;a[c + g] = h;
      }return g;
    }function w(a, b, c, d) {
      return T(P(b, a.length - c), a, c, d);
    }function x(a, b, c, d) {
      return T(Q(b), a, c, d);
    }function y(a, b, c, d) {
      return x(a, b, c, d);
    }function z(a, b, c, d) {
      return T(S(b), a, c, d);
    }function A(a, b, c, d) {
      return T(R(b, a.length - c), a, c, d);
    }function B(a, b, c) {
      return 0 === b && c === a.length ? W.fromByteArray(a) : W.fromByteArray(a.slice(b, c));
    }function C(a, b, c) {
      c = Math.min(a.length, c);for (var d = [], e = b; e < c;) {
        var f = a[e],
            g = null,
            h = f > 239 ? 4 : f > 223 ? 3 : f > 191 ? 2 : 1;if (e + h <= c) {
          var i, j, k, l;switch (h) {case 1:
              f < 128 && (g = f);break;case 2:
              i = a[e + 1], 128 == (192 & i) && (l = (31 & f) << 6 | 63 & i) > 127 && (g = l);break;case 3:
              i = a[e + 1], j = a[e + 2], 128 == (192 & i) && 128 == (192 & j) && (l = (15 & f) << 12 | (63 & i) << 6 | 63 & j) > 2047 && (l < 55296 || l > 57343) && (g = l);break;case 4:
              i = a[e + 1], j = a[e + 2], k = a[e + 3], 128 == (192 & i) && 128 == (192 & j) && 128 == (192 & k) && (l = (15 & f) << 18 | (63 & i) << 12 | (63 & j) << 6 | 63 & k) > 65535 && l < 1114112 && (g = l);}
        }null === g ? (g = 65533, h = 1) : g > 65535 && (g -= 65536, d.push(g >>> 10 & 1023 | 55296), g = 56320 | 1023 & g), d.push(g), e += h;
      }return D(d);
    }function D(a) {
      var b = a.length;if (b <= Z) return String.fromCharCode.apply(String, a);for (var c = "", d = 0; d < b;) c += String.fromCharCode.apply(String, a.slice(d, d += Z));return c;
    }function E(a, b, c) {
      var d = "";c = Math.min(a.length, c);for (var e = b; e < c; ++e) d += String.fromCharCode(127 & a[e]);return d;
    }function F(a, b, c) {
      var d = "";c = Math.min(a.length, c);for (var e = b; e < c; ++e) d += String.fromCharCode(a[e]);return d;
    }function G(a, b, c) {
      var d = a.length;(!b || b < 0) && (b = 0), (!c || c < 0 || c > d) && (c = d);for (var e = "", f = b; f < c; ++f) e += O(a[f]);return e;
    }function H(a, b, c) {
      for (var d = a.slice(b, c), e = "", f = 0; f < d.length; f += 2) e += String.fromCharCode(d[f] + 256 * d[f + 1]);return e;
    }function I(a, b, c) {
      if (a % 1 != 0 || a < 0) throw new RangeError("offset is not uint");if (a + b > c) throw new RangeError("Trying to access beyond buffer length");
    }function J(a, b, c, d, e, g) {
      if (!f.isBuffer(a)) throw new TypeError('"buffer" argument must be a Buffer instance');if (b > e || b < g) throw new RangeError('"value" argument is out of bounds');if (c + d > a.length) throw new RangeError("Index out of range");
    }function K(a, b, c, d, e, f) {
      if (c + d > a.length) throw new RangeError("Index out of range");if (c < 0) throw new RangeError("Index out of range");
    }function L(a, b, c, d, e) {
      return b = +b, c >>>= 0, e || K(a, b, c, 4, 3.4028234663852886e38, -3.4028234663852886e38), X.write(a, b, c, d, 23, 4), c + 4;
    }function M(a, b, c, d, e) {
      return b = +b, c >>>= 0, e || K(a, b, c, 8, 1.7976931348623157e308, -1.7976931348623157e308), X.write(a, b, c, d, 52, 8), c + 8;
    }function N(a) {
      if (a = a.trim().replace($, ""), a.length < 2) return "";for (; a.length % 4 != 0;) a += "=";return a;
    }function O(a) {
      return a < 16 ? "0" + a.toString(16) : a.toString(16);
    }function P(a, b) {
      b = b || 1 / 0;for (var c, d = a.length, e = null, f = [], g = 0; g < d; ++g) {
        if ((c = a.charCodeAt(g)) > 55295 && c < 57344) {
          if (!e) {
            if (c > 56319) {
              (b -= 3) > -1 && f.push(239, 191, 189);continue;
            }if (g + 1 === d) {
              (b -= 3) > -1 && f.push(239, 191, 189);continue;
            }e = c;continue;
          }if (c < 56320) {
            (b -= 3) > -1 && f.push(239, 191, 189), e = c;continue;
          }c = 65536 + (e - 55296 << 10 | c - 56320);
        } else e && (b -= 3) > -1 && f.push(239, 191, 189);if (e = null, c < 128) {
          if ((b -= 1) < 0) break;f.push(c);
        } else if (c < 2048) {
          if ((b -= 2) < 0) break;f.push(c >> 6 | 192, 63 & c | 128);
        } else if (c < 65536) {
          if ((b -= 3) < 0) break;f.push(c >> 12 | 224, c >> 6 & 63 | 128, 63 & c | 128);
        } else {
          if (!(c < 1114112)) throw new Error("Invalid code point");if ((b -= 4) < 0) break;f.push(c >> 18 | 240, c >> 12 & 63 | 128, c >> 6 & 63 | 128, 63 & c | 128);
        }
      }return f;
    }function Q(a) {
      for (var b = [], c = 0; c < a.length; ++c) b.push(255 & a.charCodeAt(c));return b;
    }function R(a, b) {
      for (var c, d, e, f = [], g = 0; g < a.length && !((b -= 2) < 0); ++g) c = a.charCodeAt(g), d = c >> 8, e = c % 256, f.push(e), f.push(d);return f;
    }function S(a) {
      return W.toByteArray(N(a));
    }function T(a, b, c, d) {
      for (var e = 0; e < d && !(e + c >= b.length || e >= a.length); ++e) b[e + c] = a[e];return e;
    }function U(a) {
      return "function" == typeof ArrayBuffer.isView && ArrayBuffer.isView(a);
    }function V(a) {
      return a !== a;
    }var W = (this || self, a("47")),
        X = a("48");b.Buffer = f, b.SlowBuffer = p, b.INSPECT_MAX_BYTES = 50;var Y = 2147483647;b.kMaxLength = Y, f.TYPED_ARRAY_SUPPORT = d(), f.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), "undefined" != typeof Symbol && Symbol.species && f[Symbol.species] === f && Object.defineProperty(f, Symbol.species, { value: null, configurable: !0, enumerable: !1, writable: !1 }), f.poolSize = 8192, f.from = function (a, b, c) {
      return g(a, b, c);
    }, f.prototype.__proto__ = Uint8Array.prototype, f.__proto__ = Uint8Array, f.alloc = function (a, b, c) {
      return i(a, b, c);
    }, f.allocUnsafe = function (a) {
      return j(a);
    }, f.allocUnsafeSlow = function (a) {
      return j(a);
    }, f.isBuffer = function (a) {
      return null != a && !0 === a._isBuffer;
    }, f.compare = function (a, b) {
      if (!f.isBuffer(a) || !f.isBuffer(b)) throw new TypeError("Arguments must be Buffers");if (a === b) return 0;for (var c = a.length, d = b.length, e = 0, g = Math.min(c, d); e < g; ++e) if (a[e] !== b[e]) {
        c = a[e], d = b[e];break;
      }return c < d ? -1 : d < c ? 1 : 0;
    }, f.isEncoding = function (a) {
      switch (String(a).toLowerCase()) {case "hex":case "utf8":case "utf-8":case "ascii":case "latin1":case "binary":case "base64":case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":
          return !0;default:
          return !1;}
    }, f.concat = function (a, b) {
      if (!Array.isArray(a)) throw new TypeError('"list" argument must be an Array of Buffers');if (0 === a.length) return f.alloc(0);var c;if (void 0 === b) for (b = 0, c = 0; c < a.length; ++c) b += a[c].length;var d = f.allocUnsafe(b),
          e = 0;for (c = 0; c < a.length; ++c) {
        var g = a[c];if (!f.isBuffer(g)) throw new TypeError('"list" argument must be an Array of Buffers');g.copy(d, e), e += g.length;
      }return d;
    }, f.byteLength = q, f.prototype._isBuffer = !0, f.prototype.swap16 = function () {
      var a = this.length;if (a % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");for (var b = 0; b < a; b += 2) s(this, b, b + 1);return this;
    }, f.prototype.swap32 = function () {
      var a = this.length;if (a % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");for (var b = 0; b < a; b += 4) s(this, b, b + 3), s(this, b + 1, b + 2);return this;
    }, f.prototype.swap64 = function () {
      var a = this.length;if (a % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");for (var b = 0; b < a; b += 8) s(this, b, b + 7), s(this, b + 1, b + 6), s(this, b + 2, b + 5), s(this, b + 3, b + 4);return this;
    }, f.prototype.toString = function () {
      var a = this.length;return 0 === a ? "" : 0 === arguments.length ? C(this, 0, a) : r.apply(this, arguments);
    }, f.prototype.equals = function (a) {
      if (!f.isBuffer(a)) throw new TypeError("Argument must be a Buffer");return this === a || 0 === f.compare(this, a);
    }, f.prototype.inspect = function () {
      var a = "",
          c = b.INSPECT_MAX_BYTES;return this.length > 0 && (a = this.toString("hex", 0, c).match(/.{2}/g).join(" "), this.length > c && (a += " ... ")), "<Buffer " + a + ">";
    }, f.prototype.compare = function (a, b, c, d, e) {
      if (!f.isBuffer(a)) throw new TypeError("Argument must be a Buffer");if (void 0 === b && (b = 0), void 0 === c && (c = a ? a.length : 0), void 0 === d && (d = 0), void 0 === e && (e = this.length), b < 0 || c > a.length || d < 0 || e > this.length) throw new RangeError("out of range index");if (d >= e && b >= c) return 0;if (d >= e) return -1;if (b >= c) return 1;if (b >>>= 0, c >>>= 0, d >>>= 0, e >>>= 0, this === a) return 0;for (var g = e - d, h = c - b, i = Math.min(g, h), j = this.slice(d, e), k = a.slice(b, c), l = 0; l < i; ++l) if (j[l] !== k[l]) {
        g = j[l], h = k[l];break;
      }return g < h ? -1 : h < g ? 1 : 0;
    }, f.prototype.includes = function (a, b, c) {
      return -1 !== this.indexOf(a, b, c);
    }, f.prototype.indexOf = function (a, b, c) {
      return t(this, a, b, c, !0);
    }, f.prototype.lastIndexOf = function (a, b, c) {
      return t(this, a, b, c, !1);
    }, f.prototype.write = function (a, b, c, d) {
      if (void 0 === b) d = "utf8", c = this.length, b = 0;else if (void 0 === c && "string" == typeof b) d = b, c = this.length, b = 0;else {
        if (!isFinite(b)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");b >>>= 0, isFinite(c) ? (c >>>= 0, void 0 === d && (d = "utf8")) : (d = c, c = void 0);
      }var e = this.length - b;if ((void 0 === c || c > e) && (c = e), a.length > 0 && (c < 0 || b < 0) || b > this.length) throw new RangeError("Attempt to write outside buffer bounds");d || (d = "utf8");for (var f = !1;;) switch (d) {case "hex":
          return v(this, a, b, c);case "utf8":case "utf-8":
          return w(this, a, b, c);case "ascii":
          return x(this, a, b, c);case "latin1":case "binary":
          return y(this, a, b, c);case "base64":
          return z(this, a, b, c);case "ucs2":case "ucs-2":case "utf16le":case "utf-16le":
          return A(this, a, b, c);default:
          if (f) throw new TypeError("Unknown encoding: " + d);d = ("" + d).toLowerCase(), f = !0;}
    }, f.prototype.toJSON = function () {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };var Z = 4096;f.prototype.slice = function (a, b) {
      var c = this.length;a = ~~a, b = void 0 === b ? c : ~~b, a < 0 ? (a += c) < 0 && (a = 0) : a > c && (a = c), b < 0 ? (b += c) < 0 && (b = 0) : b > c && (b = c), b < a && (b = a);var d = this.subarray(a, b);return d.__proto__ = f.prototype, d;
    }, f.prototype.readUIntLE = function (a, b, c) {
      a >>>= 0, b >>>= 0, c || I(a, b, this.length);for (var d = this[a], e = 1, f = 0; ++f < b && (e *= 256);) d += this[a + f] * e;return d;
    }, f.prototype.readUIntBE = function (a, b, c) {
      a >>>= 0, b >>>= 0, c || I(a, b, this.length);for (var d = this[a + --b], e = 1; b > 0 && (e *= 256);) d += this[a + --b] * e;return d;
    }, f.prototype.readUInt8 = function (a, b) {
      return a >>>= 0, b || I(a, 1, this.length), this[a];
    }, f.prototype.readUInt16LE = function (a, b) {
      return a >>>= 0, b || I(a, 2, this.length), this[a] | this[a + 1] << 8;
    }, f.prototype.readUInt16BE = function (a, b) {
      return a >>>= 0, b || I(a, 2, this.length), this[a] << 8 | this[a + 1];
    }, f.prototype.readUInt32LE = function (a, b) {
      return a >>>= 0, b || I(a, 4, this.length), (this[a] | this[a + 1] << 8 | this[a + 2] << 16) + 16777216 * this[a + 3];
    }, f.prototype.readUInt32BE = function (a, b) {
      return a >>>= 0, b || I(a, 4, this.length), 16777216 * this[a] + (this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3]);
    }, f.prototype.readIntLE = function (a, b, c) {
      a >>>= 0, b >>>= 0, c || I(a, b, this.length);for (var d = this[a], e = 1, f = 0; ++f < b && (e *= 256);) d += this[a + f] * e;return e *= 128, d >= e && (d -= Math.pow(2, 8 * b)), d;
    }, f.prototype.readIntBE = function (a, b, c) {
      a >>>= 0, b >>>= 0, c || I(a, b, this.length);for (var d = b, e = 1, f = this[a + --d]; d > 0 && (e *= 256);) f += this[a + --d] * e;return e *= 128, f >= e && (f -= Math.pow(2, 8 * b)), f;
    }, f.prototype.readInt8 = function (a, b) {
      return a >>>= 0, b || I(a, 1, this.length), 128 & this[a] ? -1 * (255 - this[a] + 1) : this[a];
    }, f.prototype.readInt16LE = function (a, b) {
      a >>>= 0, b || I(a, 2, this.length);var c = this[a] | this[a + 1] << 8;return 32768 & c ? 4294901760 | c : c;
    }, f.prototype.readInt16BE = function (a, b) {
      a >>>= 0, b || I(a, 2, this.length);var c = this[a + 1] | this[a] << 8;return 32768 & c ? 4294901760 | c : c;
    }, f.prototype.readInt32LE = function (a, b) {
      return a >>>= 0, b || I(a, 4, this.length), this[a] | this[a + 1] << 8 | this[a + 2] << 16 | this[a + 3] << 24;
    }, f.prototype.readInt32BE = function (a, b) {
      return a >>>= 0, b || I(a, 4, this.length), this[a] << 24 | this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3];
    }, f.prototype.readFloatLE = function (a, b) {
      return a >>>= 0, b || I(a, 4, this.length), X.read(this, a, !0, 23, 4);
    }, f.prototype.readFloatBE = function (a, b) {
      return a >>>= 0, b || I(a, 4, this.length), X.read(this, a, !1, 23, 4);
    }, f.prototype.readDoubleLE = function (a, b) {
      return a >>>= 0, b || I(a, 8, this.length), X.read(this, a, !0, 52, 8);
    }, f.prototype.readDoubleBE = function (a, b) {
      return a >>>= 0, b || I(a, 8, this.length), X.read(this, a, !1, 52, 8);
    }, f.prototype.writeUIntLE = function (a, b, c, d) {
      if (a = +a, b >>>= 0, c >>>= 0, !d) {
        J(this, a, b, c, Math.pow(2, 8 * c) - 1, 0);
      }var e = 1,
          f = 0;for (this[b] = 255 & a; ++f < c && (e *= 256);) this[b + f] = a / e & 255;return b + c;
    }, f.prototype.writeUIntBE = function (a, b, c, d) {
      if (a = +a, b >>>= 0, c >>>= 0, !d) {
        J(this, a, b, c, Math.pow(2, 8 * c) - 1, 0);
      }var e = c - 1,
          f = 1;for (this[b + e] = 255 & a; --e >= 0 && (f *= 256);) this[b + e] = a / f & 255;return b + c;
    }, f.prototype.writeUInt8 = function (a, b, c) {
      return a = +a, b >>>= 0, c || J(this, a, b, 1, 255, 0), this[b] = 255 & a, b + 1;
    }, f.prototype.writeUInt16LE = function (a, b, c) {
      return a = +a, b >>>= 0, c || J(this, a, b, 2, 65535, 0), this[b] = 255 & a, this[b + 1] = a >>> 8, b + 2;
    }, f.prototype.writeUInt16BE = function (a, b, c) {
      return a = +a, b >>>= 0, c || J(this, a, b, 2, 65535, 0), this[b] = a >>> 8, this[b + 1] = 255 & a, b + 2;
    }, f.prototype.writeUInt32LE = function (a, b, c) {
      return a = +a, b >>>= 0, c || J(this, a, b, 4, 4294967295, 0), this[b + 3] = a >>> 24, this[b + 2] = a >>> 16, this[b + 1] = a >>> 8, this[b] = 255 & a, b + 4;
    }, f.prototype.writeUInt32BE = function (a, b, c) {
      return a = +a, b >>>= 0, c || J(this, a, b, 4, 4294967295, 0), this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a, b + 4;
    }, f.prototype.writeIntLE = function (a, b, c, d) {
      if (a = +a, b >>>= 0, !d) {
        var e = Math.pow(2, 8 * c - 1);J(this, a, b, c, e - 1, -e);
      }var f = 0,
          g = 1,
          h = 0;for (this[b] = 255 & a; ++f < c && (g *= 256);) a < 0 && 0 === h && 0 !== this[b + f - 1] && (h = 1), this[b + f] = (a / g >> 0) - h & 255;return b + c;
    }, f.prototype.writeIntBE = function (a, b, c, d) {
      if (a = +a, b >>>= 0, !d) {
        var e = Math.pow(2, 8 * c - 1);J(this, a, b, c, e - 1, -e);
      }var f = c - 1,
          g = 1,
          h = 0;for (this[b + f] = 255 & a; --f >= 0 && (g *= 256);) a < 0 && 0 === h && 0 !== this[b + f + 1] && (h = 1), this[b + f] = (a / g >> 0) - h & 255;return b + c;
    }, f.prototype.writeInt8 = function (a, b, c) {
      return a = +a, b >>>= 0, c || J(this, a, b, 1, 127, -128), a < 0 && (a = 255 + a + 1), this[b] = 255 & a, b + 1;
    }, f.prototype.writeInt16LE = function (a, b, c) {
      return a = +a, b >>>= 0, c || J(this, a, b, 2, 32767, -32768), this[b] = 255 & a, this[b + 1] = a >>> 8, b + 2;
    }, f.prototype.writeInt16BE = function (a, b, c) {
      return a = +a, b >>>= 0, c || J(this, a, b, 2, 32767, -32768), this[b] = a >>> 8, this[b + 1] = 255 & a, b + 2;
    }, f.prototype.writeInt32LE = function (a, b, c) {
      return a = +a, b >>>= 0, c || J(this, a, b, 4, 2147483647, -2147483648), this[b] = 255 & a, this[b + 1] = a >>> 8, this[b + 2] = a >>> 16, this[b + 3] = a >>> 24, b + 4;
    }, f.prototype.writeInt32BE = function (a, b, c) {
      return a = +a, b >>>= 0, c || J(this, a, b, 4, 2147483647, -2147483648), a < 0 && (a = 4294967295 + a + 1), this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a, b + 4;
    }, f.prototype.writeFloatLE = function (a, b, c) {
      return L(this, a, b, !0, c);
    }, f.prototype.writeFloatBE = function (a, b, c) {
      return L(this, a, b, !1, c);
    }, f.prototype.writeDoubleLE = function (a, b, c) {
      return M(this, a, b, !0, c);
    }, f.prototype.writeDoubleBE = function (a, b, c) {
      return M(this, a, b, !1, c);
    }, f.prototype.copy = function (a, b, c, d) {
      if (c || (c = 0), d || 0 === d || (d = this.length), b >= a.length && (b = a.length), b || (b = 0), d > 0 && d < c && (d = c), d === c) return 0;if (0 === a.length || 0 === this.length) return 0;if (b < 0) throw new RangeError("targetStart out of bounds");if (c < 0 || c >= this.length) throw new RangeError("sourceStart out of bounds");if (d < 0) throw new RangeError("sourceEnd out of bounds");d > this.length && (d = this.length), a.length - b < d - c && (d = a.length - b + c);var e,
          f = d - c;if (this === a && c < b && b < d) for (e = f - 1; e >= 0; --e) a[e + b] = this[e + c];else if (f < 1e3) for (e = 0; e < f; ++e) a[e + b] = this[e + c];else Uint8Array.prototype.set.call(a, this.subarray(c, c + f), b);return f;
    }, f.prototype.fill = function (a, b, c, d) {
      if ("string" == typeof a) {
        if ("string" == typeof b ? (d = b, b = 0, c = this.length) : "string" == typeof c && (d = c, c = this.length), 1 === a.length) {
          var e = a.charCodeAt(0);e < 256 && (a = e);
        }if (void 0 !== d && "string" != typeof d) throw new TypeError("encoding must be a string");if ("string" == typeof d && !f.isEncoding(d)) throw new TypeError("Unknown encoding: " + d);
      } else "number" == typeof a && (a &= 255);if (b < 0 || this.length < b || this.length < c) throw new RangeError("Out of range index");if (c <= b) return this;b >>>= 0, c = void 0 === c ? this.length : c >>> 0, a || (a = 0);var g;if ("number" == typeof a) for (g = b; g < c; ++g) this[g] = a;else {
        var h = f.isBuffer(a) ? a : new f(a, d),
            i = h.length;for (g = 0; g < c - b; ++g) this[g + b] = h[g % i];
      }return this;
    };var $ = /[^+\/0-9A-Za-z-_]/g;
  }), a.registerDynamic("1b", ["49"], !0, function (a, b, c) {
    this || self;c.exports = a("49").Buffer;
  }), a.registerDynamic("4a", ["1f", "46", "1b"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }var e = a("1b");this || self;b.__esModule = !0;var f = a("1f"),
        g = d(f),
        h = a("46"),
        i = d(h),
        j = /^[ \t]+$/,
        e = function () {
      function a(b) {
        (0, g.default)(this, a), this._map = null, this._buf = [], this._last = "", this._queue = [], this._position = { line: 1, column: 0 }, this._sourcePosition = { identifierName: null, line: null, column: null, filename: null }, this._map = b;
      }return a.prototype.get = function () {
        this._flush();var a = this._map,
            b = { code: (0, i.default)(this._buf.join("")), map: null, rawMappings: a && a.getRawMappings() };return a && Object.defineProperty(b, "map", { configurable: !0, enumerable: !0, get: function () {
            return this.map = a.get();
          }, set: function (a) {
            Object.defineProperty(this, "map", { value: a, writable: !0 });
          } }), b;
      }, a.prototype.append = function (a) {
        this._flush();var b = this._sourcePosition,
            c = b.line,
            d = b.column,
            e = b.filename,
            f = b.identifierName;this._append(a, c, d, f, e);
      }, a.prototype.queue = function (a) {
        if ("\n" === a) for (; this._queue.length > 0 && j.test(this._queue[0][0]);) this._queue.shift();var b = this._sourcePosition,
            c = b.line,
            d = b.column,
            e = b.filename,
            f = b.identifierName;this._queue.unshift([a, c, d, f, e]);
      }, a.prototype._flush = function () {
        for (var a = void 0; a = this._queue.pop();) this._append.apply(this, a);
      }, a.prototype._append = function (a, b, c, d, e) {
        this._map && "\n" !== a[0] && this._map.mark(this._position.line, this._position.column, b, c, d, e), this._buf.push(a), this._last = a[a.length - 1];for (var f = 0; f < a.length; f++) "\n" === a[f] ? (this._position.line++, this._position.column = 0) : this._position.column++;
      }, a.prototype.removeTrailingNewline = function () {
        this._queue.length > 0 && "\n" === this._queue[0][0] && this._queue.shift();
      }, a.prototype.removeLastSemicolon = function () {
        this._queue.length > 0 && ";" === this._queue[0][0] && this._queue.shift();
      }, a.prototype.endsWith = function (a) {
        if (1 === a.length) {
          var b = void 0;if (this._queue.length > 0) {
            var c = this._queue[0][0];b = c[c.length - 1];
          } else b = this._last;return b === a;
        }var d = this._last + this._queue.reduce(function (a, b) {
          return b[0] + a;
        }, "");return a.length <= d.length && d.slice(-a.length) === a;
      }, a.prototype.hasContent = function () {
        return this._queue.length > 0 || !!this._last;
      }, a.prototype.source = function (a, b) {
        if (!a || b) {
          var c = b ? b[a] : null;this._sourcePosition.identifierName = b && b.identifierName || null, this._sourcePosition.line = c ? c.line : null, this._sourcePosition.column = c ? c.column : null, this._sourcePosition.filename = b && b.filename || null;
        }
      }, a.prototype.withSource = function (a, b, c) {
        if (!this._map) return c();var d = this._sourcePosition.line,
            e = this._sourcePosition.column,
            f = this._sourcePosition.filename,
            g = this._sourcePosition.identifierName;this.source(a, b), c(), this._sourcePosition.line = d, this._sourcePosition.column = e, this._sourcePosition.filename = f, this._sourcePosition.identifierName = g;
      }, a.prototype.getCurrentColumn = function () {
        var a = this._queue.reduce(function (a, b) {
          return b[0] + a;
        }, ""),
            b = a.lastIndexOf("\n");return -1 === b ? this._position.column + a.length : a.length - 1 - b;
      }, a.prototype.getCurrentLine = function () {
        for (var a = this._queue.reduce(function (a, b) {
          return b[0] + a;
        }, ""), b = 0, c = 0; c < a.length; c++) "\n" === a[c] && b++;return this._position.line + b;
      }, a;
    }();b.default = e, c.exports = b.default;
  }), a.registerDynamic("4b", ["1f"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("1f"),
        f = d(e),
        g = function () {
      function a(b) {
        (0, f.default)(this, a), this.tokens = b, this.used = {};
      }return a.prototype.getNewlinesBefore = function (a) {
        var b = void 0,
            c = void 0,
            d = this.tokens,
            e = this._findToken(function (b) {
          return b.start - a.start;
        }, 0, d.length);if (e >= 0) {
          for (; e && a.start === d[e - 1].start;) --e;b = d[e - 1], c = d[e];
        }return this._getNewlinesBetween(b, c);
      }, a.prototype.getNewlinesAfter = function (a) {
        var b = void 0,
            c = void 0,
            d = this.tokens,
            e = this._findToken(function (b) {
          return b.end - a.end;
        }, 0, d.length);if (e >= 0) {
          for (; e && a.end === d[e - 1].end;) --e;b = d[e], c = d[e + 1], "," === c.type.label && (c = d[e + 2]);
        }return c && "eof" === c.type.label ? 1 : this._getNewlinesBetween(b, c);
      }, a.prototype._getNewlinesBetween = function (a, b) {
        if (!b || !b.loc) return 0;for (var c = a ? a.loc.end.line : 1, d = b.loc.start.line, e = 0, f = c; f < d; f++) void 0 === this.used[f] && (this.used[f] = !0, e++);return e;
      }, a.prototype._findToken = function (a, b, c) {
        if (b >= c) return -1;var d = b + c >>> 1,
            e = a(this.tokens[d]);return e < 0 ? this._findToken(a, d + 1, c) : e > 0 ? this._findToken(a, b, d) : 0 === e ? d : -1;
      }, a;
    }();b.default = g, c.exports = b.default;
  }), a.registerDynamic("4c", [], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      this.print(a.tag, a), this.print(a.quasi, a);
    }function e(a, b) {
      var c = b.quasis[0] === a,
          d = b.quasis[b.quasis.length - 1] === a,
          e = (c ? "`" : "}") + a.value.raw + (d ? "`" : "${");this.token(e);
    }function f(a) {
      for (var b = a.quasis, c = 0; c < b.length; c++) this.print(b[c], a), c + 1 < b.length && this.print(a.expressions[c], a);
    }this || self;b.__esModule = !0, b.TaggedTemplateExpression = d, b.TemplateElement = e, b.TemplateLiteral = f;
  }), a.registerDynamic("4d", ["4e", "3d", "4f", "50"], !0, function (a, b, c) {
    function d(a, b) {
      return (h(a) ? e : g)(a, f(b, 3));
    }var e = (this || self, a("4e")),
        f = a("3d"),
        g = a("4f"),
        h = a("50");c.exports = d;
  }), a.registerDynamic("51", ["4d", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};return l.isMemberExpression(a) ? (f(a.object, b), a.computed && f(a.property, b)) : l.isBinary(a) || l.isAssignmentExpression(a) ? (f(a.left, b), f(a.right, b)) : l.isCallExpression(a) ? (b.hasCall = !0, f(a.callee, b)) : l.isFunction(a) ? b.hasFunction = !0 : l.isIdentifier(a) && (b.hasHelper = b.hasHelper || g(a.callee)), b;
    }function g(a) {
      return l.isMemberExpression(a) ? g(a.object) || g(a.property) : l.isIdentifier(a) ? "require" === a.name || "_" === a.name[0] : l.isCallExpression(a) ? g(a.callee) : !(!l.isBinary(a) && !l.isAssignmentExpression(a)) && (l.isIdentifier(a.left) && g(a.left) || g(a.right));
    }function h(a) {
      return l.isLiteral(a) || l.isObjectExpression(a) || l.isArrayExpression(a) || l.isIdentifier(a) || l.isMemberExpression(a);
    }var i = (this || self, a("4d")),
        j = e(i),
        k = a("11"),
        l = d(k);b.nodes = { AssignmentExpression: function (a) {
        var b = f(a.right);if (b.hasCall && b.hasHelper || b.hasFunction) return { before: b.hasFunction, after: !0 };
      }, SwitchCase: function (a, b) {
        return { before: a.consequent.length || b.cases[0] === a };
      }, LogicalExpression: function (a) {
        if (l.isFunction(a.left) || l.isFunction(a.right)) return { after: !0 };
      }, Literal: function (a) {
        if ("use strict" === a.value) return { after: !0 };
      }, CallExpression: function (a) {
        if (l.isFunction(a.callee) || g(a)) return { before: !0, after: !0 };
      }, VariableDeclaration: function (a) {
        for (var b = 0; b < a.declarations.length; b++) {
          var c = a.declarations[b],
              d = g(c.id) && !h(c.init);if (!d) {
            var e = f(c.init);d = g(c.init) && e.hasCall || e.hasFunction;
          }if (d) return { before: !0, after: !0 };
        }
      }, IfStatement: function (a) {
        if (l.isBlockStatement(a.consequent)) return { before: !0, after: !0 };
      } }, b.nodes.ObjectProperty = b.nodes.ObjectTypeProperty = b.nodes.ObjectMethod = b.nodes.SpreadProperty = function (a, b) {
      if (b.properties[0] === a) return { before: !0 };
    }, b.list = { VariableDeclaration: function (a) {
        return (0, j.default)(a.declarations, "init");
      }, ArrayExpression: function (a) {
        return a.elements;
      }, ObjectExpression: function (a) {
        return a.properties;
      } }, [["Function", !0], ["Class", !0], ["Loop", !0], ["LabeledStatement", !0], ["SwitchStatement", !0], ["TryStatement", !0]].forEach(function (a) {
      var c = a[0],
          d = a[1];"boolean" == typeof d && (d = { after: d, before: d }), [c].concat(l.FLIPPED_ALIAS_KEYS[c] || []).forEach(function (a) {
        b.nodes[a] = function () {
          return d;
        };
      });
    });
  }), a.registerDynamic("52", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a, b) {
      return u.isArrayTypeAnnotation(b);
    }function f(a, b) {
      return u.isMemberExpression(b) && b.object === a;
    }function g(a, b, c) {
      return s(c, { considerArrow: !0 });
    }function h(a, b, c) {
      return s(c);
    }function i(a, b) {
      if ((u.isCallExpression(b) || u.isNewExpression(b)) && b.callee === a || u.isUnaryLike(b) || u.isMemberExpression(b) && b.object === a || u.isAwaitExpression(b)) return !0;if (u.isBinary(b)) {
        var c = b.operator,
            d = v[c],
            e = a.operator,
            f = v[e];if (d === f && b.right === a && !u.isLogicalExpression(b) || d > f) return !0;
      }return !1;
    }function j(a, b) {
      return "in" === a.operator && (u.isVariableDeclarator(b) || u.isFor(b));
    }function k(a, b) {
      return !(u.isForStatement(b) || u.isThrowStatement(b) || u.isReturnStatement(b) || u.isIfStatement(b) && b.test === a || u.isWhileStatement(b) && b.test === a || u.isForInStatement(b) && b.right === a || u.isSwitchStatement(b) && b.discriminant === a || u.isExpressionStatement(b) && b.expression === a);
    }function l(a, b) {
      return u.isBinary(b) || u.isUnaryLike(b) || u.isCallExpression(b) || u.isMemberExpression(b) || u.isNewExpression(b) || u.isConditionalExpression(b) && a === b.test;
    }function m(a, b, c) {
      return s(c, { considerDefaultExports: !0 });
    }function n(a, b) {
      return u.isMemberExpression(b, { object: a }) || u.isCallExpression(b, { callee: a }) || u.isNewExpression(b, { callee: a });
    }function o(a, b, c) {
      return s(c, { considerDefaultExports: !0 });
    }function p(a, b) {
      return !!(u.isExportDeclaration(b) || u.isBinaryExpression(b) || u.isLogicalExpression(b) || u.isUnaryExpression(b) || u.isTaggedTemplateExpression(b)) || n(a, b);
    }function q(a, b) {
      return !!(u.isUnaryLike(b) || u.isBinary(b) || u.isConditionalExpression(b, { test: a }) || u.isAwaitExpression(b)) || n(a, b);
    }function r(a) {
      return !!u.isObjectPattern(a.left) || q.apply(void 0, arguments);
    }function s(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          c = b.considerArrow,
          d = void 0 !== c && c,
          e = b.considerDefaultExports,
          f = void 0 !== e && e,
          g = a.length - 1,
          h = a[g];g--;for (var i = a[g]; g > 0;) {
        if (u.isExpressionStatement(i, { expression: h }) || u.isTaggedTemplateExpression(i) || f && u.isExportDefaultDeclaration(i, { declaration: h }) || d && u.isArrowFunctionExpression(i, { body: h })) return !0;if (!(u.isCallExpression(i, { callee: h }) || u.isSequenceExpression(i) && i.expressions[0] === h || u.isMemberExpression(i, { object: h }) || u.isConditional(i, { test: h }) || u.isBinary(i, { left: h }) || u.isAssignmentExpression(i, { left: h }))) return !1;h = i, g--, i = a[g];
      }return !1;
    }this || self;b.__esModule = !0, b.AwaitExpression = b.FunctionTypeAnnotation = void 0, b.NullableTypeAnnotation = e, b.UpdateExpression = f, b.ObjectExpression = g, b.DoExpression = h, b.Binary = i, b.BinaryExpression = j, b.SequenceExpression = k, b.YieldExpression = l, b.ClassExpression = m, b.UnaryLike = n, b.FunctionExpression = o, b.ArrowFunctionExpression = p, b.ConditionalExpression = q, b.AssignmentExpression = r;var t = a("11"),
        u = d(t),
        v = { "||": 0, "&&": 1, "|": 2, "^": 3, "&": 4, "==": 5, "===": 5, "!=": 5, "!==": 5, "<": 6, ">": 6, "<=": 6, ">=": 6, in: 6, instanceof: 6, ">>": 7, "<<": 7, ">>>": 7, "+": 8, "-": 8, "*": 9, "/": 9, "%": 9, "**": 10 };b.FunctionTypeAnnotation = e, b.AwaitExpression = l;
  }), a.registerDynamic("53", ["17", "15", "51", "52", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      function b(a, b) {
        var d = c[a];c[a] = d ? function (a, c, e) {
          var f = d(a, c, e);return null == f ? b(a, c, e) : f;
        } : b;
      }for (var c = {}, d = (0, p.default)(a), e = Array.isArray(d), f = 0, d = e ? d : (0, n.default)(d);;) {
        var g;if (e) {
          if (f >= d.length) break;g = d[f++];
        } else {
          if (f = d.next(), f.done) break;g = f.value;
        }var h = g,
            i = v.FLIPPED_ALIAS_KEYS[h];if (i) for (var j = i, k = Array.isArray(j), l = 0, j = k ? j : (0, n.default)(j);;) {
          var m;if (k) {
            if (l >= j.length) break;m = j[l++];
          } else {
            if (l = j.next(), l.done) break;m = l.value;
          }var o = m;b(o, a[h]);
        } else b(h, a[h]);
      }return c;
    }function g(a, b, c, d) {
      var e = a[b.type];return e ? e(b, c, d) : null;
    }function h(a) {
      return !!v.isCallExpression(a) || !!v.isMemberExpression(a) && (h(a.object) || !a.computed && h(a.property));
    }function i(a, b, c) {
      if (!a) return 0;v.isExpressionStatement(a) && (a = a.expression);var d = g(x, a, b);if (!d) {
        var e = g(y, a, b);if (e) for (var f = 0; f < e.length && !(d = i(e[f], a, c)); f++);
      }return d && d[c] || 0;
    }function j(a, b) {
      return i(a, b, "before");
    }function k(a, b) {
      return i(a, b, "after");
    }function l(a, b, c) {
      return !!b && (!(!v.isNewExpression(b) || b.callee !== a || !h(a)) || g(w, a, b, c));
    }this || self;b.__esModule = !0;var m = a("17"),
        n = e(m),
        o = a("15"),
        p = e(o);b.needsWhitespace = i, b.needsWhitespaceBefore = j, b.needsWhitespaceAfter = k, b.needsParens = l;var q = a("51"),
        r = e(q),
        s = a("52"),
        t = d(s),
        u = a("11"),
        v = d(u),
        w = f(t),
        x = f(r.default.nodes),
        y = f(r.default.list);
  }), a.registerDynamic("54", ["11", "53"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      "void" === a.operator || "delete" === a.operator || "typeof" === a.operator ? (this.word(a.operator), this.space()) : this.token(a.operator), this.print(a.argument, a);
    }function f(a) {
      this.word("do"), this.space(), this.print(a.body, a);
    }function g(a) {
      this.token("("), this.print(a.expression, a), this.token(")");
    }function h(a) {
      a.prefix ? (this.token(a.operator), this.print(a.argument, a)) : (this.print(a.argument, a), this.token(a.operator));
    }function i(a) {
      this.print(a.test, a), this.space(), this.token("?"), this.space(), this.print(a.consequent, a), this.space(), this.token(":"), this.space(), this.print(a.alternate, a);
    }function j(a, b) {
      this.word("new"), this.space(), this.print(a.callee, a), (0 !== a.arguments.length || !this.format.minified || A.isCallExpression(b, { callee: a }) || A.isMemberExpression(b) || A.isNewExpression(b)) && (this.token("("), this.printList(a.arguments, a), this.token(")"));
    }function k(a) {
      this.printList(a.expressions, a);
    }function l() {
      this.word("this");
    }function m() {
      this.word("super");
    }function n(a) {
      this.token("@"), this.print(a.expression, a), this.newline();
    }function o() {
      this.token(","), this.newline(), this.endsWith("\n") || this.space();
    }function p(a) {
      this.print(a.callee, a), this.token("(");var b = a._prettyCall,
          c = void 0;b && (c = o, this.newline(), this.indent()), this.printList(a.arguments, a, { separator: c }), b && (this.newline(), this.dedent()), this.token(")");
    }function q() {
      this.word("import");
    }function r(a) {
      return function (b) {
        if (this.word(a), b.delegate && this.token("*"), b.argument) {
          this.space();var c = this.startTerminatorless();this.print(b.argument, b), this.endTerminatorless(c);
        }
      };
    }function s() {
      this.semicolon(!0);
    }function t(a) {
      this.print(a.expression, a), this.semicolon();
    }function u(a) {
      this.print(a.left, a), a.left.optional && this.token("?"), this.print(a.left.typeAnnotation, a), this.space(), this.token("="), this.space(), this.print(a.right, a);
    }function v(a, b) {
      var c = this.inForStatementInitCounter && "in" === a.operator && !C.needsParens(a, b);c && this.token("("), this.print(a.left, a), this.space(), "in" === a.operator || "instanceof" === a.operator ? this.word(a.operator) : this.token(a.operator), this.space(), this.print(a.right, a), c && this.token(")");
    }function w(a) {
      this.print(a.object, a), this.token("::"), this.print(a.callee, a);
    }function x(a) {
      if (this.print(a.object, a), !a.computed && A.isMemberExpression(a.property)) throw new TypeError("Got a MemberExpression for MemberExpression property");var b = a.computed;A.isLiteral(a.property) && "number" == typeof a.property.value && (b = !0), b ? (this.token("["), this.print(a.property, a), this.token("]")) : (this.token("."), this.print(a.property, a));
    }function y(a) {
      this.print(a.meta, a), this.token("."), this.print(a.property, a);
    }this || self;b.__esModule = !0, b.LogicalExpression = b.BinaryExpression = b.AwaitExpression = b.YieldExpression = void 0, b.UnaryExpression = e, b.DoExpression = f, b.ParenthesizedExpression = g, b.UpdateExpression = h, b.ConditionalExpression = i, b.NewExpression = j, b.SequenceExpression = k, b.ThisExpression = l, b.Super = m, b.Decorator = n, b.CallExpression = p, b.Import = q, b.EmptyStatement = s, b.ExpressionStatement = t, b.AssignmentPattern = u, b.AssignmentExpression = v, b.BindExpression = w, b.MemberExpression = x, b.MetaProperty = y;var z = a("11"),
        A = d(z),
        B = a("53"),
        C = d(B);b.YieldExpression = r("yield"), b.AwaitExpression = r("await");b.BinaryExpression = v, b.LogicalExpression = v;
  }), a.registerDynamic("55", ["17", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      this.word("with"), this.space(), this.token("("), this.print(a.object, a), this.token(")"), this.printBlock(a);
    }function g(a) {
      this.word("if"), this.space(), this.token("("), this.print(a.test, a), this.token(")"), this.space();var b = a.alternate && z.isIfStatement(h(a.consequent));b && (this.token("{"), this.newline(), this.indent()), this.printAndIndentOnComments(a.consequent, a), b && (this.dedent(), this.newline(), this.token("}")), a.alternate && (this.endsWith("}") && this.space(), this.word("else"), this.space(), this.printAndIndentOnComments(a.alternate, a));
    }function h(a) {
      return z.isStatement(a.body) ? h(a.body) : a;
    }function i(a) {
      this.word("for"), this.space(), this.token("("), this.inForStatementInitCounter++, this.print(a.init, a), this.inForStatementInitCounter--, this.token(";"), a.test && (this.space(), this.print(a.test, a)), this.token(";"), a.update && (this.space(), this.print(a.update, a)), this.token(")"), this.printBlock(a);
    }function j(a) {
      this.word("while"), this.space(), this.token("("), this.print(a.test, a), this.token(")"), this.printBlock(a);
    }function k(a) {
      this.word("do"), this.space(), this.print(a.body, a), this.space(), this.word("while"), this.space(), this.token("("), this.print(a.test, a), this.token(")"), this.semicolon();
    }function l(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "label";return function (c) {
        this.word(a);var d = c[b];if (d) {
          this.space();var e = this.startTerminatorless();this.print(d, c), this.endTerminatorless(e);
        }this.semicolon();
      };
    }function m(a) {
      this.print(a.label, a), this.token(":"), this.space(), this.print(a.body, a);
    }function n(a) {
      this.word("try"), this.space(), this.print(a.block, a), this.space(), a.handlers ? this.print(a.handlers[0], a) : this.print(a.handler, a), a.finalizer && (this.space(), this.word("finally"), this.space(), this.print(a.finalizer, a));
    }function o(a) {
      this.word("catch"), this.space(), this.token("("), this.print(a.param, a), this.token(")"), this.space(), this.print(a.body, a);
    }function p(a) {
      this.word("switch"), this.space(), this.token("("), this.print(a.discriminant, a), this.token(")"), this.space(), this.token("{"), this.printSequence(a.cases, a, { indent: !0, addNewlines: function (b, c) {
          if (!b && a.cases[a.cases.length - 1] === c) return -1;
        } }), this.token("}");
    }function q(a) {
      a.test ? (this.word("case"), this.space(), this.print(a.test, a), this.token(":")) : (this.word("default"), this.token(":")), a.consequent.length && (this.newline(), this.printSequence(a.consequent, a, { indent: !0 }));
    }function r() {
      this.word("debugger"), this.semicolon();
    }function s() {
      if (this.token(","), this.newline(), this.endsWith("\n")) for (var a = 0; a < 4; a++) this.space(!0);
    }function t() {
      if (this.token(","), this.newline(), this.endsWith("\n")) for (var a = 0; a < 6; a++) this.space(!0);
    }function u(a, b) {
      this.word(a.kind), this.space();var c = !1;if (!z.isFor(b)) for (var d = a.declarations, e = Array.isArray(d), f = 0, d = e ? d : (0, x.default)(d);;) {
        var g;if (e) {
          if (f >= d.length) break;g = d[f++];
        } else {
          if (f = d.next(), f.done) break;g = f.value;
        }var h = g;h.init && (c = !0);
      }var i = void 0;c && (i = "const" === a.kind ? t : s), this.printList(a.declarations, a, { separator: i }), (!z.isFor(b) || b.left !== a && b.init !== a) && this.semicolon();
    }function v(a) {
      this.print(a.id, a), this.print(a.id.typeAnnotation, a), a.init && (this.space(), this.token("="), this.space(), this.print(a.init, a));
    }this || self;b.__esModule = !0, b.ThrowStatement = b.BreakStatement = b.ReturnStatement = b.ContinueStatement = b.ForAwaitStatement = b.ForOfStatement = b.ForInStatement = void 0;var w = a("17"),
        x = e(w);b.WithStatement = f, b.IfStatement = g, b.ForStatement = i, b.WhileStatement = j, b.DoWhileStatement = k, b.LabeledStatement = m, b.TryStatement = n, b.CatchClause = o, b.SwitchStatement = p, b.SwitchCase = q, b.DebuggerStatement = r, b.VariableDeclaration = u, b.VariableDeclarator = v;var y = a("11"),
        z = d(y),
        A = function (a) {
      return function (b) {
        this.word("for"), this.space(), "await" === a && (this.word("await"), this.space()), this.token("("), this.print(b.left, b), this.space(), this.word("await" === a ? "of" : a), this.space(), this.print(b.right, b), this.token(")"), this.printBlock(b);
      };
    };b.ForInStatement = A("in"), b.ForOfStatement = A("of"), b.ForAwaitStatement = A("await"), b.ContinueStatement = l("continue"), b.ReturnStatement = l("return", "argument"), b.BreakStatement = l("break"), b.ThrowStatement = l("throw", "argument");
  }), a.registerDynamic("56", [], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      this.printJoin(a.decorators, a), this.word("class"), a.id && (this.space(), this.print(a.id, a)), this.print(a.typeParameters, a), a.superClass && (this.space(), this.word("extends"), this.space(), this.print(a.superClass, a), this.print(a.superTypeParameters, a)), a.implements && (this.space(), this.word("implements"), this.space(), this.printList(a.implements, a)), this.space(), this.print(a.body, a);
    }function e(a) {
      this.token("{"), this.printInnerComments(a), 0 === a.body.length ? this.token("}") : (this.newline(), this.indent(), this.printSequence(a.body, a), this.dedent(), this.endsWith("\n") || this.newline(), this.rightBrace());
    }function f(a) {
      this.printJoin(a.decorators, a), a.static && (this.word("static"), this.space()), a.computed ? (this.token("["), this.print(a.key, a), this.token("]")) : (this._variance(a), this.print(a.key, a)), this.print(a.typeAnnotation, a), a.value && (this.space(), this.token("="), this.space(), this.print(a.value, a)), this.semicolon();
    }function g(a) {
      this.printJoin(a.decorators, a), a.static && (this.word("static"), this.space()), "constructorCall" === a.kind && (this.word("call"), this.space()), this._method(a);
    }this || self;b.__esModule = !0, b.ClassDeclaration = d, b.ClassBody = e, b.ClassProperty = f, b.ClassMethod = g, b.ClassExpression = d;
  }), a.registerDynamic("57", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      var b = this;this.print(a.typeParameters, a), this.token("("), this.printList(a.params, a, { iterator: function (a) {
          a.optional && b.token("?"), b.print(a.typeAnnotation, a);
        } }), this.token(")"), a.returnType && this.print(a.returnType, a);
    }function f(a) {
      var b = a.kind,
          c = a.key;"method" !== b && "init" !== b || a.generator && this.token("*"), "get" !== b && "set" !== b || (this.word(b), this.space()), a.async && (this.word("async"), this.space()), a.computed ? (this.token("["), this.print(c, a), this.token("]")) : this.print(c, a), this._params(a), this.space(), this.print(a.body, a);
    }function g(a) {
      a.async && (this.word("async"), this.space()), this.word("function"), a.generator && this.token("*"), a.id ? (this.space(), this.print(a.id, a)) : this.space(), this._params(a), this.space(), this.print(a.body, a);
    }function h(a) {
      a.async && (this.word("async"), this.space());var b = a.params[0];1 === a.params.length && k.isIdentifier(b) && !i(a, b) ? this.print(b, a) : this._params(a), this.space(), this.token("=>"), this.space(), this.print(a.body, a);
    }function i(a, b) {
      return a.typeParameters || a.returnType || b.typeAnnotation || b.optional || b.trailingComments;
    }this || self;b.__esModule = !0, b.FunctionDeclaration = void 0, b._params = e, b._method = f, b.FunctionExpression = g, b.ArrowFunctionExpression = h;var j = a("11"),
        k = d(j);b.FunctionDeclaration = g;
  }), a.registerDynamic("58", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      "type" !== a.importKind && "typeof" !== a.importKind || (this.word(a.importKind), this.space()), this.print(a.imported, a), a.local && a.local.name !== a.imported.name && (this.space(), this.word("as"), this.space(), this.print(a.local, a));
    }function f(a) {
      this.print(a.local, a);
    }function g(a) {
      this.print(a.exported, a);
    }function h(a) {
      this.print(a.local, a), a.exported && a.local.name !== a.exported.name && (this.space(), this.word("as"), this.space(), this.print(a.exported, a));
    }function i(a) {
      this.token("*"), this.space(), this.word("as"), this.space(), this.print(a.exported, a);
    }function j(a) {
      this.word("export"), this.space(), this.token("*"), this.space(), this.word("from"), this.space(), this.print(a.source, a), this.semicolon();
    }function k() {
      this.word("export"), this.space(), m.apply(this, arguments);
    }function l() {
      this.word("export"), this.space(), this.word("default"), this.space(), m.apply(this, arguments);
    }function m(a) {
      if (a.declaration) {
        var b = a.declaration;this.print(b, a), q.isStatement(b) || this.semicolon();
      } else {
        "type" === a.exportKind && (this.word("type"), this.space());for (var c = a.specifiers.slice(0), d = !1;;) {
          var e = c[0];if (!q.isExportDefaultSpecifier(e) && !q.isExportNamespaceSpecifier(e)) break;d = !0, this.print(c.shift(), a), c.length && (this.token(","), this.space());
        }(c.length || !c.length && !d) && (this.token("{"), c.length && (this.space(), this.printList(c, a), this.space()), this.token("}")), a.source && (this.space(), this.word("from"), this.space(), this.print(a.source, a)), this.semicolon();
      }
    }function n(a) {
      this.word("import"), this.space(), "type" !== a.importKind && "typeof" !== a.importKind || (this.word(a.importKind), this.space());var b = a.specifiers.slice(0);if (b && b.length) {
        for (;;) {
          var c = b[0];if (!q.isImportDefaultSpecifier(c) && !q.isImportNamespaceSpecifier(c)) break;this.print(b.shift(), a), b.length && (this.token(","), this.space());
        }b.length && (this.token("{"), this.space(), this.printList(b, a), this.space(), this.token("}")), this.space(), this.word("from"), this.space();
      }this.print(a.source, a), this.semicolon();
    }function o(a) {
      this.token("*"), this.space(), this.word("as"), this.space(), this.print(a.local, a);
    }this || self;b.__esModule = !0, b.ImportSpecifier = e, b.ImportDefaultSpecifier = f, b.ExportDefaultSpecifier = g, b.ExportSpecifier = h, b.ExportNamespaceSpecifier = i, b.ExportAllDeclaration = j, b.ExportNamedDeclaration = k, b.ExportDefaultDeclaration = l, b.ImportDeclaration = n, b.ImportNamespaceSpecifier = o;var p = a("11"),
        q = d(p);
  }), a.registerDynamic("59", ["5a"], !0, function (a, b, c) {
    "use strict";
    function d() {
      this.word("any");
    }function e(a) {
      this.print(a.elementType, a), this.token("["), this.token("]");
    }function f() {
      this.word("boolean");
    }function g(a) {
      this.word(a.value ? "true" : "false");
    }function h() {
      this.word("null");
    }function i(a) {
      this.word("declare"), this.space(), this.word("class"), this.space(), this._interfaceish(a);
    }function j(a) {
      this.word("declare"), this.space(), this.word("function"), this.space(), this.print(a.id, a), this.print(a.id.typeAnnotation.typeAnnotation, a), this.semicolon();
    }function k(a) {
      this.word("declare"), this.space(), this.InterfaceDeclaration(a);
    }function l(a) {
      this.word("declare"), this.space(), this.word("module"), this.space(), this.print(a.id, a), this.space(), this.print(a.body, a);
    }function m(a) {
      this.word("declare"), this.space(), this.word("module"), this.token("."), this.word("exports"), this.print(a.typeAnnotation, a);
    }function n(a) {
      this.word("declare"), this.space(), this.TypeAlias(a);
    }function o(a) {
      this.word("declare"), this.space(), this.word("var"), this.space(), this.print(a.id, a), this.print(a.id.typeAnnotation, a), this.semicolon();
    }function p() {
      this.token("*");
    }function q(a, b) {
      this.print(a.typeParameters, a), this.token("("), this.printList(a.params, a), a.rest && (a.params.length && (this.token(","), this.space()), this.token("..."), this.print(a.rest, a)), this.token(")"), "ObjectTypeCallProperty" === b.type || "DeclareFunction" === b.type ? this.token(":") : (this.space(), this.token("=>")), this.space(), this.print(a.returnType, a);
    }function r(a) {
      this.print(a.name, a), a.optional && this.token("?"), this.token(":"), this.space(), this.print(a.typeAnnotation, a);
    }function s(a) {
      this.print(a.id, a), this.print(a.typeParameters, a);
    }function t(a) {
      this.print(a.id, a), this.print(a.typeParameters, a), a.extends.length && (this.space(), this.word("extends"), this.space(), this.printList(a.extends, a)), a.mixins && a.mixins.length && (this.space(), this.word("mixins"), this.space(), this.printList(a.mixins, a)), this.space(), this.print(a.body, a);
    }function u(a) {
      "plus" === a.variance ? this.token("+") : "minus" === a.variance && this.token("-");
    }function v(a) {
      this.word("interface"), this.space(), this._interfaceish(a);
    }function w() {
      this.space(), this.token("&"), this.space();
    }function x(a) {
      this.printJoin(a.types, a, { separator: w });
    }function y() {
      this.word("mixed");
    }function z() {
      this.word("empty");
    }function A(a) {
      this.token("?"), this.print(a.typeAnnotation, a);
    }function B() {
      this.word("number");
    }function C() {
      this.word("string");
    }function D() {
      this.word("this");
    }function E(a) {
      this.token("["), this.printList(a.types, a), this.token("]");
    }function F(a) {
      this.word("typeof"), this.space(), this.print(a.argument, a);
    }function G(a) {
      this.word("type"), this.space(), this.print(a.id, a), this.print(a.typeParameters, a), this.space(), this.token("="), this.space(), this.print(a.right, a), this.semicolon();
    }function H(a) {
      this.token(":"), this.space(), a.optional && this.token("?"), this.print(a.typeAnnotation, a);
    }function I(a) {
      this._variance(a), this.word(a.name), a.bound && this.print(a.bound, a), a.default && (this.space(), this.token("="), this.space(), this.print(a.default, a));
    }function J(a) {
      this.token("<"), this.printList(a.params, a, {}), this.token(">");
    }function K(a) {
      var b = this;a.exact ? this.token("{|") : this.token("{");var c = a.properties.concat(a.callProperties, a.indexers);c.length && (this.space(), this.printJoin(c, a, { addNewlines: function (a) {
          if (a && !c[0]) return 1;
        }, indent: !0, statement: !0, iterator: function () {
          1 !== c.length && (b.format.flowCommaSeparator ? b.token(",") : b.semicolon(), b.space());
        } }), this.space()), a.exact ? this.token("|}") : this.token("}");
    }function L(a) {
      a.static && (this.word("static"), this.space()), this.print(a.value, a);
    }function M(a) {
      a.static && (this.word("static"), this.space()), this._variance(a), this.token("["), this.print(a.id, a), this.token(":"), this.space(), this.print(a.key, a), this.token("]"), this.token(":"), this.space(), this.print(a.value, a);
    }function N(a) {
      a.static && (this.word("static"), this.space()), this._variance(a), this.print(a.key, a), a.optional && this.token("?"), this.token(":"), this.space(), this.print(a.value, a);
    }function O(a) {
      this.token("..."), this.print(a.argument, a);
    }function P(a) {
      this.print(a.qualification, a), this.token("."), this.print(a.id, a);
    }function Q() {
      this.space(), this.token("|"), this.space();
    }function R(a) {
      this.printJoin(a.types, a, { separator: Q });
    }function S(a) {
      this.token("("), this.print(a.expression, a), this.print(a.typeAnnotation, a), this.token(")");
    }function T() {
      this.word("void");
    }this || self;b.__esModule = !0, b.AnyTypeAnnotation = d, b.ArrayTypeAnnotation = e, b.BooleanTypeAnnotation = f, b.BooleanLiteralTypeAnnotation = g, b.NullLiteralTypeAnnotation = h, b.DeclareClass = i, b.DeclareFunction = j, b.DeclareInterface = k, b.DeclareModule = l, b.DeclareModuleExports = m, b.DeclareTypeAlias = n, b.DeclareVariable = o, b.ExistentialTypeParam = p, b.FunctionTypeAnnotation = q, b.FunctionTypeParam = r, b.InterfaceExtends = s, b._interfaceish = t, b._variance = u, b.InterfaceDeclaration = v, b.IntersectionTypeAnnotation = x, b.MixedTypeAnnotation = y, b.EmptyTypeAnnotation = z, b.NullableTypeAnnotation = A;var U = a("5a");Object.defineProperty(b, "NumericLiteralTypeAnnotation", { enumerable: !0, get: function () {
        return U.NumericLiteral;
      } }), Object.defineProperty(b, "StringLiteralTypeAnnotation", { enumerable: !0, get: function () {
        return U.StringLiteral;
      } }), b.NumberTypeAnnotation = B, b.StringTypeAnnotation = C, b.ThisTypeAnnotation = D, b.TupleTypeAnnotation = E, b.TypeofTypeAnnotation = F, b.TypeAlias = G, b.TypeAnnotation = H, b.TypeParameter = I, b.TypeParameterInstantiation = J, b.ObjectTypeAnnotation = K, b.ObjectTypeCallProperty = L, b.ObjectTypeIndexer = M, b.ObjectTypeProperty = N, b.ObjectTypeSpreadProperty = O, b.QualifiedTypeIdentifier = P, b.UnionTypeAnnotation = R, b.TypeCastExpression = S, b.VoidTypeAnnotation = T, b.ClassImplements = s, b.GenericTypeAnnotation = s, b.TypeParameterDeclaration = J;
  }), a.registerDynamic("5b", [], !0, function (a, b, c) {
    var d = this || self;!function (a) {
      var e = "object" == typeof b && b,
          f = "object" == typeof c && c && c.exports == e && c,
          g = "object" == typeof d && d;g.global !== g && g.window !== g || (a = g);var h = {},
          i = h.hasOwnProperty,
          j = function (a, b) {
        var c;for (c in a) i.call(a, c) && b(c, a[c]);
      },
          k = function (a, b) {
        return b ? (j(b, function (b, c) {
          a[b] = c;
        }), a) : a;
      },
          l = function (a, b) {
        for (var c = a.length, d = -1; ++d < c;) b(a[d]);
      },
          m = h.toString,
          n = function (a) {
        return "[object Array]" == m.call(a);
      },
          o = function (a) {
        return "[object Object]" == m.call(a);
      },
          p = function (a) {
        return "string" == typeof a || "[object String]" == m.call(a);
      },
          q = function (a) {
        return "number" == typeof a || "[object Number]" == m.call(a);
      },
          r = function (a) {
        return "function" == typeof a || "[object Function]" == m.call(a);
      },
          s = function (a) {
        return "[object Map]" == m.call(a);
      },
          t = function (a) {
        return "[object Set]" == m.call(a);
      },
          u = { '"': '\\"', "'": "\\'", "\\": "\\\\", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "\t": "\\t" },
          v = /["'\\\b\f\n\r\t]/,
          w = /[0-9]/,
          x = /[ !#-&\(-\[\]-~]/,
          y = function (a, b) {
        var c = { escapeEverything: !1, escapeEtago: !1, quotes: "single", wrap: !1, es6: !1, json: !1, compact: !0, lowercaseHex: !1, numbers: "decimal", indent: "\t", __indent__: "", __inline1__: !1, __inline2__: !1 },
            d = b && b.json;d && (c.quotes = "double", c.wrap = !0), b = k(c, b), "single" != b.quotes && "double" != b.quotes && (b.quotes = "single");var e,
            f = "double" == b.quotes ? '"' : "'",
            g = b.compact,
            h = b.indent,
            i = b.lowercaseHex,
            m = "",
            z = b.__inline1__,
            A = b.__inline2__,
            B = g ? "" : "\n",
            C = !0,
            D = "binary" == b.numbers,
            E = "octal" == b.numbers,
            F = "decimal" == b.numbers,
            G = "hexadecimal" == b.numbers;if (d && a && r(a.toJSON) && (a = a.toJSON()), !p(a)) {
          if (s(a)) return 0 == a.size ? "new Map()" : (g || (b.__inline1__ = !0), "new Map(" + y(Array.from(a), b) + ")");if (t(a)) return 0 == a.size ? "new Set()" : "new Set(" + y(Array.from(a), b) + ")";if (n(a)) return e = [], b.wrap = !0, z ? (b.__inline1__ = !1, b.__inline2__ = !0) : (m = b.__indent__, h += m, b.__indent__ = h), l(a, function (a) {
            C = !1, A && (b.__inline2__ = !1), e.push((g || A ? "" : h) + y(a, b));
          }), C ? "[]" : A ? "[" + e.join(", ") + "]" : "[" + B + e.join("," + B) + B + (g ? "" : m) + "]";if (!q(a)) return o(a) ? (e = [], b.wrap = !0, m = b.__indent__, h += m, b.__indent__ = h, j(a, function (a, c) {
            C = !1, e.push((g ? "" : h) + y(a, b) + ":" + (g ? "" : " ") + y(c, b));
          }), C ? "{}" : "{" + B + e.join("," + B) + B + (g ? "" : m) + "}") : d ? JSON.stringify(a) || "null" : String(a);if (d) return JSON.stringify(a);if (F) return String(a);if (G) {
            var H = a.toString(16);return i || (H = H.toUpperCase()), "0x" + H;
          }if (D) return "0b" + a.toString(2);if (E) return "0o" + a.toString(8);
        }var I,
            J,
            K,
            L = a,
            M = -1,
            N = L.length;for (e = ""; ++M < N;) {
          var O = L.charAt(M);if (b.es6 && (I = L.charCodeAt(M)) >= 55296 && I <= 56319 && N > M + 1 && (J = L.charCodeAt(M + 1)) >= 56320 && J <= 57343) {
            K = 1024 * (I - 55296) + J - 56320 + 65536;var P = K.toString(16);i || (P = P.toUpperCase()), e += "\\u{" + P + "}", M++;
          } else {
            if (!b.escapeEverything) {
              if (x.test(O)) {
                e += O;continue;
              }if ('"' == O) {
                e += f == O ? '\\"' : O;continue;
              }if ("'" == O) {
                e += f == O ? "\\'" : O;continue;
              }
            }if ("\0" != O || d || w.test(L.charAt(M + 1))) {
              if (v.test(O)) e += u[O];else {
                var Q = O.charCodeAt(0),
                    P = Q.toString(16);i || (P = P.toUpperCase());var R = P.length > 2 || d,
                    S = "\\" + (R ? "u" : "x") + ("0000" + P).slice(R ? -4 : -2);e += S;
              }
            } else e += "\\0";
          }
        }return b.wrap && (e = f + e + f), b.escapeEtago ? e.replace(/<\/(script|style)/gi, "<\\/$1") : e;
      };y.version = "1.3.0", e && !e.nodeType ? f ? f.exports = y : e.jsesc = y : a.jsesc = y;
    }(b);
  }), a.registerDynamic("5a", ["11", "5b"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function f(a) {
      a.variance && ("plus" === a.variance ? this.token("+") : "minus" === a.variance && this.token("-")), this.word(a.name);
    }function g(a) {
      this.token("..."), this.print(a.argument, a);
    }function h(a) {
      var b = a.properties;this.token("{"), this.printInnerComments(a), b.length && (this.space(), this.printList(b, a, { indent: !0, statement: !0 }), this.space()), this.token("}");
    }function i(a) {
      this.printJoin(a.decorators, a), this._method(a);
    }function j(a) {
      if (this.printJoin(a.decorators, a), a.computed) this.token("["), this.print(a.key, a), this.token("]");else {
        if (r.isAssignmentPattern(a.value) && r.isIdentifier(a.key) && a.key.name === a.value.left.name) return void this.print(a.value, a);if (this.print(a.key, a), a.shorthand && r.isIdentifier(a.key) && r.isIdentifier(a.value) && a.key.name === a.value.name) return;
      }this.token(":"), this.space(), this.print(a.value, a);
    }function k(a) {
      var b = a.elements,
          c = b.length;this.token("["), this.printInnerComments(a);for (var d = 0; d < b.length; d++) {
        var e = b[d];e ? (d > 0 && this.space(), this.print(e, a), d < c - 1 && this.token(",")) : this.token(",");
      }this.token("]");
    }function l(a) {
      this.word("/" + a.pattern + "/" + a.flags);
    }function m(a) {
      this.word(a.value ? "true" : "false");
    }function n() {
      this.word("null");
    }function o(a) {
      var b = this.getPossibleRaw(a),
          c = a.value + "";null == b ? this.number(c) : this.format.minified ? this.number(b.length < c.length ? b : c) : this.number(b);
    }function p(a, b) {
      var c = this.getPossibleRaw(a);if (!this.format.minified && null != c) return void this.token(c);var d = { quotes: r.isJSX(b) ? "double" : this.format.quotes, wrap: !0 };this.format.jsonCompatibleStrings && (d.json = !0);var e = (0, t.default)(a.value, d);return this.token(e);
    }this || self;b.__esModule = !0, b.ArrayPattern = b.ObjectPattern = b.RestProperty = b.SpreadProperty = b.SpreadElement = void 0, b.Identifier = f, b.RestElement = g, b.ObjectExpression = h, b.ObjectMethod = i, b.ObjectProperty = j, b.ArrayExpression = k, b.RegExpLiteral = l, b.BooleanLiteral = m, b.NullLiteral = n, b.NumericLiteral = o, b.StringLiteral = p;var q = a("11"),
        r = e(q),
        s = a("5b"),
        t = d(s);b.SpreadElement = g, b.SpreadProperty = g, b.RestProperty = g, b.ObjectPattern = h, b.ArrayPattern = k;
  }), a.registerDynamic("5c", ["5a"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      this.print(a.program, a);
    }function e(a) {
      this.printInnerComments(a, !1), this.printSequence(a.directives, a), a.directives && a.directives.length && this.newline(), this.printSequence(a.body, a);
    }function f(a) {
      this.token("{"), this.printInnerComments(a);var b = a.directives && a.directives.length;a.body.length || b ? (this.newline(), this.printSequence(a.directives, a, { indent: !0 }), b && this.newline(), this.printSequence(a.body, a, { indent: !0 }), this.removeTrailingNewline(), this.source("end", a.loc), this.endsWith("\n") || this.newline(), this.rightBrace()) : (this.source("end", a.loc), this.token("}"));
    }function g() {}function h(a) {
      this.print(a.value, a), this.semicolon();
    }this || self;b.__esModule = !0, b.File = d, b.Program = e, b.BlockStatement = f, b.Noop = g, b.Directive = h;var i = a("5a");Object.defineProperty(b, "DirectiveLiteral", { enumerable: !0, get: function () {
        return i.StringLiteral;
      } });
  }), a.registerDynamic("5d", ["17"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      this.print(a.name, a), a.value && (this.token("="), this.print(a.value, a));
    }function f(a) {
      this.word(a.name);
    }function g(a) {
      this.print(a.namespace, a), this.token(":"), this.print(a.name, a);
    }function h(a) {
      this.print(a.object, a), this.token("."), this.print(a.property, a);
    }function i(a) {
      this.token("{"), this.token("..."), this.print(a.argument, a), this.token("}");
    }function j(a) {
      this.token("{"), this.print(a.expression, a), this.token("}");
    }function k(a) {
      this.token("{"), this.token("..."), this.print(a.expression, a), this.token("}");
    }function l(a) {
      this.token(a.value);
    }function m(a) {
      var b = a.openingElement;if (this.print(b, a), !b.selfClosing) {
        this.indent();for (var c = a.children, d = Array.isArray(c), e = 0, c = d ? c : (0, s.default)(c);;) {
          var f;if (d) {
            if (e >= c.length) break;f = c[e++];
          } else {
            if (e = c.next(), e.done) break;f = e.value;
          }var g = f;this.print(g, a);
        }this.dedent(), this.print(a.closingElement, a);
      }
    }function n() {
      this.space();
    }function o(a) {
      this.token("<"), this.print(a.name, a), a.attributes.length > 0 && (this.space(), this.printJoin(a.attributes, a, { separator: n })), a.selfClosing ? (this.space(), this.token("/>")) : this.token(">");
    }function p(a) {
      this.token("</"), this.print(a.name, a), this.token(">");
    }function q() {}this || self;b.__esModule = !0;var r = a("17"),
        s = d(r);b.JSXAttribute = e, b.JSXIdentifier = f, b.JSXNamespacedName = g, b.JSXMemberExpression = h, b.JSXSpreadAttribute = i, b.JSXExpressionContainer = j, b.JSXSpreadChild = k, b.JSXText = l, b.JSXElement = m, b.JSXOpeningElement = o, b.JSXClosingElement = p, b.JSXEmptyExpression = q;
  }), a.registerDynamic("5e", ["5f", "17", "60", "3a", "1f", "3f", "44", "45", "61", "4a", "53", "4b", "11", "4c", "54", "55", "56", "57", "58", "5a", "59", "5c", "5d"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f() {
      this.token(","), this.space();
    }this || self;b.__esModule = !0;var g = a("5f"),
        h = e(g),
        i = a("17"),
        j = e(i),
        k = a("60"),
        l = e(k),
        m = a("3a"),
        n = e(m),
        o = a("1f"),
        p = e(o),
        q = a("3f"),
        r = e(q),
        s = a("44"),
        t = e(s),
        u = a("45"),
        v = e(u),
        w = a("61"),
        x = e(w),
        y = a("4a"),
        z = e(y),
        A = a("53"),
        B = d(A),
        C = a("4b"),
        D = e(C),
        E = a("11"),
        F = d(E),
        G = /e/i,
        H = /\.0+$/,
        I = /^0[box]/,
        J = function () {
      function a(b, c, d) {
        (0, p.default)(this, a), this.inForStatementInitCounter = 0, this._printStack = [], this._indent = 0, this._insideAux = !1, this._printedCommentStarts = {}, this._parenPushNewlineState = null, this._printAuxAfterOnNextUserNode = !1, this._printedComments = new n.default(), this._endsWithInteger = !1, this._endsWithWord = !1, this.format = b || {}, this._buf = new z.default(c), this._whitespace = d.length > 0 ? new D.default(d) : null;
      }return a.prototype.generate = function (a) {
        return this.print(a), this._maybeAddAuxComment(), this._buf.get();
      }, a.prototype.indent = function () {
        this.format.compact || this.format.concise || this._indent++;
      }, a.prototype.dedent = function () {
        this.format.compact || this.format.concise || this._indent--;
      }, a.prototype.semicolon = function () {
        var a = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];this._maybeAddAuxComment(), this._append(";", !a);
      }, a.prototype.rightBrace = function () {
        this.format.minified && this._buf.removeLastSemicolon(), this.token("}");
      }, a.prototype.space = function () {
        var a = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];this.format.compact || (this._buf.hasContent() && !this.endsWith(" ") && !this.endsWith("\n") || a) && this._space();
      }, a.prototype.word = function (a) {
        this._endsWithWord && this._space(), this._maybeAddAuxComment(), this._append(a), this._endsWithWord = !0;
      }, a.prototype.number = function (a) {
        this.word(a), this._endsWithInteger = (0, v.default)(+a) && !I.test(a) && !G.test(a) && !H.test(a) && "." !== a[a.length - 1];
      }, a.prototype.token = function (a) {
        ("--" === a && this.endsWith("!") || "+" === a[0] && this.endsWith("+") || "-" === a[0] && this.endsWith("-") || "." === a[0] && this._endsWithInteger) && this._space(), this._maybeAddAuxComment(), this._append(a);
      }, a.prototype.newline = function (a) {
        if (!this.format.retainLines && !this.format.compact) {
          if (this.format.concise) return void this.space();if (!(this.endsWith("\n\n") || ("number" != typeof a && (a = 1), a = Math.min(2, a), (this.endsWith("{\n") || this.endsWith(":\n")) && a--, a <= 0))) for (var b = 0; b < a; b++) this._newline();
        }
      }, a.prototype.endsWith = function (a) {
        return this._buf.endsWith(a);
      }, a.prototype.removeTrailingNewline = function () {
        this._buf.removeTrailingNewline();
      }, a.prototype.source = function (a, b) {
        this._catchUp(a, b), this._buf.source(a, b);
      }, a.prototype.withSource = function (a, b, c) {
        this._catchUp(a, b), this._buf.withSource(a, b, c);
      }, a.prototype._space = function () {
        this._append(" ", !0);
      }, a.prototype._newline = function () {
        this._append("\n", !0);
      }, a.prototype._append = function (a) {
        var b = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];this._maybeAddParen(a), this._maybeIndent(a), b ? this._buf.queue(a) : this._buf.append(a), this._endsWithWord = !1, this._endsWithInteger = !1;
      }, a.prototype._maybeIndent = function (a) {
        this._indent && this.endsWith("\n") && "\n" !== a[0] && this._buf.queue(this._getIndent());
      }, a.prototype._maybeAddParen = function (a) {
        var b = this._parenPushNewlineState;if (b) {
          this._parenPushNewlineState = null;var c = void 0;for (c = 0; c < a.length && " " === a[c]; c++);if (c !== a.length) {
            var d = a[c];"\n" !== d && "/" !== d || (this.token("("), this.indent(), b.printed = !0);
          }
        }
      }, a.prototype._catchUp = function (a, b) {
        if (this.format.retainLines) {
          var c = b ? b[a] : null;if (c && null !== c.line) for (var d = c.line - this._buf.getCurrentLine(), e = 0; e < d; e++) this._newline();
        }
      }, a.prototype._getIndent = function () {
        return (0, x.default)(this.format.indent.style, this._indent);
      }, a.prototype.startTerminatorless = function () {
        return this._parenPushNewlineState = { printed: !1 };
      }, a.prototype.endTerminatorless = function (a) {
        a.printed && (this.dedent(), this.newline(), this.token(")"));
      }, a.prototype.print = function (a, b) {
        var c = this;if (a) {
          var d = this.format.concise;a._compact && (this.format.concise = !0);if (!this[a.type]) throw new ReferenceError("unknown node of type " + (0, l.default)(a.type) + " with constructor " + (0, l.default)(a && a.constructor.name));this._printStack.push(a);var e = this._insideAux;this._insideAux = !a.loc, this._maybeAddAuxComment(this._insideAux && !e);var f = B.needsParens(a, b, this._printStack);this.format.retainFunctionParens && "FunctionExpression" === a.type && a.extra && a.extra.parenthesized && (f = !0), f && this.token("("), this._printLeadingComments(a, b);var g = F.isProgram(a) || F.isFile(a) ? null : a.loc;this.withSource("start", g, function () {
            c[a.type](a, b);
          }), this._printTrailingComments(a, b), f && this.token(")"), this._printStack.pop(), this.format.concise = d, this._insideAux = e;
        }
      }, a.prototype._maybeAddAuxComment = function (a) {
        a && this._printAuxBeforeComment(), this._insideAux || this._printAuxAfterComment();
      }, a.prototype._printAuxBeforeComment = function () {
        if (!this._printAuxAfterOnNextUserNode) {
          this._printAuxAfterOnNextUserNode = !0;var a = this.format.auxiliaryCommentBefore;a && this._printComment({ type: "CommentBlock", value: a });
        }
      }, a.prototype._printAuxAfterComment = function () {
        if (this._printAuxAfterOnNextUserNode) {
          this._printAuxAfterOnNextUserNode = !1;var a = this.format.auxiliaryCommentAfter;a && this._printComment({ type: "CommentBlock", value: a });
        }
      }, a.prototype.getPossibleRaw = function (a) {
        var b = a.extra;if (b && null != b.raw && null != b.rawValue && a.value === b.rawValue) return b.raw;
      }, a.prototype.printJoin = function (a, b) {
        var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};if (a && a.length) {
          c.indent && this.indent();for (var d = { addNewlines: c.addNewlines }, e = 0; e < a.length; e++) {
            var f = a[e];f && (c.statement && this._printNewline(!0, f, b, d), this.print(f, b), c.iterator && c.iterator(f, e), c.separator && e < a.length - 1 && c.separator.call(this), c.statement && this._printNewline(!1, f, b, d));
          }c.indent && this.dedent();
        }
      }, a.prototype.printAndIndentOnComments = function (a, b) {
        var c = !!a.leadingComments;c && this.indent(), this.print(a, b), c && this.dedent();
      }, a.prototype.printBlock = function (a) {
        var b = a.body;F.isEmptyStatement(b) || this.space(), this.print(b, a);
      }, a.prototype._printTrailingComments = function (a, b) {
        this._printComments(this._getComments(!1, a, b));
      }, a.prototype._printLeadingComments = function (a, b) {
        this._printComments(this._getComments(!0, a, b));
      }, a.prototype.printInnerComments = function (a) {
        var b = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];a.innerComments && (b && this.indent(), this._printComments(a.innerComments), b && this.dedent());
      }, a.prototype.printSequence = function (a, b) {
        var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};return c.statement = !0, this.printJoin(a, b, c);
      }, a.prototype.printList = function (a, b) {
        var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};return null == c.separator && (c.separator = f), this.printJoin(a, b, c);
      }, a.prototype._printNewline = function (a, b, c, d) {
        var e = this;if (!this.format.retainLines && !this.format.compact) {
          if (this.format.concise) return void this.space();var f = 0;if (null != b.start && !b._ignoreUserWhitespace && this._whitespace) {
            if (a) {
              var g = b.leadingComments,
                  h = g && (0, r.default)(g, function (a) {
                return !!a.loc && e.format.shouldPrintComment(a.value);
              });f = this._whitespace.getNewlinesBefore(h || b);
            } else {
              var i = b.trailingComments,
                  j = i && (0, t.default)(i, function (a) {
                return !!a.loc && e.format.shouldPrintComment(a.value);
              });f = this._whitespace.getNewlinesAfter(j || b);
            }
          } else {
            a || f++, d.addNewlines && (f += d.addNewlines(a, b) || 0);var k = B.needsWhitespaceAfter;a && (k = B.needsWhitespaceBefore), k(b, c) && f++, this._buf.hasContent() || (f = 0);
          }this.newline(f);
        }
      }, a.prototype._getComments = function (a, b) {
        return b && (a ? b.leadingComments : b.trailingComments) || [];
      }, a.prototype._printComment = function (a) {
        var b = this;if (this.format.shouldPrintComment(a.value) && !a.ignore && !this._printedComments.has(a)) {
          if (this._printedComments.add(a), null != a.start) {
            if (this._printedCommentStarts[a.start]) return;this._printedCommentStarts[a.start] = !0;
          }this.newline(this._whitespace ? this._whitespace.getNewlinesBefore(a) : 0), this.endsWith("[") || this.endsWith("{") || this.space();var c = "CommentLine" === a.type ? "//" + a.value + "\n" : "/*" + a.value + "*/";if ("CommentBlock" === a.type && this.format.indent.adjustMultilineComment) {
            var d = a.loc && a.loc.start.column;if (d) {
              var e = new RegExp("\\n\\s{1," + d + "}", "g");c = c.replace(e, "\n");
            }var f = Math.max(this._getIndent().length, this._buf.getCurrentColumn());c = c.replace(/\n(?!$)/g, "\n" + (0, x.default)(" ", f));
          }this.withSource("start", a.loc, function () {
            b._append(c);
          }), this.newline((this._whitespace ? this._whitespace.getNewlinesAfter(a) : 0) + ("CommentLine" === a.type ? -1 : 0));
        }
      }, a.prototype._printComments = function (a) {
        if (a && a.length) for (var b = a, c = Array.isArray(b), d = 0, b = c ? b : (0, j.default)(b);;) {
          var e;if (c) {
            if (d >= b.length) break;e = b[d++];
          } else {
            if (d = b.next(), d.done) break;e = d.value;
          }var f = e;this._printComment(f);
        }
      }, a;
    }();b.default = J;for (var K = [a("4c"), a("54"), a("55"), a("56"), a("57"), a("58"), a("5a"), a("59"), a("5c"), a("5d")], L = 0; L < K.length; L++) {
      var M = K[L];(0, h.default)(J.prototype, M);
    }c.exports = b.default;
  }), a.registerDynamic("e", ["1f", "20", "21", "25", "31", "f", "5e"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b, c) {
      var d = "  ";if (a && "string" == typeof a) {
        var e = (0, o.default)(a).indent;e && " " !== e && (d = e);
      }var f = { auxiliaryCommentBefore: b.auxiliaryCommentBefore, auxiliaryCommentAfter: b.auxiliaryCommentAfter, shouldPrintComment: b.shouldPrintComment, retainLines: b.retainLines, retainFunctionParens: b.retainFunctionParens, comments: null == b.comments || b.comments, compact: b.compact, minified: b.minified, concise: b.concise, quotes: b.quotes || g(a, c), jsonCompatibleStrings: b.jsonCompatibleStrings, indent: { adjustMultilineComment: !0, style: d, base: 0 }, flowCommaSeparator: b.flowCommaSeparator };return f.minified ? (f.compact = !0, f.shouldPrintComment = f.shouldPrintComment || function () {
        return f.comments;
      }) : f.shouldPrintComment = f.shouldPrintComment || function (a) {
        return f.comments || a.indexOf("@license") >= 0 || a.indexOf("@preserve") >= 0;
      }, "auto" === f.compact && (f.compact = a.length > 5e5, f.compact && console.error("[BABEL] " + s.get("codeGeneratorDeopt", b.filename, "500KB"))), f.compact && (f.indent.adjustMultilineComment = !1), f;
    }function g(a, b) {
      if (!a) return "double";for (var c = { single: 0, double: 0 }, d = 0, e = 0; e < b.length; e++) {
        var f = b[e];if ("string" === f.type.label) {
          if ("'" === a.slice(f.start, f.end)[0] ? c.single++ : c.double++, ++d >= 3) break;
        }
      }return c.single > c.double ? "single" : "double";
    }this || self;b.__esModule = !0, b.CodeGenerator = void 0;var h = a("1f"),
        i = e(h),
        j = a("20"),
        k = e(j),
        l = a("21"),
        m = e(l);b.default = function (a, b, c) {
      return new v(a, b, c).generate();
    };var n = a("25"),
        o = e(n),
        p = a("31"),
        q = e(p),
        r = a("f"),
        s = d(r),
        t = a("5e"),
        u = e(t),
        v = function (a) {
      function b(c) {
        var d = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
            e = arguments[2];(0, i.default)(this, b);var g = c.tokens || [],
            h = f(e, d, g),
            j = d.sourceMaps ? new q.default(d, e) : null,
            l = (0, k.default)(this, a.call(this, h, j, g));return l.ast = c, l;
      }return (0, m.default)(b, a), b.prototype.generate = function () {
        return a.prototype.generate.call(this, this.ast);
      }, b;
    }(u.default);b.CodeGenerator = function () {
      function a(b, c, d) {
        (0, i.default)(this, a), this._generator = new v(b, c, d);
      }return a.prototype.generate = function () {
        return this._generator.generate();
      }, a;
    }();
  }), a.registerDynamic("62", ["1f", "63", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var e = a("1f"),
        f = d(e),
        g = a("63"),
        h = d(g),
        i = (0, h.default)("babel:verbose"),
        j = (0, h.default)("babel"),
        k = [],
        l = function () {
      function a(b, c) {
        (0, f.default)(this, a), this.filename = c, this.file = b;
      }return a.prototype._buildMessage = function (a) {
        var b = "[BABEL] " + this.filename;return a && (b += ": " + a), b;
      }, a.prototype.warn = function (a) {
        console.warn(this._buildMessage(a));
      }, a.prototype.error = function (a) {
        throw new (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Error)(this._buildMessage(a));
      }, a.prototype.deprecate = function (a) {
        this.file.opts && this.file.opts.suppressDeprecationMessages || (a = this._buildMessage(a), k.indexOf(a) >= 0 || (k.push(a), console.error(a)));
      }, a.prototype.verbose = function (a) {
        i.enabled && i(this._buildMessage(a));
      }, a.prototype.debug = function (a) {
        j.enabled && j(this._buildMessage(a));
      }, a.prototype.deopt = function (a, b) {
        this.debug(b);
      }, a;
    }();b.default = l, c.exports = b.default;
  }), a.registerDynamic("64", ["65", "66", "50"], !0, function (a, b, c) {
    function d(a) {
      return g(a) || f(a) || !!(h && a && a[h]);
    }var e = (this || self, a("65")),
        f = a("66"),
        g = a("50"),
        h = e ? e.isConcatSpreadable : void 0;c.exports = d;
  }), a.registerDynamic("67", ["68", "64"], !0, function (a, b, c) {
    function d(a, b, c, g, h) {
      var i = -1,
          j = a.length;for (c || (c = f), h || (h = []); ++i < j;) {
        var k = a[i];b > 0 && c(k) ? b > 1 ? d(k, b - 1, c, g, h) : e(h, k) : g || (h[h.length] = k);
      }return h;
    }var e = (this || self, a("68")),
        f = a("64");c.exports = d;
  }), a.registerDynamic("69", ["6a", "6b"], !0, function (a, b, c) {
    function d(a, b, c, d) {
      var i = c.length,
          j = i,
          k = !d;if (null == a) return !j;for (a = Object(a); i--;) {
        var l = c[i];if (k && l[2] ? l[1] !== a[l[0]] : !(l[0] in a)) return !1;
      }for (; ++i < j;) {
        l = c[i];var m = l[0],
            n = a[m],
            o = l[1];if (k && l[2]) {
          if (void 0 === n && !(m in a)) return !1;
        } else {
          var p = new e();if (d) var q = d(n, o, m, a, b, p);if (!(void 0 === q ? f(o, n, g | h, d, p) : q)) return !1;
        }
      }return !0;
    }var e = (this || self, a("6a")),
        f = a("6b"),
        g = 1,
        h = 2;c.exports = d;
  }), a.registerDynamic("6c", ["6d", "42"], !0, function (a, b, c) {
    function d(a) {
      for (var b = f(a), c = b.length; c--;) {
        var d = b[c],
            g = a[d];b[c] = [d, g, e(g)];
      }return b;
    }var e = (this || self, a("6d")),
        f = a("42");c.exports = d;
  }), a.registerDynamic("6e", ["69", "6c", "6f"], !0, function (a, b, c) {
    function d(a) {
      var b = f(a);return 1 == b.length && b[0][2] ? g(b[0][0], b[0][1]) : function (c) {
        return c === a || e(c, a, b);
      };
    }var e = (this || self, a("69")),
        f = a("6c"),
        g = a("6f");c.exports = d;
  }), a.registerDynamic("70", [], !0, function (a, b, c) {
    function d(a, b) {
      for (var c = -1, d = null == a ? 0 : a.length; ++c < d;) if (b(a[c], c, a)) return !0;return !1;
    }this || self;c.exports = d;
  }), a.registerDynamic("71", ["72", "70", "73"], !0, function (a, b, c) {
    function d(a, b, c, d, j, k) {
      var l = c & h,
          m = a.length,
          n = b.length;if (m != n && !(l && n > m)) return !1;var o = k.get(a);if (o && k.get(b)) return o == b;var p = -1,
          q = !0,
          r = c & i ? new e() : void 0;for (k.set(a, b), k.set(b, a); ++p < m;) {
        var s = a[p],
            t = b[p];if (d) var u = l ? d(t, s, p, b, a, k) : d(s, t, p, a, b, k);if (void 0 !== u) {
          if (u) continue;q = !1;break;
        }if (r) {
          if (!f(b, function (a, b) {
            if (!g(r, b) && (s === a || j(s, a, c, d, k))) return r.push(b);
          })) {
            q = !1;break;
          }
        } else if (s !== t && !j(s, t, c, d, k)) {
          q = !1;break;
        }
      }return k.delete(a), k.delete(b), q;
    }var e = (this || self, a("72")),
        f = a("70"),
        g = a("73"),
        h = 1,
        i = 2;c.exports = d;
  }), a.registerDynamic("74", ["65", "75", "76", "71", "77", "78"], !0, function (a, b, c) {
    function d(a, b, c, d, e, x, z) {
      switch (c) {case w:
          if (a.byteLength != b.byteLength || a.byteOffset != b.byteOffset) return !1;a = a.buffer, b = b.buffer;case v:
          return !(a.byteLength != b.byteLength || !x(new f(a), new f(b)));case m:case n:case q:
          return g(+a, +b);case o:
          return a.name == b.name && a.message == b.message;case r:case t:
          return a == b + "";case p:
          var A = i;case s:
          var B = d & k;if (A || (A = j), a.size != b.size && !B) return !1;var C = z.get(a);if (C) return C == b;d |= l, z.set(a, b);var D = h(A(a), A(b), d, e, x, z);return z.delete(a), D;case u:
          if (y) return y.call(a) == y.call(b);}return !1;
    }var e = (this || self, a("65")),
        f = a("75"),
        g = a("76"),
        h = a("71"),
        i = a("77"),
        j = a("78"),
        k = 1,
        l = 2,
        m = "[object Boolean]",
        n = "[object Date]",
        o = "[object Error]",
        p = "[object Map]",
        q = "[object Number]",
        r = "[object RegExp]",
        s = "[object Set]",
        t = "[object String]",
        u = "[object Symbol]",
        v = "[object ArrayBuffer]",
        w = "[object DataView]",
        x = e ? e.prototype : void 0,
        y = x ? x.valueOf : void 0;c.exports = d;
  }), a.registerDynamic("79", ["7a"], !0, function (a, b, c) {
    function d(a, b, c, d, g, i) {
      var j = c & f,
          k = e(a),
          l = k.length;if (l != e(b).length && !j) return !1;for (var m = l; m--;) {
        var n = k[m];if (!(j ? n in b : h.call(b, n))) return !1;
      }var o = i.get(a);if (o && i.get(b)) return o == b;var p = !0;i.set(a, b), i.set(b, a);for (var q = j; ++m < l;) {
        n = k[m];var r = a[n],
            s = b[n];if (d) var t = j ? d(s, r, n, b, a, i) : d(r, s, n, a, b, i);if (!(void 0 === t ? r === s || g(r, s, c, d, i) : t)) {
          p = !1;break;
        }q || (q = "constructor" == n);
      }if (p && !q) {
        var u = a.constructor,
            v = b.constructor;u != v && "constructor" in a && "constructor" in b && !("function" == typeof u && u instanceof u && "function" == typeof v && v instanceof v) && (p = !1);
      }return i.delete(a), i.delete(b), p;
    }var e = (this || self, a("7a")),
        f = 1,
        g = Object.prototype,
        h = g.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("7b", ["6a", "71", "74", "79", "7c", "50", "7d", "7e"], !0, function (a, b, c) {
    function d(a, b, c, d, q, s) {
      var t = j(a),
          u = j(b),
          v = t ? o : i(a),
          w = u ? o : i(b);v = v == n ? p : v, w = w == n ? p : w;var x = v == p,
          y = w == p,
          z = v == w;if (z && k(a)) {
        if (!k(b)) return !1;t = !0, x = !1;
      }if (z && !x) return s || (s = new e()), t || l(a) ? f(a, b, c, d, q, s) : g(a, b, v, c, d, q, s);if (!(c & m)) {
        var A = x && r.call(a, "__wrapped__"),
            B = y && r.call(b, "__wrapped__");if (A || B) {
          var C = A ? a.value() : a,
              D = B ? b.value() : b;return s || (s = new e()), q(C, D, c, d, s);
        }
      }return !!z && (s || (s = new e()), h(a, b, c, d, q, s));
    }var e = (this || self, a("6a")),
        f = a("71"),
        g = a("74"),
        h = a("79"),
        i = a("7c"),
        j = a("50"),
        k = a("7d"),
        l = a("7e"),
        m = 1,
        n = "[object Arguments]",
        o = "[object Array]",
        p = "[object Object]",
        q = Object.prototype,
        r = q.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("6b", ["7b", "7f"], !0, function (a, b, c) {
    function d(a, b, c, g, h) {
      return a === b || (null == a || null == b || !f(a) && !f(b) ? a !== a && b !== b : e(a, b, c, g, d, h));
    }var e = (this || self, a("7b")),
        f = a("7f");c.exports = d;
  }), a.registerDynamic("80", ["81"], !0, function (a, b, c) {
    function d(a, b, c) {
      var d = null == a ? void 0 : e(a, b);return void 0 === d ? c : d;
    }var e = (this || self, a("81"));c.exports = d;
  }), a.registerDynamic("82", [], !0, function (a, b, c) {
    function d(a, b) {
      return null != a && b in Object(a);
    }this || self;c.exports = d;
  }), a.registerDynamic("83", ["82", "84"], !0, function (a, b, c) {
    function d(a, b) {
      return null != a && f(a, b, e);
    }var e = (this || self, a("82")),
        f = a("84");c.exports = d;
  }), a.registerDynamic("6d", ["85"], !0, function (a, b, c) {
    function d(a) {
      return a === a && !e(a);
    }var e = (this || self, a("85"));c.exports = d;
  }), a.registerDynamic("6f", [], !0, function (a, b, c) {
    function d(a, b) {
      return function (c) {
        return null != c && c[a] === b && (void 0 !== b || a in Object(c));
      };
    }this || self;c.exports = d;
  }), a.registerDynamic("86", ["6b", "80", "83", "87", "6d", "6f", "88"], !0, function (a, b, c) {
    function d(a, b) {
      return h(a) && i(b) ? j(k(a), b) : function (c) {
        var d = f(c, a);return void 0 === d && d === b ? g(c, a) : e(b, d, l | m);
      };
    }var e = (this || self, a("6b")),
        f = a("80"),
        g = a("83"),
        h = a("87"),
        i = a("6d"),
        j = a("6f"),
        k = a("88"),
        l = 1,
        m = 2;c.exports = d;
  }), a.registerDynamic("89", [], !0, function (a, b, c) {
    function d(a) {
      return function (b) {
        return null == b ? void 0 : b[a];
      };
    }this || self;c.exports = d;
  }), a.registerDynamic("81", ["8a", "88"], !0, function (a, b, c) {
    function d(a, b) {
      b = e(b, a);for (var c = 0, d = b.length; null != a && c < d;) a = a[f(b[c++])];return c && c == d ? a : void 0;
    }var e = (this || self, a("8a")),
        f = a("88");c.exports = d;
  }), a.registerDynamic("8b", ["81"], !0, function (a, b, c) {
    function d(a) {
      return function (b) {
        return e(b, a);
      };
    }var e = (this || self, a("81"));c.exports = d;
  }), a.registerDynamic("8c", ["89", "8b", "87", "88"], !0, function (a, b, c) {
    function d(a) {
      return g(a) ? e(h(a)) : f(a);
    }var e = (this || self, a("89")),
        f = a("8b"),
        g = a("87"),
        h = a("88");c.exports = d;
  }), a.registerDynamic("3d", ["6e", "86", "8d", "50", "8c"], !0, function (a, b, c) {
    function d(a) {
      return "function" == typeof a ? a : null == a ? g : "object" == typeof a ? h(a) ? f(a[0], a[1]) : e(a) : i(a);
    }var e = (this || self, a("6e")),
        f = a("86"),
        g = a("8d"),
        h = a("50"),
        i = a("8c");c.exports = d;
  }), a.registerDynamic("8e", ["8f", "42"], !0, function (a, b, c) {
    function d(a, b) {
      return a && e(a, b, f);
    }var e = (this || self, a("8f")),
        f = a("42");c.exports = d;
  }), a.registerDynamic("90", ["41"], !0, function (a, b, c) {
    function d(a, b) {
      return function (c, d) {
        if (null == c) return c;if (!e(c)) return a(c, d);for (var f = c.length, g = b ? f : -1, h = Object(c); (b ? g-- : ++g < f) && !1 !== d(h[g], g, h););return c;
      };
    }var e = (this || self, a("41"));c.exports = d;
  }), a.registerDynamic("91", ["8e", "90"], !0, function (a, b, c) {
    var d = (this || self, a("8e")),
        e = a("90"),
        f = e(d);c.exports = f;
  }), a.registerDynamic("4f", ["91", "41"], !0, function (a, b, c) {
    function d(a, b) {
      var c = -1,
          d = f(a) ? Array(a.length) : [];return e(a, function (a, e, f) {
        d[++c] = b(a, e, f);
      }), d;
    }var e = (this || self, a("91")),
        f = a("41");c.exports = d;
  }), a.registerDynamic("92", [], !0, function (a, b, c) {
    function d(a, b) {
      var c = a.length;for (a.sort(b); c--;) a[c] = a[c].value;return a;
    }this || self;c.exports = d;
  }), a.registerDynamic("93", ["94"], !0, function (a, b, c) {
    function d(a, b) {
      if (a !== b) {
        var c = void 0 !== a,
            d = null === a,
            f = a === a,
            g = e(a),
            h = void 0 !== b,
            i = null === b,
            j = b === b,
            k = e(b);if (!i && !k && !g && a > b || g && h && j && !i && !k || d && h && j || !c && j || !f) return 1;if (!d && !g && !k && a < b || k && c && f && !d && !g || i && c && f || !h && f || !j) return -1;
      }return 0;
    }var e = (this || self, a("94"));c.exports = d;
  }), a.registerDynamic("95", ["93"], !0, function (a, b, c) {
    function d(a, b, c) {
      for (var d = -1, f = a.criteria, g = b.criteria, h = f.length, i = c.length; ++d < h;) {
        var j = e(f[d], g[d]);if (j) {
          if (d >= i) return j;return j * ("desc" == c[d] ? -1 : 1);
        }
      }return a.index - b.index;
    }var e = (this || self, a("93"));c.exports = d;
  }), a.registerDynamic("96", ["4e", "3d", "4f", "92", "97", "95", "8d"], !0, function (a, b, c) {
    function d(a, b, c) {
      var d = -1;b = e(b.length ? b : [k], i(f));var l = g(a, function (a, c, f) {
        return { criteria: e(b, function (b) {
            return b(a);
          }), index: ++d, value: a };
      });return h(l, function (a, b) {
        return j(a, b, c);
      });
    }var e = (this || self, a("4e")),
        f = a("3d"),
        g = a("4f"),
        h = a("92"),
        i = a("97"),
        j = a("95"),
        k = a("8d");c.exports = d;
  }), a.registerDynamic("98", ["67", "96", "99", "9a"], !0, function (a, b, c) {
    var d = (this || self, a("67")),
        e = a("96"),
        f = a("99"),
        g = a("9a"),
        h = f(function (a, b) {
      if (null == a) return [];var c = b.length;return c > 1 && g(a, b[0], b[1]) ? b = [] : c > 2 && g(b[0], b[1], b[2]) && (b = [b[0]]), e(a, d(b, 1), []);
    });c.exports = h;
  }), a.registerDynamic("9b", ["9c", "98", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var e = a("9c"),
        f = d(e),
        g = a("98"),
        h = d(g);b.default = new f.default({ name: "internal.blockHoist", visitor: { Block: { exit: function (a) {
            for (var b = a.node, c = !1, d = 0; d < b.body.length; d++) {
              var e = b.body[d];if (e && null != e._blockHoist) {
                c = !0;break;
              }
            }c && (b.body = (0, h.default)(b.body, function (a) {
              var b = a && a._blockHoist;return null == b && (b = 1), !0 === b && (b = 2), -1 * b;
            }));
          } } } }), c.exports = b.default;
  }), a.registerDynamic("9d", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function (a, b) {
      var c = {};for (var d in a) b.indexOf(d) >= 0 || Object.prototype.hasOwnProperty.call(a, d) && (c[d] = a[d]);return c;
    };
  }), a.registerDynamic("9e", ["9f"], !0, function (a, b, c) {
    function d(a) {
      return a = e(a), a && g.test(a) ? a.replace(f, "\\$&") : a;
    }var e = (this || self, a("9f")),
        f = /[\\^$.*+?()[\]{}|]/g,
        g = RegExp(f.source);c.exports = d;
  }), a.registerDynamic("a0", [], !0, function (a, b, c) {
    function d(a, b, c) {
      return a === a && (void 0 !== c && (a = a <= c ? a : c), void 0 !== b && (a = a >= b ? a : b)), a;
    }this || self;c.exports = d;
  }), a.registerDynamic("a1", ["a0", "a2", "3e", "9f"], !0, function (a, b, c) {
    function d(a, b, c) {
      return a = h(a), c = null == c ? 0 : e(g(c), 0, a.length), b = f(b), a.slice(c, c + b.length) == b;
    }var e = (this || self, a("a0")),
        f = a("a2"),
        g = a("3e"),
        h = a("9f");c.exports = d;
  }), a.registerDynamic("a3", [], !0, function (a, b, c) {
    this || self;c.exports = function (a, b) {
      for (var c = [], e = 0; e < a.length; e++) {
        var f = b(a[e], e);d(f) ? c.push.apply(c, f) : c.push(f);
      }return c;
    };var d = Array.isArray || function (a) {
      return "[object Array]" === Object.prototype.toString.call(a);
    };
  }), a.registerDynamic("a4", [], !0, function (a, b, c) {
    "use strict";
    function d(a, b, c) {
      a instanceof RegExp && (a = e(a, c)), b instanceof RegExp && (b = e(b, c));var d = f(a, b, c);return d && { start: d[0], end: d[1], pre: c.slice(0, d[0]), body: c.slice(d[0] + a.length, d[1]), post: c.slice(d[1] + b.length) };
    }function e(a, b) {
      var c = b.match(a);return c ? c[0] : null;
    }function f(a, b, c) {
      var d,
          e,
          f,
          g,
          h,
          i = c.indexOf(a),
          j = c.indexOf(b, i + 1),
          k = i;if (i >= 0 && j > 0) {
        for (d = [], f = c.length; k >= 0 && !h;) k == i ? (d.push(k), i = c.indexOf(a, k + 1)) : 1 == d.length ? h = [d.pop(), j] : (e = d.pop(), e < f && (f = e, g = j), j = c.indexOf(b, k + 1)), k = i < j && i >= 0 ? i : j;d.length && (h = [f, g]);
      }return h;
    }this || self;c.exports = d, d.range = f;
  }), a.registerDynamic("a5", ["a3", "a4"], !0, function (a, b, c) {
    function d(a) {
      return parseInt(a, 10) == a ? parseInt(a, 10) : a.charCodeAt(0);
    }function e(a) {
      return a.split("\\\\").join(p).split("\\{").join(q).split("\\}").join(r).split("\\,").join(s).split("\\.").join(t);
    }function f(a) {
      return a.split(p).join("\\").split(q).join("{").split(r).join("}").split(s).join(",").split(t).join(".");
    }function g(a) {
      if (!a) return [""];var b = [],
          c = o("{", "}", a);if (!c) return a.split(",");var d = c.pre,
          e = c.body,
          f = c.post,
          h = d.split(",");h[h.length - 1] += "{" + e + "}";var i = g(f);return f.length && (h[h.length - 1] += i.shift(), h.push.apply(h, i)), b.push.apply(b, h), b;
    }function h(a) {
      return a ? ("{}" === a.substr(0, 2) && (a = "\\{\\}" + a.substr(2)), m(e(a), !0).map(f)) : [];
    }function i(a) {
      return "{" + a + "}";
    }function j(a) {
      return (/^-?0\d/.test(a)
      );
    }function k(a, b) {
      return a <= b;
    }function l(a, b) {
      return a >= b;
    }function m(a, b) {
      var c = [],
          e = o("{", "}", a);if (!e || /\$$/.test(e.pre)) return [a];var f = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(e.body),
          h = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(e.body),
          p = f || h,
          q = e.body.indexOf(",") >= 0;if (!p && !q) return e.post.match(/,.*\}/) ? (a = e.pre + "{" + e.body + r + e.post, m(a)) : [a];var s;if (p) s = e.body.split(/\.\./);else if (s = g(e.body), 1 === s.length && (s = m(s[0], !1).map(i), 1 === s.length)) {
        var t = e.post.length ? m(e.post, !1) : [""];return t.map(function (a) {
          return e.pre + s[0] + a;
        });
      }var u,
          v = e.pre,
          t = e.post.length ? m(e.post, !1) : [""];if (p) {
        var w = d(s[0]),
            x = d(s[1]),
            y = Math.max(s[0].length, s[1].length),
            z = 3 == s.length ? Math.abs(d(s[2])) : 1,
            A = k;x < w && (z *= -1, A = l);var B = s.some(j);u = [];for (var C = w; A(C, x); C += z) {
          var D;if (h) "\\" === (D = String.fromCharCode(C)) && (D = "");else if (D = String(C), B) {
            var E = y - D.length;if (E > 0) {
              var F = new Array(E + 1).join("0");D = C < 0 ? "-" + F + D.slice(1) : F + D;
            }
          }u.push(D);
        }
      } else u = n(s, function (a) {
        return m(a, !1);
      });for (var G = 0; G < u.length; G++) for (var H = 0; H < t.length; H++) {
        var I = v + u[G] + t[H];(!b || p || I) && c.push(I);
      }return c;
    }var n = (this || self, a("a3")),
        o = a("a4");c.exports = h;var p = "\0SLASH" + Math.random() + "\0",
        q = "\0OPEN" + Math.random() + "\0",
        r = "\0CLOSE" + Math.random() + "\0",
        s = "\0COMMA" + Math.random() + "\0",
        t = "\0PERIOD" + Math.random() + "\0";
  }), a.registerDynamic("a6", ["1a", "a5"], !0, function (a, b, c) {
    function d(a) {
      return a.split("").reduce(function (a, b) {
        return a[b] = !0, a;
      }, {});
    }function e(a, b) {
      return b = b || {}, function (c, d, e) {
        return g(c, a, b);
      };
    }function f(a, b) {
      a = a || {}, b = b || {};var c = {};return Object.keys(b).forEach(function (a) {
        c[a] = b[a];
      }), Object.keys(a).forEach(function (b) {
        c[b] = a[b];
      }), c;
    }function g(a, b, c) {
      if ("string" != typeof b) throw new TypeError("glob pattern string required");return c || (c = {}), !(!c.nocomment && "#" === b.charAt(0)) && ("" === b.trim() ? "" === a : new h(b, c).match(a));
    }function h(a, b) {
      if (!(this instanceof h)) return new h(a, b);if ("string" != typeof a) throw new TypeError("glob pattern string required");b || (b = {}), a = a.trim(), "/" !== q.sep && (a = a.split(q.sep).join("/")), this.options = b, this.set = [], this.pattern = a, this.regexp = null, this.negate = !1, this.comment = !1, this.empty = !1, this.make();
    }function i() {
      if (!this._made) {
        var a = this.pattern,
            b = this.options;if (!b.nocomment && "#" === a.charAt(0)) return void (this.comment = !0);if (!a) return void (this.empty = !0);this.parseNegate();var c = this.globSet = this.braceExpand();b.debug && (this.debug = console.error), this.debug(this.pattern, c), c = this.globParts = c.map(function (a) {
          return a.split(z);
        }), this.debug(this.pattern, c), c = c.map(function (a, b, c) {
          return a.map(this.parse, this);
        }, this), this.debug(this.pattern, c), c = c.filter(function (a) {
          return -1 === a.indexOf(!1);
        }), this.debug(this.pattern, c), this.set = c;
      }
    }function j() {
      var a = this.pattern,
          b = !1,
          c = this.options,
          d = 0;if (!c.nonegate) {
        for (var e = 0, f = a.length; e < f && "!" === a.charAt(e); e++) b = !b, d++;d && (this.pattern = a.substr(d)), this.negate = b;
      }
    }function k(a, b) {
      if (b || (b = this instanceof h ? this.options : {}), void 0 === (a = void 0 === a ? this.pattern : a)) throw new TypeError("undefined pattern");return b.nobrace || !a.match(/\{.*\}/) ? [a] : s(a);
    }function l(a, b) {
      function c() {
        if (e) {
          switch (e) {case "*":
              g += v, h = !0;break;case "?":
              g += u, h = !0;break;default:
              g += "\\" + e;}q.debug("clearStateChar %j %j", e, g), e = !1;
        }
      }if (a.length > 65536) throw new TypeError("pattern is too long");var d = this.options;if (!d.noglobstar && "**" === a) return r;if ("" === a) return "";for (var e, f, g = "", h = !!d.nocase, i = !1, j = [], k = [], l = !1, m = -1, n = -1, p = "." === a.charAt(0) ? "" : d.dot ? "(?!(?:^|\\/)\\.{1,2}(?:$|\\/))" : "(?!\\.)", q = this, s = 0, w = a.length; s < w && (f = a.charAt(s)); s++) if (this.debug("%s\t%s %s %j", a, s, g, f), i && y[f]) g += "\\" + f, i = !1;else switch (f) {case "/":
          return !1;case "\\":
          c(), i = !0;continue;case "?":case "*":case "+":case "@":case "!":
          if (this.debug("%s\t%s %s %j <-- stateChar", a, s, g, f), l) {
            this.debug("  in class"), "!" === f && s === n + 1 && (f = "^"), g += f;continue;
          }q.debug("call clearStateChar %j", e), c(), e = f, d.noext && c();continue;case "(":
          if (l) {
            g += "(";continue;
          }if (!e) {
            g += "\\(";continue;
          }j.push({ type: e, start: s - 1, reStart: g.length, open: t[e].open, close: t[e].close }), g += "!" === e ? "(?:(?!(?:" : "(?:", this.debug("plType %j %j", e, g), e = !1;continue;case ")":
          if (l || !j.length) {
            g += "\\)";continue;
          }c(), h = !0;var x = j.pop();g += x.close, "!" === x.type && k.push(x), x.reEnd = g.length;continue;case "|":
          if (l || !j.length || i) {
            g += "\\|", i = !1;continue;
          }c(), g += "|";continue;case "[":
          if (c(), l) {
            g += "\\" + f;continue;
          }l = !0, n = s, m = g.length, g += f;continue;case "]":
          if (s === n + 1 || !l) {
            g += "\\" + f, i = !1;continue;
          }if (l) {
            var z = a.substring(n + 1, s);try {
              RegExp("[" + z + "]");
            } catch (a) {
              var B = this.parse(z, A);g = g.substr(0, m) + "\\[" + B[0] + "\\]", h = h || B[1], l = !1;continue;
            }
          }h = !0, l = !1, g += f;continue;default:
          c(), i ? i = !1 : !y[f] || "^" === f && l || (g += "\\"), g += f;}for (l && (z = a.substr(n + 1), B = this.parse(z, A), g = g.substr(0, m) + "\\[" + B[0], h = h || B[1]), x = j.pop(); x; x = j.pop()) {
        var C = g.slice(x.reStart + x.open.length);this.debug("setting tail", g, x), C = C.replace(/((?:\\{2}){0,64})(\\?)\|/g, function (a, b, c) {
          return c || (c = "\\"), b + b + c + "|";
        }), this.debug("tail=%j\n   %s", C, C, x, g);var D = "*" === x.type ? v : "?" === x.type ? u : "\\" + x.type;h = !0, g = g.slice(0, x.reStart) + D + "\\(" + C;
      }c(), i && (g += "\\\\");var E = !1;switch (g.charAt(0)) {case ".":case "[":case "(":
          E = !0;}for (var F = k.length - 1; F > -1; F--) {
        var G = k[F],
            H = g.slice(0, G.reStart),
            I = g.slice(G.reStart, G.reEnd - 8),
            J = g.slice(G.reEnd - 8, G.reEnd),
            K = g.slice(G.reEnd);J += K;var L = H.split("(").length - 1,
            M = K;for (s = 0; s < L; s++) M = M.replace(/\)[+*?]?/, "");K = M;var N = "";"" === K && b !== A && (N = "$");g = H + I + K + N + J;
      }if ("" !== g && h && (g = "(?=.)" + g), E && (g = p + g), b === A) return [g, h];if (!h) return o(a);var O = d.nocase ? "i" : "";try {
        var P = new RegExp("^" + g + "$", O);
      } catch (a) {
        return new RegExp("$.");
      }return P._glob = a, P._src = g, P;
    }function m() {
      if (this.regexp || !1 === this.regexp) return this.regexp;var a = this.set;if (!a.length) return this.regexp = !1, this.regexp;var b = this.options,
          c = b.noglobstar ? v : b.dot ? w : x,
          d = b.nocase ? "i" : "",
          e = a.map(function (a) {
        return a.map(function (a) {
          return a === r ? c : "string" == typeof a ? p(a) : a._src;
        }).join("\\/");
      }).join("|");e = "^(?:" + e + ")$", this.negate && (e = "^(?!" + e + ").*$");try {
        this.regexp = new RegExp(e, d);
      } catch (a) {
        this.regexp = !1;
      }return this.regexp;
    }function n(a, b) {
      if (this.debug("match", a, this.pattern), this.comment) return !1;if (this.empty) return "" === a;if ("/" === a && b) return !0;var c = this.options;"/" !== q.sep && (a = a.split(q.sep).join("/")), a = a.split(z), this.debug(this.pattern, "split", a);var d = this.set;this.debug(this.pattern, "set", d);var e, f;for (f = a.length - 1; f >= 0 && !(e = a[f]); f--);for (f = 0; f < d.length; f++) {
        var g = d[f],
            h = a;c.matchBase && 1 === g.length && (h = [e]);if (this.matchOne(h, g, b)) return !!c.flipNegate || !this.negate;
      }return !c.flipNegate && this.negate;
    }function o(a) {
      return a.replace(/\\(.)/g, "$1");
    }function p(a) {
      return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    }this || self;c.exports = g, g.Minimatch = h;var q = { sep: "/" };try {
      q = a("1a");
    } catch (a) {}var r = g.GLOBSTAR = h.GLOBSTAR = {},
        s = a("a5"),
        t = { "!": { open: "(?:(?!(?:", close: "))[^/]*?)" }, "?": { open: "(?:", close: ")?" }, "+": { open: "(?:", close: ")+" }, "*": { open: "(?:", close: ")*" }, "@": { open: "(?:", close: ")" } },
        u = "[^/]",
        v = u + "*?",
        w = "(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?",
        x = "(?:(?!(?:\\/|^)\\.).)*?",
        y = d("().*{}+?[]^$\\!"),
        z = /\/+/;g.filter = e, g.defaults = function (a) {
      if (!a || !Object.keys(a).length) return g;var b = g,
          c = function (c, d, e) {
        return b.minimatch(c, d, f(a, e));
      };return c.Minimatch = function (c, d) {
        return new b.Minimatch(c, f(a, d));
      }, c;
    }, h.defaults = function (a) {
      return a && Object.keys(a).length ? g.defaults(a).Minimatch : h;
    }, h.prototype.debug = function () {}, h.prototype.make = i, h.prototype.parseNegate = j, g.braceExpand = function (a, b) {
      return k(a, b);
    }, h.prototype.braceExpand = k, h.prototype.parse = l;var A = {};g.makeRe = function (a, b) {
      return new h(a, b || {}).makeRe();
    }, h.prototype.makeRe = m, g.match = function (a, b, c) {
      c = c || {};var d = new h(b, c);return a = a.filter(function (a) {
        return d.match(a);
      }), d.options.nonull && !a.length && a.push(b), a;
    }, h.prototype.match = n, h.prototype.matchOne = function (a, b, c) {
      var d = this.options;this.debug("matchOne", { this: this, file: a, pattern: b }), this.debug("matchOne", a.length, b.length);for (var e = 0, f = 0, g = a.length, h = b.length; e < g && f < h; e++, f++) {
        this.debug("matchOne loop");var i = b[f],
            j = a[e];if (this.debug(b, i, j), !1 === i) return !1;if (i === r) {
          this.debug("GLOBSTAR", [b, i, j]);var k = e,
              l = f + 1;if (l === h) {
            for (this.debug("** at the end"); e < g; e++) if ("." === a[e] || ".." === a[e] || !d.dot && "." === a[e].charAt(0)) return !1;return !0;
          }for (; k < g;) {
            var m = a[k];if (this.debug("\nglobstar while", a, k, b, l, m), this.matchOne(a.slice(k), b.slice(l), c)) return this.debug("globstar found match!", k, g, m), !0;if ("." === m || ".." === m || !d.dot && "." === m.charAt(0)) {
              this.debug("dot detected!", a, k, b, l);break;
            }this.debug("globstar swallow a segment, and continue"), k++;
          }return !(!c || (this.debug("\n>>> no match, partial?", a, k, b, l), k !== g));
        }var n;if ("string" == typeof i ? (n = d.nocase ? j.toLowerCase() === i.toLowerCase() : j === i, this.debug("string match", i, j, n)) : (n = j.match(i), this.debug("pattern match", i, j, n)), !n) return !1;
      }if (e === g && f === h) return !0;if (e === g) return c;if (f === h) {
        return e === g - 1 && "" === a[e];
      }throw new Error("wtf?");
    };
  }), a.registerDynamic("a7", [], !0, function (a, b, c) {
    "use strict";
    this || self;c.exports = function (a) {
      var b = /^\\\\\?\\/.test(a),
          c = /[^\x00-\x80]+/.test(a);return b || c ? a : a.replace(/\\/g, "/");
    };
  }), a.registerDynamic("a8", ["17", "a9", "9e", "a1", "a6", "aa", "ab", "1a", "a7", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a, b) {
      var c = b || e.EXTENSIONS,
          d = z.default.extname(a);return (0, v.default)(c, d);
    }function f(a) {
      return a ? Array.isArray(a) ? a : "string" == typeof a ? a.split(",") : [a] : [];
    }function g(a) {
      if (!a) return new RegExp(/.^/);if (Array.isArray(a) && (a = new RegExp(a.map(p.default).join("|"), "i")), "string" == typeof a) {
        a = (0, B.default)(a), ((0, r.default)(a, "./") || (0, r.default)(a, "*/")) && (a = a.slice(2)), (0, r.default)(a, "**/") && (a = a.slice(3));var b = t.default.makeRe(a, { nocase: !0 });return new RegExp(b.source.slice(1, -1), "i");
      }if ((0, x.default)(a)) return a;throw new TypeError("illegal type for regexify");
    }function h(a, b) {
      return a ? "boolean" == typeof a ? h([a], b) : "string" == typeof a ? h(f(a), b) : Array.isArray(a) ? (b && (a = a.map(b)), a) : [a] : [];
    }function i(a) {
      return "true" === a || 1 == a || !("false" === a || 0 == a || !a) && a;
    }function j(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
          c = arguments[2];if (a = a.replace(/\\/g, "/"), c) {
        for (var d = c, e = Array.isArray(d), f = 0, d = e ? d : (0, m.default)(d);;) {
          var g;if (e) {
            if (f >= d.length) break;g = d[f++];
          } else {
            if (f = d.next(), f.done) break;g = f.value;
          }if (k(g, a)) return !1;
        }return !0;
      }if (b.length) for (var h = b, i = Array.isArray(h), j = 0, h = i ? h : (0, m.default)(h);;) {
        var l;if (i) {
          if (j >= h.length) break;l = h[j++];
        } else {
          if (j = h.next(), j.done) break;l = j.value;
        }var n = l;if (k(n, a)) return !0;
      }return !1;
    }function k(a, b) {
      return "function" == typeof a ? a(b) : a.test(b);
    }a("c"), this || self;b.__esModule = !0, b.inspect = b.inherits = void 0;var l = a("17"),
        m = d(l),
        n = a("a9");Object.defineProperty(b, "inherits", { enumerable: !0, get: function () {
        return n.inherits;
      } }), Object.defineProperty(b, "inspect", { enumerable: !0, get: function () {
        return n.inspect;
      } }), b.canCompile = e, b.list = f, b.regexify = g, b.arrayify = h, b.booleanify = i, b.shouldIgnore = j;var o = a("9e"),
        p = d(o),
        q = a("a1"),
        r = d(q),
        s = a("a6"),
        t = d(s),
        u = a("aa"),
        v = d(u),
        w = a("ab"),
        x = d(w),
        y = a("1a"),
        z = d(y),
        A = a("a7"),
        B = d(A);e.EXTENSIONS = [".js", ".jsx", ".es6", ".es"];
  }), a.registerDynamic("ac", ["a7", "a8", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      return !!a;
    }function g(a) {
      return l.booleanify(a);
    }function h(a) {
      return l.list(a);
    }a("c"), this || self;b.__esModule = !0, b.filename = void 0, b.boolean = f, b.booleanString = g, b.list = h;var i = a("a7"),
        j = e(i),
        k = a("a8"),
        l = d(k);b.filename = j.default;
  }), a.registerDynamic("ad", ["ac", "ae", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function f() {
      var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};for (var b in a) {
        var c = a[b];if (null != c) {
          var d = j.default[b];if (d && d.alias && (d = j.default[d.alias]), d) {
            var e = h[d.type];e && (c = e(c)), a[b] = c;
          }
        }
      }return a;
    }a("c"), this || self;b.__esModule = !0, b.config = void 0, b.normaliseOptions = f;var g = a("ac"),
        h = e(g),
        i = a("ae"),
        j = d(i);b.config = j.default;
  }), a.registerDynamic("af", ["c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return ["babel-plugin-" + a, a];
    }a("c"), this || self;b.__esModule = !0, b.default = d, c.exports = b.default;
  }), a.registerDynamic("b0", ["b1", "af", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : f.cwd();return (0, h.default)((0, j.default)(a), b);
    }var f = a("c");this || self;b.__esModule = !0, b.default = e;var g = a("b1"),
        h = d(g),
        i = a("af"),
        j = d(i);c.exports = b.default;
  }), a.registerDynamic("b1", ["b2", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a, b) {
      return a.reduce(function (a, c) {
        return a || (0, g.default)(c, b);
      }, null);
    }a("c"), this || self;b.__esModule = !0, b.default = e;var f = a("b2"),
        g = d(f);c.exports = b.default;
  }), a.registerDynamic("b3", ["c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      var b = ["babel-preset-" + a, a],
          c = a.match(/^(@[^\/]+)\/(.+)$/);if (c) {
        var d = c[1],
            e = c[2];b.push(d + "/babel-preset-" + e);
      }return b;
    }a("c"), this || self;b.__esModule = !0, b.default = d, c.exports = b.default;
  }), a.registerDynamic("b4", ["b1", "b3", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : f.cwd();return (0, h.default)((0, j.default)(a), b);
    }var f = a("c");this || self;b.__esModule = !0, b.default = e;var g = a("b1"),
        h = d(g),
        i = a("b3"),
        j = d(i);c.exports = b.default;
  }), a.registerDynamic("b5", ["b6"], !0, function (a, b, c) {
    function d(a, b) {
      return b = "function" == typeof b ? b : void 0, e(a, f | g, b);
    }var e = (this || self, a("b6")),
        f = 1,
        g = 4;c.exports = d;
  }), a.registerDynamic("b7", [], !0, function (a, b, c) {
    function d(a) {
      return function (b, c, d) {
        for (var e = -1, f = Object(b), g = d(b), h = g.length; h--;) {
          var i = g[a ? h : ++e];if (!1 === c(f[i], i, f)) break;
        }return b;
      };
    }this || self;c.exports = d;
  }), a.registerDynamic("8f", ["b7"], !0, function (a, b, c) {
    var d = (this || self, a("b7")),
        e = d();c.exports = e;
  }), a.registerDynamic("b8", ["b9", "76"], !0, function (a, b, c) {
    function d(a, b, c) {
      (void 0 === c || f(a[b], c)) && (void 0 !== c || b in a) || e(a, b, c);
    }var e = (this || self, a("b9")),
        f = a("76");c.exports = d;
  }), a.registerDynamic("ba", ["41", "7f"], !0, function (a, b, c) {
    function d(a) {
      return f(a) && e(a);
    }var e = (this || self, a("41")),
        f = a("7f");c.exports = d;
  }), a.registerDynamic("bb", ["bc", "bd"], !0, function (a, b, c) {
    function d(a) {
      return e(a, f(a));
    }var e = (this || self, a("bc")),
        f = a("bd");c.exports = d;
  }), a.registerDynamic("be", ["b8", "bf", "c0", "c1", "c2", "66", "50", "ba", "7d", "c3", "85", "c4", "7e", "bb"], !0, function (a, b, c) {
    function d(a, b, c, d, s, t, u) {
      var v = a[c],
          w = b[c],
          x = u.get(w);if (x) return void e(a, c, x);var y = t ? t(v, w, c + "", a, b, u) : void 0,
          z = void 0 === y;if (z) {
        var A = k(w),
            B = !A && m(w),
            C = !A && !B && q(w);y = w, A || B || C ? k(v) ? y = v : l(v) ? y = h(v) : B ? (z = !1, y = f(w, !0)) : C ? (z = !1, y = g(w, !0)) : y = [] : p(w) || j(w) ? (y = v, j(v) ? y = r(v) : (!o(v) || d && n(v)) && (y = i(w))) : z = !1;
      }z && (u.set(w, y), s(y, w, d, t, u), u.delete(w)), e(a, c, y);
    }var e = (this || self, a("b8")),
        f = a("bf"),
        g = a("c0"),
        h = a("c1"),
        i = a("c2"),
        j = a("66"),
        k = a("50"),
        l = a("ba"),
        m = a("7d"),
        n = a("c3"),
        o = a("85"),
        p = a("c4"),
        q = a("7e"),
        r = a("bb");c.exports = d;
  }), a.registerDynamic("c5", ["6a", "b8", "8f", "be", "85", "bd"], !0, function (a, b, c) {
    function d(a, b, c, k, l) {
      a !== b && g(b, function (g, j) {
        if (i(g)) l || (l = new e()), h(a, b, j, c, d, k, l);else {
          var m = k ? k(a[j], g, j + "", a, b, l) : void 0;void 0 === m && (m = g), f(a, j, m);
        }
      }, j);
    }var e = (this || self, a("6a")),
        f = a("b8"),
        g = a("8f"),
        h = a("be"),
        i = a("85"),
        j = a("bd");c.exports = d;
  }), a.registerDynamic("c6", ["c5", "c7"], !0, function (a, b, c) {
    var d = (this || self, a("c5")),
        e = a("c7"),
        f = e(function (a, b, c, e) {
      d(a, b, c, e);
    });c.exports = f;
  }), a.registerDynamic("c8", ["17", "c6", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var e = a("17"),
        f = d(e);b.default = function (a, b) {
      if (a && b) return (0, h.default)(a, b, function (a, b) {
        if (b && Array.isArray(a)) {
          for (var c = b.slice(0), d = a, e = Array.isArray(d), g = 0, d = e ? d : (0, f.default)(d);;) {
            var h;if (e) {
              if (g >= d.length) break;h = d[g++];
            } else {
              if (g = d.next(), g.done) break;h = g.value;
            }var i = h;c.indexOf(i) < 0 && c.push(i);
          }return c;
        }
      });
    };var g = a("c6"),
        h = d(g);c.exports = b.default;
  }), a.registerDynamic("ae", ["c"], !0, function (a, b, c) {
    "use strict";
    a("c"), this || self;c.exports = { filename: { type: "filename", description: "filename to use when reading from stdin - this will be used in source-maps, errors etc", default: "unknown", shorthand: "f" }, filenameRelative: { hidden: !0, type: "string" }, inputSourceMap: { hidden: !0 }, env: { hidden: !0, default: {} }, mode: { description: "", hidden: !0 }, retainLines: { type: "boolean", default: !1, description: "retain line numbers - will result in really ugly code" }, highlightCode: { description: "enable/disable ANSI syntax highlighting of code frames (on by default)", type: "boolean", default: !0 }, suppressDeprecationMessages: { type: "boolean", default: !1, hidden: !0 }, presets: { type: "list", description: "", default: [] }, plugins: { type: "list", default: [], description: "" }, ignore: { type: "list", description: "list of glob paths to **not** compile", default: [] }, only: { type: "list", description: "list of glob paths to **only** compile" }, code: { hidden: !0, default: !0, type: "boolean" }, metadata: { hidden: !0, default: !0, type: "boolean" }, ast: { hidden: !0, default: !0, type: "boolean" }, extends: { type: "string", hidden: !0 }, comments: { type: "boolean", default: !0, description: "write comments to generated output (true by default)" }, shouldPrintComment: { hidden: !0, description: "optional callback to control whether a comment should be inserted, when this is used the comments option is ignored" }, wrapPluginVisitorMethod: { hidden: !0, description: "optional callback to wrap all visitor methods" }, compact: { type: "booleanString", default: "auto", description: "do not include superfluous whitespace characters and line terminators [true|false|auto]" }, minified: { type: "boolean", default: !1, description: "save as much bytes when printing [true|false]" }, sourceMap: { alias: "sourceMaps", hidden: !0 }, sourceMaps: { type: "booleanString", description: "[true|false|inline]", default: !1, shorthand: "s" }, sourceMapTarget: { type: "string", description: "set `file` on returned source map" }, sourceFileName: { type: "string", description: "set `sources[0]` on returned source map" }, sourceRoot: { type: "filename", description: "the root from which all sources are relative" }, babelrc: { description: "Whether or not to look up .babelrc and .babelignore files", type: "boolean", default: !0 }, sourceType: { description: "", default: "module" }, auxiliaryCommentBefore: { type: "string", description: "print a comment before any injected non-user code" }, auxiliaryCommentAfter: { type: "string", description: "print a comment after any injected non-user code" }, resolveModuleSource: { hidden: !0 }, getModuleId: { hidden: !0 }, moduleRoot: { type: "filename", description: "optional prefix for the AMD module formatter that will be prepend to the filename on module definitions" }, moduleIds: { type: "boolean", default: !1, shorthand: "M", description: "insert an explicit id for modules" }, moduleId: { description: "specify a custom name for module ids", type: "string" }, passPerPreset: { description: "Whether to spawn a traversal pass per a preset. By default all presets are merged.", type: "boolean", default: !1, hidden: !0 }, parserOpts: { description: "Options to pass into the parser, or to change parsers (parserOpts.parser)", default: !1 }, generatorOpts: { description: "Options to pass into the generator, or to change generators (generatorOpts.generator)", default: !1 } };
  }), a.registerDynamic("c9", ["c"], !0, function (a, b, c) {
    "use strict";
    a("c"), this || self;c.exports = { auxiliaryComment: { message: "Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`" }, blacklist: { message: "Put the specific transforms you want in the `plugins` option" }, breakConfig: { message: "This is not a necessary option in Babel 6" }, experimental: { message: "Put the specific transforms you want in the `plugins` option" }, externalHelpers: { message: "Use the `external-helpers` plugin instead. Check out http://babeljs.io/docs/plugins/external-helpers/" }, extra: { message: "" }, jsxPragma: { message: "use the `pragma` option in the `react-jsx` plugin . Check out http://babeljs.io/docs/plugins/transform-react-jsx/" }, loose: { message: "Specify the `loose` option for the relevant plugin you are using or use a preset that sets the option." }, metadataUsedHelpers: { message: "Not required anymore as this is enabled by default" }, modules: { message: "Use the corresponding module transform plugin in the `plugins` option. Check out http://babeljs.io/docs/plugins/#modules" }, nonStandard: { message: "Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. Also check out the react preset http://babeljs.io/docs/plugins/preset-react/" }, optional: { message: "Put the specific transforms you want in the `plugins` option" }, sourceMapName: { message: "Use the `sourceMapTarget` option" }, stage: { message: "Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets" }, whitelist: { message: "Put the specific transforms you want in the `plugins` option" } };
  }), a.registerDynamic("ca", ["cb", "cc", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("cb"));d(d.S + d.F, "Object", { assign: a("cc") });
  }), a.registerDynamic("cd", ["ca", "39", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("ca"), c.exports = a("39").Object.assign;
  }), a.registerDynamic("5f", ["cd"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("cd"), __esModule: !0 };
  }), a.registerDynamic("b2", ["32", "@empty", "1a", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }var e = a("c");this || self;b.__esModule = !0;var f = a("32"),
        g = d(f);b.default = function (a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e.cwd();if ("object" === (void 0 === i.default ? "undefined" : (0, g.default)(i.default))) return null;var c = l[b];if (!c) {
        c = new i.default();var d = k.default.join(b, ".babelrc");c.id = d, c.filename = d, c.paths = i.default._nodeModulePaths(b), l[b] = c;
      }try {
        return i.default._resolveFilename(a, c);
      } catch (a) {
        return null;
      }
    };var h = a("@empty"),
        i = d(h),
        j = a("1a"),
        k = d(j),
        l = {};c.exports = b.default;
  }), a.registerDynamic("ce", [], !0, function (a, b, c) {
    var d = (this || self, "object" == typeof b ? b : {});d.parse = function () {
      "use strict";
      var a,
          b,
          c,
          d,
          e,
          f,
          g = { "'": "'", '"': '"', "\\": "\\", "/": "/", "\n": "", b: "\b", f: "\f", n: "\n", r: "\r", t: "\t" },
          h = [" ", "\t", "\r", "\n", "\v", "\f", " ", "\ufeff"],
          i = function (a) {
        return "" === a ? "EOF" : "'" + a + "'";
      },
          j = function (d) {
        var f = new SyntaxError();throw f.message = d + " at line " + b + " column " + c + " of the JSON5 data. Still to read: " + JSON.stringify(e.substring(a - 1, a + 19)), f.at = a, f.lineNumber = b, f.columnNumber = c, f;
      },
          k = function (f) {
        return f && f !== d && j("Expected " + i(f) + " instead of " + i(d)), d = e.charAt(a), a++, c++, ("\n" === d || "\r" === d && "\n" !== l()) && (b++, c = 0), d;
      },
          l = function () {
        return e.charAt(a);
      },
          m = function () {
        var a = d;for ("_" !== d && "$" !== d && (d < "a" || d > "z") && (d < "A" || d > "Z") && j("Bad identifier as unquoted key"); k() && ("_" === d || "$" === d || d >= "a" && d <= "z" || d >= "A" && d <= "Z" || d >= "0" && d <= "9");) a += d;return a;
      },
          n = function () {
        var a,
            b = "",
            c = "",
            e = 10;if ("-" !== d && "+" !== d || (b = d, k(d)), "I" === d) return a = t(), ("number" != typeof a || isNaN(a)) && j("Unexpected word for number"), "-" === b ? -a : a;if ("N" === d) return a = t(), isNaN(a) || j("expected word to be NaN"), a;switch ("0" === d && (c += d, k(), "x" === d || "X" === d ? (c += d, k(), e = 16) : d >= "0" && d <= "9" && j("Octal literal")), e) {case 10:
            for (; d >= "0" && d <= "9";) c += d, k();if ("." === d) for (c += "."; k() && d >= "0" && d <= "9";) c += d;if ("e" === d || "E" === d) for (c += d, k(), "-" !== d && "+" !== d || (c += d, k()); d >= "0" && d <= "9";) c += d, k();break;case 16:
            for (; d >= "0" && d <= "9" || d >= "A" && d <= "F" || d >= "a" && d <= "f";) c += d, k();}if (a = "-" === b ? -c : +c, isFinite(a)) return a;j("Bad number");
      },
          o = function () {
        var a,
            b,
            c,
            e,
            f = "";if ('"' === d || "'" === d) for (c = d; k();) {
          if (d === c) return k(), f;if ("\\" === d) {
            if (k(), "u" === d) {
              for (e = 0, b = 0; b < 4 && (a = parseInt(k(), 16), isFinite(a)); b += 1) e = 16 * e + a;f += String.fromCharCode(e);
            } else if ("\r" === d) "\n" === l() && k();else {
              if ("string" != typeof g[d]) break;f += g[d];
            }
          } else {
            if ("\n" === d) break;f += d;
          }
        }j("Bad string");
      },
          p = function () {
        "/" !== d && j("Not an inline comment");do {
          if (k(), "\n" === d || "\r" === d) return void k();
        } while (d);
      },
          q = function () {
        "*" !== d && j("Not a block comment");do {
          for (k(); "*" === d;) if (k("*"), "/" === d) return void k("/");
        } while (d);j("Unterminated block comment");
      },
          r = function () {
        "/" !== d && j("Not a comment"), k("/"), "/" === d ? p() : "*" === d ? q() : j("Unrecognized comment");
      },
          s = function () {
        for (; d;) if ("/" === d) r();else {
          if (!(h.indexOf(d) >= 0)) return;k();
        }
      },
          t = function () {
        switch (d) {case "t":
            return k("t"), k("r"), k("u"), k("e"), !0;case "f":
            return k("f"), k("a"), k("l"), k("s"), k("e"), !1;case "n":
            return k("n"), k("u"), k("l"), k("l"), null;case "I":
            return k("I"), k("n"), k("f"), k("i"), k("n"), k("i"), k("t"), k("y"), 1 / 0;case "N":
            return k("N"), k("a"), k("N"), NaN;}j("Unexpected " + i(d));
      },
          u = function () {
        var a = [];if ("[" === d) for (k("["), s(); d;) {
          if ("]" === d) return k("]"), a;if ("," === d ? j("Missing array element") : a.push(f()), s(), "," !== d) return k("]"), a;k(","), s();
        }j("Bad array");
      },
          v = function () {
        var a,
            b = {};if ("{" === d) for (k("{"), s(); d;) {
          if ("}" === d) return k("}"), b;if (a = '"' === d || "'" === d ? o() : m(), s(), k(":"), b[a] = f(), s(), "," !== d) return k("}"), b;k(","), s();
        }j("Bad object");
      };return f = function () {
        switch (s(), d) {case "{":
            return v();case "[":
            return u();case '"':case "'":
            return o();case "-":case "+":case ".":
            return n();default:
            return d >= "0" && d <= "9" ? n() : t();}
      }, function (g, h) {
        var i;return e = String(g), a = 0, b = 1, c = 1, d = " ", i = f(), s(), d && j("Syntax error"), "function" == typeof h ? function a(b, c) {
          var d,
              e,
              f = b[c];if (f && "object" == typeof f) for (d in f) Object.prototype.hasOwnProperty.call(f, d) && (e = a(f, d), void 0 !== e ? f[d] = e : delete f[d]);return h.call(b, c, f);
        }({ "": i }, "") : i;
      };
    }(), d.stringify = function (a, b, c) {
      function e(a) {
        return a >= "a" && a <= "z" || a >= "A" && a <= "Z" || a >= "0" && a <= "9" || "_" === a || "$" === a;
      }function f(a) {
        return a >= "a" && a <= "z" || a >= "A" && a <= "Z" || "_" === a || "$" === a;
      }function g(a) {
        if ("string" != typeof a) return !1;if (!f(a[0])) return !1;for (var b = 1, c = a.length; b < c;) {
          if (!e(a[b])) return !1;b++;
        }return !0;
      }function h(a) {
        return Array.isArray ? Array.isArray(a) : "[object Array]" === Object.prototype.toString.call(a);
      }function i(a) {
        return "[object Date]" === Object.prototype.toString.call(a);
      }function j(a) {
        for (var b = 0; b < p.length; b++) if (p[b] === a) throw new TypeError("Converting circular structure to JSON");
      }function k(a, b, c) {
        if (!a) return "";a.length > 10 && (a = a.substring(0, 10));for (var d = c ? "" : "\n", e = 0; e < b; e++) d += a;return d;
      }function l(a) {
        return q.lastIndex = 0, q.test(a) ? '"' + a.replace(q, function (a) {
          var b = r[a];return "string" == typeof b ? b : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
        }) + '"' : '"' + a + '"';
      }function m(a, b, c) {
        var d,
            e,
            f = n(a, b, c);switch (f && !i(f) && (f = f.valueOf()), typeof f) {case "boolean":
            return f.toString();case "number":
            return isNaN(f) || !isFinite(f) ? "null" : f.toString();case "string":
            return l(f.toString());case "object":
            if (null === f) return "null";if (h(f)) {
              j(f), d = "[", p.push(f);for (var q = 0; q < f.length; q++) e = m(f, q, !1), d += k(o, p.length), d += null === e || void 0 === e ? "null" : e, q < f.length - 1 ? d += "," : o && (d += "\n");p.pop(), f.length && (d += k(o, p.length, !0)), d += "]";
            } else {
              j(f), d = "{";var r = !1;p.push(f);for (var s in f) if (f.hasOwnProperty(s)) {
                var t = m(f, s, !1);c = !1, void 0 !== t && null !== t && (d += k(o, p.length), r = !0, b = g(s) ? s : l(s), d += b + ":" + (o ? " " : "") + t + ",");
              }p.pop(), d = r ? d.substring(0, d.length - 1) + k(o, p.length) + "}" : "{}";
            }return d;default:
            return;}
      }if (b && "function" != typeof b && !h(b)) throw new Error("Replacer must be a function or an array");var n = function (a, c, d) {
        var e = a[c];return e && e.toJSON && "function" == typeof e.toJSON && (e = e.toJSON()), "function" == typeof b ? b.call(a, c, e) : b ? d || h(a) || b.indexOf(c) >= 0 ? e : void 0 : e;
      };d.isWord = g;var o,
          p = [];c && ("string" == typeof c ? o = c : "number" == typeof c && c >= 0 && (o = k(" ", c, !0)));var q = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
          r = { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" },
          s = { "": a };return void 0 === a ? n(s, "", !0) : m(s, "", !0);
    };
  }), a.registerDynamic("cf", ["c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return "/" === a.charAt(0);
    }function e(a) {
      var b = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/,
          c = b.exec(a),
          d = c[1] || "",
          e = Boolean(d && ":" !== d.charAt(1));return Boolean(c[2] || e);
    }var f = a("c");this || self;c.exports = "win32" === f.platform ? e : d, c.exports.posix = d, c.exports.win32 = e;
  }), a.registerDynamic("19", [], !0, function (a, b, c) {
    this || self;b.readFileSync = function (a) {
      var b,
          c = new XMLHttpRequest();return c.open("GET", a, !1), c.onreadystatechange = function (a) {
        if (4 == c.readyState) {
          var d = c.status;if (d > 399 && d < 600 || 400 == d) throw "File read error on " + c.responseURL;b = c.responseText;
        }
      }, c.send(null), b;
    };
  }), a.registerDynamic("d0", ["5f", "1f", "b2", "ce", "cf", "1a", "19", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      var b = v[a];return null == b ? v[a] = u.default.existsSync(a) : b;
    }function f() {
      var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          b = arguments[1],
          c = a.filename,
          d = new A(b);return !1 !== a.babelrc && d.findConfigs(c), d.mergeConfig({ options: a, alias: "base", dirname: c && s.default.dirname(c) }), d.configs;
    }var g = a("c");this || self;b.__esModule = !0;var h = a("5f"),
        i = d(h),
        j = a("1f"),
        k = d(j);b.default = f;var l = a("b2"),
        m = d(l),
        n = a("ce"),
        o = d(n),
        p = a("cf"),
        q = d(p),
        r = a("1a"),
        s = d(r),
        t = a("19"),
        u = d(t),
        v = {},
        w = {},
        x = ".babelignore",
        y = ".babelrc",
        z = "package.json",
        A = function () {
      function a(b) {
        (0, k.default)(this, a), this.resolvedConfigs = [], this.configs = [], this.log = b;
      }return a.prototype.findConfigs = function (a) {
        if (a) {
          (0, q.default)(a) || (a = s.default.join(g.cwd(), a));for (var b = !1, c = !1; a !== (a = s.default.dirname(a));) {
            if (!b) {
              var d = s.default.join(a, y);e(d) && (this.addConfig(d), b = !0);var f = s.default.join(a, z);!b && e(f) && (b = this.addConfig(f, "babel", JSON));
            }if (!c) {
              var h = s.default.join(a, x);e(h) && (this.addIgnoreConfig(h), c = !0);
            }if (c && b) return;
          }
        }
      }, a.prototype.addIgnoreConfig = function (a) {
        var b = u.default.readFileSync(a, "utf8"),
            c = b.split("\n");c = c.map(function (a) {
          return a.replace(/#(.*?)$/, "").trim();
        }).filter(function (a) {
          return !!a;
        }), c.length && this.mergeConfig({ options: { ignore: c }, alias: a, dirname: s.default.dirname(a) });
      }, a.prototype.addConfig = function (a, b) {
        var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : o.default;if (this.resolvedConfigs.indexOf(a) >= 0) return !1;this.resolvedConfigs.push(a);var d = u.default.readFileSync(a, "utf8"),
            e = void 0;try {
          e = w[d] = w[d] || c.parse(d), b && (e = e[b]);
        } catch (b) {
          throw b.message = a + ": Error while parsing JSON - " + b.message, b;
        }return this.mergeConfig({ options: e, alias: a, dirname: s.default.dirname(a) }), !!e;
      }, a.prototype.mergeConfig = function (a) {
        var b = a.options,
            c = a.alias,
            d = a.loc,
            e = a.dirname;if (!b) return !1;if (b = (0, i.default)({}, b), e = e || g.cwd(), d = d || c, b.extends) {
          var f = (0, m.default)(b.extends, e);f ? this.addConfig(f) : this.log && this.log.error("Couldn't resolve extends clause of " + b.extends + " in " + c), delete b.extends;
        }this.configs.push({ options: b, alias: c, loc: d, dirname: e });var h = void 0,
            j = g.env.BABEL_ENV || "production" || "development";b.env && (h = b.env[j], delete b.env), this.mergeConfig({ options: h, alias: c + ".env." + j, dirname: e });
      }, a;
    }();c.exports = b.default;
  }), a.registerDynamic("d1", ["9d", "60", "5f", "17", "32", "1f", "d2", "9c", "f", "ad", "b0", "b4", "b5", "d3", "c8", "ae", "c9", "d0", "1a", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }var f = a("c");this || self;b.__esModule = !0;var g = a("9d"),
        h = e(g),
        i = a("60"),
        j = e(i),
        k = a("5f"),
        l = e(k),
        m = a("17"),
        n = e(m),
        o = a("32"),
        p = e(o),
        q = a("1f"),
        r = e(q),
        s = a("d2"),
        t = d(s),
        u = a("9c"),
        v = e(u),
        w = a("f"),
        x = d(w),
        y = a("ad"),
        z = a("b0"),
        A = e(z),
        B = a("b4"),
        C = e(B),
        D = a("b5"),
        E = e(D),
        F = a("d3"),
        G = e(F),
        H = a("c8"),
        I = e(H),
        J = a("ae"),
        K = e(J),
        L = a("c9"),
        M = e(L),
        N = a("d0"),
        O = e(N),
        P = a("1a"),
        Q = e(P),
        R = function () {
      function b(a) {
        (0, r.default)(this, b), this.resolvedConfigs = [], this.options = b.createBareOptions(), this.log = a;
      }return b.memoisePluginContainer = function (a, c, d, e) {
        for (var f = b.memoisedPlugins, g = Array.isArray(f), h = 0, f = g ? f : (0, n.default)(f);;) {
          var i;if (g) {
            if (h >= f.length) break;i = f[h++];
          } else {
            if (h = f.next(), h.done) break;i = h.value;
          }var j = i;if (j.container === a) return j.plugin;
        }var k = void 0;if (k = "function" == typeof a ? a(t) : a, "object" === (void 0 === k ? "undefined" : (0, p.default)(k))) {
          var l = new v.default(k, e);return b.memoisedPlugins.push({ container: a, plugin: l }), l;
        }throw new TypeError(x.get("pluginNotObject", c, d, void 0 === k ? "undefined" : (0, p.default)(k)) + c + d);
      }, b.createBareOptions = function () {
        var a = {};for (var b in K.default) {
          var c = K.default[b];a[b] = (0, G.default)(c.default);
        }return a;
      }, b.normalisePlugin = function (a, c, d, e) {
        if (!((a = a.__esModule ? a.default : a) instanceof v.default)) {
          if ("function" != typeof a && "object" !== (void 0 === a ? "undefined" : (0, p.default)(a))) throw new TypeError(x.get("pluginNotFunction", c, d, void 0 === a ? "undefined" : (0, p.default)(a)));a = b.memoisePluginContainer(a, c, d, e);
        }return a.init(c, d), a;
      }, b.normalisePlugins = function (c, d, e) {
        return e.map(function (e, f) {
          var g = void 0,
              h = void 0;if (!e) throw new TypeError("Falsy value found in plugins");Array.isArray(e) ? (g = e[0], h = e[1]) : g = e;var i = "string" == typeof g ? g : c + "$" + f;if ("string" == typeof g) {
            var j = (0, A.default)(g, d);if (!j) throw new ReferenceError(x.get("pluginUnknown", g, c, f, d));g = a(j);
          }return g = b.normalisePlugin(g, c, f, i), [g, h];
        });
      }, b.prototype.mergeOptions = function (a) {
        var c = this,
            d = a.options,
            e = a.extending,
            g = a.alias,
            h = a.loc,
            i = a.dirname;if (g = g || "foreign", d) {
          ("object" !== (void 0 === d ? "undefined" : (0, p.default)(d)) || Array.isArray(d)) && this.log.error("Invalid options type for " + g, TypeError);var j = (0, E.default)(d, function (a) {
            if (a instanceof v.default) return a;
          });i = i || f.cwd(), h = h || g;for (var k in j) {
            if (!K.default[k] && this.log) if (M.default[k]) this.log.error("Using removed Babel 5 option: " + g + "." + k + " - " + M.default[k].message, ReferenceError);else {
              var m = "Unknown option: " + g + "." + k + ". Check out http://babeljs.io/docs/usage/options/ for more information about options.",
                  n = "A common cause of this error is the presence of a configuration options object without the corresponding preset name. Example:\n\nInvalid:\n  `{ presets: [{option: value}] }`\nValid:\n  `{ presets: [['presetName', {option: value}]] }`\n\nFor more detailed information on preset configuration, please see http://babeljs.io/docs/plugins/#pluginpresets-options.";this.log.error(m + "\n\n" + n, ReferenceError);
            }
          }(0, y.normaliseOptions)(j), j.plugins && (j.plugins = b.normalisePlugins(h, i, j.plugins)), j.presets && (j.passPerPreset ? j.presets = this.resolvePresets(j.presets, i, function (a, b) {
            c.mergeOptions({ options: a, extending: a, alias: b, loc: b, dirname: i });
          }) : (this.mergePresets(j.presets, i), delete j.presets)), d === e ? (0, l.default)(e, j) : (0, I.default)(e || this.options, j);
        }
      }, b.prototype.mergePresets = function (a, b) {
        var c = this;this.resolvePresets(a, b, function (a, b) {
          c.mergeOptions({ options: a, alias: b, loc: b, dirname: Q.default.dirname(b || "") });
        });
      }, b.prototype.resolvePresets = function (b, c, d) {
        return b.map(function (b) {
          var e = void 0;if (Array.isArray(b)) {
            if (b.length > 2) throw new Error("Unexpected extra options " + (0, j.default)(b.slice(2)) + " passed to preset.");var f = b;b = f[0], e = f[1];
          }var g = void 0;try {
            if ("string" == typeof b) {
              if (!(g = (0, C.default)(b, c))) throw new Error("Couldn't find preset " + (0, j.default)(b) + " relative to directory " + (0, j.default)(c));b = a(g);
            }if ("object" === (void 0 === b ? "undefined" : (0, p.default)(b)) && b.__esModule) if (b.default) b = b.default;else {
              var i = b,
                  k = (i.__esModule, (0, h.default)(i, ["__esModule"]));b = k;
            }if ("object" === (void 0 === b ? "undefined" : (0, p.default)(b)) && b.buildPreset && (b = b.buildPreset), "function" != typeof b && void 0 !== e) throw new Error("Options " + (0, j.default)(e) + " passed to " + (g || "a preset") + " which does not accept options.");if ("function" == typeof b && (b = b(t, e, { dirname: c })), "object" !== (void 0 === b ? "undefined" : (0, p.default)(b))) throw new Error("Unsupported preset format: " + b + ".");d && d(b, g);
          } catch (a) {
            throw g && (a.message += " (While processing preset: " + (0, j.default)(g) + ")"), a;
          }return b;
        });
      }, b.prototype.normaliseOptions = function () {
        var a = this.options;for (var b in K.default) {
          var c = K.default[b],
              d = a[b];!d && c.optional || (c.alias ? a[c.alias] = a[c.alias] || d : a[b] = d);
        }
      }, b.prototype.init = function () {
        for (var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, b = (0, O.default)(a, this.log), c = Array.isArray(b), d = 0, b = c ? b : (0, n.default)(b);;) {
          var e;if (c) {
            if (d >= b.length) break;e = b[d++];
          } else {
            if (d = b.next(), d.done) break;e = d.value;
          }var f = e;this.mergeOptions(f);
        }return this.normaliseOptions(a), this.options;
      }, b;
    }();b.default = R, R.memoisedPlugins = [], c.exports = b.default;
  }), a.registerDynamic("1d", ["d4", "1f", "20", "21", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var e = a("d4"),
        f = d(e),
        g = a("1f"),
        h = d(g),
        i = a("20"),
        j = d(i),
        k = a("21"),
        l = d(k),
        m = function (a) {
      function b() {
        (0, h.default)(this, b);var c = (0, j.default)(this, a.call(this));return c.dynamicData = {}, c;
      }return (0, l.default)(b, a), b.prototype.setDynamic = function (a, b) {
        this.dynamicData[a] = b;
      }, b.prototype.get = function (b) {
        if (this.has(b)) return a.prototype.get.call(this, b);if (Object.prototype.hasOwnProperty.call(this.dynamicData, b)) {
          var c = this.dynamicData[b]();return this.set(b, c), c;
        }
      }, b;
    }(f.default);b.default = m, c.exports = b.default;
  }), a.registerDynamic("9c", ["17", "1f", "20", "21", "d1", "f", "1d", "d5", "d6", "d3", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var f = a("17"),
        g = e(f),
        h = a("1f"),
        i = e(h),
        j = a("20"),
        k = e(j),
        l = a("21"),
        m = e(l),
        n = a("d1"),
        o = e(n),
        p = a("f"),
        q = d(p),
        r = a("1d"),
        s = e(r),
        t = a("d5"),
        u = e(t),
        v = a("d6"),
        w = e(v),
        x = a("d3"),
        y = e(x),
        z = ["enter", "exit"],
        A = function (a) {
      function b(c, d) {
        (0, i.default)(this, b);var e = (0, k.default)(this, a.call(this));return e.initialized = !1, e.raw = (0, w.default)({}, c), e.key = e.take("name") || d, e.manipulateOptions = e.take("manipulateOptions"), e.post = e.take("post"), e.pre = e.take("pre"), e.visitor = e.normaliseVisitor((0, y.default)(e.take("visitor")) || {}), e;
      }return (0, m.default)(b, a), b.prototype.take = function (a) {
        var b = this.raw[a];return delete this.raw[a], b;
      }, b.prototype.chain = function (a, b) {
        if (!a[b]) return this[b];if (!this[b]) return a[b];var c = [a[b], this[b]];return function () {
          for (var a = void 0, b = arguments.length, d = Array(b), e = 0; e < b; e++) d[e] = arguments[e];for (var f = c, h = Array.isArray(f), i = 0, f = h ? f : (0, g.default)(f);;) {
            var j;if (h) {
              if (i >= f.length) break;j = f[i++];
            } else {
              if (i = f.next(), i.done) break;j = i.value;
            }var k = j;if (k) {
              var l = k.apply(this, d);null != l && (a = l);
            }
          }return a;
        };
      }, b.prototype.maybeInherit = function (a) {
        var b = this.take("inherits");b && (b = o.default.normalisePlugin(b, a, "inherits"), this.manipulateOptions = this.chain(b, "manipulateOptions"), this.post = this.chain(b, "post"), this.pre = this.chain(b, "pre"), this.visitor = u.default.visitors.merge([b.visitor, this.visitor]));
      }, b.prototype.init = function (a, b) {
        if (!this.initialized) {
          this.initialized = !0, this.maybeInherit(a);for (var c in this.raw) throw new Error(q.get("pluginInvalidProperty", a, b, c));
        }
      }, b.prototype.normaliseVisitor = function (a) {
        for (var b = z, c = Array.isArray(b), d = 0, b = c ? b : (0, g.default)(b);;) {
          var e;if (c) {
            if (d >= b.length) break;e = b[d++];
          } else {
            if (d = b.next(), d.done) break;e = d.value;
          }if (a[e]) throw new Error("Plugins aren't allowed to specify catch-all enter/exit handlers. Please target individual nodes.");
        }return u.default.explode(a), a;
      }, b;
    }(s.default);b.default = A, c.exports = b.default;
  }), a.registerDynamic("d7", ["d8", "9c", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b) {
      return !!a.is("_forceShadow") || b;
    }function g(a, b) {
      var c = a.inShadow(b);if (f(a, c)) {
        var d = a.node._shadowedFunctionLiteral,
            e = void 0,
            g = !1,
            h = a.find(function (b) {
          if (b.parentPath && b.parentPath.isClassProperty() && "value" === b.key) return !0;if (a === b) return !1;if ((b.isProgram() || b.isFunction()) && (e = e || b), b.isProgram()) return g = !0, !0;if (b.isFunction() && !b.isArrowFunctionExpression()) {
            if (d) {
              if (b === d || b.node === d.node) return !0;
            } else if (!b.is("shadow")) return !0;return g = !0, !1;
          }return !1;
        });if (d && h.isProgram() && !d.isProgram() && (h = a.findParent(function (a) {
          return a.isProgram() || a.isFunction();
        })), h !== e && g) {
          var i = h.getData(b);if (i) return a.replaceWith(i);var j = a.scope.generateUidIdentifier(b);h.setData(b, j);var k = h.findParent(function (a) {
            return a.isClass();
          }),
              l = !!(k && k.node && k.node.superClass);if ("this" === b && h.isMethod({ kind: "constructor" }) && l) h.scope.push({ id: j }), h.traverse(o, { id: j });else {
            var n = "this" === b ? m.thisExpression() : m.identifier(b);d && (n._shadowedFunctionLiteral = d), h.scope.push({ id: j, init: n });
          }return a.replaceWith(j);
        }
      }
    }a("c"), this || self;b.__esModule = !0;var h = a("d8"),
        i = e(h),
        j = a("9c"),
        k = e(j),
        l = a("11"),
        m = d(l),
        n = (0, i.default)("super this bound"),
        o = { CallExpression: function (a) {
        if (a.get("callee").isSuper()) {
          var b = a.node;b[n] || (b[n] = !0, a.replaceWith(m.assignmentExpression("=", this.id, b)));
        }
      } };b.default = new k.default({ name: "internal.shadowFunctions", visitor: { ThisExpression: function (a) {
          g(a, "this");
        }, ReferencedIdentifier: function (a) {
          "arguments" === a.node.name && g(a, "arguments");
        } } }), c.exports = b.default;
  }), a.registerDynamic("1e", ["17", "d9", "5f", "1f", "20", "21", "d", "16", "18", "d1", "1c", "d5", "30", "e", "da", "db", "62", "1d", "dc", "a8", "1a", "11", "b2", "9b", "d7", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }var f = a("c");this || self;b.__esModule = !0, b.File = void 0;var g = a("17"),
        h = e(g),
        i = a("d9"),
        j = e(i),
        k = a("5f"),
        l = e(k),
        m = a("1f"),
        n = e(m),
        o = a("20"),
        p = e(o),
        q = a("21"),
        r = e(q),
        s = a("d"),
        t = e(s),
        u = a("16"),
        v = d(u),
        w = a("18"),
        x = e(w),
        y = a("d1"),
        z = e(y),
        A = a("1c"),
        B = e(A),
        C = a("d5"),
        D = e(C),
        E = a("30"),
        F = e(E),
        G = a("e"),
        H = e(G),
        I = a("da"),
        J = e(I),
        K = a("db"),
        L = e(K),
        M = a("62"),
        N = e(M),
        O = a("1d"),
        P = e(O),
        Q = a("dc"),
        R = a("a8"),
        S = d(R),
        T = a("1a"),
        U = e(T),
        V = a("11"),
        W = d(V),
        X = a("b2"),
        Y = e(X),
        Z = a("9b"),
        $ = e(Z),
        _ = a("d7"),
        aa = e(_),
        ba = /^#!.*/,
        ca = [[$.default], [aa.default]],
        da = { enter: function (a, b) {
        var c = a.node.loc;c && (b.loc = c, a.stop());
      } },
        ea = function (b) {
      function c() {
        var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            d = arguments[1];(0, n.default)(this, c);var e = (0, p.default)(this, b.call(this));return e.pipeline = d, e.log = new N.default(e, a.filename || "unknown"), e.opts = e.initOptions(a), e.parserOpts = { sourceType: e.opts.sourceType, sourceFileName: e.opts.filename, plugins: [] }, e.pluginVisitors = [], e.pluginPasses = [], e.buildPluginsForOptions(e.opts), e.opts.passPerPreset && (e.perPresetOpts = [], e.opts.presets.forEach(function (a) {
          var b = (0, l.default)((0, j.default)(e.opts), a);e.perPresetOpts.push(b), e.buildPluginsForOptions(b);
        })), e.metadata = { usedHelpers: [], marked: [], modules: { imports: [], exports: { exported: [], specifiers: [] } } }, e.dynamicImportTypes = {}, e.dynamicImportIds = {}, e.dynamicImports = [], e.declarations = {}, e.usedHelpers = {}, e.path = null, e.ast = {}, e.code = "", e.shebang = "", e.hub = new C.Hub(e), e;
      }return (0, r.default)(c, b), c.prototype.getMetadata = function () {
        for (var a = !1, b = this.ast.program.body, c = Array.isArray(b), d = 0, b = c ? b : (0, h.default)(b);;) {
          var e;if (c) {
            if (d >= b.length) break;e = b[d++];
          } else {
            if (d = b.next(), d.done) break;e = d.value;
          }var f = e;if (W.isModuleDeclaration(f)) {
            a = !0;break;
          }
        }a && this.path.traverse(v, this);
      }, c.prototype.initOptions = function (a) {
        a = new z.default(this.log, this.pipeline).init(a), a.inputSourceMap && (a.sourceMaps = !0), a.moduleId && (a.moduleIds = !0), a.basename = U.default.basename(a.filename, U.default.extname(a.filename)), a.ignore = S.arrayify(a.ignore, S.regexify), a.only && (a.only = S.arrayify(a.only, S.regexify)), (0, L.default)(a, { moduleRoot: a.sourceRoot }), (0, L.default)(a, { sourceRoot: a.moduleRoot }), (0, L.default)(a, { filenameRelative: a.filename });var b = U.default.basename(a.filenameRelative);return (0, L.default)(a, { sourceFileName: b, sourceMapTarget: b }), a;
      }, c.prototype.buildPluginsForOptions = function (a) {
        if (Array.isArray(a.plugins)) {
          for (var b = a.plugins.concat(ca), c = [], d = [], e = b, f = Array.isArray(e), g = 0, e = f ? e : (0, h.default)(e);;) {
            var i;if (f) {
              if (g >= e.length) break;i = e[g++];
            } else {
              if (g = e.next(), g.done) break;i = g.value;
            }var j = i,
                k = j[0],
                l = j[1];c.push(k.visitor), d.push(new B.default(this, k, l)), k.manipulateOptions && k.manipulateOptions(a, this.parserOpts, this);
          }this.pluginVisitors.push(c), this.pluginPasses.push(d);
        }
      }, c.prototype.getModuleName = function () {
        var a = this.opts;if (!a.moduleIds) return null;if (null != a.moduleId && !a.getModuleId) return a.moduleId;var b = a.filenameRelative,
            c = "";if (null != a.moduleRoot && (c = a.moduleRoot + "/"), !a.filenameRelative) return c + a.filename.replace(/^\//, "");if (null != a.sourceRoot) {
          var d = new RegExp("^" + a.sourceRoot + "/?");b = b.replace(d, "");
        }return b = b.replace(/\.(\w*?)$/, ""), c += b, c = c.replace(/\\/g, "/"), a.getModuleId ? a.getModuleId(c) || c : c;
      }, c.prototype.resolveModuleSource = function (a) {
        var b = this.opts.resolveModuleSource;return b && (a = b(a, this.opts.filename)), a;
      }, c.prototype.addImport = function (a, b) {
        var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : b,
            d = a + ":" + b,
            e = this.dynamicImportIds[d];if (!e) {
          a = this.resolveModuleSource(a), e = this.dynamicImportIds[d] = this.scope.generateUidIdentifier(c);var f = [];"*" === b ? f.push(W.importNamespaceSpecifier(e)) : "default" === b ? f.push(W.importDefaultSpecifier(e)) : f.push(W.importSpecifier(e, W.identifier(b)));var g = W.importDeclaration(f, W.stringLiteral(a));g._blockHoist = 3, this.path.unshiftContainer("body", g);
        }return e;
      }, c.prototype.addHelper = function (a) {
        var b = this.declarations[a];if (b) return b;this.usedHelpers[a] || (this.metadata.usedHelpers.push(a), this.usedHelpers[a] = !0);var c = this.get("helperGenerator"),
            d = this.get("helpersNamespace");if (c) {
          var e = c(a);if (e) return e;
        } else if (d) return W.memberExpression(d, W.identifier(a));var f = (0, t.default)(a),
            g = this.declarations[a] = this.scope.generateUidIdentifier(a);return W.isFunctionExpression(f) && !f.id ? (f.body._compact = !0, f._generated = !0, f.id = g, f.type = "FunctionDeclaration", this.path.unshiftContainer("body", f)) : (f._compact = !0, this.scope.push({ id: g, init: f, unique: !0 })), g;
      }, c.prototype.addTemplateObject = function (a, b, c) {
        var d = c.elements.map(function (a) {
          return a.value;
        }),
            e = a + "_" + c.elements.length + "_" + d.join(","),
            f = this.declarations[e];if (f) return f;var g = this.declarations[e] = this.scope.generateUidIdentifier("templateObject"),
            h = this.addHelper(a),
            i = W.callExpression(h, [b, c]);return i._compact = !0, this.scope.push({ id: g, init: i, _blockHoist: 1.9 }), g;
      }, c.prototype.buildCodeFrameError = function (a, b) {
        var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : SyntaxError,
            d = a && (a.loc || a._loc),
            e = new c(b);return d ? e.loc = d.start : ((0, D.default)(a, da, this.scope, e), e.message += " (This is an error on an internal node. Probably an internal error", e.loc && (e.message += ". Location has been estimated."), e.message += ")"), e;
      }, c.prototype.mergeSourceMap = function (a) {
        var b = this.opts.inputSourceMap;if (b) {
          var c = new F.default.SourceMapConsumer(b),
              d = new F.default.SourceMapConsumer(a),
              e = new F.default.SourceMapGenerator({ file: c.file, sourceRoot: c.sourceRoot }),
              f = d.sources[0];c.eachMapping(function (a) {
            var b = d.generatedPositionFor({ line: a.generatedLine, column: a.generatedColumn, source: f });null != b.column && e.addMapping({ source: a.source, original: null == a.source ? null : { line: a.originalLine, column: a.originalColumn }, generated: b });
          });var g = e.toJSON();return b.mappings = g.mappings, b;
        }return a;
      }, c.prototype.parse = function (b) {
        var c = Q.parse,
            d = this.opts.parserOpts;if (d && (d = (0, l.default)({}, this.parserOpts, d), d.parser)) {
          if ("string" == typeof d.parser) {
            var e = U.default.dirname(this.opts.filename) || f.cwd(),
                g = (0, Y.default)(d.parser, e);if (!g) throw new Error("Couldn't find parser " + d.parser + ' with "parse" method relative to directory ' + e);c = a(g).parse;
          } else c = d.parser;d.parser = { parse: function (a) {
              return (0, Q.parse)(a, d);
            } };
        }this.log.debug("Parse start");var h = c(b, d || this.parserOpts);return this.log.debug("Parse stop"), h;
      }, c.prototype._addAst = function (a) {
        this.path = C.NodePath.get({ hub: this.hub, parentPath: null, parent: a, container: a, key: "program" }).setContext(), this.scope = this.path.scope, this.ast = a, this.getMetadata();
      }, c.prototype.addAst = function (a) {
        this.log.debug("Start set AST"), this._addAst(a), this.log.debug("End set AST");
      }, c.prototype.transform = function () {
        for (var a = 0; a < this.pluginPasses.length; a++) {
          var b = this.pluginPasses[a];this.call("pre", b), this.log.debug("Start transform traverse");var c = D.default.visitors.merge(this.pluginVisitors[a], b, this.opts.wrapPluginVisitorMethod);(0, D.default)(this.ast, c, this.scope), this.log.debug("End transform traverse"), this.call("post", b);
        }return this.generate();
      }, c.prototype.wrap = function (a, b) {
        a += "";try {
          return this.shouldIgnore() ? this.makeResult({ code: a, ignored: !0 }) : b();
        } catch (b) {
          if (b._babel) throw b;b._babel = !0;var c = b.message = this.opts.filename + ": " + b.message,
              d = b.loc;if (d && (b.codeFrame = (0, J.default)(a, d.line, d.column + 1, this.opts), c += "\n" + b.codeFrame), f.browser && (b.message = c), b.stack) {
            var e = b.stack.replace(b.message, c);b.stack = e;
          }throw b;
        }
      }, c.prototype.addCode = function (a) {
        a = (a || "") + "", a = this.parseInputSourceMap(a), this.code = a;
      }, c.prototype.parseCode = function () {
        this.parseShebang();var a = this.parse(this.code);this.addAst(a);
      }, c.prototype.shouldIgnore = function () {
        var a = this.opts;return S.shouldIgnore(a.filename, a.ignore, a.only);
      }, c.prototype.call = function (a, b) {
        for (var c = b, d = Array.isArray(c), e = 0, c = d ? c : (0, h.default)(c);;) {
          var f;if (d) {
            if (e >= c.length) break;f = c[e++];
          } else {
            if (e = c.next(), e.done) break;f = e.value;
          }var g = f,
              i = g.plugin,
              j = i[a];j && j.call(g, this);
        }
      }, c.prototype.parseInputSourceMap = function (a) {
        var b = this.opts;if (!1 !== b.inputSourceMap) {
          var c = x.default.fromSource(a);c && (b.inputSourceMap = c.toObject(), a = x.default.removeComments(a));
        }return a;
      }, c.prototype.parseShebang = function () {
        var a = ba.exec(this.code);a && (this.shebang = a[0], this.code = this.code.replace(ba, ""));
      }, c.prototype.makeResult = function (a) {
        var b = a.code,
            c = a.map,
            d = a.ast,
            e = a.ignored,
            f = { metadata: null, options: this.opts, ignored: !!e, code: null, ast: null, map: c || null };return this.opts.code && (f.code = b), this.opts.ast && (f.ast = d), this.opts.metadata && (f.metadata = this.metadata), f;
      }, c.prototype.generate = function () {
        var b = this.opts,
            c = this.ast,
            d = { ast: c };if (!b.code) return this.makeResult(d);var e = H.default;if (b.generatorOpts.generator && "string" == typeof (e = b.generatorOpts.generator)) {
          var g = U.default.dirname(this.opts.filename) || f.cwd(),
              h = (0, Y.default)(e, g);if (!h) throw new Error("Couldn't find generator " + e + ' with "print" method relative to directory ' + g);e = a(h).print;
        }this.log.debug("Generation start");var i = e(c, b.generatorOpts ? (0, l.default)(b, b.generatorOpts) : b, this.code);return d.code = i.code, d.map = i.map, this.log.debug("Generation end"), this.shebang && (d.code = this.shebang + "\n" + d.code), d.map && (d.map = this.mergeSourceMap(d.map)), "inline" !== b.sourceMaps && "both" !== b.sourceMaps || (d.code += "\n" + x.default.fromObject(d.map).toComment()), "inline" === b.sourceMaps && (d.map = null), this.makeResult(d);
      }, c;
    }(P.default);b.default = ea, b.File = ea;
  }), a.registerDynamic("dd", ["1f", "13", "9c", "1e", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var e = a("1f"),
        f = d(e),
        g = a("13"),
        h = d(g),
        i = a("9c"),
        j = d(i),
        k = a("1e"),
        l = d(k),
        m = function () {
      function a() {
        (0, f.default)(this, a);
      }return a.prototype.lint = function (a) {
        var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};return b.code = !1, b.mode = "lint", this.transform(a, b);
      }, a.prototype.pretransform = function (a, b) {
        var c = new l.default(b, this);return c.wrap(a, function () {
          return c.addCode(a), c.parseCode(a), c;
        });
      }, a.prototype.transform = function (a, b) {
        var c = new l.default(b, this);return c.wrap(a, function () {
          return c.addCode(a), c.parseCode(a), c.transform();
        });
      }, a.prototype.analyse = function (a) {
        var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
            c = arguments[2];return b.code = !1, c && (b.plugins = b.plugins || [], b.plugins.push(new j.default({ visitor: c }))), this.transform(a, b).metadata;
      }, a.prototype.transformFromAst = function (a, b, c) {
        a = (0, h.default)(a);var d = new l.default(c, this);return d.wrap(b, function () {
          return d.addCode(b), d.addAst(a), d.transform();
        });
      }, a;
    }();b.default = m, c.exports = b.default;
  }), a.registerDynamic("d2", ["1e", "ae", "b", "10", "b0", "b4", "12", "19", "a8", "f", "11", "d5", "d1", "dd", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      throw new Error("The (" + a + ") Babel 5 plugin is being run with Babel 6.");
    }function g(a, b, c) {
      "function" == typeof b && (c = b, b = {}), b.filename = a, q.default.readFile(a, function (a, d) {
        var e = void 0;if (!a) try {
          e = E(d, b);
        } catch (b) {
          a = b;
        }a ? c(a) : c(null, e);
      });
    }function h(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};return b.filename = a, E(q.default.readFileSync(a, "utf8"), b);
    }a("c"), this || self;b.__esModule = !0, b.transformFromAst = b.transform = b.analyse = b.Pipeline = b.OptionManager = b.traverse = b.types = b.messages = b.util = b.version = b.resolvePreset = b.resolvePlugin = b.template = b.buildExternalHelpers = b.options = b.File = void 0;var i = a("1e");Object.defineProperty(b, "File", { enumerable: !0, get: function () {
        return e(i).default;
      } });var j = a("ae");Object.defineProperty(b, "options", { enumerable: !0, get: function () {
        return e(j).default;
      } });var k = a("b");Object.defineProperty(b, "buildExternalHelpers", { enumerable: !0, get: function () {
        return e(k).default;
      } });var l = a("10");Object.defineProperty(b, "template", { enumerable: !0, get: function () {
        return e(l).default;
      } });var m = a("b0");Object.defineProperty(b, "resolvePlugin", { enumerable: !0, get: function () {
        return e(m).default;
      } });var n = a("b4");Object.defineProperty(b, "resolvePreset", { enumerable: !0, get: function () {
        return e(n).default;
      } });var o = a("12");Object.defineProperty(b, "version", { enumerable: !0, get: function () {
        return o.version;
      } }), b.Plugin = f, b.transformFile = g, b.transformFileSync = h;var p = a("19"),
        q = e(p),
        r = a("a8"),
        s = d(r),
        t = a("f"),
        u = d(t),
        v = a("11"),
        w = d(v),
        x = a("d5"),
        y = e(x),
        z = a("d1"),
        A = e(z),
        B = a("dd"),
        C = e(B);b.util = s, b.messages = u, b.types = w, b.traverse = y.default, b.OptionManager = A.default, b.Pipeline = C.default;var D = new C.default(),
        E = (b.analyse = D.analyse.bind(D), b.transform = D.transform.bind(D));b.transformFromAst = D.transformFromAst.bind(D);
  }), a.registerDynamic("de", ["d2", "c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = a("d2");
  }), a.registerDynamic("df", ["d9", "17", "d8", "e0", "10"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("d9"),
        f = d(e),
        g = a("17"),
        h = d(g),
        i = a("d8"),
        j = d(i);b.default = function (a) {
      var b = a.types,
          c = (0, j.default)(),
          d = { "AssignmentExpression|UpdateExpression": function (a) {
          if (!a.node[c]) {
            a.node[c] = !0;var d = a.get(a.isAssignmentExpression() ? "left" : "argument");if (d.isIdentifier()) {
              var e = d.node.name;if (this.scope.getBinding(e) === a.scope.getBinding(e)) {
                var f = this.exports[e];if (f) {
                  var g = a.node,
                      i = a.isUpdateExpression() && !g.prefix;i && ("++" === g.operator ? g = b.binaryExpression("+", g.argument, b.numericLiteral(1)) : "--" === g.operator ? g = b.binaryExpression("-", g.argument, b.numericLiteral(1)) : i = !1);for (var j = f, k = Array.isArray(j), l = 0, j = k ? j : (0, h.default)(j);;) {
                    var m;if (k) {
                      if (l >= j.length) break;m = j[l++];
                    } else {
                      if (l = j.next(), l.done) break;m = l.value;
                    }var n = m;g = this.buildCall(n, g).expression;
                  }i && (g = b.sequenceExpression([g, a.node])), a.replaceWith(g);
                }
              }
            }
          }
        } };return { visitor: { CallExpression: function (a, c) {
            if (a.node.callee.type === q) {
              var d = c.contextIdent;a.replaceWith(b.callExpression(b.memberExpression(d, b.identifier("import")), a.node.arguments));
            }
          }, ReferencedIdentifier: function (a, c) {
            "__moduleName" != a.node.name || a.scope.hasBinding("__moduleName") || a.replaceWith(b.memberExpression(c.contextIdent, b.identifier("id")));
          }, Program: { enter: function (a, b) {
              b.contextIdent = a.scope.generateUidIdentifier("context");
            }, exit: function (a, c) {
              function e(a, b) {
                m[a] = m[a] || [], m[a].push(b);
              }function g(a, b, c) {
                var d = void 0;n.forEach(function (b) {
                  b.key === a && (d = b);
                }), d || n.push(d = { key: a, imports: [], exports: [] }), d[b] = d[b].concat(c);
              }function i(a, c) {
                return b.expressionStatement(b.callExpression(j, [b.stringLiteral(a), c]));
              }for (var j = a.scope.generateUidIdentifier("export"), k = c.contextIdent, m = (0, f.default)(null), n = [], q = [], r = [], s = [], t = [], u = [], v = a.get("body"), w = !0, x = v, y = Array.isArray(x), z = 0, x = y ? x : (0, h.default)(x);;) {
                var A;if (y) {
                  if (z >= x.length) break;A = x[z++];
                } else {
                  if (z = x.next(), z.done) break;A = z.value;
                }var B = A;if (B.isExportDeclaration() && (B = B.get("declaration")), B.isVariableDeclaration() && "var" !== B.node.kind) {
                  w = !1;break;
                }
              }for (var C = v, D = Array.isArray(C), E = 0, C = D ? C : (0, h.default)(C);;) {
                var F;if (D) {
                  if (E >= C.length) break;F = C[E++];
                } else {
                  if (E = C.next(), E.done) break;F = E.value;
                }var G = F;if (w && G.isFunctionDeclaration()) q.push(G.node), u.push(G);else if (G.isImportDeclaration()) {
                  var H = G.node.source.value;g(H, "imports", G.node.specifiers);for (var I in G.getBindingIdentifiers()) G.scope.removeBinding(I), t.push(b.identifier(I));G.remove();
                } else if (G.isExportAllDeclaration()) g(G.node.source.value, "exports", G.node), G.remove();else if (G.isExportDefaultDeclaration()) {
                  var J = G.get("declaration");if (J.isClassDeclaration() || J.isFunctionDeclaration()) {
                    var K = J.node.id,
                        L = [];K ? (L.push(J.node), L.push(i("default", K)), e(K.name, "default")) : L.push(i("default", b.toExpression(J.node))), !w || J.isClassDeclaration() ? G.replaceWithMultiple(L) : (q = q.concat(L), u.push(G));
                  } else G.replaceWith(i("default", J.node));
                } else if (G.isExportNamedDeclaration()) {
                  var M = G.get("declaration");if (M.node) {
                    G.replaceWith(M);var N = [],
                        O = void 0;if (G.isFunction()) {
                      var P = M.node,
                          Q = P.id.name;if (w) e(Q, Q), q.push(P), q.push(i(Q, P.id)), u.push(G);else {
                        var R;R = {}, R[Q] = P.id, O = R;
                      }
                    } else O = M.getBindingIdentifiers();for (var S in O) e(S, S), N.push(i(S, b.identifier(S)));G.insertAfter(N);
                  } else {
                    var T = G.node.specifiers;if (T && T.length) if (G.node.source) g(G.node.source.value, "exports", T), G.remove();else {
                      for (var U = [], V = T, W = Array.isArray(V), X = 0, V = W ? V : (0, h.default)(V);;) {
                        var Y;if (W) {
                          if (X >= V.length) break;Y = V[X++];
                        } else {
                          if (X = V.next(), X.done) break;Y = X.value;
                        }var Z = Y;U.push(i(Z.exported.name, Z.local)), e(Z.local.name, Z.exported.name);
                      }G.replaceWithMultiple(U);
                    }
                  }
                }
              }n.forEach(function (c) {
                for (var d = [], e = a.scope.generateUidIdentifier(c.key), f = c.imports, g = Array.isArray(f), i = 0, f = g ? f : (0, h.default)(f);;) {
                  var k;if (g) {
                    if (i >= f.length) break;k = f[i++];
                  } else {
                    if (i = f.next(), i.done) break;k = i.value;
                  }var l = k;b.isImportNamespaceSpecifier(l) ? d.push(b.expressionStatement(b.assignmentExpression("=", l.local, e))) : b.isImportDefaultSpecifier(l) && (l = b.importSpecifier(l.local, b.identifier("default"))), b.isImportSpecifier(l) && d.push(b.expressionStatement(b.assignmentExpression("=", l.local, b.memberExpression(e, l.imported))));
                }if (c.exports.length) {
                  var m = a.scope.generateUidIdentifier("exportObj");d.push(b.variableDeclaration("var", [b.variableDeclarator(m, b.objectExpression([]))]));for (var n = c.exports, o = Array.isArray(n), q = 0, n = o ? n : (0, h.default)(n);;) {
                    var t;if (o) {
                      if (q >= n.length) break;t = n[q++];
                    } else {
                      if (q = n.next(), q.done) break;t = q.value;
                    }var u = t;b.isExportAllDeclaration(u) ? d.push(p({ KEY: a.scope.generateUidIdentifier("key"), EXPORT_OBJ: m, TARGET: e })) : b.isExportSpecifier(u) && d.push(b.expressionStatement(b.assignmentExpression("=", b.memberExpression(m, u.exported), b.memberExpression(e, u.local))));
                  }d.push(b.expressionStatement(b.callExpression(j, [m])));
                }s.push(b.stringLiteral(c.key)), r.push(b.functionExpression(null, [e], b.blockStatement(d)));
              });var $ = this.getModuleName();$ && ($ = b.stringLiteral($)), w && (0, l.default)(a, function (a) {
                return t.push(a);
              }), t.length && q.unshift(b.variableDeclaration("var", t.map(function (a) {
                return b.variableDeclarator(a);
              }))), a.traverse(d, { exports: m, buildCall: i, scope: a.scope });for (var _ = u, aa = Array.isArray(_), ba = 0, _ = aa ? _ : (0, h.default)(_);;) {
                var ca;if (aa) {
                  if (ba >= _.length) break;ca = _[ba++];
                } else {
                  if (ba = _.next(), ba.done) break;ca = ba.value;
                }ca.remove();
              }a.node.body = [o({ SYSTEM_REGISTER: b.memberExpression(b.identifier(c.opts.systemGlobal || "System"), b.identifier("register")), BEFORE_BODY: q, MODULE_NAME: $, SETTERS: r, SOURCES: s, BODY: a.node.body, EXPORT_IDENTIFIER: j, CONTEXT_IDENTIFIER: k })];
            } } } };
    };var k = a("e0"),
        l = d(k),
        m = a("10"),
        n = d(m),
        o = (0, n.default)('\n  SYSTEM_REGISTER(MODULE_NAME, [SOURCES], function (EXPORT_IDENTIFIER, CONTEXT_IDENTIFIER) {\n    "use strict";\n    BEFORE_BODY;\n    return {\n      setters: [SETTERS],\n      execute: function () {\n        BODY;\n      }\n    };\n  });\n'),
        p = (0, n.default)('\n  for (var KEY in TARGET) {\n    if (KEY !== "default" && KEY !== "__esModule") EXPORT_OBJ[KEY] = TARGET[KEY];\n  }\n'),
        q = "Import";c.exports = b.default;
  }), a.registerDynamic("e1", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function (a) {
      var b = a.types;return { pre: function (a) {
          a.set("helpersNamespace", b.identifier("babelHelpers"));
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("e2", [], !0, function (a, b, c) {
    "use strict";
    this || self;c.exports = { builtins: { Symbol: "symbol", Promise: "promise", Map: "map", WeakMap: "weak-map", Set: "set", WeakSet: "weak-set", Observable: "observable", setImmediate: "set-immediate", clearImmediate: "clear-immediate", asap: "asap" }, methods: { Array: { concat: "array/concat", copyWithin: "array/copy-within", entries: "array/entries", every: "array/every", fill: "array/fill", filter: "array/filter", findIndex: "array/find-index", find: "array/find", forEach: "array/for-each", from: "array/from", includes: "array/includes", indexOf: "array/index-of", join: "array/join", keys: "array/keys", lastIndexOf: "array/last-index-of", map: "array/map", of: "array/of", pop: "array/pop", push: "array/push", reduceRight: "array/reduce-right", reduce: "array/reduce", reverse: "array/reverse", shift: "array/shift", slice: "array/slice", some: "array/some", sort: "array/sort", splice: "array/splice", unshift: "array/unshift", values: "array/values" }, JSON: { stringify: "json/stringify" }, Object: { assign: "object/assign", create: "object/create", defineProperties: "object/define-properties", defineProperty: "object/define-property", entries: "object/entries", freeze: "object/freeze", getOwnPropertyDescriptor: "object/get-own-property-descriptor", getOwnPropertyDescriptors: "object/get-own-property-descriptors", getOwnPropertyNames: "object/get-own-property-names", getOwnPropertySymbols: "object/get-own-property-symbols", getPrototypeOf: "object/get-prototype-of", isExtensible: "object/is-extensible", isFrozen: "object/is-frozen", isSealed: "object/is-sealed", is: "object/is", keys: "object/keys", preventExtensions: "object/prevent-extensions", seal: "object/seal", setPrototypeOf: "object/set-prototype-of", values: "object/values" }, RegExp: { escape: "regexp/escape" }, Math: { acosh: "math/acosh", asinh: "math/asinh", atanh: "math/atanh", cbrt: "math/cbrt", clz32: "math/clz32", cosh: "math/cosh", expm1: "math/expm1", fround: "math/fround", hypot: "math/hypot", imul: "math/imul", log10: "math/log10", log1p: "math/log1p", log2: "math/log2", sign: "math/sign", sinh: "math/sinh", tanh: "math/tanh", trunc: "math/trunc", iaddh: "math/iaddh", isubh: "math/isubh", imulh: "math/imulh", umulh: "math/umulh" }, Symbol: { for: "symbol/for", hasInstance: "symbol/has-instance", isConcatSpreadable: "symbol/is-concat-spreadable", iterator: "symbol/iterator", keyFor: "symbol/key-for", match: "symbol/match", replace: "symbol/replace", search: "symbol/search", species: "symbol/species", split: "symbol/split", toPrimitive: "symbol/to-primitive", toStringTag: "symbol/to-string-tag", unscopables: "symbol/unscopables" }, String: { at: "string/at", codePointAt: "string/code-point-at", endsWith: "string/ends-with", fromCodePoint: "string/from-code-point", includes: "string/includes", matchAll: "string/match-all", padLeft: "string/pad-left", padRight: "string/pad-right", padStart: "string/pad-start", padEnd: "string/pad-end", raw: "string/raw", repeat: "string/repeat", startsWith: "string/starts-with", trim: "string/trim", trimLeft: "string/trim-left", trimRight: "string/trim-right", trimStart: "string/trim-start", trimEnd: "string/trim-end" }, Number: { EPSILON: "number/epsilon", isFinite: "number/is-finite", isInteger: "number/is-integer", isNaN: "number/is-nan", isSafeInteger: "number/is-safe-integer", MAX_SAFE_INTEGER: "number/max-safe-integer", MIN_SAFE_INTEGER: "number/min-safe-integer", parseFloat: "number/parse-float", parseInt: "number/parse-int" }, Reflect: { apply: "reflect/apply", construct: "reflect/construct", defineProperty: "reflect/define-property", deleteProperty: "reflect/delete-property", enumerate: "reflect/enumerate", getOwnPropertyDescriptor: "reflect/get-own-property-descriptor", getPrototypeOf: "reflect/get-prototype-of", get: "reflect/get", has: "reflect/has", isExtensible: "reflect/is-extensible", ownKeys: "reflect/own-keys", preventExtensions: "reflect/prevent-extensions", setPrototypeOf: "reflect/set-prototype-of", set: "reflect/set", defineMetadata: "reflect/define-metadata", deleteMetadata: "reflect/delete-metadata", getMetadata: "reflect/get-metadata", getMetadataKeys: "reflect/get-metadata-keys", getOwnMetadata: "reflect/get-own-metadata", getOwnMetadataKeys: "reflect/get-own-metadata-keys", hasMetadata: "reflect/has-metadata", hasOwnMetadata: "reflect/has-own-metadata", metadata: "reflect/metadata" }, System: { global: "system/global" }, Error: { isError: "error/is-error" }, Date: {}, Function: {} } };
  }), a.registerDynamic("e3", ["e2"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.definitions = void 0, b.default = function (a) {
      function b(a) {
        return a.moduleName || "babel-runtime";
      }function c(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
      }var d = a.types,
          e = ["interopRequireWildcard", "interopRequireDefault"];return { pre: function (a) {
          var c = b(this.opts);!1 !== this.opts.helpers && a.set("helperGenerator", function (b) {
            if (e.indexOf(b) < 0) return a.addImport(c + "/helpers/" + b, "default", b);
          }), this.setDynamic("regeneratorIdentifier", function () {
            return a.addImport(c + "/regenerator", "default", "regeneratorRuntime");
          });
        }, visitor: { ReferencedIdentifier: function (a, e) {
            var g = a.node,
                h = a.parent,
                i = a.scope;if ("regeneratorRuntime" === g.name && !1 !== e.opts.regenerator) return void a.replaceWith(e.get("regeneratorIdentifier"));if (!1 !== e.opts.polyfill && !d.isMemberExpression(h) && c(f.default.builtins, g.name) && !i.getBindingIdentifier(g.name)) {
              var j = b(e.opts);a.replaceWith(e.addImport(j + "/core-js/" + f.default.builtins[g.name], "default", g.name));
            }
          }, CallExpression: function (a, c) {
            if (!1 !== c.opts.polyfill && !a.node.arguments.length) {
              var e = a.node.callee;if (d.isMemberExpression(e) && e.computed && a.get("callee.property").matchesPattern("Symbol.iterator")) {
                var f = b(c.opts);a.replaceWith(d.callExpression(c.addImport(f + "/core-js/get-iterator", "default", "getIterator"), [e.object]));
              }
            }
          }, BinaryExpression: function (a, c) {
            if (!1 !== c.opts.polyfill && "in" === a.node.operator && a.get("left").matchesPattern("Symbol.iterator")) {
              var e = b(c.opts);a.replaceWith(d.callExpression(c.addImport(e + "/core-js/is-iterable", "default", "isIterable"), [a.node.right]));
            }
          }, MemberExpression: { enter: function (a, e) {
              if (!1 !== e.opts.polyfill && a.isReferenced()) {
                var g = a.node,
                    h = g.object,
                    i = g.property;if (d.isReferenced(h, g) && !g.computed && c(f.default.methods, h.name)) {
                  var j = f.default.methods[h.name];if (c(j, i.name) && !a.scope.getBindingIdentifier(h.name)) {
                    if ("Object" === h.name && "defineProperty" === i.name && a.parentPath.isCallExpression()) {
                      var k = a.parentPath.node;if (3 === k.arguments.length && d.isLiteral(k.arguments[1])) return;
                    }var l = b(e.opts);a.replaceWith(e.addImport(l + "/core-js/" + j[i.name], "default", h.name + "$" + i.name));
                  }
                }
              }
            }, exit: function (a, e) {
              if (!1 !== e.opts.polyfill && a.isReferenced()) {
                var g = a.node,
                    h = g.object;if (c(f.default.builtins, h.name) && !a.scope.getBindingIdentifier(h.name)) {
                  var i = b(e.opts);a.replaceWith(d.memberExpression(e.addImport(i + "/core-js/" + f.default.builtins[h.name], "default", h.name), g.property, g.computed));
                }
              }
            } } } };
    };var e = a("e2"),
        f = d(e);b.definitions = f.default;
  }), a.registerDynamic("e4", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("classConstructorCall");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("e5", ["17", "d8", "e4", "10"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e),
        g = a("d8"),
        h = d(g);b.default = function (b) {
      function c(a) {
        for (var b = a.get("body.body"), c = b, d = Array.isArray(c), e = 0, c = d ? c : (0, f.default)(c);;) {
          var g;if (d) {
            if (e >= c.length) break;g = c[e++];
          } else {
            if (e = c.next(), e.done) break;g = e.value;
          }var h = g;if ("constructorCall" === h.node.kind) return h;
        }return null;
      }function d(a, b) {
        var c = b,
            d = c.node,
            f = d.id || b.scope.generateUidIdentifier("class");b.parentPath.isExportDefaultDeclaration() && (b = b.parentPath, b.insertAfter(e.exportDefaultDeclaration(f))), b.replaceWithMultiple(k({ CLASS_REF: b.scope.generateUidIdentifier(f.name), CALL_REF: b.scope.generateUidIdentifier(f.name + "Call"), CALL: e.functionExpression(null, a.node.params, a.node.body), CLASS: e.toExpression(d), WRAPPER_REF: f })), a.remove();
      }var e = b.types,
          g = (0, h.default)();return { inherits: a("e4"), visitor: { Class: function (a) {
            if (!a.node[g]) {
              a.node[g] = !0;var b = c(a);b && d(b, a);
            }
          } } };
    };var i = a("10"),
        j = d(i),
        k = (0, j.default)("\n  let CLASS_REF = CLASS;\n  var CALL_REF = CALL;\n  var WRAPPER_REF = function (...args) {\n    if (this instanceof WRAPPER_REF) {\n      return Reflect.construct(CLASS_REF, args);\n    } else {\n      return CALL_REF.apply(this, args);\n    }\n  };\n  WRAPPER_REF.__proto__ = CLASS_REF;\n  WRAPPER_REF;\n");c.exports = b.default;
  }), a.registerDynamic("e6", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("exportExtensions");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("e7", ["e6"], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function (b) {
      function c(a, b, e) {
        var f = a.specifiers[0];if (d.isExportNamespaceSpecifier(f) || d.isExportDefaultSpecifier(f)) {
          var g = a.specifiers.shift(),
              h = e.generateUidIdentifier(g.exported.name),
              i = void 0;i = d.isExportNamespaceSpecifier(g) ? d.importNamespaceSpecifier(h) : d.importDefaultSpecifier(h), b.push(d.importDeclaration([i], a.source)), b.push(d.exportNamedDeclaration(null, [d.exportSpecifier(h, g.exported)])), c(a, b, e);
        }
      }var d = b.types;return { inherits: a("e6"), visitor: { ExportNamedDeclaration: function (a) {
            var b = a.node,
                d = a.scope,
                e = [];c(b, e, d), e.length && (b.specifiers.length >= 1 && e.push(b), a.replaceWithMultiple(e));
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("e8", ["e9", "e5", "e7"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("e9"),
        f = d(e),
        g = a("e5"),
        h = d(g),
        i = a("e7"),
        j = d(i);b.default = { presets: [f.default], plugins: [h.default, j.default] }, c.exports = b.default;
  }), a.registerDynamic("ea", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("classProperties");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("eb", ["17", "ea", "ec", "10"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e);b.default = function (b) {
      var c = b.types,
          d = { Super: function (a) {
          a.parentPath.isCallExpression({ callee: a.node }) && this.push(a.parentPath);
        } },
          e = { ReferencedIdentifier: function (a) {
          this.scope.hasOwnBinding(a.node.name) && (this.collision = !0, a.skip());
        } },
          g = (0, j.default)("\n    Object.defineProperty(REF, KEY, {\n      // configurable is false by default\n      enumerable: true,\n      writable: true,\n      value: VALUE\n    });\n  "),
          i = function (a, b) {
        var d = b.key,
            e = b.value,
            f = b.computed;return g({ REF: a, KEY: c.isIdentifier(d) && !f ? c.stringLiteral(d.name) : d, VALUE: e || c.identifier("undefined") });
      },
          k = function (a, b) {
        var d = b.key,
            e = b.value,
            f = b.computed;return c.expressionStatement(c.assignmentExpression("=", c.memberExpression(a, d, f || c.isLiteral(d)), e));
      };return { inherits: a("ea"), visitor: { Class: function (a, b) {
            for (var g = b.opts.spec ? i : k, j = !!a.node.superClass, l = void 0, m = [], n = a.get("body"), o = n.get("body"), p = Array.isArray(o), q = 0, o = p ? o : (0, f.default)(o);;) {
              var r;if (p) {
                if (q >= o.length) break;r = o[q++];
              } else {
                if (q = o.next(), q.done) break;r = q.value;
              }var s = r;s.isClassProperty() ? m.push(s) : s.isClassMethod({ kind: "constructor" }) && (l = s);
            }if (m.length) {
              var t = [],
                  u = void 0;a.isClassExpression() || !a.node.id ? ((0, h.default)(a), u = a.scope.generateUidIdentifier("class")) : u = a.node.id;for (var v = [], w = m, x = Array.isArray(w), y = 0, w = x ? w : (0, f.default)(w);;) {
                var z;if (x) {
                  if (y >= w.length) break;z = w[y++];
                } else {
                  if (y = w.next(), y.done) break;z = y.value;
                }var A = z,
                    B = A.node;if (!(B.decorators && B.decorators.length > 0) && (b.opts.spec || B.value)) {
                  if (B.static) t.push(g(u, B));else {
                    if (!B.value) continue;v.push(g(c.thisExpression(), B));
                  }
                }
              }if (v.length) {
                if (!l) {
                  var C = c.classMethod("constructor", c.identifier("constructor"), [], c.blockStatement([]));j && (C.params = [c.restElement(c.identifier("args"))], C.body.body.push(c.returnStatement(c.callExpression(c.super(), [c.spreadElement(c.identifier("args"))]))));l = n.unshiftContainer("body", C)[0];
                }for (var D = { collision: !1, scope: l.scope }, E = m, F = Array.isArray(E), G = 0, E = F ? E : (0, f.default)(E);;) {
                  var H;if (F) {
                    if (G >= E.length) break;H = E[G++];
                  } else {
                    if (G = E.next(), G.done) break;H = G.value;
                  }if (H.traverse(e, D), D.collision) break;
                }if (D.collision) {
                  var I = a.scope.generateUidIdentifier("initialiseProps");t.push(c.variableDeclaration("var", [c.variableDeclarator(I, c.functionExpression(null, [], c.blockStatement(v)))])), v = [c.expressionStatement(c.callExpression(c.memberExpression(I, c.identifier("call")), [c.thisExpression()]))];
                }if (j) {
                  var J = [];l.traverse(d, J);for (var K = J, L = Array.isArray(K), M = 0, K = L ? K : (0, f.default)(K);;) {
                    var N;if (L) {
                      if (M >= K.length) break;N = K[M++];
                    } else {
                      if (M = K.next(), M.done) break;N = M.value;
                    }N.insertAfter(v);
                  }
                } else l.get("body").unshiftContainer("body", v);
              }for (var O = m, P = Array.isArray(O), Q = 0, O = P ? O : (0, f.default)(O);;) {
                var R;if (P) {
                  if (Q >= O.length) break;R = O[Q++];
                } else {
                  if (Q = O.next(), Q.done) break;R = Q.value;
                }R.remove();
              }t.length && (a.isClassExpression() ? (a.scope.push({ id: u }), a.replaceWith(c.assignmentExpression("=", u, a.node))) : (a.node.id || (a.node.id = u), a.parentPath.isExportDeclaration() && (a = a.parentPath)), a.insertAfter(t));
            }
          }, ArrowFunctionExpression: function (a) {
            var b = a.get("body");if (b.isClassExpression()) {
              b.get("body").get("body").some(function (a) {
                return a.isClassProperty();
              }) && a.ensureBlock();
            }
          } } };
    };var g = a("ec"),
        h = d(g),
        i = a("10"),
        j = d(i);c.exports = b.default;
  }), a.registerDynamic("ed", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("decorators");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("ee", ["17", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      for (var b = a, c = Array.isArray(b), d = 0, b = c ? b : (0, h.default)(b);;) {
        var e;if (c) {
          if (d >= b.length) break;e = b[d++];
        } else {
          if (d = b.next(), d.done) break;e = d.value;
        }var f = e,
            g = f.node,
            i = g.expression;if (j.isMemberExpression(i)) {
          var k = f.scope.maybeGenerateMemoised(i.object),
              l = void 0,
              m = [];k ? (l = k, m.push(j.assignmentExpression("=", k, i.object))) : l = i.object, m.push(j.callExpression(j.memberExpression(j.memberExpression(l, i.property, i.computed), j.identifier("bind")), [l])), 1 === m.length ? g.expression = m[0] : g.expression = j.sequenceExpression(m);
        }
      }
    }this || self;b.__esModule = !0;var g = a("17"),
        h = e(g);b.default = f;var i = a("11"),
        j = d(i);c.exports = b.default;
  }), a.registerDynamic("ef", ["17", "ee", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var f = a("17"),
        g = e(f);b.default = function (a) {
      function b(b) {
        if (b.node && !b.isPure()) {
          var c = a.scope.generateDeclaredUidIdentifier();d.push(k.assignmentExpression("=", c, b.node)), b.replaceWith(c);
        }
      }function c(a) {
        if (Array.isArray(a) && a.length) {
          a = a.reverse(), (0, i.default)(a);for (var c = a, d = Array.isArray(c), e = 0, c = d ? c : (0, g.default)(c);;) {
            var f;if (d) {
              if (e >= c.length) break;f = c[e++];
            } else {
              if (e = c.next(), e.done) break;f = e.value;
            }b(f);
          }
        }
      }a.assertClass();var d = [];b(a.get("superClass")), c(a.get("decorators"), !0);for (var e = a.get("body.body"), f = e, h = Array.isArray(f), j = 0, f = h ? f : (0, g.default)(f);;) {
        var l;if (h) {
          if (j >= f.length) break;l = f[j++];
        } else {
          if (j = f.next(), j.done) break;l = j.value;
        }var m = l;m.is("computed") && b(m.get("key")), m.has("decorators") && c(a.get("decorators"));
      }d && a.insertBefore(d.map(function (a) {
        return k.expressionStatement(a);
      }));
    };var h = a("ee"),
        i = e(h),
        j = a("11"),
        k = d(j);c.exports = b.default;
  }), a.registerDynamic("f0", ["d9", "17", "ed", "10", "ef"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("d9"),
        f = d(e),
        g = a("17"),
        h = d(g);b.default = function (b) {
      function c(a) {
        return a.reverse().map(function (a) {
          return a.expression;
        });
      }function d(a, b, d) {
        var e = [],
            g = a.node.decorators;if (g) {
          a.node.decorators = null, g = c(g);for (var j = g, k = Array.isArray(j), l = 0, j = k ? j : (0, h.default)(j);;) {
            var n;if (k) {
              if (l >= j.length) break;n = j[l++];
            } else {
              if (l = j.next(), l.done) break;n = l.value;
            }var o = n;e.push(m({ CLASS_REF: b, DECORATOR: o }));
          }
        }for (var p = (0, f.default)(null), q = a.get("body.body"), r = Array.isArray(q), s = 0, q = r ? q : (0, h.default)(q);;) {
          var t;if (r) {
            if (s >= q.length) break;t = q[s++];
          } else {
            if (s = q.next(), s.done) break;t = s.value;
          }var u = t;if (u.node.decorators) {
            var v = i.toKeyAlias(u.node);p[v] = p[v] || [], p[v].push(u.node), u.remove();
          }
        }for (var w in p) {
          p[w];
        }return e;
      }function e(a) {
        if (a.isClass()) {
          if (a.node.decorators) return !0;for (var b = a.node.body.body, c = Array.isArray(b), d = 0, b = c ? b : (0, h.default)(b);;) {
            var e;if (c) {
              if (d >= b.length) break;e = b[d++];
            } else {
              if (d = b.next(), d.done) break;e = d.value;
            }if (e.decorators) return !0;
          }
        } else if (a.isObjectExpression()) for (var f = a.node.properties, g = Array.isArray(f), i = 0, f = g ? f : (0, h.default)(f);;) {
          var j;if (g) {
            if (i >= f.length) break;j = f[i++];
          } else {
            if (i = f.next(), i.done) break;j = i.value;
          }var k = j;if (k.decorators) return !0;
        }return !1;
      }function g(a) {
        throw a.buildCodeFrameError('Decorators are not officially supported yet in 6.x pending a proposal update.\nHowever, if you need to use them you can install the legacy decorators transform with:\n\nnpm install babel-plugin-transform-decorators-legacy --save-dev\n\nand add the following line to your .babelrc file:\n\n{\n  "plugins": ["transform-decorators-legacy"]\n}\n\nThe repo url is: https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy.\n    ');
      }var i = b.types;return { inherits: a("ed"), visitor: { ClassExpression: function (a) {
            if (e(a)) {
              g(a), (0, l.default)(a);var b = a.scope.generateDeclaredUidIdentifier("ref"),
                  c = [];c.push(i.assignmentExpression("=", b, a.node)), c = c.concat(d(a, b, this)), c.push(b), a.replaceWith(i.sequenceExpression(c));
            }
          }, ClassDeclaration: function (a) {
            if (e(a)) {
              g(a), (0, l.default)(a);var b = a.node.id,
                  c = [];c = c.concat(d(a, b, this).map(function (a) {
                return i.expressionStatement(a);
              })), c.push(i.expressionStatement(b)), a.insertAfter(c);
            }
          }, ObjectExpression: function (a) {
            e(a) && g(a);
          } } };
    };var i = a("10"),
        j = d(i),
        k = a("ef"),
        l = d(k),
        m = (0, j.default)("\n  CLASS_REF = DECORATOR(CLASS_REF) || CLASS_REF;\n");c.exports = b.default;
  }), a.registerDynamic("f1", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("dynamicImport");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("e9", ["f2", "eb", "f0", "f1"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("f2"),
        f = d(e),
        g = a("eb"),
        h = d(g),
        i = a("f0"),
        j = d(i),
        k = a("f1"),
        l = d(k);b.default = { presets: [f.default], plugins: [l.default, h.default, j.default] }, c.exports = b.default;
  }), a.registerDynamic("f3", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("trailingFunctionCommas");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("f4", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("asyncFunctions");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("f5", ["f4", "f6"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.default = function () {
      return { inherits: a("f4"), visitor: { Function: function (a, b) {
            a.node.async && !a.node.generator && (0, f.default)(a, b.file, { wrapAsync: b.addHelper("asyncToGenerator") });
          } } };
    };var e = a("f6"),
        f = d(e);c.exports = b.default;
  }), a.registerDynamic("f7", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("exponentiationOperator");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("f8", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a, b, c, d) {
      var e = void 0;if (h.isSuper(a)) return a;if (h.isIdentifier(a)) {
        if (d.hasBinding(a.name)) return a;e = a;
      } else {
        if (!h.isMemberExpression(a)) throw new Error("We can't explode this node type " + a.type);if (e = a.object, h.isSuper(e) || h.isIdentifier(e) && d.hasBinding(e.name)) return e;
      }var f = d.generateUidIdentifierBasedOnNode(e);return b.push(h.variableDeclaration("var", [h.variableDeclarator(f, e)])), f;
    }function f(a, b, c, d) {
      var e = a.property,
          f = h.toComputedKey(a, e);if (h.isLiteral(f) && h.isPureish(f)) return f;var g = d.generateUidIdentifierBasedOnNode(e);return b.push(h.variableDeclaration("var", [h.variableDeclarator(g, e)])), g;
    }this || self;b.__esModule = !0, b.default = function (a, b, c, d, g) {
      var i = void 0;i = h.isIdentifier(a) && g ? a : e(a, b, c, d);var j = void 0,
          k = void 0;if (h.isIdentifier(a)) j = a, k = i;else {
        var l = f(a, b, c, d),
            m = a.computed || h.isLiteral(l);k = j = h.memberExpression(i, l, m);
      }return { uid: k, ref: j };
    };var g = a("11"),
        h = d(g);c.exports = b.default;
  }), a.registerDynamic("f9", ["f8", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.default = function (a) {
      function b(b) {
        return b && b.operator === a.operator + "=";
      }function c(a, b) {
        return i.assignmentExpression("=", a, b);
      }var d = {};return d.ExpressionStatement = function (d, e) {
        if (!d.isCompletionRecord()) {
          var f = d.node.expression;if (b(f)) {
            var h = [],
                j = (0, g.default)(f.left, h, e, d.scope, !0);h.push(i.expressionStatement(c(j.ref, a.build(j.uid, f.right)))), d.replaceWithMultiple(h);
          }
        }
      }, d.AssignmentExpression = function (d, e) {
        var f = d.node,
            h = d.scope;if (b(f)) {
          var i = [],
              j = (0, g.default)(f.left, i, e, h);i.push(c(j.ref, a.build(j.uid, f.right))), d.replaceWithMultiple(i);
        }
      }, d.BinaryExpression = function (b) {
        var c = b.node;c.operator === a.operator && b.replaceWith(a.build(c.left, c.right));
      }, d;
    };var f = a("f8"),
        g = e(f),
        h = a("11"),
        i = d(h);c.exports = b.default;
  }), a.registerDynamic("fa", ["f7", "f9"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.default = function (b) {
      var c = b.types;return { inherits: a("f7"), visitor: (0, f.default)({ operator: "**", build: function (a, b) {
            return c.callExpression(c.memberExpression(c.identifier("Math"), c.identifier("pow")), [a, b]);
          } }) };
    };var e = a("f9"),
        f = d(e);c.exports = b.default;
  }), a.registerDynamic("fb", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("objectRestSpread");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("fc", ["17", "fb"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e);b.default = function (b) {
      function c(a) {
        var b = !1;return a.traverse({ RestProperty: function () {
            b = !0, a.stop();
          } }), b;
      }function d(a) {
        for (var b = a.properties, c = Array.isArray(b), d = 0, b = c ? b : (0, f.default)(b);;) {
          var e;if (c) {
            if (d >= b.length) break;e = b[d++];
          } else {
            if (d = b.next(), d.done) break;e = d.value;
          }var g = e;if (h.isSpreadProperty(g)) return !0;
        }return !1;
      }function e(a, b, c) {
        for (var d = b.pop(), e = [], g = b, i = Array.isArray(g), j = 0, g = i ? g : (0, f.default)(g);;) {
          var k;if (i) {
            if (j >= g.length) break;k = g[j++];
          } else {
            if (j = g.next(), j.done) break;k = j.value;
          }var l = k,
              m = l.key;h.isIdentifier(m) && !l.computed && (m = h.stringLiteral(l.key.name)), e.push(m);
        }return [d.argument, h.callExpression(a.addHelper("objectWithoutProperties"), [c, h.arrayExpression(e)])];
      }function g(a, b, d, e) {
        if (b.isAssignmentPattern()) return void g(a, b.get("left"), d, e);if (b.isObjectPattern() && c(b)) {
          var f = a.scope.generateUidIdentifier("ref"),
              i = h.variableDeclaration("let", [h.variableDeclarator(b.node, f)]);i._blockHoist = d ? e - d : 1, a.ensureBlock(), a.get("body").unshiftContainer("body", i), b.replaceWith(f);
        }
      }var h = b.types;return { inherits: a("fb"), visitor: { Function: function (a) {
            for (var b = a.get("params"), c = 0; c < b.length; c++) g(b[c].parentPath, b[c], c, b.length);
          }, VariableDeclarator: function (a, b) {
            if (a.get("id").isObjectPattern()) {
              var c = a;a.get("id").traverse({ RestProperty: function (a) {
                  if (this.originalPath.node.id.properties.length > 1 && !h.isIdentifier(this.originalPath.node.init)) {
                    var d = a.scope.generateUidIdentifierBasedOnNode(this.originalPath.node.init, "ref");return this.originalPath.insertBefore(h.variableDeclarator(d, this.originalPath.node.init)), void this.originalPath.replaceWith(h.variableDeclarator(this.originalPath.node.id, d));
                  }var f = this.originalPath.node.init;a.findParent(function (a) {
                    if (a.isObjectProperty()) f = h.memberExpression(f, h.identifier(a.node.key.name));else if (a.isVariableDeclarator()) return !0;
                  });var g = e(b, a.parentPath.node.properties, f),
                      i = g[0],
                      j = g[1];c.insertAfter(h.variableDeclarator(i, j)), c = c.getSibling(c.key + 1), 0 === a.parentPath.node.properties.length && a.findParent(function (a) {
                    return a.isObjectProperty() || a.isVariableDeclarator();
                  }).remove();
                } }, { originalPath: a });
            }
          }, ExportNamedDeclaration: function (a) {
            var b = a.get("declaration");if (b.isVariableDeclaration() && c(b)) {
              var d = [];for (var e in a.getOuterBindingIdentifiers(a)) {
                var f = h.identifier(e);d.push(h.exportSpecifier(f, f));
              }a.replaceWith(b.node), a.insertAfter(h.exportNamedDeclaration(null, d));
            }
          }, CatchClause: function (a) {
            var b = a.get("param");g(b.parentPath, b);
          }, AssignmentExpression: function (a, b) {
            var d = a.get("left");if (d.isObjectPattern() && c(d)) {
              var f = [],
                  g = void 0;(a.isCompletionRecord() || a.parentPath.isExpressionStatement()) && (g = a.scope.generateUidIdentifierBasedOnNode(a.node.right, "ref"), f.push(h.variableDeclaration("var", [h.variableDeclarator(g, a.node.right)])));var i = e(b, a.node.left.properties, g),
                  j = i[0],
                  k = i[1],
                  l = h.clone(a.node);l.right = g, f.push(h.expressionStatement(l)), f.push(h.toStatement(h.assignmentExpression("=", j, k))), g && f.push(h.expressionStatement(g)), a.replaceWithMultiple(f);
            }
          }, ForXStatement: function (a) {
            var b = a.node,
                d = a.scope,
                e = a.get("left"),
                f = b.left;if (h.isObjectPattern(f) && c(e)) {
              var g = d.generateUidIdentifier("ref");return b.left = h.variableDeclaration("var", [h.variableDeclarator(g)]), a.ensureBlock(), void b.body.body.unshift(h.variableDeclaration("var", [h.variableDeclarator(f, g)]));
            }if (h.isVariableDeclaration(f)) {
              var i = f.declarations[0].id;if (h.isObjectPattern(i)) {
                var j = d.generateUidIdentifier("ref");b.left = h.variableDeclaration(f.kind, [h.variableDeclarator(j, null)]), a.ensureBlock(), b.body.body.unshift(h.variableDeclaration(b.left.kind, [h.variableDeclarator(i, j)]));
              }
            }
          }, ObjectExpression: function (a, b) {
            function c() {
              i.length && (g.push(h.objectExpression(i)), i = []);
            }if (d(a.node)) {
              var e = b.opts.useBuiltIns || !1;if ("boolean" != typeof e) throw new Error("transform-object-rest-spread currently only accepts a boolean option for useBuiltIns (defaults to false)");for (var g = [], i = [], j = a.node.properties, k = Array.isArray(j), l = 0, j = k ? j : (0, f.default)(j);;) {
                var m;if (k) {
                  if (l >= j.length) break;m = j[l++];
                } else {
                  if (l = j.next(), l.done) break;m = l.value;
                }var n = m;h.isSpreadProperty(n) ? (c(), g.push(n.argument)) : i.push(n);
              }c(), h.isObjectExpression(g[0]) || g.unshift(h.objectExpression([]));var o = e ? h.memberExpression(h.identifier("Object"), h.identifier("assign")) : b.addHelper("extends");a.replaceWith(h.callExpression(o, g));
            }
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("fd", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("asyncGenerators");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("fe", ["11", "10", "d5"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }this || self;b.__esModule = !0, b.default = function (a, b) {
      var c = a.node,
          d = a.scope,
          e = a.parent,
          f = d.generateUidIdentifier("step"),
          h = d.generateUidIdentifier("value"),
          i = c.left,
          j = void 0;g.isIdentifier(i) || g.isPattern(i) || g.isMemberExpression(i) ? j = g.expressionStatement(g.assignmentExpression("=", i, h)) : g.isVariableDeclaration(i) && (j = g.variableDeclaration(i.kind, [g.variableDeclarator(i.declarations[0].id, h)]));var n = l();(0, k.default)(n, m, null, { ITERATOR_HAD_ERROR_KEY: d.generateUidIdentifier("didIteratorError"), ITERATOR_COMPLETION: d.generateUidIdentifier("iteratorNormalCompletion"), ITERATOR_ERROR_KEY: d.generateUidIdentifier("iteratorError"), ITERATOR_KEY: d.generateUidIdentifier("iterator"), GET_ITERATOR: b.getAsyncIterator, OBJECT: c.right, STEP_VALUE: h, STEP_KEY: f, AWAIT: b.wrapAwait }), n = n.body.body;var o = g.isLabeledStatement(e),
          p = n[3].block.body,
          q = p[0];return o && (p[0] = g.labeledStatement(e.label, q)), { replaceParent: o, node: n, declar: j, loop: q };
    };var f = a("11"),
        g = e(f),
        h = a("10"),
        i = d(h),
        j = a("d5"),
        k = d(j),
        l = (0, i.default)("\n  function* wrapper() {\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY = undefined;\n    try {\n      for (\n        var ITERATOR_KEY = GET_ITERATOR(OBJECT), STEP_KEY, STEP_VALUE;\n        (\n          STEP_KEY = yield AWAIT(ITERATOR_KEY.next()),\n          ITERATOR_COMPLETION = STEP_KEY.done,\n          STEP_VALUE = yield AWAIT(STEP_KEY.value),\n          !ITERATOR_COMPLETION\n        );\n        ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\n          yield AWAIT(ITERATOR_KEY.return());\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  }\n"),
        m = { noScope: !0, Identifier: function (a, b) {
        a.node.name in b && a.replaceInline(b[a.node.name]);
      }, CallExpression: function (a, b) {
        var c = a.node.callee;g.isIdentifier(c) && "AWAIT" === c.name && !b.AWAIT && a.replaceWith(a.node.arguments[0]);
      } };c.exports = b.default;
  }), a.registerDynamic("f6", ["ec", "10", "11", "fe"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b) {
      var c = a.node,
          d = c.body;c.async = !1;var e = m.functionExpression(null, [], m.blockStatement(d.body), !0);e.shadow = !0, d.body = [m.returnStatement(m.callExpression(m.callExpression(b, [e]), []))], c.generator = !1;
    }function g(a, b) {
      var c = a.node,
          d = a.isFunctionDeclaration(),
          e = c.id,
          f = p;a.isArrowFunctionExpression() ? a.arrowFunctionToShadowed() : !d && e && (f = q), c.async = !1, c.generator = !0, c.id = null, d && (c.type = "FunctionExpression");var g = m.callExpression(b, [c]),
          h = f({ NAME: e, REF: a.scope.generateUidIdentifier("ref"), FUNCTION: g, PARAMS: c.params.reduce(function (b, c) {
          return b.done = b.done || m.isAssignmentPattern(c) || m.isRestElement(c), b.done || b.params.push(a.scope.generateUidIdentifier("x")), b;
        }, { params: [], done: !1 }).params }).expression;if (d) {
        var j = m.variableDeclaration("let", [m.variableDeclarator(m.identifier(e.name), m.callExpression(h, []))]);j._blockHoist = !0, a.replaceWith(j);
      } else {
        var k = h.body.body[1].argument;e || (0, i.default)({ node: k, parent: a.parent, scope: a.scope }), !k || k.id || c.params.length ? a.replaceWith(m.callExpression(h, [])) : a.replaceWith(g);
      }
    }this || self;b.__esModule = !0, b.default = function (a, b, c) {
      c || (c = { wrapAsync: b }, b = null), a.traverse(r, { file: b, wrapAwait: c.wrapAwait }), a.isClassMethod() || a.isObjectMethod() ? f(a, c.wrapAsync) : g(a, c.wrapAsync);
    };var h = a("ec"),
        i = e(h),
        j = a("10"),
        k = e(j),
        l = a("11"),
        m = d(l),
        n = a("fe"),
        o = e(n),
        p = (0, k.default)("\n  (() => {\n    var REF = FUNCTION;\n    return function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    };\n  })\n"),
        q = (0, k.default)("\n  (() => {\n    var REF = FUNCTION;\n    function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    }\n    return NAME;\n  })\n"),
        r = { Function: function (a) {
        if (a.isArrowFunctionExpression() && !a.node.async) return void a.arrowFunctionToShadowed();a.skip();
      }, AwaitExpression: function (a, b) {
        var c = a.node,
            d = b.wrapAwait;c.type = "YieldExpression", d && (c.argument = m.callExpression(d, [c.argument]));
      }, ForAwaitStatement: function (a, b) {
        var c = b.file,
            d = b.wrapAwait,
            e = a.node,
            f = (0, o.default)(a, { getAsyncIterator: c.addHelper("asyncIterator"), wrapAwait: d }),
            g = f.declar,
            h = f.loop,
            i = h.body;a.ensureBlock(), g && i.body.push(g), i.body = i.body.concat(e.body.body), m.inherits(h, e), m.inherits(h.body, e.body), f.replaceParent ? (a.parentPath.replaceWithMultiple(f.node), a.remove()) : a.replaceWithMultiple(f.node);
      } };c.exports = b.default;
  }), a.registerDynamic("ff", ["fd", "f6"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.default = function (b) {
      var c = b.types,
          d = { Function: function (a) {
          a.skip();
        }, YieldExpression: function (a, b) {
          var d = a.node;if (d.delegate) {
            var e = b.addHelper("asyncGeneratorDelegate");d.argument = c.callExpression(e, [c.callExpression(b.addHelper("asyncIterator"), [d.argument]), c.memberExpression(b.addHelper("asyncGenerator"), c.identifier("await"))]);
          }
        } };return { inherits: a("fd"), visitor: { Function: function (a, b) {
            a.node.async && a.node.generator && (a.traverse(d, b), (0, f.default)(a, b.file, { wrapAsync: c.memberExpression(b.addHelper("asyncGenerator"), c.identifier("wrap")), wrapAwait: c.memberExpression(b.addHelper("asyncGenerator"), c.identifier("await")) }));
          } } };
    };var e = a("f6"),
        f = d(e);c.exports = b.default;
  }), a.registerDynamic("f2", ["f3", "f5", "fa", "fc", "ff"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("f3"),
        f = d(e),
        g = a("f5"),
        h = d(g),
        i = a("fa"),
        j = d(i),
        k = a("fc"),
        l = d(k),
        m = a("ff"),
        n = d(m);b.default = { plugins: [f.default, h.default, j.default, n.default, l.default] }, c.exports = b.default;
  }), a.registerDynamic("100", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("flow");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("101", ["17", "100"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e);b.default = function (b) {
      var c = b.types,
          d = "@flow";return { inherits: a("100"), visitor: { Program: function (a, b) {
            for (var c = b.file.ast.comments, e = c, g = Array.isArray(e), h = 0, e = g ? e : (0, f.default)(e);;) {
              var i;if (g) {
                if (h >= e.length) break;i = e[h++];
              } else {
                if (h = e.next(), h.done) break;i = h.value;
              }var j = i;j.value.indexOf(d) >= 0 && (j.value = j.value.replace(d, ""), j.value.replace(/\*/g, "").trim() || (j.ignore = !0));
            }
          }, Flow: function (a) {
            a.remove();
          }, ClassProperty: function (a) {
            a.node.variance = null, a.node.typeAnnotation = null, a.node.value || a.remove();
          }, Class: function (a) {
            a.node.implements = null, a.get("body.body").forEach(function (a) {
              a.isClassProperty() && (a.node.typeAnnotation = null, a.node.value || a.remove());
            });
          }, AssignmentPattern: function (a) {
            a.node.left.optional = !1;
          }, Function: function (a) {
            for (var b = a.node, c = 0; c < b.params.length; c++) {
              b.params[c].optional = !1;
            }
          }, TypeCastExpression: function (a) {
            var b = a.node;do {
              b = b.expression;
            } while (c.isTypeCastExpression(b));a.replaceWith(b);
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("102", ["101"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("101"),
        f = d(e);b.default = { plugins: [f.default] }, c.exports = b.default;
  }), a.registerDynamic("103", ["104", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.default = function (a) {
      function b(a, c) {
        if (i.isJSXIdentifier(a)) {
          if ("this" === a.name && i.isReferenced(a, c)) return i.thisExpression();if (!g.default.keyword.isIdentifierNameES6(a.name)) return i.stringLiteral(a.name);a.type = "Identifier";
        } else if (i.isJSXMemberExpression(a)) return i.memberExpression(b(a.object, a), b(a.property, a));return a;
      }function c(a) {
        return i.isJSXExpressionContainer(a) ? a.expression : a;
      }function d(a) {
        var b = c(a.value || i.booleanLiteral(!0));return i.isStringLiteral(b) && !i.isJSXExpressionContainer(a.value) && (b.value = b.value.replace(/\n\s+/g, " ")), i.isValidIdentifier(a.name.name) ? a.name.type = "Identifier" : a.name = i.stringLiteral(a.name.name), i.inherits(i.objectProperty(a.name, b), a);
      }function e(c, d) {
        c.parent.children = i.react.buildChildren(c.parent);var e = b(c.node.name, c.node),
            g = [],
            h = void 0;i.isIdentifier(e) ? h = e.name : i.isLiteral(e) && (h = e.value);var j = { tagExpr: e, tagName: h, args: g };a.pre && a.pre(j, d);var k = c.node.attributes;return k = k.length ? f(k, d) : i.nullLiteral(), g.push(k), a.post && a.post(j, d), j.call || i.callExpression(j.callee, g);
      }function f(a, b) {
        function c() {
          e.length && (f.push(i.objectExpression(e)), e = []);
        }var e = [],
            f = [],
            g = b.opts.useBuiltIns || !1;if ("boolean" != typeof g) throw new Error("transform-react-jsx currently only accepts a boolean option for useBuiltIns (defaults to false)");for (; a.length;) {
          var h = a.shift();i.isJSXSpreadAttribute(h) ? (c(), f.push(h.argument)) : e.push(d(h));
        }if (c(), 1 === f.length) a = f[0];else {
          i.isObjectExpression(f[0]) || f.unshift(i.objectExpression([]));var j = g ? i.memberExpression(i.identifier("Object"), i.identifier("assign")) : b.addHelper("extends");a = i.callExpression(j, f);
        }return a;
      }var h = {};return h.JSXNamespacedName = function (a) {
        throw a.buildCodeFrameError("Namespace tags are not supported. ReactJSX is not XML.");
      }, h.JSXElement = { exit: function (a, b) {
          var c = e(a.get("openingElement"), b);c.arguments = c.arguments.concat(a.node.children), c.arguments.length >= 3 && (c._prettyCall = !0), a.replaceWith(i.inherits(c, a.node));
        } }, h;
    };var f = a("104"),
        g = e(f),
        h = a("11"),
        i = d(h);c.exports = b.default;
  }), a.registerDynamic("105", ["17", "106", "103"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e);b.default = function (a) {
      var b = a.types,
          c = /\*?\s*@jsx\s+([^\s]+)/,
          d = (0, j.default)({ pre: function (a) {
          var c = a.tagName,
              d = a.args;b.react.isCompatTag(c) ? d.push(b.stringLiteral(c)) : d.push(a.tagExpr);
        }, post: function (a, b) {
          a.callee = b.get("jsxIdentifier")();
        } });return d.Program = function (a, d) {
        for (var e = d.file, g = d.opts.pragma || "React.createElement", h = e.ast.comments, i = Array.isArray(h), j = 0, h = i ? h : (0, f.default)(h);;) {
          var k;if (i) {
            if (j >= h.length) break;k = h[j++];
          } else {
            if (j = h.next(), j.done) break;k = j.value;
          }var l = k,
              m = c.exec(l.value);if (m) {
            if ("React.DOM" === (g = m[1])) throw e.buildCodeFrameError(l, "The @jsx React.DOM pragma has been deprecated as of React 0.12");break;
          }
        }d.set("jsxIdentifier", function () {
          return g.split(".").map(function (a) {
            return b.identifier(a);
          }).reduce(function (a, c) {
            return b.memberExpression(a, c);
          });
        });
      }, { inherits: h.default, visitor: d };
    };var g = a("106"),
        h = d(g),
        i = a("103"),
        j = d(i);c.exports = b.default;
  }), a.registerDynamic("106", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { manipulateOptions: function (a, b) {
          b.plugins.push("jsx");
        } };
    }, c.exports = b.default;
  }), a.registerDynamic("1a", ["c"], !0, function (a, b, c) {
    function d(a, b) {
      for (var c = 0, d = a.length - 1; d >= 0; d--) {
        var e = a[d];"." === e ? a.splice(d, 1) : ".." === e ? (a.splice(d, 1), c++) : c && (a.splice(d, 1), c--);
      }if (b) for (; c--; c) a.unshift("..");return a;
    }function e(a, b) {
      if (a.filter) return a.filter(b);for (var c = [], d = 0; d < a.length; d++) b(a[d], d, a) && c.push(a[d]);return c;
    }var f = (this || self, a("c")),
        g = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,
        h = function (a) {
      return g.exec(a).slice(1);
    };b.resolve = function () {
      for (var a = "", b = !1, c = arguments.length - 1; c >= -1 && !b; c--) {
        var g = c >= 0 ? arguments[c] : f.cwd();if ("string" != typeof g) throw new TypeError("Arguments to path.resolve must be strings");g && (a = g + "/" + a, b = "/" === g.charAt(0));
      }return a = d(e(a.split("/"), function (a) {
        return !!a;
      }), !b).join("/"), (b ? "/" : "") + a || ".";
    }, b.normalize = function (a) {
      var c = b.isAbsolute(a),
          f = "/" === i(a, -1);return a = d(e(a.split("/"), function (a) {
        return !!a;
      }), !c).join("/"), a || c || (a = "."), a && f && (a += "/"), (c ? "/" : "") + a;
    }, b.isAbsolute = function (a) {
      return "/" === a.charAt(0);
    }, b.join = function () {
      var a = Array.prototype.slice.call(arguments, 0);return b.normalize(e(a, function (a, b) {
        if ("string" != typeof a) throw new TypeError("Arguments to path.join must be strings");return a;
      }).join("/"));
    }, b.relative = function (a, c) {
      function d(a) {
        for (var b = 0; b < a.length && "" === a[b]; b++);for (var c = a.length - 1; c >= 0 && "" === a[c]; c--);return b > c ? [] : a.slice(b, c - b + 1);
      }a = b.resolve(a).substr(1), c = b.resolve(c).substr(1);for (var e = d(a.split("/")), f = d(c.split("/")), g = Math.min(e.length, f.length), h = g, i = 0; i < g; i++) if (e[i] !== f[i]) {
        h = i;break;
      }for (var j = [], i = h; i < e.length; i++) j.push("..");return j = j.concat(f.slice(h)), j.join("/");
    }, b.sep = "/", b.delimiter = ":", b.dirname = function (a) {
      var b = h(a),
          c = b[0],
          d = b[1];return c || d ? (d && (d = d.substr(0, d.length - 1)), c + d) : ".";
    }, b.basename = function (a, b) {
      var c = h(a)[2];return b && c.substr(-1 * b.length) === b && (c = c.substr(0, c.length - b.length)), c;
    }, b.extname = function (a) {
      return h(a)[3];
    };var i = "b" === "ab".substr(-1) ? function (a, b, c) {
      return a.substr(b, c);
    } : function (a, b, c) {
      return b < 0 && (b = a.length + b), a.substr(b, c);
    };
  }), a.registerDynamic("107", ["1a"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.default = function (a) {
      function b(a, b) {
        for (var c = b.arguments[0].properties, e = !0, f = 0; f < c.length; f++) {
          var g = c[f],
              h = d.toComputedKey(g);if (d.isLiteral(h, { value: "displayName" })) {
            e = !1;break;
          }
        }e && c.unshift(d.objectProperty(d.identifier("displayName"), d.stringLiteral(a)));
      }function c(a) {
        if (!a || !d.isCallExpression(a)) return !1;if (!e(a.callee) && !g(a.callee)) return !1;var b = a.arguments;if (1 !== b.length) return !1;var c = b[0];return !!d.isObjectExpression(c);
      }var d = a.types,
          e = d.buildMatchMemberExpression("React.createClass"),
          g = function (a) {
        return "createReactClass" === a.name;
      };return { visitor: { ExportDefaultDeclaration: function (a, d) {
            var e = a.node;if (c(e.declaration)) {
              var g = d.file.opts.basename;"index" === g && (g = f.default.basename(f.default.dirname(d.file.opts.filename))), b(g, e.declaration);
            }
          }, CallExpression: function (a) {
            var e = a.node;if (c(e)) {
              var f = void 0;a.find(function (a) {
                if (a.isAssignmentExpression()) f = a.node.left;else if (a.isObjectProperty()) f = a.node.key;else if (a.isVariableDeclarator()) f = a.node.id;else if (a.isStatement()) return !0;if (f) return !0;
              }), f && (d.isMemberExpression(f) && (f = f.property), d.isIdentifier(f) && b(f.name, e));
            }
          } } };
    };var e = a("1a"),
        f = d(e);c.exports = b.default;
  }), a.registerDynamic("108", ["102", "105", "106", "107"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("102"),
        f = d(e),
        g = a("105"),
        h = d(g),
        i = a("106"),
        j = d(i),
        k = a("107"),
        l = d(k);b.default = { presets: [f.default], plugins: [h.default, j.default, l.default], env: { development: { plugins: [] } } }, c.exports = b.default;
  }), a.registerDynamic("109", ["17"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e);b.default = function (a) {
      function b(a) {
        return d.isLiteral(a) && "string" == typeof a.value;
      }function c(a, b) {
        return d.binaryExpression("+", a, b);
      }var d = a.types;return { visitor: { TaggedTemplateExpression: function (a, b) {
            for (var c = a.node, e = c.quasi, g = [], h = [], i = [], j = e.quasis, k = Array.isArray(j), l = 0, j = k ? j : (0, f.default)(j);;) {
              var m;if (k) {
                if (l >= j.length) break;m = j[l++];
              } else {
                if (l = j.next(), l.done) break;m = l.value;
              }var n = m;h.push(d.stringLiteral(n.value.cooked)), i.push(d.stringLiteral(n.value.raw));
            }h = d.arrayExpression(h), i = d.arrayExpression(i);var o = "taggedTemplateLiteral";b.opts.loose && (o += "Loose");var p = b.file.addTemplateObject(o, h, i);g.push(p), g = g.concat(e.expressions), a.replaceWith(d.callExpression(c.tag, g));
          }, TemplateLiteral: function (a, e) {
            for (var g = [], h = a.get("expressions"), i = a.node.quasis, j = Array.isArray(i), k = 0, i = j ? i : (0, f.default)(i);;) {
              var l;if (j) {
                if (k >= i.length) break;l = i[k++];
              } else {
                if (k = i.next(), k.done) break;l = k.value;
              }var m = l;g.push(d.stringLiteral(m.value.cooked));var n = h.shift();n && (!e.opts.spec || n.isBaseType("string") || n.isBaseType("number") ? g.push(n.node) : g.push(d.callExpression(d.identifier("String"), [n.node])));
            }if (g = g.filter(function (a) {
              return !d.isLiteral(a, { value: "" });
            }), b(g[0]) || b(g[1]) || g.unshift(d.stringLiteral("")), g.length > 1) {
              for (var o = c(g.shift(), g.shift()), p = g, q = Array.isArray(p), r = 0, p = q ? p : (0, f.default)(p);;) {
                var s;if (q) {
                  if (r >= p.length) break;s = p[r++];
                } else {
                  if (r = p.next(), r.done) break;s = r.value;
                }o = c(o, s);
              }a.replaceWith(o);
            } else a.replaceWith(g[0]);
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("10a", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return { visitor: { NumericLiteral: function (a) {
            var b = a.node;b.extra && /^0[ob]/i.test(b.extra.raw) && (b.extra = void 0);
          }, StringLiteral: function (a) {
            var b = a.node;b.extra && /\\[u]/gi.test(b.extra.raw) && (b.extra = void 0);
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("10b", ["ec"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.default = function () {
      return { visitor: { FunctionExpression: { exit: function (a) {
              if ("value" !== a.key && !a.parentPath.isObjectProperty()) {
                var b = (0, f.default)(a);b && a.replaceWith(b);
              }
            } }, ObjectProperty: function (a) {
            var b = a.get("value");if (b.isFunction()) {
              var c = (0, f.default)(b);c && b.replaceWith(c);
            }
          } } };
    };var e = a("ec"),
        f = d(e);c.exports = b.default;
  }), a.registerDynamic("10c", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function (a) {
      var b = a.types;return { visitor: { ArrowFunctionExpression: function (a, c) {
            if (c.opts.spec) {
              var d = a.node;if (d.shadow) return;d.shadow = { this: !1 }, d.type = "FunctionExpression";var e = b.thisExpression();e._forceShadow = a, a.ensureBlock(), a.get("body").unshiftContainer("body", b.expressionStatement(b.callExpression(c.addHelper("newArrowCheck"), [b.thisExpression(), e]))), a.replaceWith(b.callExpression(b.memberExpression(d, b.identifier("bind")), [b.thisExpression()]));
            } else a.arrowFunctionToShadowed();
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("10d", ["17"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e);b.default = function (a) {
      function b(a, b) {
        for (var d = b.get(a), e = d, g = Array.isArray(e), h = 0, e = g ? e : (0, f.default)(e);;) {
          var i;if (g) {
            if (h >= e.length) break;i = e[h++];
          } else {
            if (h = e.next(), h.done) break;i = h.value;
          }var j = i,
              k = j.node;if (j.isFunctionDeclaration()) {
            var l = c.variableDeclaration("let", [c.variableDeclarator(k.id, c.toExpression(k))]);l._blockHoist = 2, k.id = null, j.replaceWith(l);
          }
        }
      }var c = a.types;return { visitor: { BlockStatement: function (a) {
            var d = a.node,
                e = a.parent;c.isFunction(e, { body: d }) || c.isExportDeclaration(e) || b("body", a);
          }, SwitchCase: function (a) {
            b("consequent", a);
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("20", ["32"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("32"),
        f = d(e);b.default = function (a, b) {
      if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !b || "object" !== (void 0 === b ? "undefined" : (0, f.default)(b)) && "function" != typeof b ? a : b;
    };
  }), a.registerDynamic("10e", ["10f", "110", "111", "112", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("10f")),
        e = a("110"),
        f = function (a, b) {
      if (e(a), !d(b) && null !== b) throw TypeError(b + ": can't set as prototype!");
    };c.exports = { set: Object.setPrototypeOf || ("__proto__" in {} ? function (b, c, d) {
        try {
          d = a("111")(Function.call, a("112").f(Object.prototype, "__proto__").set, 2), d(b, []), c = !(b instanceof Array);
        } catch (a) {
          c = !0;
        }return function (a, b) {
          return f(a, b), c ? a.__proto__ = b : d(a, b), a;
        };
      }({}, !1) : void 0), check: f };
  }), a.registerDynamic("113", ["cb", "10e", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("cb"));d(d.S, "Object", { setPrototypeOf: a("10e").set });
  }), a.registerDynamic("114", ["113", "39", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("113"), c.exports = a("39").Object.setPrototypeOf;
  }), a.registerDynamic("115", ["114"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("114"), __esModule: !0 };
  }), a.registerDynamic("21", ["115", "d9", "32"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("115"),
        f = d(e),
        g = a("d9"),
        h = d(g),
        i = a("32"),
        j = d(i);b.default = function (a, b) {
      if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === b ? "undefined" : (0, j.default)(b)));a.prototype = (0, h.default)(b && b.prototype, { constructor: { value: a, enumerable: !1, writable: !0, configurable: !0 } }), b && (f.default ? (0, f.default)(a, b) : a.__proto__ = b);
    };
  }), a.registerDynamic("116", ["1f", "20", "21", "ec", "117", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var f = a("1f"),
        g = e(f),
        h = a("20"),
        i = e(h),
        j = a("21"),
        k = e(j),
        l = a("ec"),
        m = e(l),
        n = a("117"),
        o = e(n),
        p = a("11"),
        q = d(p),
        r = function (a) {
      function b() {
        (0, g.default)(this, b);var c = (0, i.default)(this, a.apply(this, arguments));return c.isLoose = !0, c;
      }return (0, k.default)(b, a), b.prototype._processMethod = function (a, b) {
        if (!a.decorators) {
          var c = this.classRef;a.static || (c = q.memberExpression(c, q.identifier("prototype")));var d = q.memberExpression(c, a.key, a.computed || q.isLiteral(a.key)),
              e = q.functionExpression(null, a.params, a.body, a.generator, a.async);e.returnType = a.returnType;var f = q.toComputedKey(a, a.key);q.isStringLiteral(f) && (e = (0, m.default)({ node: e, id: f, scope: b }));var g = q.expressionStatement(q.assignmentExpression("=", d, e));return q.inheritsComments(g, a), this.body.push(g), !0;
        }
      }, b;
    }(o.default);b.default = r, c.exports = b.default;
  }), a.registerDynamic("118", ["15", "ec", "119", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      return !s.isClassMethod(a) && !s.isObjectMethod(a) || "get" !== a.kind && "set" !== a.kind ? "value" : a.kind;
    }function g(a, b, c, d, e) {
      var g = s.toKeyAlias(b),
          h = {};if ((0, q.default)(a, g) && (h = a[g]), a[g] = h, h._inherits = h._inherits || [], h._inherits.push(b), h._key = b.key, b.computed && (h._computed = !0), b.decorators) {
        var i = h.decorators = h.decorators || s.arrayExpression([]);i.elements = i.elements.concat(b.decorators.map(function (a) {
          return a.expression;
        }).reverse());
      }if (h.value || h.initializer) throw d.buildCodeFrameError(b, "Key conflict with sibling node");var j = void 0,
          k = void 0;(s.isObjectProperty(b) || s.isObjectMethod(b) || s.isClassMethod(b)) && (j = s.toComputedKey(b, b.key)), s.isObjectProperty(b) || s.isClassProperty(b) ? k = b.value : (s.isObjectMethod(b) || s.isClassMethod(b)) && (k = s.functionExpression(null, b.params, b.body, b.generator, b.async), k.returnType = b.returnType);var l = f(b);return c && "value" === l || (c = l), e && s.isStringLiteral(j) && ("value" === c || "initializer" === c) && s.isFunctionExpression(k) && (k = (0, o.default)({ id: j, node: k, scope: e })), k && (s.inheritsComments(k, b), h[c] = k), h;
    }function h(a) {
      for (var b in a) if (a[b]._computed) return !0;return !1;
    }function i(a) {
      for (var b = s.arrayExpression([]), c = 0; c < a.properties.length; c++) {
        var d = a.properties[c],
            e = d.value;e.properties.unshift(s.objectProperty(s.identifier("key"), s.toComputedKey(d))), b.elements.push(e);
      }return b;
    }function j(a) {
      var b = s.objectExpression([]);return (0, m.default)(a).forEach(function (c) {
        var d = a[c],
            e = s.objectExpression([]),
            f = s.objectProperty(d._key, e, d._computed);(0, m.default)(d).forEach(function (a) {
          var b = d[a];if ("_" !== a[0]) {
            var c = b;(s.isClassMethod(b) || s.isClassProperty(b)) && (b = b.value);var f = s.objectProperty(s.identifier(a), b);s.inheritsComments(f, c), s.removeComments(c), e.properties.push(f);
          }
        }), b.properties.push(f);
      }), b;
    }function k(a) {
      return (0, m.default)(a).forEach(function (b) {
        var c = a[b];c.value && (c.writable = s.booleanLiteral(!0)), c.configurable = s.booleanLiteral(!0), c.enumerable = s.booleanLiteral(!0);
      }), j(a);
    }this || self;b.__esModule = !0;var l = a("15"),
        m = e(l);b.push = g, b.hasComputed = h, b.toComputedObjectFromClass = i, b.toClassObject = j, b.toDefineObject = k;var n = a("ec"),
        o = e(n),
        p = a("119"),
        q = e(p),
        r = a("11"),
        s = d(r);
  }), a.registerDynamic("117", ["17", "1f", "d5", "11a", "11b", "118", "10", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var f = a("17"),
        g = e(f),
        h = a("1f"),
        i = e(h),
        j = a("d5"),
        k = a("11a"),
        l = e(k),
        m = a("11b"),
        n = e(m),
        o = a("118"),
        p = d(o),
        q = a("10"),
        r = e(q),
        s = a("11"),
        t = d(s),
        u = (0, r.default)("\n  (function () {\n    super(...arguments);\n  })\n"),
        v = { "FunctionExpression|FunctionDeclaration": function (a) {
        a.is("shadow") || a.skip();
      }, Method: function (a) {
        a.skip();
      } },
        w = j.visitors.merge([v, { Super: function (a) {
        if (this.isDerived && !this.hasBareSuper && !a.parentPath.isCallExpression({ callee: a.node })) throw a.buildCodeFrameError("'super.*' is not allowed before super()");
      }, CallExpression: { exit: function (a) {
          if (a.get("callee").isSuper() && (this.hasBareSuper = !0, !this.isDerived)) throw a.buildCodeFrameError("super() is only allowed in a derived constructor");
        } }, ThisExpression: function (a) {
        if (this.isDerived && !this.hasBareSuper && !a.inShadow("this")) throw a.buildCodeFrameError("'this' is not allowed before super()");
      } }]),
        x = j.visitors.merge([v, { ThisExpression: function (a) {
        this.superThises.push(a);
      } }]),
        y = function () {
      function a(b, c) {
        (0, i.default)(this, a), this.parent = b.parent, this.scope = b.scope, this.node = b.node, this.path = b, this.file = c, this.clearDescriptors(), this.instancePropBody = [], this.instancePropRefs = {}, this.staticPropBody = [], this.body = [], this.bareSuperAfter = [], this.bareSupers = [], this.pushedConstructor = !1, this.pushedInherits = !1, this.isLoose = !1, this.superThises = [], this.classId = this.node.id, this.classRef = this.node.id ? t.identifier(this.node.id.name) : this.scope.generateUidIdentifier("class"), this.superName = this.node.superClass || t.identifier("Function"), this.isDerived = !!this.node.superClass;
      }return a.prototype.run = function () {
        var a = this,
            b = this.superName,
            c = this.file,
            d = this.body,
            e = this.constructorBody = t.blockStatement([]);this.constructor = this.buildConstructor();var f = [],
            g = [];if (this.isDerived && (g.push(b), b = this.scope.generateUidIdentifierBasedOnNode(b), f.push(b), this.superName = b), this.buildBody(), e.body.unshift(t.expressionStatement(t.callExpression(c.addHelper("classCallCheck"), [t.thisExpression(), this.classRef]))), d = d.concat(this.staticPropBody.map(function (b) {
          return b(a.classRef);
        })), this.classId && 1 === d.length) return t.toExpression(d[0]);d.push(t.returnStatement(this.classRef));var h = t.functionExpression(null, f, t.blockStatement(d));return h.shadow = !0, t.callExpression(h, g);
      }, a.prototype.buildConstructor = function () {
        var a = t.functionDeclaration(this.classRef, [], this.constructorBody);return t.inherits(a, this.node), a;
      }, a.prototype.pushToMap = function (a, b) {
        var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "value",
            d = arguments[3],
            e = void 0;a.static ? (this.hasStaticDescriptors = !0, e = this.staticMutatorMap) : (this.hasInstanceDescriptors = !0, e = this.instanceMutatorMap);var f = p.push(e, a, c, this.file, d);return b && (f.enumerable = t.booleanLiteral(!0)), f;
      }, a.prototype.constructorMeMaybe = function () {
        for (var a = !1, b = this.path.get("body.body"), c = b, d = Array.isArray(c), e = 0, c = d ? c : (0, g.default)(c);;) {
          var f;if (d) {
            if (e >= c.length) break;f = c[e++];
          } else {
            if (e = c.next(), e.done) break;f = e.value;
          }if (a = f.equals("kind", "constructor")) break;
        }if (!a) {
          var h = void 0,
              i = void 0;if (this.isDerived) {
            var j = u().expression;h = j.params, i = j.body;
          } else h = [], i = t.blockStatement([]);this.path.get("body").unshiftContainer("body", t.classMethod("constructor", t.identifier("constructor"), h, i));
        }
      }, a.prototype.buildBody = function () {
        if (this.constructorMeMaybe(), this.pushBody(), this.verifyConstructor(), this.userConstructor) {
          var a = this.constructorBody;a.body = a.body.concat(this.userConstructor.body.body), t.inherits(this.constructor, this.userConstructor), t.inherits(a, this.userConstructor.body);
        }this.pushDescriptors();
      }, a.prototype.pushBody = function () {
        for (var a = this.path.get("body.body"), b = a, c = Array.isArray(b), d = 0, b = c ? b : (0, g.default)(b);;) {
          var e;if (c) {
            if (d >= b.length) break;e = b[d++];
          } else {
            if (d = b.next(), d.done) break;e = d.value;
          }var f = e,
              h = f.node;if (f.isClassProperty()) throw f.buildCodeFrameError("Missing class properties transform.");if (h.decorators) throw f.buildCodeFrameError("Method has decorators, put the decorator plugin before the classes one.");if (t.isClassMethod(h)) {
            var i = "constructor" === h.kind;if (i && (f.traverse(w, this), !this.hasBareSuper && this.isDerived)) throw f.buildCodeFrameError("missing super() call in constructor");var j = new l.default({ forceSuperMemoisation: i, methodPath: f, methodNode: h, objectRef: this.classRef, superRef: this.superName, isStatic: h.static, isLoose: this.isLoose, scope: this.scope, file: this.file }, !0);j.replace(), i ? this.pushConstructor(j, h, f) : this.pushMethod(h, f);
          }
        }
      }, a.prototype.clearDescriptors = function () {
        this.hasInstanceDescriptors = !1, this.hasStaticDescriptors = !1, this.instanceMutatorMap = {}, this.staticMutatorMap = {};
      }, a.prototype.pushDescriptors = function () {
        this.pushInherits();var a = this.body,
            b = void 0,
            c = void 0;if (this.hasInstanceDescriptors && (b = p.toClassObject(this.instanceMutatorMap)), this.hasStaticDescriptors && (c = p.toClassObject(this.staticMutatorMap)), b || c) {
          b && (b = p.toComputedObjectFromClass(b)), c && (c = p.toComputedObjectFromClass(c));var d = t.nullLiteral(),
              e = [this.classRef, d, d, d, d];b && (e[1] = b), c && (e[2] = c), this.instanceInitializersId && (e[3] = this.instanceInitializersId, a.unshift(this.buildObjectAssignment(this.instanceInitializersId))), this.staticInitializersId && (e[4] = this.staticInitializersId, a.unshift(this.buildObjectAssignment(this.staticInitializersId)));for (var f = 0, g = 0; g < e.length; g++) e[g] !== d && (f = g);e = e.slice(0, f + 1), a.push(t.expressionStatement(t.callExpression(this.file.addHelper("createClass"), e)));
        }this.clearDescriptors();
      }, a.prototype.buildObjectAssignment = function (a) {
        return t.variableDeclaration("var", [t.variableDeclarator(a, t.objectExpression([]))]);
      }, a.prototype.wrapSuperCall = function (a, b, c, d) {
        var e = a.node;this.isLoose ? (e.arguments.unshift(t.thisExpression()), 2 === e.arguments.length && t.isSpreadElement(e.arguments[1]) && t.isIdentifier(e.arguments[1].argument, { name: "arguments" }) ? (e.arguments[1] = e.arguments[1].argument, e.callee = t.memberExpression(b, t.identifier("apply"))) : e.callee = t.memberExpression(b, t.identifier("call"))) : e = (0, n.default)(t.logicalExpression("||", t.memberExpression(this.classRef, t.identifier("__proto__")), t.callExpression(t.memberExpression(t.identifier("Object"), t.identifier("getPrototypeOf")), [this.classRef])), t.thisExpression(), e.arguments);var f = t.callExpression(this.file.addHelper("possibleConstructorReturn"), [t.thisExpression(), e]),
            g = this.bareSuperAfter.map(function (a) {
          return a(c);
        });a.parentPath.isExpressionStatement() && a.parentPath.container === d.node.body && d.node.body.length - 1 === a.parentPath.key ? ((this.superThises.length || g.length) && (a.scope.push({ id: c }), f = t.assignmentExpression("=", c, f)), g.length && (f = t.toSequenceExpression([f].concat(g, [c]))), a.parentPath.replaceWith(t.returnStatement(f))) : a.replaceWithMultiple([t.variableDeclaration("var", [t.variableDeclarator(c, f)])].concat(g, [t.expressionStatement(c)]));
      }, a.prototype.verifyConstructor = function () {
        var a = this;if (this.isDerived) {
          var b = this.userConstructorPath,
              c = b.get("body");b.traverse(x, this);for (var d = !!this.bareSupers.length, e = this.superName || t.identifier("Function"), f = b.scope.generateUidIdentifier("this"), h = this.bareSupers, i = Array.isArray(h), j = 0, h = i ? h : (0, g.default)(h);;) {
            var k;if (i) {
              if (j >= h.length) break;k = h[j++];
            } else {
              if (j = h.next(), j.done) break;k = j.value;
            }var l = k;this.wrapSuperCall(l, e, f, c), d && l.find(function (a) {
              return a === b || (a.isLoop() || a.isConditional() ? (d = !1, !0) : void 0);
            });
          }for (var m = this.superThises, n = Array.isArray(m), o = 0, m = n ? m : (0, g.default)(m);;) {
            var p;if (n) {
              if (o >= m.length) break;p = m[o++];
            } else {
              if (o = m.next(), o.done) break;p = o.value;
            }p.replaceWith(f);
          }var q = function (b) {
            return t.callExpression(a.file.addHelper("possibleConstructorReturn"), [f].concat(b || []));
          },
              r = c.get("body");r.length && !r.pop().isReturnStatement() && c.pushContainer("body", t.returnStatement(d ? f : q()));for (var s = this.superReturns, u = Array.isArray(s), v = 0, s = u ? s : (0, g.default)(s);;) {
            var w;if (u) {
              if (v >= s.length) break;w = s[v++];
            } else {
              if (v = s.next(), v.done) break;w = v.value;
            }var y = w;if (y.node.argument) {
              var z = y.scope.generateDeclaredUidIdentifier("ret");y.get("argument").replaceWithMultiple([t.assignmentExpression("=", z, y.node.argument), q(z)]);
            } else y.get("argument").replaceWith(q());
          }
        }
      }, a.prototype.pushMethod = function (a, b) {
        var c = b ? b.scope : this.scope;"method" === a.kind && this._processMethod(a, c) || this.pushToMap(a, !1, null, c);
      }, a.prototype._processMethod = function () {
        return !1;
      }, a.prototype.pushConstructor = function (a, b, c) {
        this.bareSupers = a.bareSupers, this.superReturns = a.returns, c.scope.hasOwnBinding(this.classRef.name) && c.scope.rename(this.classRef.name);var d = this.constructor;this.userConstructorPath = c, this.userConstructor = b, this.hasConstructor = !0, t.inheritsComments(d, b), d._ignoreUserWhitespace = !0, d.params = b.params, t.inherits(d.body, b.body), d.body.directives = b.body.directives, this._pushConstructor();
      }, a.prototype._pushConstructor = function () {
        this.pushedConstructor || (this.pushedConstructor = !0, (this.hasInstanceDescriptors || this.hasStaticDescriptors) && this.pushDescriptors(), this.body.push(this.constructor), this.pushInherits());
      }, a.prototype.pushInherits = function () {
        this.isDerived && !this.pushedInherits && (this.pushedInherits = !0, this.body.unshift(t.expressionStatement(t.callExpression(this.file.addHelper("inherits"), [this.classRef, this.superName]))));
      }, a;
    }();b.default = y, c.exports = b.default;
  }), a.registerDynamic("ec", ["11c", "10", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b, c, d) {
      if (a.selfReference) {
        if (!d.hasBinding(c.name) || d.hasGlobal(c.name)) {
          if (!m.isFunction(b)) return;var e = n;b.generator && (e = o);var f = e({ FUNCTION: b, FUNCTION_ID: c, FUNCTION_KEY: d.generateUidIdentifier(c.name) }).expression;f.callee._skipModulesRemap = !0;for (var g = f.callee.body.body[0].params, h = 0, j = (0, i.default)(b); h < j; h++) g.push(d.generateUidIdentifier("x"));return f;
        }d.rename(c.name);
      }b.id = c, d.getProgramParent().references[c.name] = !0;
    }function g(a, b, c) {
      var d = { selfAssignment: !1, selfReference: !1, outerDeclar: c.getBindingIdentifier(b), references: [], name: b },
          e = c.getOwnBinding(b);return e ? "param" === e.kind && (d.selfReference = !0) : (d.outerDeclar || c.hasGlobal(b)) && c.traverse(a, p, d), d;
    }this || self;b.__esModule = !0, b.default = function (a) {
      var b = a.node,
          c = a.parent,
          d = a.scope,
          e = a.id;if (!b.id) {
        if (!m.isObjectProperty(c) && !m.isObjectMethod(c, { kind: "method" }) || c.computed && !m.isLiteral(c.key)) {
          if (m.isVariableDeclarator(c)) {
            if (e = c.id, m.isIdentifier(e)) {
              var h = d.parent.getBinding(e.name);if (h && h.constant && d.getBinding(e.name) === h) return b.id = e, void (b.id[m.NOT_LOCAL_BINDING] = !0);
            }
          } else if (m.isAssignmentExpression(c)) e = c.left;else if (!e) return;
        } else e = c.key;var i = void 0;if (e && m.isLiteral(e)) i = e.value;else {
          if (!e || !m.isIdentifier(e)) return;i = e.name;
        }i = m.toBindingIdentifierName(i), e = m.identifier(i), e[m.NOT_LOCAL_BINDING] = !0;return f(g(b, i, d), b, e, d) || b;
      }
    };var h = a("11c"),
        i = e(h),
        j = a("10"),
        k = e(j),
        l = a("11"),
        m = d(l),
        n = (0, k.default)("\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"),
        o = (0, k.default)("\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"),
        p = { "ReferencedIdentifier|BindingIdentifier": function (a, b) {
        if (a.node.name === b.name) {
          a.scope.getBindingIdentifier(b.name) === b.outerDeclar && (b.selfReference = !0, a.stop());
        }
      } };c.exports = b.default;
  }), a.registerDynamic("11d", ["d8", "116", "117", "ec"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("d8"),
        f = d(e);b.default = function (a) {
      var b = a.types,
          c = (0, f.default)();return { visitor: { ExportDefaultDeclaration: function (a) {
            if (a.get("declaration").isClassDeclaration()) {
              var c = a.node,
                  d = c.declaration.id || a.scope.generateUidIdentifier("class");c.declaration.id = d, a.replaceWith(c.declaration), a.insertAfter(b.exportDefaultDeclaration(d));
            }
          }, ClassDeclaration: function (a) {
            var c = a.node,
                d = c.id || a.scope.generateUidIdentifier("class");a.replaceWith(b.variableDeclaration("let", [b.variableDeclarator(d, b.toExpression(c))]));
          }, ClassExpression: function (a, b) {
            var d = a.node;if (!d[c]) {
              var e = (0, l.default)(a);if (e && e !== d) return a.replaceWith(e);d[c] = !0;var f = j.default;b.opts.loose && (f = h.default), a.replaceWith(new f(a, b.file).run());
            }
          } } };
    };var g = a("116"),
        h = d(g),
        i = a("117"),
        j = d(i),
        k = a("ec"),
        l = d(k);c.exports = b.default;
  }), a.registerDynamic("11b", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }this || self;b.__esModule = !0, b.default = function (a, b, c) {
      return 1 === c.length && f.isSpreadElement(c[0]) && f.isIdentifier(c[0].argument, { name: "arguments" }) ? f.callExpression(f.memberExpression(a, f.identifier("apply")), [b, c[0].argument]) : f.callExpression(f.memberExpression(a, f.identifier("call")), [b].concat(c));
    };var e = a("11"),
        f = d(e);c.exports = b.default;
  }), a.registerDynamic("11a", ["1f", "d8", "11b", "f", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b) {
      return !!r.isSuper(a) && !r.isMemberExpression(b, { computed: !1 }) && !r.isCallExpression(b, { callee: a });
    }function g(a) {
      return r.isMemberExpression(a) && r.isSuper(a.object);
    }function h(a, b) {
      var c = b ? a : r.memberExpression(a, r.identifier("prototype"));return r.logicalExpression("||", r.memberExpression(c, r.identifier("__proto__")), r.callExpression(r.memberExpression(r.identifier("Object"), r.identifier("getPrototypeOf")), [c]));
    }this || self;b.__esModule = !0;var i = a("1f"),
        j = e(i),
        k = a("d8"),
        l = e(k),
        m = a("11b"),
        n = e(m),
        o = a("f"),
        p = d(o),
        q = a("11"),
        r = d(q),
        s = (0, l.default)(),
        t = { Function: function (a) {
        a.inShadow("this") || a.skip();
      }, ReturnStatement: function (a, b) {
        a.inShadow("this") || b.returns.push(a);
      }, ThisExpression: function (a, b) {
        a.node[s] || b.thises.push(a);
      }, enter: function (a, b) {
        var c = b.specHandle;b.isLoose && (c = b.looseHandle);var d = a.isCallExpression() && a.get("callee").isSuper(),
            e = c.call(b, a);e && (b.hasSuper = !0), d && b.bareSupers.push(a), !0 === e && a.requeue(), !0 !== e && e && (Array.isArray(e) ? a.replaceWithMultiple(e) : a.replaceWith(e));
      } },
        u = function () {
      function a(b) {
        var c = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];(0, j.default)(this, a), this.forceSuperMemoisation = b.forceSuperMemoisation, this.methodPath = b.methodPath, this.methodNode = b.methodNode, this.superRef = b.superRef, this.isStatic = b.isStatic, this.hasSuper = !1, this.inClass = c, this.isLoose = b.isLoose, this.scope = this.methodPath.scope, this.file = b.file, this.opts = b, this.bareSupers = [], this.returns = [], this.thises = [];
      }return a.prototype.getObjectRef = function () {
        return this.opts.objectRef || this.opts.getObjectRef();
      }, a.prototype.setSuperProperty = function (a, b, c) {
        return r.callExpression(this.file.addHelper("set"), [h(this.getObjectRef(), this.isStatic), c ? a : r.stringLiteral(a.name), b, r.thisExpression()]);
      }, a.prototype.getSuperProperty = function (a, b) {
        return r.callExpression(this.file.addHelper("get"), [h(this.getObjectRef(), this.isStatic), b ? a : r.stringLiteral(a.name), r.thisExpression()]);
      }, a.prototype.replace = function () {
        this.methodPath.traverse(t, this);
      }, a.prototype.getLooseSuperProperty = function (a, b) {
        var c = this.methodNode,
            d = this.superRef || r.identifier("Function");return b.property === a ? void 0 : r.isCallExpression(b, { callee: a }) ? void 0 : r.isMemberExpression(b) && !c.static ? r.memberExpression(d, r.identifier("prototype")) : d;
      }, a.prototype.looseHandle = function (a) {
        var b = a.node;if (a.isSuper()) return this.getLooseSuperProperty(b, a.parent);if (a.isCallExpression()) {
          var c = b.callee;if (!r.isMemberExpression(c)) return;if (!r.isSuper(c.object)) return;return r.appendToMemberExpression(c, r.identifier("call")), b.arguments.unshift(r.thisExpression()), !0;
        }
      }, a.prototype.specHandleAssignmentExpression = function (a, b, c) {
        return "=" === c.operator ? this.setSuperProperty(c.left.property, c.right, c.left.computed) : (a = a || b.scope.generateUidIdentifier("ref"), [r.variableDeclaration("var", [r.variableDeclarator(a, c.left)]), r.expressionStatement(r.assignmentExpression("=", c.left, r.binaryExpression(c.operator[0], a, c.right)))]);
      }, a.prototype.specHandle = function (a) {
        var b = void 0,
            c = void 0,
            d = void 0,
            e = a.parent,
            h = a.node;if (f(h, e)) throw a.buildCodeFrameError(p.get("classesIllegalBareSuper"));if (r.isCallExpression(h)) {
          var i = h.callee;if (r.isSuper(i)) return;g(i) && (b = i.property, c = i.computed, d = h.arguments);
        } else if (r.isMemberExpression(h) && r.isSuper(h.object)) b = h.property, c = h.computed;else {
          if (r.isUpdateExpression(h) && g(h.argument)) {
            var j = r.binaryExpression(h.operator[0], h.argument, r.numericLiteral(1));if (h.prefix) return this.specHandleAssignmentExpression(null, a, j);var k = a.scope.generateUidIdentifier("ref");return this.specHandleAssignmentExpression(k, a, j).concat(r.expressionStatement(k));
          }if (r.isAssignmentExpression(h) && g(h.left)) return this.specHandleAssignmentExpression(null, a, h);
        }if (b) {
          var l = this.getSuperProperty(b, c);return d ? this.optimiseCall(l, d) : l;
        }
      }, a.prototype.optimiseCall = function (a, b) {
        var c = r.thisExpression();return c[s] = !0, (0, n.default)(a, c, b);
      }, a;
    }();b.default = u, c.exports = b.default;
  }), a.registerDynamic("11e", ["17", "d8", "11a"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e),
        g = a("d8"),
        h = d(g);b.default = function (a) {
      function b(a, b, c, d, e) {
        new j.default({ getObjectRef: d, methodNode: b, methodPath: a, isStatic: !0, scope: c, file: e }).replace();
      }var c = a.types,
          d = (0, h.default)();return { visitor: { Super: function (a) {
            var b = a.findParent(function (a) {
              return a.isObjectExpression();
            });b && (b.node[d] = !0);
          }, ObjectExpression: { exit: function (a, e) {
              if (a.node[d]) {
                for (var g = void 0, h = function () {
                  return g = g || a.scope.generateUidIdentifier("obj");
                }, i = a.get("properties"), j = i, k = Array.isArray(j), l = 0, j = k ? j : (0, f.default)(j);;) {
                  var m;if (k) {
                    if (l >= j.length) break;m = j[l++];
                  } else {
                    if (l = j.next(), l.done) break;m = l.value;
                  }var n = m;n.isObjectProperty() && (n = n.get("value")), b(n, n.node, a.scope, h, e);
                }g && (a.scope.push({ id: g }), a.replaceWith(c.assignmentExpression("=", g, a.node)));
              }
            } } } };
    };var i = a("11a"),
        j = d(i);c.exports = b.default;
  }), a.registerDynamic("11f", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }this || self;b.__esModule = !0, b.default = function () {
      return { visitor: { ObjectMethod: function (a) {
            var b = a.node;if ("method" === b.kind) {
              var c = f.functionExpression(null, b.params, b.body, b.generator, b.async);c.returnType = b.returnType, a.replaceWith(f.objectProperty(b.key, c, b.computed));
            }
          }, ObjectProperty: function (a) {
            var b = a.node;b.shorthand && (b.shorthand = !1);
          } } };
    };var e = a("11"),
        f = d(e);c.exports = b.default;
  }), a.registerDynamic("120", ["17"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e);b.default = function (a) {
      function b(a) {
        return h.isObjectProperty(a) ? a.value : h.isObjectMethod(a) ? h.functionExpression(null, a.params, a.body, a.generator, a.async) : void 0;
      }function c(a, c, e) {
        "get" === c.kind && "set" === c.kind ? d(a, c, e) : e.push(h.expressionStatement(h.assignmentExpression("=", h.memberExpression(a, c.key, c.computed || h.isLiteral(c.key)), b(c))));
      }function d(a, c) {
        var d = (a.objId, a.body),
            e = a.getMutatorId,
            f = a.scope,
            g = !c.computed && h.isIdentifier(c.key) ? h.stringLiteral(c.key.name) : c.key,
            i = f.maybeGenerateMemoised(g);i && (d.push(h.expressionStatement(h.assignmentExpression("=", i, g))), g = i), d.push.apply(d, j({ MUTATOR_MAP_REF: e(), KEY: g, VALUE: b(c), KIND: h.identifier(c.kind) }));
      }function e(a) {
        for (var b = a.computedProps, e = Array.isArray(b), g = 0, b = e ? b : (0, f.default)(b);;) {
          var h;if (e) {
            if (g >= b.length) break;h = b[g++];
          } else {
            if (g = b.next(), g.done) break;h = g.value;
          }var i = h;"get" === i.kind || "set" === i.kind ? d(a, i) : c(a.objId, i, a.body);
        }
      }function g(a) {
        for (var e = a.objId, g = a.body, i = a.computedProps, j = a.state, k = i, l = Array.isArray(k), m = 0, k = l ? k : (0, f.default)(k);;) {
          var n;if (l) {
            if (m >= k.length) break;n = k[m++];
          } else {
            if (m = k.next(), m.done) break;n = m.value;
          }var o = n,
              p = h.toComputedKey(o);if ("get" === o.kind || "set" === o.kind) d(a, o);else if (h.isStringLiteral(p, { value: "__proto__" })) c(e, o, g);else {
            if (1 === i.length) return h.callExpression(j.addHelper("defineProperty"), [a.initPropExpression, p, b(o)]);g.push(h.expressionStatement(h.callExpression(j.addHelper("defineProperty"), [e, p, b(o)])));
          }
        }
      }var h = a.types,
          i = a.template,
          j = i("\n    MUTATOR_MAP_REF[KEY] = MUTATOR_MAP_REF[KEY] || {};\n    MUTATOR_MAP_REF[KEY].KIND = VALUE;\n  ");return { visitor: { ObjectExpression: { exit: function (a, b) {
              for (var c = a.node, d = a.parent, i = a.scope, j = !1, k = c.properties, l = Array.isArray(k), m = 0, k = l ? k : (0, f.default)(k);;) {
                var n;if (l) {
                  if (m >= k.length) break;n = k[m++];
                } else {
                  if (m = k.next(), m.done) break;n = m.value;
                }if (j = !0 === n.computed) break;
              }if (j) {
                for (var o = [], p = [], q = !1, r = c.properties, s = Array.isArray(r), t = 0, r = s ? r : (0, f.default)(r);;) {
                  var u;if (s) {
                    if (t >= r.length) break;u = r[t++];
                  } else {
                    if (t = r.next(), t.done) break;u = t.value;
                  }var v = u;v.computed && (q = !0), q ? p.push(v) : o.push(v);
                }var w = i.generateUidIdentifierBasedOnNode(d),
                    x = h.objectExpression(o),
                    y = [];y.push(h.variableDeclaration("var", [h.variableDeclarator(w, x)]));var z = g;b.opts.loose && (z = e);var A = void 0,
                    B = function () {
                  return A || (A = i.generateUidIdentifier("mutatorMap"), y.push(h.variableDeclaration("var", [h.variableDeclarator(A, h.objectExpression([]))]))), A;
                },
                    C = z({ scope: i, objId: w, body: y, computedProps: p, initPropExpression: x, getMutatorId: B, state: b });A && y.push(h.expressionStatement(h.callExpression(b.addHelper("defineEnumerableProperties"), [w, A]))), C ? a.replaceWith(C) : (y.push(h.expressionStatement(w)), a.replaceWithMultiple(y));
              }
            } } } };
    }, c.exports = b.default;
  }), a.registerDynamic("121", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function (a) {
      function b(a) {
        var b = a.node,
            c = a.scope,
            d = [],
            e = b.right;if (!g.isIdentifier(e) || !c.hasBinding(e.name)) {
          var f = c.generateUidIdentifier("arr");d.push(g.variableDeclaration("var", [g.variableDeclarator(f, e)])), e = f;
        }var i = c.generateUidIdentifier("i"),
            j = h({ BODY: b.body, KEY: i, ARR: e });g.inherits(j, b), g.ensureBlock(j);var k = g.memberExpression(e, i, !0),
            l = b.left;return g.isVariableDeclaration(l) ? (l.declarations[0].init = k, j.body.body.unshift(l)) : j.body.body.unshift(g.expressionStatement(g.assignmentExpression("=", l, k))), a.parentPath.isLabeledStatement() && (j = g.labeledStatement(a.parentPath.node.label, j)), d.push(j), d;
      }function c(a, b) {
        var c = a.node,
            d = a.scope,
            f = a.parent,
            h = c.left,
            j = void 0,
            k = void 0;if (g.isIdentifier(h) || g.isPattern(h) || g.isMemberExpression(h)) k = h;else {
          if (!g.isVariableDeclaration(h)) throw b.buildCodeFrameError(h, e.get("unknownForHead", h.type));k = d.generateUidIdentifier("ref"), j = g.variableDeclaration(h.kind, [g.variableDeclarator(h.declarations[0].id, k)]);
        }var l = d.generateUidIdentifier("iterator"),
            m = d.generateUidIdentifier("isArray"),
            n = i({ LOOP_OBJECT: l, IS_ARRAY: m, OBJECT: c.right, INDEX: d.generateUidIdentifier("i"), ID: k });j || n.body.body.shift();var o = g.isLabeledStatement(f),
            p = void 0;return o && (p = g.labeledStatement(f.label, n)), { replaceParent: o, declar: j, node: p || n, loop: n };
      }function d(a, b) {
        var c = a.node,
            d = a.scope,
            f = a.parent,
            h = c.left,
            i = void 0,
            k = d.generateUidIdentifier("step"),
            l = g.memberExpression(k, g.identifier("value"));if (g.isIdentifier(h) || g.isPattern(h) || g.isMemberExpression(h)) i = g.expressionStatement(g.assignmentExpression("=", h, l));else {
          if (!g.isVariableDeclaration(h)) throw b.buildCodeFrameError(h, e.get("unknownForHead", h.type));i = g.variableDeclaration(h.kind, [g.variableDeclarator(h.declarations[0].id, l)]);
        }var m = d.generateUidIdentifier("iterator"),
            n = j({ ITERATOR_HAD_ERROR_KEY: d.generateUidIdentifier("didIteratorError"), ITERATOR_COMPLETION: d.generateUidIdentifier("iteratorNormalCompletion"), ITERATOR_ERROR_KEY: d.generateUidIdentifier("iteratorError"), ITERATOR_KEY: m, STEP_KEY: k, OBJECT: c.right, BODY: null }),
            o = g.isLabeledStatement(f),
            p = n[3].block.body,
            q = p[0];return o && (p[0] = g.labeledStatement(f.label, q)), { replaceParent: o, declar: i, loop: q, node: n };
      }var e = a.messages,
          f = a.template,
          g = a.types,
          h = f("\n    for (var KEY = 0; KEY < ARR.length; KEY++) BODY;\n  "),
          i = f("\n    for (var LOOP_OBJECT = OBJECT,\n             IS_ARRAY = Array.isArray(LOOP_OBJECT),\n             INDEX = 0,\n             LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\n      var ID;\n      if (IS_ARRAY) {\n        if (INDEX >= LOOP_OBJECT.length) break;\n        ID = LOOP_OBJECT[INDEX++];\n      } else {\n        INDEX = LOOP_OBJECT.next();\n        if (INDEX.done) break;\n        ID = INDEX.value;\n      }\n    }\n  "),
          j = f("\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY = undefined;\n    try {\n      for (var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY; !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done); ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\n          ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  ");return { visitor: { ForOfStatement: function (a, e) {
            if (a.get("right").isArrayExpression()) return a.parentPath.isLabeledStatement() ? a.parentPath.replaceWithMultiple(b(a)) : a.replaceWithMultiple(b(a));var f = d;e.opts.loose && (f = c);var h = a.node,
                i = f(a, e),
                j = i.declar,
                k = i.loop,
                l = k.body;a.ensureBlock(), j && l.body.push(j), l.body = l.body.concat(h.body.body), g.inherits(k, h), g.inherits(k.body, h.body), i.replaceParent ? (a.parentPath.replaceWithMultiple(i.node), a.remove()) : a.replaceWithMultiple(i.node);
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("122", ["123", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }this || self;b.__esModule = !0, b.default = function () {
      return { visitor: { RegExpLiteral: function (a) {
            var b = a.node;f.is(b, "y") && a.replaceWith(h.newExpression(h.identifier("RegExp"), [h.stringLiteral(b.pattern), h.stringLiteral(b.flags)]));
          } } };
    };var e = a("123"),
        f = d(e),
        g = a("11"),
        h = d(g);c.exports = b.default;
  }), function () {
    "use strict";
    function b() {
      var a,
          b,
          c = 16384,
          d = [],
          e = -1,
          f = arguments.length;if (!f) return "";for (var g = ""; ++e < f;) {
        var h = Number(arguments[e]);if (!isFinite(h) || h < 0 || h > 1114111 || z(h) != h) throw RangeError("Invalid code point: " + h);h <= 65535 ? d.push(h) : (h -= 65536, a = 55296 + (h >> 10), b = h % 1024 + 56320, d.push(a, b)), (e + 1 == f || d.length > c) && (g += y.apply(null, d), d.length = 0);
      }return g;
    }function e(a, b) {
      if (-1 == b.indexOf("|")) {
        if (a == b) return;throw Error("Invalid node type: " + a);
      }if (b = e.hasOwnProperty(b) ? e[b] : e[b] = RegExp("^(?:" + b + ")$"), !b.test(a)) throw Error("Invalid node type: " + a);
    }function f(a) {
      var b = a.type;if (f.hasOwnProperty(b) && "function" == typeof f[b]) return f[b](a);throw Error("Invalid node type: " + b);
    }function g(a) {
      e(a.type, "alternative");var b = a.body,
          c = b ? b.length : 0;if (1 == c) return s(b[0]);for (var d = -1, f = ""; ++d < c;) f += s(b[d]);return f;
    }function h(a) {
      switch (e(a.type, "anchor"), a.kind) {case "start":
          return "^";case "end":
          return "$";case "boundary":
          return "\\b";case "not-boundary":
          return "\\B";default:
          throw Error("Invalid assertion");}
    }function i(a) {
      return e(a.type, "anchor|characterClass|characterClassEscape|dot|group|reference|value"), f(a);
    }function j(a) {
      e(a.type, "characterClass");var b = a.body,
          c = b ? b.length : 0,
          d = -1,
          f = "[";for (a.negative && (f += "^"); ++d < c;) f += m(b[d]);return f += "]";
    }function k(a) {
      return e(a.type, "characterClassEscape"), "\\" + a.value;
    }function l(a) {
      e(a.type, "characterClassRange");var b = a.min,
          c = a.max;if ("characterClassRange" == b.type || "characterClassRange" == c.type) throw Error("Invalid character class range");return m(b) + "-" + m(c);
    }function m(a) {
      return e(a.type, "anchor|characterClassEscape|characterClassRange|dot|value"), f(a);
    }function n(a) {
      e(a.type, "disjunction");var b = a.body,
          c = b ? b.length : 0;if (0 == c) throw Error("No body");if (1 == c) return f(b[0]);for (var d = -1, g = ""; ++d < c;) 0 != d && (g += "|"), g += f(b[d]);return g;
    }function o(a) {
      return e(a.type, "dot"), ".";
    }function p(a) {
      e(a.type, "group");var b = "(";switch (a.behavior) {case "normal":
          break;case "ignore":
          b += "?:";break;case "lookahead":
          b += "?=";break;case "negativeLookahead":
          b += "?!";break;default:
          throw Error("Invalid behaviour: " + a.behaviour);}var c = a.body,
          d = c ? c.length : 0;if (1 == d) b += f(c[0]);else for (var g = -1; ++g < d;) b += f(c[g]);return b += ")";
    }function q(a) {
      e(a.type, "quantifier");var b = "",
          c = a.min,
          d = a.max;switch (d) {case void 0:case null:
          switch (c) {case 0:
              b = "*";break;case 1:
              b = "+";break;default:
              b = "{" + c + ",}";}break;default:
          b = c == d ? "{" + c + "}" : 0 == c && 1 == d ? "?" : "{" + c + "," + d + "}";}return a.greedy || (b += "?"), i(a.body[0]) + b;
    }function r(a) {
      return e(a.type, "reference"), "\\" + a.matchIndex;
    }function s(a) {
      return e(a.type, "anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|value"), f(a);
    }function t(a) {
      e(a.type, "value");var c = a.kind,
          d = a.codePoint;switch (c) {case "controlLetter":
          return "\\c" + b(d + 64);case "hexadecimalEscape":
          return "\\x" + ("00" + d.toString(16).toUpperCase()).slice(-2);case "identifier":
          return "\\" + b(d);case "null":
          return "\\" + d;case "octal":
          return "\\" + d.toString(8);case "singleEscape":
          switch (d) {case 8:
              return "\\b";case 9:
              return "\\t";case 10:
              return "\\n";case 11:
              return "\\v";case 12:
              return "\\f";case 13:
              return "\\r";default:
              throw Error("Invalid codepoint: " + d);}case "symbol":
          return b(d);case "unicodeEscape":
          return "\\u" + ("0000" + d.toString(16).toUpperCase()).slice(-4);case "unicodeCodePointEscape":
          return "\\u{" + d.toString(16).toUpperCase() + "}";default:
          throw Error("Unsupported node kind: " + c);}
    }var u = { function: !0, object: !0 },
        v = (u[typeof window] && window, u[typeof c] && c),
        w = u[typeof d] && d && !d.nodeType && d,
        x = v && w && "object" == typeof global && global;!x || x.global !== x && x.window !== x && x.self;var y = String.fromCharCode,
        z = Math.floor;f.alternative = g, f.anchor = h, f.characterClass = j, f.characterClassEscape = k, f.characterClassRange = l, f.disjunction = n, f.dot = o, f.group = p, f.quantifier = q, f.reference = r, f.value = t, a.registerDynamic("124", [], !1, function (a, b, c) {
      return function () {
        return { generate: f };
      }.call(this);
    });
  }.call(this), a.registerDynamic("125", [], !0, function (a, b, c) {
    this || self;!function () {
      function a(a, b) {
        function c(b) {
          return b.raw = a.substring(b.range[0], b.range[1]), b;
        }function d(a, b) {
          return a.range[0] = b, c(a);
        }function e(a, b) {
          return c({ type: "anchor", kind: a, range: [Z - b, Z] });
        }function f(a, b, d, e) {
          return c({ type: "value", kind: a, codePoint: b, range: [d, e] });
        }function g(a, b, c, d) {
          return d = d || 0, f(a, b, Z - (c.length + d), Z);
        }function h(a) {
          var b = a[0],
              c = b.charCodeAt(0);if (Y) {
            var d;if (1 === b.length && c >= 55296 && c <= 56319 && (d = v().charCodeAt(0)) >= 56320 && d <= 57343) return Z++, f("symbol", 1024 * (c - 55296) + d - 56320 + 65536, Z - 2, Z);
          }return f("symbol", c, Z - 1, Z);
        }function i(a, b, d) {
          return c({ type: "disjunction", body: a, range: [b, d] });
        }function j() {
          return c({ type: "dot", range: [Z - 1, Z] });
        }function k(a) {
          return c({ type: "characterClassEscape", value: a, range: [Z - 2, Z] });
        }function l(a) {
          return c({ type: "reference", matchIndex: parseInt(a, 10), range: [Z - 1 - a.length, Z] });
        }function m(a, b, d, e) {
          return c({ type: "group", behavior: a, body: b, range: [d, e] });
        }function n(a, b, d, e) {
          return null == e && (d = Z - 1, e = Z), c({ type: "quantifier", min: a, max: b, greedy: !0, body: null, range: [d, e] });
        }function o(a, b, d) {
          return c({ type: "alternative", body: a, range: [b, d] });
        }function p(a, b, d, e) {
          return c({ type: "characterClass", body: a, negative: b, range: [d, e] });
        }function q(a, b, d, e) {
          return a.codePoint > b.codePoint && U("invalid range in character class", a.raw + "-" + b.raw, d, e), c({ type: "characterClassRange", min: a, max: b, range: [d, e] });
        }function r(a) {
          return "alternative" === a.type ? a.body : [a];
        }function s(b) {
          b = b || 1;var c = a.substring(Z, Z + b);return Z += b || 1, c;
        }function t(a) {
          u(a) || U("character", a);
        }function u(b) {
          if (a.indexOf(b, Z) === Z) return s(b.length);
        }function v() {
          return a[Z];
        }function w(b) {
          return a.indexOf(b, Z) === Z;
        }function x(b) {
          return a[Z + 1] === b;
        }function y(b) {
          var c = a.substring(Z),
              d = c.match(b);return d && (d.range = [], d.range[0] = Z, s(d[0].length), d.range[1] = Z), d;
        }function z() {
          var a = [],
              b = Z;for (a.push(A()); u("|");) a.push(A());return 1 === a.length ? a[0] : i(a, b, Z);
        }function A() {
          for (var a, b = [], c = Z; a = B();) b.push(a);return 1 === b.length ? b[0] : o(b, c, Z);
        }function B() {
          if (Z >= a.length || w("|") || w(")")) return null;var b = D();if (b) return b;var c = F();c || U("Expected atom");var e = E() || !1;return e ? (e.body = r(c), d(e, c.range[0]), e) : c;
        }function C(a, b, c, d) {
          var e = null,
              f = Z;if (u(a)) e = b;else {
            if (!u(c)) return !1;e = d;
          }var g = z();g || U("Expected disjunction"), t(")");var h = m(e, r(g), f, Z);return "normal" == e && X && W++, h;
        }function D() {
          return u("^") ? e("start", 1) : u("$") ? e("end", 1) : u("\\b") ? e("boundary", 2) : u("\\B") ? e("not-boundary", 2) : C("(?=", "lookahead", "(?!", "negativeLookahead");
        }function E() {
          var a,
              b,
              c,
              d,
              e = Z;return u("*") ? b = n(0) : u("+") ? b = n(1) : u("?") ? b = n(0, 1) : (a = y(/^\{([0-9]+)\}/)) ? (c = parseInt(a[1], 10), b = n(c, c, a.range[0], a.range[1])) : (a = y(/^\{([0-9]+),\}/)) ? (c = parseInt(a[1], 10), b = n(c, void 0, a.range[0], a.range[1])) : (a = y(/^\{([0-9]+),([0-9]+)\}/)) && (c = parseInt(a[1], 10), d = parseInt(a[2], 10), c > d && U("numbers out of order in {} quantifier", "", e, Z), b = n(c, d, a.range[0], a.range[1])), b && u("?") && (b.greedy = !1, b.range[1] += 1), b;
        }function F() {
          var a;return (a = y(/^[^^$\\.*+?(){[|]/)) ? h(a) : u(".") ? j() : u("\\") ? (a = I(), a || U("atomEscape"), a) : (a = N()) ? a : C("(?:", "ignore", "(", "normal");
        }function G(a) {
          if (Y) {
            var b, d;if ("unicodeEscape" == a.kind && (b = a.codePoint) >= 55296 && b <= 56319 && w("\\") && x("u")) {
              var e = Z;Z++;var f = H();"unicodeEscape" == f.kind && (d = f.codePoint) >= 56320 && d <= 57343 ? (a.range[1] = f.range[1], a.codePoint = 1024 * (b - 55296) + d - 56320 + 65536, a.type = "value", a.kind = "unicodeCodePointEscape", c(a)) : Z = e;
            }
          }return a;
        }function H() {
          return I(!0);
        }function I(a) {
          var b,
              c = Z;if (b = J()) return b;if (a) {
            if (u("b")) return g("singleEscape", 8, "\\b");u("B") && U("\\B not possible inside of CharacterClass", "", c);
          }return b = K();
        }function J() {
          var a, b;if (a = y(/^(?!0)\d+/)) {
            b = a[0];var c = parseInt(a[0], 10);return c <= W ? l(a[0]) : (V.push(c), s(-a[0].length), (a = y(/^[0-7]{1,3}/)) ? g("octal", parseInt(a[0], 8), a[0], 1) : (a = h(y(/^[89]/)), d(a, a.range[0] - 1)));
          }return (a = y(/^[0-7]{1,3}/)) ? (b = a[0], /^0{1,3}$/.test(b) ? g("null", 0, "0", b.length + 1) : g("octal", parseInt(b, 8), b, 1)) : !!(a = y(/^[dDsSwW]/)) && k(a[0]);
        }function K() {
          var a;if (a = y(/^[fnrtv]/)) {
            var b = 0;switch (a[0]) {case "t":
                b = 9;break;case "n":
                b = 10;break;case "v":
                b = 11;break;case "f":
                b = 12;break;case "r":
                b = 13;}return g("singleEscape", b, "\\" + a[0]);
          }return (a = y(/^c([a-zA-Z])/)) ? g("controlLetter", a[1].charCodeAt(0) % 32, a[1], 2) : (a = y(/^x([0-9a-fA-F]{2})/)) ? g("hexadecimalEscape", parseInt(a[1], 16), a[1], 2) : (a = y(/^u([0-9a-fA-F]{4})/)) ? G(g("unicodeEscape", parseInt(a[1], 16), a[1], 2)) : Y && (a = y(/^u\{([0-9a-fA-F]+)\}/)) ? g("unicodeCodePointEscape", parseInt(a[1], 16), a[1], 4) : M();
        }function L(a) {
          var b = new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԯԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠ-ࢲࣤ-ॣ०-९ॱ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಁ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲഁ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧ᪰-᪽ᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶ᳸᳹ᴀ-᷵᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚝꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞭꞰꞱꟷ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꧠ-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭟꭤꭥꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︭︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]");return 36 === a || 95 === a || a >= 65 && a <= 90 || a >= 97 && a <= 122 || a >= 48 && a <= 57 || 92 === a || a >= 128 && b.test(String.fromCharCode(a));
        }function M() {
          var a,
              b = "‌",
              c = "‍";return L(v()) ? u(b) ? g("identifier", 8204, b) : u(c) ? g("identifier", 8205, c) : null : (a = s(), g("identifier", a.charCodeAt(0), a, 1));
        }function N() {
          var a,
              b = Z;return (a = y(/^\[\^/)) ? (a = O(), t("]"), p(a, !0, b, Z)) : u("[") ? (a = O(), t("]"), p(a, !1, b, Z)) : null;
        }function O() {
          var a;return w("]") ? [] : (a = Q(), a || U("nonEmptyClassRanges"), a);
        }function P(a) {
          var b, c, d;if (w("-") && !x("]")) {
            t("-"), d = S(), d || U("classAtom"), c = Z;var e = O();return e || U("classRanges"), b = a.range[0], "empty" === e.type ? [q(a, d, b, c)] : [q(a, d, b, c)].concat(e);
          }return d = R(), d || U("nonEmptyClassRangesNoDash"), [a].concat(d);
        }function Q() {
          var a = S();return a || U("classAtom"), w("]") ? [a] : P(a);
        }function R() {
          var a = S();return a || U("classAtom"), w("]") ? a : P(a);
        }function S() {
          return u("-") ? h("-") : T();
        }function T() {
          var a;return (a = y(/^[^\\\]-]/)) ? h(a[0]) : u("\\") ? (a = H(), a || U("classEscape"), G(a)) : void 0;
        }function U(b, c, d, e) {
          d = null == d ? Z : d, e = null == e ? d : e;var f = Math.max(0, d - 10),
              g = Math.min(e + 10, a.length),
              h = "    " + a.substring(f, g),
              i = "    " + new Array(d - f + 1).join(" ") + "^";throw SyntaxError(b + " at position " + d + (c ? ": " + c : "") + "\n" + h + "\n" + i);
        }var V = [],
            W = 0,
            X = !0,
            Y = -1 !== (b || "").indexOf("u"),
            Z = 0;"" === (a = String(a)) && (a = "(?:)");var $ = z();$.range[1] !== a.length && U("Could not parse entire input - got stuck", "", $.range[1]);for (var _ = 0; _ < V.length; _++) if (V[_] <= W) return Z = 0, X = !1, z();return $;
      }var b = { parse: a };void 0 !== c && c.exports ? c.exports = b : window.regjsparser = b;
    }();
  });a.registerDynamic("126", [], !0, function () {
    return { 75: 8490, 83: 383, 107: 8490, 115: 383, 181: 924, 197: 8491, 383: 83, 452: 453, 453: 452, 455: 456, 456: 455, 458: 459, 459: 458, 497: 498, 498: 497, 837: 8126, 914: 976, 917: 1013, 920: 1012, 921: 8126, 922: 1008, 924: 181, 928: 982, 929: 1009, 931: 962, 934: 981, 937: 8486, 962: 931, 976: 914, 977: 1012, 981: 934, 982: 928, 1008: 922, 1009: 929, 1012: [920, 977], 1013: 917, 7776: 7835, 7835: 7776, 8126: [837, 921], 8486: 937, 8490: 75, 8491: 197, 66560: 66600, 66561: 66601, 66562: 66602, 66563: 66603, 66564: 66604, 66565: 66605, 66566: 66606, 66567: 66607, 66568: 66608, 66569: 66609, 66570: 66610, 66571: 66611, 66572: 66612, 66573: 66613, 66574: 66614, 66575: 66615, 66576: 66616, 66577: 66617, 66578: 66618, 66579: 66619, 66580: 66620, 66581: 66621, 66582: 66622, 66583: 66623, 66584: 66624, 66585: 66625, 66586: 66626, 66587: 66627, 66588: 66628, 66589: 66629, 66590: 66630, 66591: 66631, 66592: 66632, 66593: 66633, 66594: 66634, 66595: 66635, 66596: 66636, 66597: 66637, 66598: 66638, 66599: 66639, 66600: 66560, 66601: 66561, 66602: 66562, 66603: 66563, 66604: 66564, 66605: 66565, 66606: 66566, 66607: 66567, 66608: 66568, 66609: 66569, 66610: 66570, 66611: 66571, 66612: 66572, 66613: 66573, 66614: 66574, 66615: 66575, 66616: 66576, 66617: 66577, 66618: 66578, 66619: 66579, 66620: 66580, 66621: 66581, 66622: 66582, 66623: 66583, 66624: 66584, 66625: 66585, 66626: 66586, 66627: 66587, 66628: 66588, 66629: 66589, 66630: 66590, 66631: 66591, 66632: 66592, 66633: 66593, 66634: 66594, 66635: 66595, 66636: 66596, 66637: 66597, 66638: 66598, 66639: 66599, 68736: 68800, 68737: 68801, 68738: 68802, 68739: 68803, 68740: 68804, 68741: 68805, 68742: 68806, 68743: 68807, 68744: 68808, 68745: 68809, 68746: 68810, 68747: 68811, 68748: 68812, 68749: 68813, 68750: 68814, 68751: 68815, 68752: 68816, 68753: 68817, 68754: 68818, 68755: 68819, 68756: 68820, 68757: 68821, 68758: 68822, 68759: 68823, 68760: 68824, 68761: 68825, 68762: 68826, 68763: 68827, 68764: 68828, 68765: 68829, 68766: 68830, 68767: 68831, 68768: 68832, 68769: 68833, 68770: 68834, 68771: 68835, 68772: 68836, 68773: 68837, 68774: 68838, 68775: 68839, 68776: 68840, 68777: 68841, 68778: 68842, 68779: 68843, 68780: 68844, 68781: 68845, 68782: 68846, 68783: 68847, 68784: 68848, 68785: 68849, 68786: 68850, 68800: 68736, 68801: 68737, 68802: 68738, 68803: 68739, 68804: 68740, 68805: 68741, 68806: 68742, 68807: 68743, 68808: 68744, 68809: 68745, 68810: 68746, 68811: 68747, 68812: 68748, 68813: 68749, 68814: 68750, 68815: 68751, 68816: 68752, 68817: 68753, 68818: 68754, 68819: 68755, 68820: 68756, 68821: 68757, 68822: 68758, 68823: 68759, 68824: 68760, 68825: 68761, 68826: 68762, 68827: 68763, 68828: 68764, 68829: 68765, 68830: 68766, 68831: 68767, 68832: 68768, 68833: 68769, 68834: 68770, 68835: 68771, 68836: 68772, 68837: 68773, 68838: 68774, 68839: 68775, 68840: 68776, 68841: 68777, 68842: 68778, 68843: 68779, 68844: 68780, 68845: 68781, 68846: 68782, 68847: 68783, 68848: 68784, 68849: 68785, 68850: 68786, 71840: 71872, 71841: 71873, 71842: 71874, 71843: 71875, 71844: 71876, 71845: 71877, 71846: 71878, 71847: 71879, 71848: 71880, 71849: 71881, 71850: 71882, 71851: 71883, 71852: 71884, 71853: 71885, 71854: 71886, 71855: 71887, 71856: 71888, 71857: 71889, 71858: 71890, 71859: 71891, 71860: 71892, 71861: 71893, 71862: 71894, 71863: 71895, 71864: 71896, 71865: 71897, 71866: 71898, 71867: 71899, 71868: 71900, 71869: 71901, 71870: 71902, 71871: 71903, 71872: 71840, 71873: 71841, 71874: 71842, 71875: 71843, 71876: 71844, 71877: 71845, 71878: 71846, 71879: 71847, 71880: 71848, 71881: 71849, 71882: 71850, 71883: 71851, 71884: 71852, 71885: 71853, 71886: 71854, 71887: 71855, 71888: 71856, 71889: 71857, 71890: 71858, 71891: 71859, 71892: 71860, 71893: 71861, 71894: 71862, 71895: 71863, 71896: 71864, 71897: 71865, 71898: 71866, 71899: 71867, 71900: 71868, 71901: 71869, 71902: 71870, 71903: 71871 };
  }), a.registerDynamic("127", [], !0, function (a, b, c) {
    var d = this || self;!function (a) {
      var e = "object" == typeof b && b,
          f = "object" == typeof c && c && c.exports == e && c,
          g = "object" == typeof d && d;g.global !== g && g.window !== g || (a = g);var h = { rangeOrder: "A range’s `stop` value must be greater than or equal to the `start` value.", codePointRange: "Invalid code point value. Code points range from U+000000 to U+10FFFF." },
          i = 55296,
          j = 56319,
          k = 56320,
          l = 57343,
          m = /\\x00([^0123456789]|$)/g,
          n = {},
          o = n.hasOwnProperty,
          p = function (a, b) {
        var c;for (c in b) o.call(b, c) && (a[c] = b[c]);return a;
      },
          q = function (a, b) {
        for (var c = -1, d = a.length; ++c < d;) b(a[c], c);
      },
          r = n.toString,
          s = function (a) {
        return "[object Array]" == r.call(a);
      },
          t = function (a) {
        return "number" == typeof a || "[object Number]" == r.call(a);
      },
          u = "0000",
          v = function (a, b) {
        var c = String(a);return c.length < b ? (u + c).slice(-b) : c;
      },
          w = function (a) {
        return Number(a).toString(16).toUpperCase();
      },
          x = [].slice,
          y = function (a) {
        for (var b, c = -1, d = a.length, e = d - 1, f = [], g = !0, h = 0; ++c < d;) if (b = a[c], g) f.push(b), h = b, g = !1;else if (b == h + 1) {
          if (c != e) {
            h = b;continue;
          }g = !0, f.push(b + 1);
        } else f.push(h + 1, b), h = b;return g || f.push(b + 1), f;
      },
          z = function (a, b) {
        for (var c, d, e = 0, f = a.length; e < f;) {
          if (c = a[e], d = a[e + 1], b >= c && b < d) return b == c ? d == c + 1 ? (a.splice(e, 2), a) : (a[e] = b + 1, a) : b == d - 1 ? (a[e + 1] = b, a) : (a.splice(e, 2, c, b, b + 1, d), a);e += 2;
        }return a;
      },
          A = function (a, b, c) {
        if (c < b) throw Error(h.rangeOrder);for (var d, e, f = 0; f < a.length;) {
          if (d = a[f], e = a[f + 1] - 1, d > c) return a;if (b <= d && c >= e) a.splice(f, 2);else {
            if (b >= d && c < e) return b == d ? (a[f] = c + 1, a[f + 1] = e + 1, a) : (a.splice(f, 2, d, b, c + 1, e + 1), a);if (b >= d && b <= e) a[f + 1] = b;else if (c >= d && c <= e) return a[f] = c + 1, a;f += 2;
          }
        }return a;
      },
          B = function (a, b) {
        var c,
            d,
            e = 0,
            f = null,
            g = a.length;if (b < 0 || b > 1114111) throw RangeError(h.codePointRange);for (; e < g;) {
          if (c = a[e], d = a[e + 1], b >= c && b < d) return a;if (b == c - 1) return a[e] = b, a;if (c > b) return a.splice(null != f ? f + 2 : 0, 0, b, b + 1), a;if (b == d) return b + 1 == a[e + 2] ? (a.splice(e, 4, c, a[e + 3]), a) : (a[e + 1] = b + 1, a);f = e, e += 2;
        }return a.push(b, b + 1), a;
      },
          C = function (a, b) {
        for (var c, d, e = 0, f = a.slice(), g = b.length; e < g;) c = b[e], d = b[e + 1] - 1, f = c == d ? B(f, c) : E(f, c, d), e += 2;return f;
      },
          D = function (a, b) {
        for (var c, d, e = 0, f = a.slice(), g = b.length; e < g;) c = b[e], d = b[e + 1] - 1, f = c == d ? z(f, c) : A(f, c, d), e += 2;return f;
      },
          E = function (a, b, c) {
        if (c < b) throw Error(h.rangeOrder);if (b < 0 || b > 1114111 || c < 0 || c > 1114111) throw RangeError(h.codePointRange);for (var d, e, f = 0, g = !1, i = a.length; f < i;) {
          if (d = a[f], e = a[f + 1], g) {
            if (d == c + 1) return a.splice(f - 1, 2), a;if (d > c) return a;d >= b && d <= c && (e > b && e - 1 <= c ? (a.splice(f, 2), f -= 2) : (a.splice(f - 1, 2), f -= 2));
          } else {
            if (d == c + 1) return a[f] = b, a;if (d > c) return a.splice(f, 0, b, c + 1), a;if (b >= d && b < e && c + 1 <= e) return a;b >= d && b < e || e == b ? (a[f + 1] = c + 1, g = !0) : b <= d && c + 1 >= e && (a[f] = b, a[f + 1] = c + 1, g = !0);
          }f += 2;
        }return g || a.push(b, c + 1), a;
      },
          F = function (a, b) {
        var c = 0,
            d = a.length,
            e = a[c],
            f = a[d - 1];if (d >= 2 && (b < e || b > f)) return !1;for (; c < d;) {
          if (e = a[c], f = a[c + 1], b >= e && b < f) return !0;c += 2;
        }return !1;
      },
          G = function (a, b) {
        for (var c, d = 0, e = b.length, f = []; d < e;) c = b[d], F(a, c) && f.push(c), ++d;return y(f);
      },
          H = function (a) {
        return !a.length;
      },
          I = function (a) {
        return 2 == a.length && a[0] + 1 == a[1];
      },
          J = function (a) {
        for (var b, c, d = 0, e = [], f = a.length; d < f;) {
          for (b = a[d], c = a[d + 1]; b < c;) e.push(b), ++b;d += 2;
        }return e;
      },
          K = Math.floor,
          L = function (a) {
        return parseInt(K((a - 65536) / 1024) + i, 10);
      },
          M = function (a) {
        return parseInt((a - 65536) % 1024 + k, 10);
      },
          N = String.fromCharCode,
          O = function (a) {
        return 9 == a ? "\\t" : 10 == a ? "\\n" : 12 == a ? "\\f" : 13 == a ? "\\r" : 92 == a ? "\\\\" : 36 == a || a >= 40 && a <= 43 || 45 == a || 46 == a || 63 == a || a >= 91 && a <= 94 || a >= 123 && a <= 125 ? "\\" + N(a) : a >= 32 && a <= 126 ? N(a) : a <= 255 ? "\\x" + v(w(a), 2) : "\\u" + v(w(a), 4);
      },
          P = function (a) {
        return a <= 65535 ? O(a) : "\\u{" + a.toString(16).toUpperCase() + "}";
      },
          Q = function (a) {
        var b,
            c = a.length,
            d = a.charCodeAt(0);return d >= i && d <= j && c > 1 ? (b = a.charCodeAt(1), 1024 * (d - i) + b - k + 65536) : d;
      },
          R = function (a) {
        var b,
            c,
            d = "",
            e = 0,
            f = a.length;if (I(a)) return O(a[0]);for (; e < f;) b = a[e], c = a[e + 1] - 1, d += b == c ? O(b) : b + 1 == c ? O(b) + O(c) : O(b) + "-" + O(c), e += 2;return "[" + d + "]";
      },
          S = function (a) {
        var b,
            c,
            d = "",
            e = 0,
            f = a.length;if (I(a)) return P(a[0]);for (; e < f;) b = a[e], c = a[e + 1] - 1, d += b == c ? P(b) : b + 1 == c ? P(b) + P(c) : P(b) + "-" + P(c), e += 2;return "[" + d + "]";
      },
          T = function (a) {
        for (var b, c, d = [], e = [], f = [], g = [], h = 0, m = a.length; h < m;) b = a[h], c = a[h + 1] - 1, b < i ? (c < i && f.push(b, c + 1), c >= i && c <= j && (f.push(b, i), d.push(i, c + 1)), c >= k && c <= l && (f.push(b, i), d.push(i, j + 1), e.push(k, c + 1)), c > l && (f.push(b, i), d.push(i, j + 1), e.push(k, l + 1), c <= 65535 ? f.push(l + 1, c + 1) : (f.push(l + 1, 65536), g.push(65536, c + 1)))) : b >= i && b <= j ? (c >= i && c <= j && d.push(b, c + 1), c >= k && c <= l && (d.push(b, j + 1), e.push(k, c + 1)), c > l && (d.push(b, j + 1), e.push(k, l + 1), c <= 65535 ? f.push(l + 1, c + 1) : (f.push(l + 1, 65536), g.push(65536, c + 1)))) : b >= k && b <= l ? (c >= k && c <= l && e.push(b, c + 1), c > l && (e.push(b, l + 1), c <= 65535 ? f.push(l + 1, c + 1) : (f.push(l + 1, 65536), g.push(65536, c + 1)))) : b > l && b <= 65535 ? c <= 65535 ? f.push(b, c + 1) : (f.push(b, 65536), g.push(65536, c + 1)) : g.push(b, c + 1), h += 2;return { loneHighSurrogates: d, loneLowSurrogates: e, bmp: f, astral: g };
      },
          U = function (a) {
        for (var b, c, d, e, f, g, h = [], i = [], j = !1, k = -1, l = a.length; ++k < l;) if (b = a[k], c = a[k + 1]) {
          for (d = b[0], e = b[1], f = c[0], g = c[1], i = e; f && d[0] == f[0] && d[1] == f[1];) i = I(g) ? B(i, g[0]) : E(i, g[0], g[1] - 1), ++k, b = a[k], d = b[0], e = b[1], c = a[k + 1], f = c && c[0], g = c && c[1], j = !0;h.push([d, j ? i : e]), j = !1;
        } else h.push(b);return V(h);
      },
          V = function (a) {
        if (1 == a.length) return a;for (var b = -1, c = -1; ++b < a.length;) {
          var d = a[b],
              e = d[1],
              f = e[0],
              g = e[1];for (c = b; ++c < a.length;) {
            var h = a[c],
                i = h[1],
                j = i[0],
                k = i[1];f == j && g == k && (I(h[0]) ? d[0] = B(d[0], h[0][0]) : d[0] = E(d[0], h[0][0], h[0][1] - 1), a.splice(c, 1), --c);
          }
        }return a;
      },
          W = function (a) {
        if (!a.length) return [];for (var b, c, d, e, f, g, h = 0, i = [], j = a.length; h < j;) {
          b = a[h], c = a[h + 1] - 1, d = L(b), e = M(b), f = L(c), g = M(c);var m = e == k,
              n = g == l,
              o = !1;d == f || m && n ? (i.push([[d, f + 1], [e, g + 1]]), o = !0) : i.push([[d, d + 1], [e, l + 1]]), !o && d + 1 < f && (n ? (i.push([[d + 1, f + 1], [k, g + 1]]), o = !0) : i.push([[d + 1, f], [k, l + 1]])), o || i.push([[f, f + 1], [k, g + 1]]), h += 2;
        }return U(i);
      },
          X = function (a) {
        var b = [];return q(a, function (a) {
          var c = a[0],
              d = a[1];b.push(R(c) + R(d));
        }), b.join("|");
      },
          Y = function (a, b, c) {
        if (c) return S(a);var d = [],
            e = T(a),
            f = e.loneHighSurrogates,
            g = e.loneLowSurrogates,
            h = e.bmp,
            i = e.astral,
            j = !H(f),
            k = !H(g),
            l = W(i);return b && (h = C(h, f), j = !1, h = C(h, g), k = !1), H(h) || d.push(R(h)), l.length && d.push(X(l)), j && d.push(R(f) + "(?![\\uDC00-\\uDFFF])"), k && d.push("(?:[^\\uD800-\\uDBFF]|^)" + R(g)), d.join("|");
      },
          Z = function (a) {
        return arguments.length > 1 && (a = x.call(arguments)), this instanceof Z ? (this.data = [], a ? this.add(a) : this) : new Z().add(a);
      };Z.version = "1.3.2";var $ = Z.prototype;p($, { add: function (a) {
          var b = this;return null == a ? b : a instanceof Z ? (b.data = C(b.data, a.data), b) : (arguments.length > 1 && (a = x.call(arguments)), s(a) ? (q(a, function (a) {
            b.add(a);
          }), b) : (b.data = B(b.data, t(a) ? a : Q(a)), b));
        }, remove: function (a) {
          var b = this;return null == a ? b : a instanceof Z ? (b.data = D(b.data, a.data), b) : (arguments.length > 1 && (a = x.call(arguments)), s(a) ? (q(a, function (a) {
            b.remove(a);
          }), b) : (b.data = z(b.data, t(a) ? a : Q(a)), b));
        }, addRange: function (a, b) {
          var c = this;return c.data = E(c.data, t(a) ? a : Q(a), t(b) ? b : Q(b)), c;
        }, removeRange: function (a, b) {
          var c = this,
              d = t(a) ? a : Q(a),
              e = t(b) ? b : Q(b);return c.data = A(c.data, d, e), c;
        }, intersection: function (a) {
          var b = this,
              c = a instanceof Z ? J(a.data) : a;return b.data = G(b.data, c), b;
        }, contains: function (a) {
          return F(this.data, t(a) ? a : Q(a));
        }, clone: function () {
          var a = new Z();return a.data = this.data.slice(0), a;
        }, toString: function (a) {
          var b = Y(this.data, !!a && a.bmpOnly, !!a && a.hasUnicodeFlag);return b ? b.replace(m, "\\0$1") : "[]";
        }, toRegExp: function (a) {
          var b = this.toString(a && -1 != a.indexOf("u") ? { hasUnicodeFlag: !0 } : null);return RegExp(b, a || "");
        }, valueOf: function () {
          return J(this.data);
        } }), $.toArray = $.valueOf, e && !e.nodeType ? f ? f.exports = Z : e.regenerate = Z : a.regenerate = Z;
    }(b);
  }), a.registerDynamic("128", ["127"], !0, function (a, b, c) {
    var d = (this || self, a("127"));b.REGULAR = { d: d().addRange(48, 57), D: d().addRange(0, 47).addRange(58, 65535), s: d(32, 160, 5760, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233), S: d().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 65535), w: d(95).addRange(48, 57).addRange(65, 90).addRange(97, 122), W: d(96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 65535) }, b.UNICODE = { d: d().addRange(48, 57), D: d().addRange(0, 47).addRange(58, 1114111), s: d(32, 160, 5760, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233), S: d().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 1114111), w: d(95).addRange(48, 57).addRange(65, 90).addRange(97, 122), W: d(96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 1114111) }, b.UNICODE_IGNORE_CASE = { d: d().addRange(48, 57), D: d().addRange(0, 47).addRange(58, 1114111), s: d(32, 160, 5760, 8239, 8287, 12288, 65279).addRange(9, 13).addRange(8192, 8202).addRange(8232, 8233), S: d().addRange(0, 8).addRange(14, 31).addRange(33, 159).addRange(161, 5759).addRange(5761, 8191).addRange(8203, 8231).addRange(8234, 8238).addRange(8240, 8286).addRange(8288, 12287).addRange(12289, 65278).addRange(65280, 1114111), w: d(95, 383, 8490).addRange(48, 57).addRange(65, 90).addRange(97, 122), W: d(75, 83, 96).addRange(0, 47).addRange(58, 64).addRange(91, 94).addRange(123, 1114111) };
  }), a.registerDynamic("129", ["124", "125", "127", "126", "128"], !0, function (a, b, c) {
    function d(a) {
      return x ? w ? p.UNICODE_IGNORE_CASE[a] : p.UNICODE[a] : p.REGULAR[a];
    }function e(a, b) {
      return r.call(a, b);
    }function f(a, b) {
      for (var c in b) a[c] = b[c];
    }function g(a, b) {
      if (b) {
        var c = m(b, "");switch (c.type) {case "characterClass":case "group":case "value":
            break;default:
            c = h(c, b);}f(a, c);
      }
    }function h(a, b) {
      return { type: "group", behavior: "ignore", body: [a], raw: "(?:" + b + ")" };
    }function i(a) {
      return !!e(o, a) && o[a];
    }function j(a) {
      var b = n();a.body.forEach(function (a) {
        switch (a.type) {case "value":
            if (b.add(a.codePoint), w && x) {
              var c = i(a.codePoint);c && b.add(c);
            }break;case "characterClassRange":
            var e = a.min.codePoint,
                f = a.max.codePoint;b.addRange(e, f), w && x && b.iuAddRange(e, f);break;case "characterClassEscape":
            b.add(d(a.value));break;default:
            throw Error("Unknown term type: " + a.type);}
      });return a.negative && (b = (x ? s : t).clone().remove(b)), g(a, b.toString()), a;
    }function k(a) {
      switch (a.type) {case "dot":
          g(a, (x ? u : v).toString());break;case "characterClass":
          a = j(a);break;case "characterClassEscape":
          g(a, d(a.value).toString());break;case "alternative":case "disjunction":case "group":case "quantifier":
          a.body = a.body.map(k);break;case "value":
          var b = a.codePoint,
              c = n(b);if (w && x) {
            var e = i(b);e && c.add(e);
          }g(a, c.toString());break;case "anchor":case "empty":case "group":case "reference":
          break;default:
          throw Error("Unknown term type: " + a.type);}return a;
    }var l = (this || self, a("124").generate),
        m = a("125").parse,
        n = a("127"),
        o = a("126"),
        p = a("128"),
        q = {},
        r = q.hasOwnProperty,
        s = n().addRange(0, 1114111),
        t = n().addRange(0, 65535),
        u = s.clone().remove(10, 13, 8232, 8233),
        v = u.clone().intersection(t);n.prototype.iuAddRange = function (a, b) {
      var c = this;do {
        var d = i(a);d && c.add(d);
      } while (++a <= b);return c;
    };var w = !1,
        x = !1;c.exports = function (a, b) {
      var c = m(a, b);return w = !!b && b.indexOf("i") > -1, x = !!b && b.indexOf("u") > -1, f(c, k(c)), l(c);
    };
  }), a.registerDynamic("12a", [], !0, function (a, b, c) {
    function d(a, b, c, d) {
      for (var e = c - 1, f = a.length; ++e < f;) if (d(a[e], b)) return e;return -1;
    }this || self;c.exports = d;
  }), a.registerDynamic("12b", ["4e", "12c", "12a", "97", "c1"], !0, function (a, b, c) {
    function d(a, b, c, d) {
      var j = d ? g : f,
          l = -1,
          m = b.length,
          n = a;for (a === b && (b = i(b)), c && (n = e(a, h(c))); ++l < m;) for (var o = 0, p = b[l], q = c ? c(p) : p; (o = j(n, q, o, d)) > -1;) n !== a && k.call(n, o, 1), k.call(a, o, 1);return a;
    }var e = (this || self, a("4e")),
        f = a("12c"),
        g = a("12a"),
        h = a("97"),
        i = a("c1"),
        j = Array.prototype,
        k = j.splice;c.exports = d;
  }), a.registerDynamic("12d", ["12b"], !0, function (a, b, c) {
    function d(a, b) {
      return a && a.length && b && b.length ? e(a, b) : a;
    }var e = (this || self, a("12b"));c.exports = d;
  }), a.registerDynamic("12e", ["99", "12d"], !0, function (a, b, c) {
    var d = (this || self, a("99")),
        e = a("12d"),
        f = d(e);c.exports = f;
  }), a.registerDynamic("123", ["12e", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b) {
      return k.isRegExpLiteral(a) && a.flags.indexOf(b) >= 0;
    }function g(a, b) {
      var c = a.flags.split("");a.flags.indexOf(b) < 0 || ((0, i.default)(c, b), a.flags = c.join(""));
    }this || self;b.__esModule = !0, b.is = f, b.pullFlag = g;var h = a("12e"),
        i = e(h),
        j = a("11"),
        k = d(j);
  }), a.registerDynamic("12f", ["129", "123"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.default = function () {
      return { visitor: { RegExpLiteral: function (a) {
            var b = a.node;i.is(b, "u") && (b.pattern = (0, g.default)(b.pattern, b.flags), i.pullFlag(b, "u"));
          } } };
    };var f = a("129"),
        g = e(f),
        h = a("123"),
        i = d(h);c.exports = b.default;
  }), a.registerDynamic("130", ["17"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e);b.default = function (a) {
      var b = a.messages;return { visitor: { Scope: function (a) {
            var c = a.scope;for (var d in c.bindings) {
              var e = c.bindings[d];if ("const" === e.kind || "module" === e.kind) for (var g = e.constantViolations, h = Array.isArray(g), i = 0, g = h ? g : (0, f.default)(g);;) {
                var j;if (h) {
                  if (i >= g.length) break;j = g[i++];
                } else {
                  if (i = g.next(), i.done) break;j = i.value;
                }var k = j;throw k.buildCodeFrameError(b.get("readOnly", d));
              }
            }
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("131", ["17"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("17"),
        f = d(e);b.default = function (a) {
      function b(a, b, c) {
        return c.opts.loose && !e.isIdentifier(a.argument, { name: "arguments" }) ? a.argument : b.toArray(a.argument, !0);
      }function c(a) {
        for (var b = 0; b < a.length; b++) if (e.isSpreadElement(a[b])) return !0;return !1;
      }function d(a, c, d) {
        function g() {
          i.length && (h.push(e.arrayExpression(i)), i = []);
        }for (var h = [], i = [], j = a, k = Array.isArray(j), l = 0, j = k ? j : (0, f.default)(j);;) {
          var m;if (k) {
            if (l >= j.length) break;m = j[l++];
          } else {
            if (l = j.next(), l.done) break;m = l.value;
          }var n = m;e.isSpreadElement(n) ? (g(), h.push(b(n, c, d))) : i.push(n);
        }return g(), h;
      }var e = a.types;return { visitor: { ArrayExpression: function (a, b) {
            var f = a.node,
                g = a.scope,
                h = f.elements;if (c(h)) {
              var i = d(h, g, b),
                  j = i.shift();e.isArrayExpression(j) || (i.unshift(j), j = e.arrayExpression([])), a.replaceWith(e.callExpression(e.memberExpression(j, e.identifier("concat")), i));
            }
          }, CallExpression: function (a, b) {
            var f = a.node,
                g = a.scope,
                h = f.arguments;if (c(h)) {
              var i = a.get("callee");if (!i.isSuper()) {
                var j = e.identifier("undefined");f.arguments = [];var k = void 0;k = 1 === h.length && "arguments" === h[0].argument.name ? [h[0].argument] : d(h, g, b);var l = k.shift();k.length ? f.arguments.push(e.callExpression(e.memberExpression(l, e.identifier("concat")), k)) : f.arguments.push(l);var m = f.callee;if (i.isMemberExpression()) {
                  var n = g.maybeGenerateMemoised(m.object);n ? (m.object = e.assignmentExpression("=", n, m.object), j = n) : j = m.object, e.appendToMemberExpression(m, e.identifier("apply"));
                } else f.callee = e.memberExpression(f.callee, e.identifier("apply"));e.isSuper(j) && (j = e.thisExpression()), f.arguments.unshift(j);
              }
            }
          }, NewExpression: function (a, b) {
            var f = a.node,
                g = a.scope,
                h = f.arguments;if (c(h)) {
              var i = d(h, g, b),
                  j = e.arrayExpression([e.nullLiteral()]);h = e.callExpression(e.memberExpression(j, e.identifier("concat")), i), a.replaceWith(e.newExpression(e.callExpression(e.memberExpression(e.memberExpression(e.memberExpression(e.identifier("Function"), e.identifier("prototype")), e.identifier("bind")), e.identifier("apply")), [f.callee, h]), []));
            }
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("132", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }this || self;b.__esModule = !0, b.visitor = void 0;var e = a("11"),
        f = d(e);b.visitor = { Function: function (a) {
        for (var b = a.get("params"), c = f.isRestElement(b[b.length - 1]) ? 1 : 0, d = b.length - c, e = 0; e < d; e++) {
          var g = b[e];if (g.isArrayPattern() || g.isObjectPattern()) {
            var h = a.scope.generateUidIdentifier("ref"),
                i = f.variableDeclaration("let", [f.variableDeclarator(g.node, h)]);i._blockHoist = d - e, a.ensureBlock(), a.get("body").unshiftContainer("body", i), g.replaceWith(h);
          }
        }
      } };
  }), a.registerDynamic("11c", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }this || self;b.__esModule = !0, b.default = function (a) {
      for (var b = a.params, c = 0; c < b.length; c++) {
        var d = b[c];if (f.isAssignmentPattern(d) || f.isRestElement(d)) return c;
      }return b.length;
    };var e = a("11"),
        f = d(e);c.exports = b.default;
  }), a.registerDynamic("e0", ["17", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var f = a("17"),
        g = e(f);b.default = function (a, b) {
      var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "var";a.traverse(j, { kind: c, emit: b });
    };var h = a("11"),
        i = d(h),
        j = { Scope: function (a, b) {
        "let" === b.kind && a.skip();
      }, Function: function (a) {
        a.skip();
      }, VariableDeclaration: function (a, b) {
        if (!b.kind || a.node.kind === b.kind) {
          for (var c = [], d = a.get("declarations"), e = void 0, f = d, h = Array.isArray(f), j = 0, f = h ? f : (0, g.default)(f);;) {
            var k;if (h) {
              if (j >= f.length) break;k = f[j++];
            } else {
              if (j = f.next(), j.done) break;k = j.value;
            }var l = k;e = l.node.id, l.node.init && c.push(i.expressionStatement(i.assignmentExpression("=", l.node.id, l.node.init)));for (var m in l.getBindingIdentifiers()) b.emit(i.identifier(m), m);
          }a.parentPath.isFor({ left: a.node }) ? a.replaceWith(e) : a.replaceWithMultiple(c);
        }
      } };c.exports = b.default;
  }), a.registerDynamic("133", ["e0", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.default = function (a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a.scope,
          c = a.node,
          d = i.functionExpression(null, [], c.body, c.generator, c.async),
          e = d,
          f = [];(0, g.default)(a, function (a) {
        return b.push({ id: a });
      });var h = { foundThis: !1, foundArguments: !1 };a.traverse(j, h), h.foundArguments && (e = i.memberExpression(d, i.identifier("apply")), f = [], h.foundThis && f.push(i.thisExpression()), h.foundArguments && (h.foundThis || f.push(i.nullLiteral()), f.push(i.identifier("arguments"))));var k = i.callExpression(e, f);return c.generator && (k = i.yieldExpression(k, !0)), i.returnStatement(k);
    };var f = a("e0"),
        g = e(f),
        h = a("11"),
        i = d(h),
        j = { enter: function (a, b) {
        a.isThisExpression() && (b.foundThis = !0), a.isReferencedIdentifier({ name: "arguments" }) && (b.foundArguments = !0);
      }, Function: function (a) {
        a.skip();
      } };c.exports = b.default;
  }), a.registerDynamic("134", ["17", "11c", "133", "10", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      for (var b = a.params, c = Array.isArray(b), d = 0, b = c ? b : (0, i.default)(b);;) {
        var e;if (c) {
          if (d >= b.length) break;e = b[d++];
        } else {
          if (d = b.next(), d.done) break;e = d.value;
        }var f = e;if (!q.isIdentifier(f)) return !0;
      }return !1;
    }function g(a, b) {
      if (!a.hasOwnBinding(b.name)) return !0;var c = a.getOwnBinding(b.name),
          d = c.kind;return "param" === d || "local" === d;
    }this || self;b.__esModule = !0, b.visitor = void 0;var h = a("17"),
        i = e(h),
        j = a("11c"),
        k = e(j),
        l = a("133"),
        m = e(l),
        n = a("10"),
        o = e(n),
        p = a("11"),
        q = d(p),
        r = (0, o.default)("\n  let VARIABLE_NAME =\n    ARGUMENTS.length > ARGUMENT_KEY && ARGUMENTS[ARGUMENT_KEY] !== undefined ?\n      ARGUMENTS[ARGUMENT_KEY]\n    :\n      DEFAULT_VALUE;\n"),
        s = (0, o.default)("\n  let $0 = $1[$2];\n"),
        t = { ReferencedIdentifier: function (a, b) {
        var c = a.scope,
            d = a.node;"eval" !== d.name && g(c, d) || (b.iife = !0, a.stop());
      }, Scope: function (a) {
        a.skip();
      } };b.visitor = { Function: function (a) {
        function b(a, b, d) {
          var e = r({ VARIABLE_NAME: a, DEFAULT_VALUE: b, ARGUMENT_KEY: q.numericLiteral(d), ARGUMENTS: i });e._blockHoist = c.params.length - d, h.push(e);
        }var c = a.node,
            d = a.scope;if (f(c)) {
          a.ensureBlock();var e = { iife: !1, scope: d },
              h = [],
              i = q.identifier("arguments");i._shadowedFunctionLiteral = a;for (var j = (0, k.default)(c), l = a.get("params"), n = 0; n < l.length; n++) {
            var o = l[n];if (o.isAssignmentPattern()) {
              var p = o.get("left"),
                  u = o.get("right");if (n >= j || p.isPattern()) {
                var v = d.generateUidIdentifier("x");v._isDefaultPlaceholder = !0, c.params[n] = v;
              } else c.params[n] = p.node;e.iife || (u.isIdentifier() && !g(d, u.node) ? e.iife = !0 : u.traverse(t, e)), b(p.node, u.node, n);
            } else e.iife || o.isIdentifier() || o.traverse(t, e);
          }for (var w = j + 1; w < c.params.length; w++) {
            var x = c.params[w];if (!x._isDefaultPlaceholder) {
              var y = s(x, i, q.numericLiteral(w));y._blockHoist = c.params.length - w, h.push(y);
            }
          }c.params = c.params.slice(0, j), e.iife ? (h.push((0, m.default)(a, d)), a.set("body", q.blockStatement(h))) : a.get("body").unshiftContainer("body", h);
        }
      } };
  }), a.registerDynamic("135", ["17", "10", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      return n.isRestElement(a.params[a.params.length - 1]);
    }function g(a, b, c) {
      var d = void 0;d = n.isNumericLiteral(a.parent.property) ? n.numericLiteral(a.parent.property.value + c) : 0 === c ? a.parent.property : n.binaryExpression("+", a.parent.property, n.numericLiteral(c));var e = a.scope;if (e.isPure(d)) a.parentPath.replaceWith(p({ ARGUMENTS: b, INDEX: d }));else {
        var f = e.generateUidIdentifierBasedOnNode(d);e.push({ id: f, kind: "var" }), a.parentPath.replaceWith(q({ ARGUMENTS: b, INDEX: d, REF: f }));
      }
    }function h(a, b, c) {
      c ? a.parentPath.replaceWith(r({ ARGUMENTS: b, OFFSET: n.numericLiteral(c) })) : a.replaceWith(b);
    }this || self;b.__esModule = !0, b.visitor = void 0;var i = a("17"),
        j = e(i),
        k = a("10"),
        l = e(k),
        m = a("11"),
        n = d(m),
        o = (0, l.default)("\n  for (var LEN = ARGUMENTS.length,\n           ARRAY = Array(ARRAY_LEN),\n           KEY = START;\n       KEY < LEN;\n       KEY++) {\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\n  }\n"),
        p = (0, l.default)("\n  ARGUMENTS.length <= INDEX ? undefined : ARGUMENTS[INDEX]\n"),
        q = (0, l.default)("\n  REF = INDEX, ARGUMENTS.length <= REF ? undefined : ARGUMENTS[REF]\n"),
        r = (0, l.default)("\n  ARGUMENTS.length <= OFFSET ? 0 : ARGUMENTS.length - OFFSET\n"),
        s = { Scope: function (a, b) {
        a.scope.bindingIdentifierEquals(b.name, b.outerBinding) || a.skip();
      }, Flow: function (a) {
        a.isTypeCastExpression() || a.skip();
      }, "Function|ClassProperty": function (a, b) {
        var c = b.noOptimise;b.noOptimise = !0, a.traverse(s, b), b.noOptimise = c, a.skip();
      }, ReferencedIdentifier: function (a, b) {
        var c = a.node;if ("arguments" === c.name && (b.deopted = !0), c.name === b.name) if (b.noOptimise) b.deopted = !0;else {
          var d = a.parentPath;if ("params" === d.listKey && d.key < b.offset) return;if (d.isMemberExpression({ object: c })) {
            var e = d.parentPath,
                f = !b.deopted && !(e.isAssignmentExpression() && d.node === e.node.left || e.isLVal() || e.isForXStatement() || e.isUpdateExpression() || e.isUnaryExpression({ operator: "delete" }) || (e.isCallExpression() || e.isNewExpression()) && d.node === e.node.callee);if (f) if (d.node.computed) {
              if (d.get("property").isBaseType("number")) return void b.candidates.push({ cause: "indexGetter", path: a });
            } else if ("length" === d.node.property.name) return void b.candidates.push({ cause: "lengthGetter", path: a });
          }if (0 === b.offset && d.isSpreadElement()) {
            var g = d.parentPath;if (g.isCallExpression() && 1 === g.node.arguments.length) return void b.candidates.push({ cause: "argSpread", path: a });
          }b.references.push(a);
        }
      }, BindingIdentifier: function (a, b) {
        a.node.name === b.name && (b.deopted = !0);
      } };b.visitor = { Function: function (a) {
        var b = a.node,
            c = a.scope;if (f(b)) {
          var d = b.params.pop().argument,
              e = n.identifier("arguments");e._shadowedFunctionLiteral = a;var i = { references: [], offset: b.params.length, argumentsNode: e, outerBinding: c.getBindingIdentifier(d.name), candidates: [], name: d.name, deopted: !1 };if (a.traverse(s, i), i.deopted || i.references.length) {
            i.references = i.references.concat(i.candidates.map(function (a) {
              return a.path;
            })), i.deopted = i.deopted || !!b.shadow;var k = n.numericLiteral(b.params.length),
                l = c.generateUidIdentifier("key"),
                m = c.generateUidIdentifier("len"),
                p = l,
                q = m;b.params.length && (p = n.binaryExpression("-", l, k), q = n.conditionalExpression(n.binaryExpression(">", m, k), n.binaryExpression("-", m, k), n.numericLiteral(0)));var r = o({ ARGUMENTS: e, ARRAY_KEY: p, ARRAY_LEN: q, START: k, ARRAY: d, KEY: l, LEN: m });if (i.deopted) r._blockHoist = b.params.length + 1, b.body.body.unshift(r);else {
              r._blockHoist = 1;var t = a.getEarliestCommonAncestorFrom(i.references).getStatementParent();t.findParent(function (a) {
                if (!a.isLoop()) return a.isFunction();t = a;
              }), t.insertBefore(r);
            }
          } else for (var u = i.candidates, v = Array.isArray(u), w = 0, u = v ? u : (0, j.default)(u);;) {
            var x;if (v) {
              if (w >= u.length) break;x = u[w++];
            } else {
              if (w = u.next(), w.done) break;x = w.value;
            }var y = x,
                z = y.path,
                A = y.cause;switch (A) {case "indexGetter":
                g(z, e, i.offset);break;case "lengthGetter":
                h(z, e, i.offset);break;default:
                z.replaceWith(e);}
          }
        }
      } };
  }), a.registerDynamic("136", ["17", "d5", "132", "134", "135"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var f = a("17"),
        g = e(f);b.default = function () {
      return { visitor: h.visitors.merge([{ ArrowFunctionExpression: function (a) {
            for (var b = a.get("params"), c = b, d = Array.isArray(c), e = 0, c = d ? c : (0, g.default)(c);;) {
              var f;if (d) {
                if (e >= c.length) break;f = c[e++];
              } else {
                if (e = c.next(), e.done) break;f = e.value;
              }var h = f;if (h.isRestElement() || h.isAssignmentPattern()) {
                a.arrowFunctionToShadowed();break;
              }
            }
          } }, j.visitor, n.visitor, l.visitor]) };
    };var h = a("d5"),
        i = a("132"),
        j = d(i),
        k = a("134"),
        l = d(k),
        m = a("135"),
        n = d(m);c.exports = b.default;
  }), a.registerDynamic("137", ["1f", "17"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("1f"),
        f = d(e),
        g = a("17"),
        h = d(g);b.default = function (a) {
      function b(a) {
        for (var b = a.declarations, c = Array.isArray(b), e = 0, b = c ? b : (0, h.default)(b);;) {
          var f;if (c) {
            if (e >= b.length) break;f = b[e++];
          } else {
            if (e = b.next(), e.done) break;f = e.value;
          }var g = f;if (d.isPattern(g.id)) return !0;
        }return !1;
      }function c(a) {
        for (var b = a.elements, c = Array.isArray(b), e = 0, b = c ? b : (0, h.default)(b);;) {
          var f;if (c) {
            if (e >= b.length) break;f = b[e++];
          } else {
            if (e = b.next(), e.done) break;f = e.value;
          }var g = f;if (d.isRestElement(g)) return !0;
        }return !1;
      }var d = a.types,
          e = { ReferencedIdentifier: function (a, b) {
          b.bindings[a.node.name] && (b.deopt = !0, a.stop());
        } },
          g = function () {
        function a(b) {
          (0, f.default)(this, a), this.blockHoist = b.blockHoist, this.operator = b.operator, this.arrays = {}, this.nodes = b.nodes || [], this.scope = b.scope, this.file = b.file, this.kind = b.kind;
        }return a.prototype.buildVariableAssignment = function (a, b) {
          var c = this.operator;d.isMemberExpression(a) && (c = "=");var e = void 0;return e = c ? d.expressionStatement(d.assignmentExpression(c, a, b)) : d.variableDeclaration(this.kind, [d.variableDeclarator(a, b)]), e._blockHoist = this.blockHoist, e;
        }, a.prototype.buildVariableDeclaration = function (a, b) {
          var c = d.variableDeclaration("var", [d.variableDeclarator(a, b)]);return c._blockHoist = this.blockHoist, c;
        }, a.prototype.push = function (a, b) {
          d.isObjectPattern(a) ? this.pushObjectPattern(a, b) : d.isArrayPattern(a) ? this.pushArrayPattern(a, b) : d.isAssignmentPattern(a) ? this.pushAssignmentPattern(a, b) : this.nodes.push(this.buildVariableAssignment(a, b));
        }, a.prototype.toArray = function (a, b) {
          return this.file.opts.loose || d.isIdentifier(a) && this.arrays[a.name] ? a : this.scope.toArray(a, b);
        }, a.prototype.pushAssignmentPattern = function (a, b) {
          var c = this.scope.generateUidIdentifierBasedOnNode(b),
              e = d.variableDeclaration("var", [d.variableDeclarator(c, b)]);e._blockHoist = this.blockHoist, this.nodes.push(e);var f = d.conditionalExpression(d.binaryExpression("===", c, d.identifier("undefined")), a.right, c),
              g = a.left;if (d.isPattern(g)) {
            var h = d.expressionStatement(d.assignmentExpression("=", c, f));h._blockHoist = this.blockHoist, this.nodes.push(h), this.push(g, c);
          } else this.nodes.push(this.buildVariableAssignment(g, f));
        }, a.prototype.pushObjectRest = function (a, b, c, e) {
          for (var f = [], g = 0; g < a.properties.length; g++) {
            var h = a.properties[g];if (g >= e) break;if (!d.isRestProperty(h)) {
              var i = h.key;d.isIdentifier(i) && !h.computed && (i = d.stringLiteral(h.key.name)), f.push(i);
            }
          }f = d.arrayExpression(f);var j = d.callExpression(this.file.addHelper("objectWithoutProperties"), [b, f]);this.nodes.push(this.buildVariableAssignment(c.argument, j));
        }, a.prototype.pushObjectProperty = function (a, b) {
          d.isLiteral(a.key) && (a.computed = !0);var c = a.value,
              e = d.memberExpression(b, a.key, a.computed);d.isPattern(c) ? this.push(c, e) : this.nodes.push(this.buildVariableAssignment(c, e));
        }, a.prototype.pushObjectPattern = function (a, b) {
          if (a.properties.length || this.nodes.push(d.expressionStatement(d.callExpression(this.file.addHelper("objectDestructuringEmpty"), [b]))), a.properties.length > 1 && !this.scope.isStatic(b)) {
            var c = this.scope.generateUidIdentifierBasedOnNode(b);this.nodes.push(this.buildVariableDeclaration(c, b)), b = c;
          }for (var e = 0; e < a.properties.length; e++) {
            var f = a.properties[e];d.isRestProperty(f) ? this.pushObjectRest(a, b, f, e) : this.pushObjectProperty(f, b);
          }
        }, a.prototype.canUnpackArrayPattern = function (a, b) {
          if (!d.isArrayExpression(b)) return !1;if (!(a.elements.length > b.elements.length)) {
            if (a.elements.length < b.elements.length && !c(a)) return !1;for (var f = a.elements, g = Array.isArray(f), i = 0, f = g ? f : (0, h.default)(f);;) {
              var j;if (g) {
                if (i >= f.length) break;j = f[i++];
              } else {
                if (i = f.next(), i.done) break;j = i.value;
              }var k = j;if (!k) return !1;if (d.isMemberExpression(k)) return !1;
            }for (var l = b.elements, m = Array.isArray(l), n = 0, l = m ? l : (0, h.default)(l);;) {
              var o;if (m) {
                if (n >= l.length) break;o = l[n++];
              } else {
                if (n = l.next(), n.done) break;o = n.value;
              }var p = o;if (d.isSpreadElement(p)) return !1;if (d.isCallExpression(p)) return !1;if (d.isMemberExpression(p)) return !1;
            }var q = d.getBindingIdentifiers(a),
                r = { deopt: !1, bindings: q };return this.scope.traverse(b, e, r), !r.deopt;
          }
        }, a.prototype.pushUnpackedArrayPattern = function (a, b) {
          for (var c = 0; c < a.elements.length; c++) {
            var e = a.elements[c];d.isRestElement(e) ? this.push(e.argument, d.arrayExpression(b.elements.slice(c))) : this.push(e, b.elements[c]);
          }
        }, a.prototype.pushArrayPattern = function (a, b) {
          if (a.elements) {
            if (this.canUnpackArrayPattern(a, b)) return this.pushUnpackedArrayPattern(a, b);var e = !c(a) && a.elements.length,
                f = this.toArray(b, e);d.isIdentifier(f) ? b = f : (b = this.scope.generateUidIdentifierBasedOnNode(b), this.arrays[b.name] = !0, this.nodes.push(this.buildVariableDeclaration(b, f)));for (var g = 0; g < a.elements.length; g++) {
              var h = a.elements[g];if (h) {
                var i = void 0;d.isRestElement(h) ? (i = this.toArray(b), i = d.callExpression(d.memberExpression(i, d.identifier("slice")), [d.numericLiteral(g)]), h = h.argument) : i = d.memberExpression(b, d.numericLiteral(g), !0), this.push(h, i);
              }
            }
          }
        }, a.prototype.init = function (a, b) {
          if (!d.isArrayExpression(b) && !d.isMemberExpression(b)) {
            var c = this.scope.maybeGenerateMemoised(b, !0);c && (this.nodes.push(this.buildVariableDeclaration(c, b)), b = c);
          }return this.push(a, b), this.nodes;
        }, a;
      }();return { visitor: { ExportNamedDeclaration: function (a) {
            var c = a.get("declaration");if (c.isVariableDeclaration() && b(c.node)) {
              var e = [];for (var f in a.getOuterBindingIdentifiers(a)) {
                var g = d.identifier(f);e.push(d.exportSpecifier(g, g));
              }a.replaceWith(c.node), a.insertAfter(d.exportNamedDeclaration(null, e));
            }
          }, ForXStatement: function (a, b) {
            var c = a.node,
                e = a.scope,
                f = c.left;if (d.isPattern(f)) {
              var h = e.generateUidIdentifier("ref");return c.left = d.variableDeclaration("var", [d.variableDeclarator(h)]), a.ensureBlock(), void c.body.body.unshift(d.variableDeclaration("var", [d.variableDeclarator(f, h)]));
            }if (d.isVariableDeclaration(f)) {
              var i = f.declarations[0].id;if (d.isPattern(i)) {
                var j = e.generateUidIdentifier("ref");c.left = d.variableDeclaration(f.kind, [d.variableDeclarator(j, null)]);var k = [];new g({ kind: f.kind, file: b, scope: e, nodes: k }).init(i, j), a.ensureBlock();var l = c.body;l.body = k.concat(l.body);
              }
            }
          }, CatchClause: function (a, b) {
            var c = a.node,
                e = a.scope,
                f = c.param;if (d.isPattern(f)) {
              var h = e.generateUidIdentifier("ref");c.param = h;var i = [];new g({ kind: "let", file: b, scope: e, nodes: i }).init(f, h), c.body.body = i.concat(c.body.body);
            }
          }, AssignmentExpression: function (a, b) {
            var c = a.node,
                e = a.scope;if (d.isPattern(c.left)) {
              var f = [],
                  h = new g({ operator: c.operator, file: b, scope: e, nodes: f }),
                  i = void 0;!a.isCompletionRecord() && a.parentPath.isExpressionStatement() || (i = e.generateUidIdentifierBasedOnNode(c.right, "ref"), f.push(d.variableDeclaration("var", [d.variableDeclarator(i, c.right)])), d.isArrayExpression(c.right) && (h.arrays[i.name] = !0)), h.init(c.left, i || c.right), i && f.push(d.expressionStatement(i)), a.replaceWithMultiple(f);
            }
          }, VariableDeclaration: function (a, c) {
            var e = a.node,
                f = a.scope,
                i = a.parent;if (!d.isForXStatement(i) && i && a.container && b(e)) {
              for (var j = [], k = void 0, l = 0; l < e.declarations.length; l++) {
                k = e.declarations[l];var m = k.init,
                    n = k.id,
                    o = new g({ blockHoist: e._blockHoist, nodes: j, scope: f, kind: e.kind, file: c });d.isPattern(n) ? (o.init(n, m), +l != e.declarations.length - 1 && d.inherits(j[j.length - 1], k)) : j.push(d.inherits(o.buildVariableAssignment(k.id, k.init), k));
              }for (var p = [], q = j, r = Array.isArray(q), s = 0, q = r ? q : (0, h.default)(q);;) {
                var t;if (r) {
                  if (s >= q.length) break;t = q[s++];
                } else {
                  if (s = q.next(), s.done) break;t = s.value;
                }var u = t,
                    v = p[p.length - 1];if (v && d.isVariableDeclaration(v) && d.isVariableDeclaration(u) && v.kind === u.kind) {
                  var w;(w = v.declarations).push.apply(w, u.declarations);
                } else p.push(u);
              }for (var x = p, y = Array.isArray(x), z = 0, x = y ? x : (0, h.default)(x);;) {
                var A;if (y) {
                  if (z >= x.length) break;A = x[z++];
                } else {
                  if (z = x.next(), z.done) break;A = z.value;
                }var B = A;if (B.declarations) for (var C = B.declarations, D = Array.isArray(C), E = 0, C = D ? C : (0, h.default)(C);;) {
                  var F;if (D) {
                    if (E >= C.length) break;F = C[E++];
                  } else {
                    if (E = C.next(), E.done) break;F = E.value;
                  }var G = F,
                      H = G.id.name;f.bindings[H] && (f.bindings[H].kind = B.kind);
                }
              }1 === p.length ? a.replaceWith(p[0]) : a.replaceWithMultiple(p);
            }
          } } };
    }, c.exports = b.default;
  }), a.registerDynamic("138", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a, b) {
      var c = b._guessExecutionStatusRelativeTo(a);return "before" === c ? "inside" : "after" === c ? "outside" : "maybe";
    }function f(a, b) {
      return i.callExpression(b.addHelper("temporalRef"), [a, i.stringLiteral(a.name), b.addHelper("temporalUndefined")]);
    }function g(a, b, c) {
      var d = c.letReferences[a.name];return !!d && b.getBindingIdentifier(a.name) === d;
    }this || self;b.__esModule = !0, b.visitor = void 0;var h = a("11"),
        i = d(h);b.visitor = { ReferencedIdentifier: function (a, b) {
        if (this.file.opts.tdz) {
          var c = a.node,
              d = a.parent,
              h = a.scope;if (!a.parentPath.isFor({ left: c }) && g(c, h, b)) {
            var j = h.getBinding(c.name).path,
                k = e(a, j);if ("inside" !== k) if ("maybe" === k) {
              var l = f(c, b.file);if (j.parent._tdzThis = !0, a.skip(), a.parentPath.isUpdateExpression()) {
                if (d._ignoreBlockScopingTDZ) return;a.parentPath.replaceWith(i.sequenceExpression([l, d]));
              } else a.replaceWith(l);
            } else "outside" === k && a.replaceWith(i.throwStatement(i.inherits(i.newExpression(i.identifier("ReferenceError"), [i.stringLiteral(c.name + " is not defined - temporal dead zone")]), c)));
          }
        }
      }, AssignmentExpression: { exit: function (a, b) {
          if (this.file.opts.tdz) {
            var c = a.node;if (!c._ignoreBlockScopingTDZ) {
              var d = [],
                  e = a.getBindingIdentifiers();for (var h in e) {
                var j = e[h];g(j, a.scope, b) && d.push(f(j, b.file));
              }d.length && (c._ignoreBlockScopingTDZ = !0, d.push(c), a.replaceWithMultiple(d.map(i.expressionStatement)));
            }
          }
        } } };
  }), a.registerDynamic("139", ["bc", "c7", "bd"], !0, function (a, b, c) {
    var d = (this || self, a("bc")),
        e = a("c7"),
        f = a("bd"),
        g = e(function (a, b) {
      d(b, f(b), a);
    });c.exports = g;
  }), a.registerDynamic("13a", ["139"], !0, function (a, b, c) {
    this || self;c.exports = a("139");
  }), a.registerDynamic("13b", ["b6"], !0, function (a, b, c) {
    function d(a) {
      return e(a, f | g);
    }var e = (this || self, a("b6")),
        f = 1,
        g = 4;c.exports = d;
  }), a.registerDynamic("13c", [], !0, function (a, b, c) {
    function d(a, b) {
      return null != a && f.call(a, b);
    }var e = (this || self, Object.prototype),
        f = e.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("87", ["50", "94"], !0, function (a, b, c) {
    function d(a, b) {
      if (e(a)) return !1;var c = typeof a;return !("number" != c && "symbol" != c && "boolean" != c && null != a && !f(a)) || h.test(a) || !g.test(a) || null != b && a in Object(b);
    }var e = (this || self, a("50")),
        f = a("94"),
        g = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        h = /^\w*$/;c.exports = d;
  }), a.registerDynamic("13d", ["13e"], !0, function (a, b, c) {
    function d(a, b) {
      if ("function" != typeof a || null != b && "function" != typeof b) throw new TypeError(f);var c = function () {
        var d = arguments,
            e = b ? b.apply(this, d) : d[0],
            f = c.cache;if (f.has(e)) return f.get(e);var g = a.apply(this, d);return c.cache = f.set(e, g) || f, g;
      };return c.cache = new (d.Cache || e)(), c;
    }var e = (this || self, a("13e")),
        f = "Expected a function";d.Cache = e, c.exports = d;
  }), a.registerDynamic("13f", ["13d"], !0, function (a, b, c) {
    function d(a) {
      var b = e(a, function (a) {
        return c.size === f && c.clear(), a;
      }),
          c = b.cache;return b;
    }var e = (this || self, a("13d")),
        f = 500;c.exports = d;
  }), a.registerDynamic("140", ["13f"], !0, function (a, b, c) {
    var d = (this || self, a("13f")),
        e = /^\./,
        f = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
        g = /\\(\\)?/g,
        h = d(function (a) {
      var b = [];return e.test(a) && b.push(""), a.replace(f, function (a, c, d, e) {
        b.push(d ? e.replace(g, "$1") : c || a);
      }), b;
    });c.exports = h;
  }), a.registerDynamic("8a", ["50", "87", "140", "9f"], !0, function (a, b, c) {
    function d(a, b) {
      return e(a) ? a : f(a, b) ? [a] : g(h(a));
    }var e = (this || self, a("50")),
        f = a("87"),
        g = a("140"),
        h = a("9f");c.exports = d;
  }), a.registerDynamic("88", ["94"], !0, function (a, b, c) {
    function d(a) {
      if ("string" == typeof a || e(a)) return a;var b = a + "";return "0" == b && 1 / a == -f ? "-0" : b;
    }var e = (this || self, a("94")),
        f = 1 / 0;c.exports = d;
  }), a.registerDynamic("84", ["8a", "66", "50", "141", "142", "88"], !0, function (a, b, c) {
    function d(a, b, c) {
      b = e(b, a);for (var d = -1, k = b.length, l = !1; ++d < k;) {
        var m = j(b[d]);if (!(l = null != a && c(a, m))) break;a = a[m];
      }return l || ++d != k ? l : !!(k = null == a ? 0 : a.length) && i(k) && h(m, k) && (g(a) || f(a));
    }var e = (this || self, a("8a")),
        f = a("66"),
        g = a("50"),
        h = a("141"),
        i = a("142"),
        j = a("88");c.exports = d;
  }), a.registerDynamic("119", ["13c", "84"], !0, function (a, b, c) {
    function d(a, b) {
      return null != a && f(a, b, e);
    }var e = (this || self, a("13c")),
        f = a("84");c.exports = d;
  }), a.registerDynamic("143", ["1f", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var e = a("1f"),
        f = d(e),
        g = function a(b, c) {
      (0, f.default)(this, a), this.file = b, this.options = c;
    };b.default = g, c.exports = b.default;
  }), a.registerDynamic("144", [], !0, function (a, b, c) {
    function d(a) {
      if (a = String(a), !(a.length > 100)) {
        var b = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(a);if (b) {
          var c = parseFloat(b[1]);switch ((b[2] || "ms").toLowerCase()) {case "years":case "year":case "yrs":case "yr":case "y":
              return c * l;case "days":case "day":case "d":
              return c * k;case "hours":case "hour":case "hrs":case "hr":case "h":
              return c * j;case "minutes":case "minute":case "mins":case "min":case "m":
              return c * i;case "seconds":case "second":case "secs":case "sec":case "s":
              return c * h;case "milliseconds":case "millisecond":case "msecs":case "msec":case "ms":
              return c;default:
              return;}
        }
      }
    }function e(a) {
      return a >= k ? Math.round(a / k) + "d" : a >= j ? Math.round(a / j) + "h" : a >= i ? Math.round(a / i) + "m" : a >= h ? Math.round(a / h) + "s" : a + "ms";
    }function f(a) {
      return g(a, k, "day") || g(a, j, "hour") || g(a, i, "minute") || g(a, h, "second") || a + " ms";
    }function g(a, b, c) {
      if (!(a < b)) return a < 1.5 * b ? Math.floor(a / b) + " " + c : Math.ceil(a / b) + " " + c + "s";
    }var h = (this || self, 1e3),
        i = 60 * h,
        j = 60 * i,
        k = 24 * j,
        l = 365.25 * k;c.exports = function (a, b) {
      b = b || {};var c = typeof a;if ("string" === c && a.length > 0) return d(a);if ("number" === c && !1 === isNaN(a)) return b.long ? f(a) : e(a);throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(a));
    };
  }), a.registerDynamic("145", ["144"], !0, function (a, b, c) {
    function d(a) {
      var c,
          d = 0;for (c in a) d = (d << 5) - d + a.charCodeAt(c), d |= 0;return b.colors[Math.abs(d) % b.colors.length];
    }function e(a) {
      function c() {
        if (c.enabled) {
          var a = c,
              d = +new Date(),
              e = d - (j || d);a.diff = e, a.prev = j, a.curr = d, j = d;for (var f = new Array(arguments.length), g = 0; g < f.length; g++) f[g] = arguments[g];f[0] = b.coerce(f[0]), "string" != typeof f[0] && f.unshift("%O");var h = 0;f[0] = f[0].replace(/%([a-zA-Z%])/g, function (c, d) {
            if ("%%" === c) return c;h++;var e = b.formatters[d];if ("function" == typeof e) {
              var g = f[h];c = e.call(a, g), f.splice(h, 1), h--;
            }return c;
          }), b.formatArgs.call(a, f);(c.log || b.log || console.log.bind(console)).apply(a, f);
        }
      }return c.namespace = a, c.enabled = b.enabled(a), c.useColors = b.useColors(), c.color = d(a), "function" == typeof b.init && b.init(c), c;
    }function f(a) {
      b.save(a), b.names = [], b.skips = [];for (var c = ("string" == typeof a ? a : "").split(/[\s,]+/), d = c.length, e = 0; e < d; e++) c[e] && (a = c[e].replace(/\*/g, ".*?"), "-" === a[0] ? b.skips.push(new RegExp("^" + a.substr(1) + "$")) : b.names.push(new RegExp("^" + a + "$")));
    }function g() {
      b.enable("");
    }function h(a) {
      var c, d;for (c = 0, d = b.skips.length; c < d; c++) if (b.skips[c].test(a)) return !1;for (c = 0, d = b.names.length; c < d; c++) if (b.names[c].test(a)) return !0;return !1;
    }function i(a) {
      return a instanceof Error ? a.stack || a.message : a;
    }this || self;b = c.exports = e.debug = e.default = e, b.coerce = i, b.disable = g, b.enable = f, b.enabled = h, b.humanize = a("144"), b.names = [], b.skips = [], b.formatters = {};var j;
  }), a.registerDynamic("63", ["145"], !0, function (a, b, c) {
    function d() {
      return !("undefined" == typeof window || !window.process || "renderer" !== window.process.type) || "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }function e(a) {
      var c = this.useColors;if (a[0] = (c ? "%c" : "") + this.namespace + (c ? " %c" : " ") + a[0] + (c ? "%c " : " ") + "+" + b.humanize(this.diff), c) {
        var d = "color: " + this.color;a.splice(1, 0, d, "color: inherit");var e = 0,
            f = 0;a[0].replace(/%[a-zA-Z%]/g, function (a) {
          "%%" !== a && (e++, "%c" === a && (f = e));
        }), a.splice(f, 0, d);
      }
    }function f() {
      return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
    }function g(a) {
      try {
        null == a ? b.storage.removeItem("debug") : b.storage.debug = a;
      } catch (a) {}
    }function h() {
      var a;try {
        a = b.storage.debug;
      } catch (a) {}return !a && "undefined" != typeof process && "env" in process && (a = process.env.DEBUG), a;
    }function i() {
      try {
        return window.localStorage;
      } catch (a) {}
    }this || self;b = c.exports = a("145"), b.log = f, b.formatArgs = e, b.save = g, b.load = h, b.useColors = d, b.storage = "undefined" != typeof chrome && void 0 !== chrome.storage ? chrome.storage.local : i(), b.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"], b.formatters.j = function (a) {
      try {
        return JSON.stringify(a);
      } catch (a) {
        return "[UnexpectedJSONParseError]: " + a.message;
      }
    }, b.enable(h());
  }), a.registerDynamic("146", ["c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self, function (a, b, c, d, e, f, g, h) {
      if (!a) {
        var i;if (void 0 === b) i = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else {
          var j = [c, d, e, f, g, h],
              k = 0;i = new Error(b.replace(/%s/g, function () {
            return j[k++];
          })), i.name = "Invariant Violation";
        }throw i.framesToPop = 1, i;
      }
    });c.exports = d;
  }), a.registerDynamic("d6", ["147", "bc", "c7", "41", "148", "42"], !0, function (a, b, c) {
    var d = (this || self, a("147")),
        e = a("bc"),
        f = a("c7"),
        g = a("41"),
        h = a("148"),
        i = a("42"),
        j = Object.prototype,
        k = j.hasOwnProperty,
        l = f(function (a, b) {
      if (h(b) || g(b)) return void e(b, i(b), a);for (var c in b) k.call(b, c) && d(a, c, b[c]);
    });c.exports = l;
  }), a.registerDynamic("149", [], !0, function (a, b, c) {
    function d(a, b) {
      var c = "";if (!a || b < 1 || b > e) return c;do {
        b % 2 && (c += a), (b = f(b / 2)) && (a += a);
      } while (b);return c;
    }var e = (this || self, 9007199254740991),
        f = Math.floor;c.exports = d;
  }), a.registerDynamic("a2", ["65", "4e", "50", "94"], !0, function (a, b, c) {
    function d(a) {
      if ("string" == typeof a) return a;if (g(a)) return f(a, d) + "";if (h(a)) return k ? k.call(a) : "";var b = a + "";return "0" == b && 1 / a == -i ? "-0" : b;
    }var e = (this || self, a("65")),
        f = a("4e"),
        g = a("50"),
        h = a("94"),
        i = 1 / 0,
        j = e ? e.prototype : void 0,
        k = j ? j.toString : void 0;c.exports = d;
  }), a.registerDynamic("9f", ["a2"], !0, function (a, b, c) {
    function d(a) {
      return null == a ? "" : e(a);
    }var e = (this || self, a("a2"));c.exports = d;
  }), a.registerDynamic("61", ["149", "9a", "3e", "9f"], !0, function (a, b, c) {
    function d(a, b, c) {
      return b = (c ? f(a, b, c) : void 0 === b) ? 1 : g(b), e(h(a), b);
    }var e = (this || self, a("149")),
        f = a("9a"),
        g = a("3e"),
        h = a("9f");c.exports = d;
  }), a.registerDynamic("14a", ["1f", "14b", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var f = a("1f"),
        g = e(f),
        h = a("14b"),
        i = (e(h), a("11")),
        j = d(i),
        k = { ReferencedIdentifier: function (a, b) {
        var c = a.node;c.name === b.oldName && (c.name = b.newName);
      }, Scope: function (a, b) {
        a.scope.bindingIdentifierEquals(b.oldName, b.binding.identifier) || a.skip();
      }, "AssignmentExpression|Declaration": function (a, b) {
        var c = a.getOuterBindingIdentifiers();for (var d in c) d === b.oldName && (c[d].name = b.newName);
      } },
        l = function () {
      function a(b, c, d) {
        (0, g.default)(this, a), this.newName = d, this.oldName = c, this.binding = b;
      }return a.prototype.maybeConvertFromExportDeclaration = function (a) {
        var b = a.parentPath.isExportDeclaration() && a.parentPath;if (b) {
          var c = b.isExportDefaultDeclaration();c && (a.isFunctionDeclaration() || a.isClassDeclaration()) && !a.node.id && (a.node.id = a.scope.generateUidIdentifier("default"));var d = a.getOuterBindingIdentifiers(),
              e = [];for (var f in d) {
            var g = f === this.oldName ? this.newName : f,
                h = c ? "default" : f;e.push(j.exportSpecifier(j.identifier(g), j.identifier(h)));
          }if (e.length) {
            var i = j.exportNamedDeclaration(null, e);a.isFunctionDeclaration() && (i._blockHoist = 3), b.insertAfter(i), b.replaceWith(a.node);
          }
        }
      }, a.prototype.maybeConvertFromClassFunctionDeclaration = function (a) {}, a.prototype.maybeConvertFromClassFunctionExpression = function (a) {}, a.prototype.rename = function (a) {
        var b = this.binding,
            c = this.oldName,
            d = this.newName,
            e = b.scope,
            f = b.path,
            g = f.find(function (a) {
          return a.isDeclaration() || a.isFunctionExpression();
        });g && this.maybeConvertFromExportDeclaration(g), e.traverse(a || e.block, k, this), a || (e.removeOwnBinding(c), e.bindings[d] = b, this.binding.identifier.name = d), b.type, g && (this.maybeConvertFromClassFunctionDeclaration(g), this.maybeConvertFromClassFunctionExpression(g));
      }, a;
    }();b.default = l, c.exports = b.default;
  }), a.registerDynamic("9a", ["76", "41", "141", "85"], !0, function (a, b, c) {
    function d(a, b, c) {
      if (!h(c)) return !1;var d = typeof b;return !!("number" == d ? f(c) && g(b, c.length) : "string" == d && b in c) && e(c[b], a);
    }var e = (this || self, a("76")),
        f = a("41"),
        g = a("141"),
        h = a("85");c.exports = d;
  }), a.registerDynamic("c7", ["99", "9a"], !0, function (a, b, c) {
    function d(a) {
      return e(function (b, c) {
        var d = -1,
            e = c.length,
            g = e > 1 ? c[e - 1] : void 0,
            h = e > 2 ? c[2] : void 0;for (g = a.length > 3 && "function" == typeof g ? (e--, g) : void 0, h && f(c[0], c[1], h) && (g = e < 3 ? void 0 : g, e = 1), b = Object(b); ++d < e;) {
          var i = c[d];i && a(b, i, d, g);
        }return b;
      });
    }var e = (this || self, a("99")),
        f = a("9a");c.exports = d;
  }), a.registerDynamic("14c", ["bc", "c7", "bd"], !0, function (a, b, c) {
    var d = (this || self, a("bc")),
        e = a("c7"),
        f = a("bd"),
        g = e(function (a, b, c, e) {
      d(b, f(b), a, e);
    });c.exports = g;
  }), a.registerDynamic("14d", [], !0, function (a, b, c) {
    function d(a, b, c) {
      switch (c.length) {case 0:
          return a.call(b);case 1:
          return a.call(b, c[0]);case 2:
          return a.call(b, c[0], c[1]);case 3:
          return a.call(b, c[0], c[1], c[2]);}return a.apply(b, c);
    }this || self;c.exports = d;
  }), a.registerDynamic("14e", ["14d"], !0, function (a, b, c) {
    function d(a, b, c) {
      return b = f(void 0 === b ? a.length - 1 : b, 0), function () {
        for (var d = arguments, g = -1, h = f(d.length - b, 0), i = Array(h); ++g < h;) i[g] = d[b + g];g = -1;for (var j = Array(b + 1); ++g < b;) j[g] = d[g];return j[b] = c(i), e(a, this, j);
      };
    }var e = (this || self, a("14d")),
        f = Math.max;c.exports = d;
  }), a.registerDynamic("14f", [], !0, function (a, b, c) {
    function d(a) {
      return function () {
        return a;
      };
    }this || self;c.exports = d;
  }), a.registerDynamic("8d", [], !0, function (a, b, c) {
    function d(a) {
      return a;
    }this || self;c.exports = d;
  }), a.registerDynamic("150", ["14f", "151", "8d"], !0, function (a, b, c) {
    var d = (this || self, a("14f")),
        e = a("151"),
        f = a("8d"),
        g = e ? function (a, b) {
      return e(a, "toString", { configurable: !0, enumerable: !1, value: d(b), writable: !0 });
    } : f;c.exports = g;
  }), a.registerDynamic("152", [], !0, function (a, b, c) {
    function d(a) {
      var b = 0,
          c = 0;return function () {
        var d = g(),
            h = f - (d - c);if (c = d, h > 0) {
          if (++b >= e) return arguments[0];
        } else b = 0;return a.apply(void 0, arguments);
      };
    }var e = (this || self, 800),
        f = 16,
        g = Date.now;c.exports = d;
  }), a.registerDynamic("153", ["150", "152"], !0, function (a, b, c) {
    var d = (this || self, a("150")),
        e = a("152"),
        f = e(d);c.exports = f;
  }), a.registerDynamic("99", ["8d", "14e", "153"], !0, function (a, b, c) {
    function d(a, b) {
      return g(f(a, b, e), a + "");
    }var e = (this || self, a("8d")),
        f = a("14e"),
        g = a("153");c.exports = d;
  }), a.registerDynamic("154", ["76"], !0, function (a, b, c) {
    function d(a, b, c, d) {
      return void 0 === a || e(a, f[c]) && !g.call(d, c) ? b : a;
    }var e = (this || self, a("76")),
        f = Object.prototype,
        g = f.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("db", ["14d", "14c", "99", "154"], !0, function (a, b, c) {
    var d = (this || self, a("14d")),
        e = a("14c"),
        f = a("99"),
        g = a("154"),
        h = f(function (a) {
      return a.push(void 0, g), d(e, void 0, a);
    });c.exports = h;
  }), a.registerDynamic("14b", ["1f", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var e = a("1f"),
        f = d(e),
        g = function () {
      function a(b) {
        var c = b.existing,
            d = b.identifier,
            e = b.scope,
            g = b.path,
            h = b.kind;(0, f.default)(this, a), this.identifier = d, this.scope = e, this.path = g, this.kind = h, this.constantViolations = [], this.constant = !0, this.referencePaths = [], this.referenced = !1, this.references = 0, this.clearValue(), c && (this.constantViolations = [].concat(c.path, c.constantViolations, this.constantViolations));
      }return a.prototype.deoptValue = function () {
        this.clearValue(), this.hasDeoptedValue = !0;
      }, a.prototype.setValue = function (a) {
        this.hasDeoptedValue || (this.hasValue = !0, this.value = a);
      }, a.prototype.clearValue = function () {
        this.hasDeoptedValue = !1, this.hasValue = !1, this.value = null;
      }, a.prototype.reassign = function (a) {
        this.constant = !1, -1 === this.constantViolations.indexOf(a) && this.constantViolations.push(a);
      }, a.prototype.reference = function (a) {
        -1 === this.referencePaths.indexOf(a) && (this.referenced = !0, this.references++, this.referencePaths.push(a));
      }, a.prototype.dereference = function () {
        this.references--, this.referenced = !!this.references;
      }, a;
    }();b.default = g, c.exports = b.default;
  }), a.registerDynamic("155", [], !0, function () {
    return { builtin: { Array: !1, ArrayBuffer: !1, Boolean: !1, constructor: !1, DataView: !1, Date: !1, decodeURI: !1, decodeURIComponent: !1, encodeURI: !1, encodeURIComponent: !1, Error: !1, escape: !1, eval: !1, EvalError: !1, Float32Array: !1, Float64Array: !1, Function: !1, hasOwnProperty: !1, Infinity: !1, Int16Array: !1, Int32Array: !1, Int8Array: !1, isFinite: !1, isNaN: !1, isPrototypeOf: !1, JSON: !1, Map: !1, Math: !1, NaN: !1, Number: !1, Object: !1, parseFloat: !1, parseInt: !1, Promise: !1, propertyIsEnumerable: !1, Proxy: !1, RangeError: !1, ReferenceError: !1, Reflect: !1, RegExp: !1, Set: !1, String: !1, Symbol: !1, SyntaxError: !1, System: !1, toLocaleString: !1, toString: !1, TypeError: !1, Uint16Array: !1, Uint32Array: !1, Uint8Array: !1, Uint8ClampedArray: !1, undefined: !1, unescape: !1, URIError: !1, valueOf: !1, WeakMap: !1, WeakSet: !1 }, es5: { Array: !1, Boolean: !1, constructor: !1, Date: !1, decodeURI: !1, decodeURIComponent: !1, encodeURI: !1, encodeURIComponent: !1, Error: !1, escape: !1, eval: !1, EvalError: !1, Function: !1, hasOwnProperty: !1, Infinity: !1, isFinite: !1, isNaN: !1, isPrototypeOf: !1, JSON: !1, Math: !1, NaN: !1, Number: !1, Object: !1, parseFloat: !1, parseInt: !1, propertyIsEnumerable: !1, RangeError: !1, ReferenceError: !1, RegExp: !1, String: !1, SyntaxError: !1, toLocaleString: !1, toString: !1, TypeError: !1, undefined: !1, unescape: !1, URIError: !1, valueOf: !1 }, es6: { Array: !1, ArrayBuffer: !1, Boolean: !1, constructor: !1, DataView: !1, Date: !1, decodeURI: !1, decodeURIComponent: !1, encodeURI: !1, encodeURIComponent: !1, Error: !1, escape: !1, eval: !1, EvalError: !1, Float32Array: !1, Float64Array: !1, Function: !1, hasOwnProperty: !1, Infinity: !1, Int16Array: !1, Int32Array: !1, Int8Array: !1, isFinite: !1, isNaN: !1, isPrototypeOf: !1, JSON: !1, Map: !1, Math: !1, NaN: !1, Number: !1, Object: !1, parseFloat: !1, parseInt: !1, Promise: !1, propertyIsEnumerable: !1, Proxy: !1, RangeError: !1, ReferenceError: !1, Reflect: !1, RegExp: !1, Set: !1, String: !1, Symbol: !1, SyntaxError: !1, System: !1, toLocaleString: !1, toString: !1, TypeError: !1, Uint16Array: !1, Uint32Array: !1, Uint8Array: !1, Uint8ClampedArray: !1, undefined: !1, unescape: !1, URIError: !1, valueOf: !1, WeakMap: !1, WeakSet: !1 }, browser: { addEventListener: !1, alert: !1, AnalyserNode: !1, Animation: !1, AnimationEffectReadOnly: !1, AnimationEffectTiming: !1, AnimationEffectTimingReadOnly: !1, AnimationEvent: !1, AnimationPlaybackEvent: !1, AnimationTimeline: !1, applicationCache: !1, ApplicationCache: !1, ApplicationCacheErrorEvent: !1, atob: !1, Attr: !1, Audio: !1, AudioBuffer: !1, AudioBufferSourceNode: !1, AudioContext: !1, AudioDestinationNode: !1, AudioListener: !1, AudioNode: !1, AudioParam: !1, AudioProcessingEvent: !1, AutocompleteErrorEvent: !1, BarProp: !1, BatteryManager: !1, BeforeUnloadEvent: !1, BiquadFilterNode: !1, Blob: !1, blur: !1, btoa: !1, Cache: !1, caches: !1, CacheStorage: !1, cancelAnimationFrame: !1, cancelIdleCallback: !1, CanvasGradient: !1, CanvasPattern: !1, CanvasRenderingContext2D: !1, CDATASection: !1, ChannelMergerNode: !1, ChannelSplitterNode: !1, CharacterData: !1, clearInterval: !1, clearTimeout: !1, clientInformation: !1, ClientRect: !1, ClientRectList: !1, ClipboardEvent: !1, close: !1, closed: !1, CloseEvent: !1, Comment: !1, CompositionEvent: !1, confirm: !1, console: !1, ConvolverNode: !1, createImageBitmap: !1, Credential: !1, CredentialsContainer: !1, crypto: !1, Crypto: !1, CryptoKey: !1, CSS: !1, CSSAnimation: !1, CSSFontFaceRule: !1, CSSImportRule: !1, CSSKeyframeRule: !1, CSSKeyframesRule: !1, CSSMediaRule: !1, CSSPageRule: !1, CSSRule: !1, CSSRuleList: !1, CSSStyleDeclaration: !1, CSSStyleRule: !1, CSSStyleSheet: !1, CSSSupportsRule: !1, CSSTransition: !1, CSSUnknownRule: !1, CSSViewportRule: !1, customElements: !1, CustomEvent: !1, DataTransfer: !1, DataTransferItem: !1, DataTransferItemList: !1, Debug: !1, defaultStatus: !1, defaultstatus: !1, DelayNode: !1, DeviceMotionEvent: !1, DeviceOrientationEvent: !1, devicePixelRatio: !1, dispatchEvent: !1, document: !1, Document: !1, DocumentFragment: !1, DocumentTimeline: !1, DocumentType: !1, DOMError: !1, DOMException: !1, DOMImplementation: !1, DOMParser: !1, DOMSettableTokenList: !1, DOMStringList: !1, DOMStringMap: !1, DOMTokenList: !1, DragEvent: !1, DynamicsCompressorNode: !1, Element: !1, ElementTimeControl: !1, ErrorEvent: !1, event: !1, Event: !1, EventSource: !1, EventTarget: !1, external: !1, FederatedCredential: !1, fetch: !1, File: !1, FileError: !1, FileList: !1, FileReader: !1, find: !1, focus: !1, FocusEvent: !1, FontFace: !1, FormData: !1, frameElement: !1, frames: !1, GainNode: !1, Gamepad: !1, GamepadButton: !1, GamepadEvent: !1, getComputedStyle: !1, getSelection: !1, HashChangeEvent: !1, Headers: !1, history: !1, History: !1, HTMLAllCollection: !1, HTMLAnchorElement: !1, HTMLAppletElement: !1, HTMLAreaElement: !1, HTMLAudioElement: !1, HTMLBaseElement: !1, HTMLBlockquoteElement: !1, HTMLBodyElement: !1, HTMLBRElement: !1, HTMLButtonElement: !1, HTMLCanvasElement: !1, HTMLCollection: !1, HTMLContentElement: !1, HTMLDataListElement: !1, HTMLDetailsElement: !1, HTMLDialogElement: !1, HTMLDirectoryElement: !1, HTMLDivElement: !1, HTMLDListElement: !1, HTMLDocument: !1, HTMLElement: !1, HTMLEmbedElement: !1, HTMLFieldSetElement: !1, HTMLFontElement: !1, HTMLFormControlsCollection: !1, HTMLFormElement: !1, HTMLFrameElement: !1, HTMLFrameSetElement: !1, HTMLHeadElement: !1, HTMLHeadingElement: !1, HTMLHRElement: !1, HTMLHtmlElement: !1, HTMLIFrameElement: !1, HTMLImageElement: !1, HTMLInputElement: !1, HTMLIsIndexElement: !1, HTMLKeygenElement: !1, HTMLLabelElement: !1, HTMLLayerElement: !1, HTMLLegendElement: !1, HTMLLIElement: !1, HTMLLinkElement: !1, HTMLMapElement: !1, HTMLMarqueeElement: !1, HTMLMediaElement: !1, HTMLMenuElement: !1, HTMLMetaElement: !1, HTMLMeterElement: !1, HTMLModElement: !1, HTMLObjectElement: !1, HTMLOListElement: !1, HTMLOptGroupElement: !1, HTMLOptionElement: !1, HTMLOptionsCollection: !1, HTMLOutputElement: !1, HTMLParagraphElement: !1, HTMLParamElement: !1, HTMLPictureElement: !1, HTMLPreElement: !1, HTMLProgressElement: !1, HTMLQuoteElement: !1, HTMLScriptElement: !1, HTMLSelectElement: !1, HTMLShadowElement: !1, HTMLSourceElement: !1, HTMLSpanElement: !1, HTMLStyleElement: !1, HTMLTableCaptionElement: !1, HTMLTableCellElement: !1, HTMLTableColElement: !1, HTMLTableElement: !1, HTMLTableRowElement: !1, HTMLTableSectionElement: !1, HTMLTemplateElement: !1, HTMLTextAreaElement: !1, HTMLTitleElement: !1, HTMLTrackElement: !1, HTMLUListElement: !1, HTMLUnknownElement: !1, HTMLVideoElement: !1, IDBCursor: !1, IDBCursorWithValue: !1, IDBDatabase: !1, IDBEnvironment: !1, IDBFactory: !1, IDBIndex: !1, IDBKeyRange: !1, IDBObjectStore: !1, IDBOpenDBRequest: !1, IDBRequest: !1, IDBTransaction: !1, IDBVersionChangeEvent: !1, Image: !1, ImageBitmap: !1, ImageData: !1, indexedDB: !1, innerHeight: !1, innerWidth: !1, InputEvent: !1, InputMethodContext: !1, IntersectionObserver: !1, IntersectionObserverEntry: !1, Intl: !1, KeyboardEvent: !1, KeyframeEffect: !1, KeyframeEffectReadOnly: !1, length: !1, localStorage: !1, location: !1, Location: !1, locationbar: !1, matchMedia: !1, MediaElementAudioSourceNode: !1, MediaEncryptedEvent: !1, MediaError: !1, MediaKeyError: !1, MediaKeyEvent: !1, MediaKeyMessageEvent: !1, MediaKeys: !1, MediaKeySession: !1, MediaKeyStatusMap: !1, MediaKeySystemAccess: !1, MediaList: !1, MediaQueryList: !1, MediaQueryListEvent: !1, MediaSource: !1, MediaRecorder: !1, MediaStream: !1, MediaStreamAudioDestinationNode: !1, MediaStreamAudioSourceNode: !1, MediaStreamEvent: !1, MediaStreamTrack: !1, menubar: !1, MessageChannel: !1, MessageEvent: !1, MessagePort: !1, MIDIAccess: !1, MIDIConnectionEvent: !1, MIDIInput: !1, MIDIInputMap: !1, MIDIMessageEvent: !1, MIDIOutput: !1, MIDIOutputMap: !1, MIDIPort: !1, MimeType: !1, MimeTypeArray: !1, MouseEvent: !1, moveBy: !1, moveTo: !1, MutationEvent: !1, MutationObserver: !1, MutationRecord: !1, name: !1, NamedNodeMap: !1, navigator: !1, Navigator: !1, Node: !1, NodeFilter: !1, NodeIterator: !1, NodeList: !1, Notification: !1, OfflineAudioCompletionEvent: !1, OfflineAudioContext: !1, offscreenBuffering: !1, onbeforeunload: !0, onblur: !0, onerror: !0, onfocus: !0, onload: !0, onresize: !0, onunload: !0, open: !1, openDatabase: !1, opener: !1, opera: !1, Option: !1, OscillatorNode: !1, outerHeight: !1, outerWidth: !1, PageTransitionEvent: !1, pageXOffset: !1, pageYOffset: !1, parent: !1, PasswordCredential: !1, Path2D: !1, performance: !1, Performance: !1, PerformanceEntry: !1, PerformanceMark: !1, PerformanceMeasure: !1, PerformanceNavigation: !1, PerformanceResourceTiming: !1, PerformanceTiming: !1, PeriodicWave: !1, Permissions: !1, PermissionStatus: !1, personalbar: !1, Plugin: !1, PluginArray: !1, PopStateEvent: !1, postMessage: !1, print: !1, ProcessingInstruction: !1, ProgressEvent: !1, PromiseRejectionEvent: !1, prompt: !1, PushManager: !1, PushSubscription: !1, RadioNodeList: !1, Range: !1, ReadableByteStream: !1, ReadableStream: !1, removeEventListener: !1, Request: !1, requestAnimationFrame: !1, requestIdleCallback: !1, resizeBy: !1, resizeTo: !1, Response: !1, RTCIceCandidate: !1, RTCSessionDescription: !1, RTCPeerConnection: !1, screen: !1, Screen: !1, screenLeft: !1, ScreenOrientation: !1, screenTop: !1, screenX: !1, screenY: !1, ScriptProcessorNode: !1, scroll: !1, scrollbars: !1, scrollBy: !1, scrollTo: !1, scrollX: !1, scrollY: !1, SecurityPolicyViolationEvent: !1, Selection: !1, self: !1, ServiceWorker: !1, ServiceWorkerContainer: !1, ServiceWorkerRegistration: !1, sessionStorage: !1, setInterval: !1, setTimeout: !1, ShadowRoot: !1, SharedKeyframeList: !1, SharedWorker: !1, showModalDialog: !1, SiteBoundCredential: !1, speechSynthesis: !1, SpeechSynthesisEvent: !1, SpeechSynthesisUtterance: !1, status: !1, statusbar: !1, stop: !1, Storage: !1, StorageEvent: !1, styleMedia: !1, StyleSheet: !1, StyleSheetList: !1, SubtleCrypto: !1, SVGAElement: !1, SVGAltGlyphDefElement: !1, SVGAltGlyphElement: !1, SVGAltGlyphItemElement: !1, SVGAngle: !1, SVGAnimateColorElement: !1, SVGAnimatedAngle: !1, SVGAnimatedBoolean: !1, SVGAnimatedEnumeration: !1, SVGAnimatedInteger: !1, SVGAnimatedLength: !1, SVGAnimatedLengthList: !1, SVGAnimatedNumber: !1, SVGAnimatedNumberList: !1, SVGAnimatedPathData: !1, SVGAnimatedPoints: !1, SVGAnimatedPreserveAspectRatio: !1, SVGAnimatedRect: !1, SVGAnimatedString: !1, SVGAnimatedTransformList: !1, SVGAnimateElement: !1, SVGAnimateMotionElement: !1, SVGAnimateTransformElement: !1, SVGAnimationElement: !1, SVGCircleElement: !1, SVGClipPathElement: !1, SVGColor: !1, SVGColorProfileElement: !1, SVGColorProfileRule: !1, SVGComponentTransferFunctionElement: !1, SVGCSSRule: !1, SVGCursorElement: !1, SVGDefsElement: !1, SVGDescElement: !1, SVGDiscardElement: !1, SVGDocument: !1, SVGElement: !1, SVGElementInstance: !1, SVGElementInstanceList: !1, SVGEllipseElement: !1, SVGEvent: !1, SVGExternalResourcesRequired: !1, SVGFEBlendElement: !1, SVGFEColorMatrixElement: !1, SVGFEComponentTransferElement: !1, SVGFECompositeElement: !1, SVGFEConvolveMatrixElement: !1, SVGFEDiffuseLightingElement: !1, SVGFEDisplacementMapElement: !1, SVGFEDistantLightElement: !1, SVGFEDropShadowElement: !1, SVGFEFloodElement: !1, SVGFEFuncAElement: !1, SVGFEFuncBElement: !1, SVGFEFuncGElement: !1, SVGFEFuncRElement: !1, SVGFEGaussianBlurElement: !1, SVGFEImageElement: !1, SVGFEMergeElement: !1, SVGFEMergeNodeElement: !1, SVGFEMorphologyElement: !1, SVGFEOffsetElement: !1, SVGFEPointLightElement: !1, SVGFESpecularLightingElement: !1, SVGFESpotLightElement: !1, SVGFETileElement: !1, SVGFETurbulenceElement: !1, SVGFilterElement: !1, SVGFilterPrimitiveStandardAttributes: !1, SVGFitToViewBox: !1, SVGFontElement: !1, SVGFontFaceElement: !1, SVGFontFaceFormatElement: !1, SVGFontFaceNameElement: !1, SVGFontFaceSrcElement: !1, SVGFontFaceUriElement: !1, SVGForeignObjectElement: !1, SVGGElement: !1, SVGGeometryElement: !1, SVGGlyphElement: !1, SVGGlyphRefElement: !1, SVGGradientElement: !1, SVGGraphicsElement: !1, SVGHKernElement: !1, SVGICCColor: !1, SVGImageElement: !1, SVGLangSpace: !1, SVGLength: !1, SVGLengthList: !1, SVGLinearGradientElement: !1, SVGLineElement: !1, SVGLocatable: !1, SVGMarkerElement: !1, SVGMaskElement: !1, SVGMatrix: !1, SVGMetadataElement: !1, SVGMissingGlyphElement: !1, SVGMPathElement: !1, SVGNumber: !1, SVGNumberList: !1, SVGPaint: !1, SVGPathElement: !1, SVGPathSeg: !1, SVGPathSegArcAbs: !1, SVGPathSegArcRel: !1, SVGPathSegClosePath: !1, SVGPathSegCurvetoCubicAbs: !1, SVGPathSegCurvetoCubicRel: !1, SVGPathSegCurvetoCubicSmoothAbs: !1, SVGPathSegCurvetoCubicSmoothRel: !1, SVGPathSegCurvetoQuadraticAbs: !1, SVGPathSegCurvetoQuadraticRel: !1, SVGPathSegCurvetoQuadraticSmoothAbs: !1, SVGPathSegCurvetoQuadraticSmoothRel: !1, SVGPathSegLinetoAbs: !1, SVGPathSegLinetoHorizontalAbs: !1, SVGPathSegLinetoHorizontalRel: !1, SVGPathSegLinetoRel: !1, SVGPathSegLinetoVerticalAbs: !1, SVGPathSegLinetoVerticalRel: !1, SVGPathSegList: !1, SVGPathSegMovetoAbs: !1, SVGPathSegMovetoRel: !1, SVGPatternElement: !1, SVGPoint: !1, SVGPointList: !1, SVGPolygonElement: !1, SVGPolylineElement: !1, SVGPreserveAspectRatio: !1, SVGRadialGradientElement: !1, SVGRect: !1, SVGRectElement: !1, SVGRenderingIntent: !1, SVGScriptElement: !1, SVGSetElement: !1, SVGStopElement: !1, SVGStringList: !1, SVGStylable: !1, SVGStyleElement: !1, SVGSVGElement: !1, SVGSwitchElement: !1, SVGSymbolElement: !1, SVGTests: !1, SVGTextContentElement: !1, SVGTextElement: !1, SVGTextPathElement: !1, SVGTextPositioningElement: !1, SVGTitleElement: !1, SVGTransform: !1, SVGTransformable: !1, SVGTransformList: !1, SVGTRefElement: !1, SVGTSpanElement: !1, SVGUnitTypes: !1, SVGURIReference: !1, SVGUseElement: !1, SVGViewElement: !1, SVGViewSpec: !1, SVGVKernElement: !1, SVGZoomAndPan: !1, SVGZoomEvent: !1, Text: !1, TextDecoder: !1, TextEncoder: !1, TextEvent: !1, TextMetrics: !1, TextTrack: !1, TextTrackCue: !1, TextTrackCueList: !1, TextTrackList: !1, TimeEvent: !1, TimeRanges: !1, toolbar: !1, top: !1, Touch: !1, TouchEvent: !1, TouchList: !1, TrackEvent: !1, TransitionEvent: !1, TreeWalker: !1, UIEvent: !1, URL: !1, URLSearchParams: !1, ValidityState: !1, VTTCue: !1, WaveShaperNode: !1, WebGLActiveInfo: !1, WebGLBuffer: !1, WebGLContextEvent: !1, WebGLFramebuffer: !1, WebGLProgram: !1, WebGLRenderbuffer: !1, WebGLRenderingContext: !1, WebGLShader: !1, WebGLShaderPrecisionFormat: !1, WebGLTexture: !1, WebGLUniformLocation: !1, WebSocket: !1, WheelEvent: !1, window: !1, Window: !1, Worker: !1, XDomainRequest: !1, XMLDocument: !1, XMLHttpRequest: !1, XMLHttpRequestEventTarget: !1, XMLHttpRequestProgressEvent: !1, XMLHttpRequestUpload: !1, XMLSerializer: !1, XPathEvaluator: !1, XPathException: !1, XPathExpression: !1, XPathNamespace: !1, XPathNSResolver: !1, XPathResult: !1, XSLTProcessor: !1 }, worker: { applicationCache: !1, atob: !1, Blob: !1, BroadcastChannel: !1, btoa: !1, Cache: !1, caches: !1, clearInterval: !1, clearTimeout: !1, close: !0, console: !1, fetch: !1, FileReaderSync: !1, FormData: !1, Headers: !1, IDBCursor: !1, IDBCursorWithValue: !1, IDBDatabase: !1, IDBFactory: !1, IDBIndex: !1, IDBKeyRange: !1, IDBObjectStore: !1, IDBOpenDBRequest: !1, IDBRequest: !1, IDBTransaction: !1, IDBVersionChangeEvent: !1, ImageData: !1, importScripts: !0, indexedDB: !1, location: !1, MessageChannel: !1, MessagePort: !1, name: !1, navigator: !1, Notification: !1, onclose: !0, onconnect: !0, onerror: !0, onlanguagechange: !0, onmessage: !0, onoffline: !0, ononline: !0, onrejectionhandled: !0, onunhandledrejection: !0, performance: !1, Performance: !1, PerformanceEntry: !1, PerformanceMark: !1, PerformanceMeasure: !1, PerformanceNavigation: !1, PerformanceResourceTiming: !1, PerformanceTiming: !1, postMessage: !0, Promise: !1, Request: !1, Response: !1, self: !0, ServiceWorkerRegistration: !1, setInterval: !1, setTimeout: !1, TextDecoder: !1, TextEncoder: !1, URL: !1, URLSearchParams: !1, WebSocket: !1, Worker: !1, XMLHttpRequest: !1 }, node: { __dirname: !1, __filename: !1, arguments: !1, Buffer: !1, clearImmediate: !1, clearInterval: !1, clearTimeout: !1, console: !1, exports: !0, GLOBAL: !1, global: !1, Intl: !1, module: !1, process: !1, require: !1, root: !1, setImmediate: !1, setInterval: !1, setTimeout: !1 }, commonjs: { exports: !0, module: !1, require: !1, global: !1 }, amd: { define: !1, require: !1 }, mocha: { after: !1, afterEach: !1, before: !1, beforeEach: !1, context: !1, describe: !1, it: !1, mocha: !1, run: !1, setup: !1, specify: !1, suite: !1, suiteSetup: !1, suiteTeardown: !1, teardown: !1, test: !1, xcontext: !1, xdescribe: !1, xit: !1, xspecify: !1 }, jasmine: { afterAll: !1, afterEach: !1, beforeAll: !1, beforeEach: !1, describe: !1, expect: !1, fail: !1, fdescribe: !1, fit: !1, it: !1, jasmine: !1, pending: !1, runs: !1, spyOn: !1, spyOnProperty: !1, waits: !1, waitsFor: !1, xdescribe: !1, xit: !1 }, jest: { afterAll: !1, afterEach: !1, beforeAll: !1, beforeEach: !1, check: !1, describe: !1, expect: !1, gen: !1, it: !1, fdescribe: !1, fit: !1, jest: !1, pit: !1, require: !1, test: !1, xdescribe: !1, xit: !1, xtest: !1 }, qunit: { asyncTest: !1, deepEqual: !1, equal: !1, expect: !1, module: !1, notDeepEqual: !1, notEqual: !1, notOk: !1, notPropEqual: !1, notStrictEqual: !1, ok: !1, propEqual: !1, QUnit: !1, raises: !1, start: !1, stop: !1, strictEqual: !1, test: !1, throws: !1 }, phantomjs: { console: !0, exports: !0, phantom: !0, require: !0, WebPage: !0 }, couch: { emit: !1, exports: !1, getRow: !1, log: !1, module: !1, provides: !1, require: !1, respond: !1, send: !1, start: !1, sum: !1 }, rhino: { defineClass: !1, deserialize: !1, gc: !1, help: !1, importClass: !1, importPackage: !1, java: !1, load: !1, loadClass: !1, Packages: !1, print: !1, quit: !1, readFile: !1, readUrl: !1, runCommand: !1, seal: !1, serialize: !1, spawn: !1, sync: !1, toint32: !1, version: !1 }, nashorn: { __DIR__: !1, __FILE__: !1, __LINE__: !1, com: !1, edu: !1, exit: !1, Java: !1, java: !1, javafx: !1, JavaImporter: !1, javax: !1, JSAdapter: !1, load: !1, loadWithNewGlobal: !1, org: !1, Packages: !1, print: !1, quit: !1 }, wsh: { ActiveXObject: !0, Enumerator: !0, GetObject: !0, ScriptEngine: !0, ScriptEngineBuildVersion: !0, ScriptEngineMajorVersion: !0, ScriptEngineMinorVersion: !0, VBArray: !0, WScript: !0, WSH: !0, XDomainRequest: !0 }, jquery: { $: !1, jQuery: !1 }, yui: { Y: !1, YUI: !1, YUI_config: !1 }, shelljs: { cat: !1, cd: !1, chmod: !1, config: !1, cp: !1, dirs: !1, echo: !1, env: !1, error: !1, exec: !1, exit: !1, find: !1, grep: !1, ls: !1, ln: !1, mkdir: !1, mv: !1, popd: !1, pushd: !1, pwd: !1, rm: !1, sed: !1, set: !1, target: !1, tempdir: !1, test: !1, touch: !1, which: !1 }, prototypejs: { $: !1, $$: !1, $A: !1, $break: !1, $continue: !1, $F: !1, $H: !1, $R: !1, $w: !1, Abstract: !1, Ajax: !1, Autocompleter: !1, Builder: !1, Class: !1, Control: !1, Draggable: !1, Draggables: !1, Droppables: !1, Effect: !1, Element: !1, Enumerable: !1, Event: !1, Field: !1, Form: !1, Hash: !1, Insertion: !1, ObjectRange: !1, PeriodicalExecuter: !1, Position: !1, Prototype: !1, Scriptaculous: !1, Selector: !1, Sortable: !1, SortableObserver: !1, Sound: !1, Template: !1, Toggle: !1, Try: !1 }, meteor: { $: !1, _: !1, Accounts: !1, AccountsClient: !1, AccountsServer: !1, AccountsCommon: !1, App: !1, Assets: !1, Blaze: !1, check: !1, Cordova: !1, DDP: !1, DDPServer: !1, DDPRateLimiter: !1, Deps: !1, EJSON: !1, Email: !1, HTTP: !1, Log: !1, Match: !1, Meteor: !1, Mongo: !1, MongoInternals: !1, Npm: !1, Package: !1, Plugin: !1, process: !1, Random: !1, ReactiveDict: !1, ReactiveVar: !1, Router: !1, ServiceConfiguration: !1, Session: !1, share: !1, Spacebars: !1, Template: !1, Tinytest: !1, Tracker: !1, UI: !1, Utils: !1, WebApp: !1, WebAppInternals: !1 }, mongo: { _isWindows: !1, _rand: !1, BulkWriteResult: !1, cat: !1, cd: !1, connect: !1, db: !1, getHostName: !1, getMemInfo: !1, hostname: !1, ISODate: !1, listFiles: !1, load: !1, ls: !1, md5sumFile: !1, mkdir: !1, Mongo: !1, NumberInt: !1, NumberLong: !1, ObjectId: !1, PlanCache: !1, print: !1, printjson: !1, pwd: !1, quit: !1, removeFile: !1, rs: !1, sh: !1, UUID: !1, version: !1, WriteResult: !1 }, applescript: { $: !1, Application: !1, Automation: !1, console: !1, delay: !1, Library: !1, ObjC: !1, ObjectSpecifier: !1, Path: !1, Progress: !1, Ref: !1 }, serviceworker: { caches: !1, Cache: !1, CacheStorage: !1, Client: !1, clients: !1, Clients: !1, ExtendableEvent: !1, ExtendableMessageEvent: !1, FetchEvent: !1, importScripts: !1, registration: !1, self: !1, ServiceWorker: !1, ServiceWorkerContainer: !1, ServiceWorkerGlobalScope: !1, ServiceWorkerMessageEvent: !1, ServiceWorkerRegistration: !1, skipWaiting: !1, WindowClient: !1 }, atomtest: { advanceClock: !1, fakeClearInterval: !1, fakeClearTimeout: !1, fakeSetInterval: !1, fakeSetTimeout: !1, resetTimeouts: !1, waitsForPromise: !1 }, embertest: { andThen: !1, click: !1, currentPath: !1, currentRouteName: !1, currentURL: !1, fillIn: !1, find: !1, findWithAssert: !1, keyEvent: !1, pauseTest: !1, resumeTest: !1, triggerEvent: !1, visit: !1 }, protractor: { $: !1, $$: !1, browser: !1, By: !1, by: !1, DartObject: !1, element: !1, protractor: !1 }, "shared-node-browser": { clearInterval: !1, clearTimeout: !1, console: !1, setInterval: !1, setTimeout: !1 }, webextensions: { browser: !1, chrome: !1, opr: !1 }, greasemonkey: { GM_addStyle: !1, GM_deleteValue: !1, GM_getResourceText: !1, GM_getResourceURL: !1, GM_getValue: !1, GM_info: !1, GM_listValues: !1, GM_log: !1, GM_openInTab: !1, GM_registerMenuCommand: !1, GM_setClipboard: !1, GM_setValue: !1, GM_xmlhttpRequest: !1, unsafeWindow: !1 } };
  }), a.registerDynamic("156", ["155"], !0, function (a, b, c) {
    this || self;c.exports = a("155");
  }), a.registerDynamic("157", ["15", "d9", "d4", "1f", "17", "aa", "61", "14a", "d5", "db", "f", "14b", "156", "11", "158", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b, c) {
      for (var d = J.scope.get(a.node) || [], e = d, f = Array.isArray(e), g = 0, e = f ? e : (0, q.default)(e);;) {
        var h;if (f) {
          if (g >= e.length) break;h = e[g++];
        } else {
          if (g = e.next(), g.done) break;h = g.value;
        }var i = h;if (i.parent === b && i.path === a) return i;
      }d.push(c), J.scope.has(a.node) || J.scope.set(a.node, d);
    }function g(a, b) {
      if (I.isModuleDeclaration(a)) {
        if (a.source) g(a.source, b);else if (a.specifiers && a.specifiers.length) for (var c = a.specifiers, d = Array.isArray(c), e = 0, c = d ? c : (0, q.default)(c);;) {
          var f;if (d) {
            if (e >= c.length) break;f = c[e++];
          } else {
            if (e = c.next(), e.done) break;f = e.value;
          }var h = f;g(h, b);
        } else a.declaration && g(a.declaration, b);
      } else if (I.isModuleSpecifier(a)) g(a.local, b);else if (I.isMemberExpression(a)) g(a.object, b), g(a.property, b);else if (I.isIdentifier(a)) b.push(a.name);else if (I.isLiteral(a)) b.push(a.value);else if (I.isCallExpression(a)) g(a.callee, b);else if (I.isObjectExpression(a) || I.isObjectPattern(a)) for (var i = a.properties, j = Array.isArray(i), k = 0, i = j ? i : (0, q.default)(i);;) {
        var l;if (j) {
          if (k >= i.length) break;l = i[k++];
        } else {
          if (k = i.next(), k.done) break;l = k.value;
        }var m = l;g(m.key || m.argument, b);
      }
    }a("c"), this || self;b.__esModule = !0;var h = a("15"),
        i = e(h),
        j = a("d9"),
        k = e(j),
        l = a("d4"),
        m = e(l),
        n = a("1f"),
        o = e(n),
        p = a("17"),
        q = e(p),
        r = a("aa"),
        s = e(r),
        t = a("61"),
        u = e(t),
        v = a("14a"),
        w = e(v),
        x = a("d5"),
        y = e(x),
        z = a("db"),
        A = e(z),
        B = a("f"),
        C = d(B),
        D = a("14b"),
        E = e(D),
        F = a("156"),
        G = e(F),
        H = a("11"),
        I = d(H),
        J = a("158"),
        K = 0,
        L = { For: function (a) {
        for (var b = I.FOR_INIT_KEYS, c = Array.isArray(b), d = 0, b = c ? b : (0, q.default)(b);;) {
          var e;if (c) {
            if (d >= b.length) break;e = b[d++];
          } else {
            if (d = b.next(), d.done) break;e = d.value;
          }var f = e,
              g = a.get(f);g.isVar() && a.scope.getFunctionParent().registerBinding("var", g);
        }
      }, Declaration: function (a) {
        a.isBlockScoped() || a.isExportDeclaration() && a.get("declaration").isDeclaration() || a.scope.getFunctionParent().registerDeclaration(a);
      }, ReferencedIdentifier: function (a, b) {
        b.references.push(a);
      }, ForXStatement: function (a, b) {
        var c = a.get("left");(c.isPattern() || c.isIdentifier()) && b.constantViolations.push(c);
      }, ExportDeclaration: { exit: function (a) {
          var b = a.node,
              c = a.scope,
              d = b.declaration;if (I.isClassDeclaration(d) || I.isFunctionDeclaration(d)) {
            var e = d.id;if (!e) return;var f = c.getBinding(e.name);f && f.reference(a);
          } else if (I.isVariableDeclaration(d)) for (var g = d.declarations, h = Array.isArray(g), i = 0, g = h ? g : (0, q.default)(g);;) {
            var j;if (h) {
              if (i >= g.length) break;j = g[i++];
            } else {
              if (i = g.next(), i.done) break;j = i.value;
            }var k = j,
                l = I.getBindingIdentifiers(k);for (var m in l) {
              var n = c.getBinding(m);n && n.reference(a);
            }
          }
        } }, LabeledStatement: function (a) {
        a.scope.getProgramParent().addGlobal(a.node), a.scope.getBlockParent().registerDeclaration(a);
      }, AssignmentExpression: function (a, b) {
        b.assignments.push(a);
      }, UpdateExpression: function (a, b) {
        b.constantViolations.push(a.get("argument"));
      }, UnaryExpression: function (a, b) {
        "delete" === a.node.operator && b.constantViolations.push(a.get("argument"));
      }, BlockScoped: function (a) {
        var b = a.scope;b.path === a && (b = b.parent), b.getBlockParent().registerDeclaration(a);
      }, ClassDeclaration: function (a) {
        var b = a.node.id;if (b) {
          var c = b.name;a.scope.bindings[c] = a.scope.getBinding(c);
        }
      }, Block: function (a) {
        for (var b = a.get("body"), c = b, d = Array.isArray(c), e = 0, c = d ? c : (0, q.default)(c);;) {
          var f;if (d) {
            if (e >= c.length) break;f = c[e++];
          } else {
            if (e = c.next(), e.done) break;f = e.value;
          }var g = f;g.isFunctionDeclaration() && a.scope.getBlockParent().registerDeclaration(g);
        }
      } },
        M = 0,
        N = function () {
      function a(b, c) {
        if ((0, o.default)(this, a), c && c.block === b.node) return c;var d = f(b, c, this);if (d) return d;this.uid = M++, this.parent = c, this.hub = b.hub, this.parentBlock = b.parent, this.block = b.node, this.path = b, this.labels = new m.default();
      }return a.prototype.traverse = function (a, b, c) {
        (0, y.default)(a, b, this, c, this.path);
      }, a.prototype.generateDeclaredUidIdentifier = function () {
        var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "temp",
            b = this.generateUidIdentifier(a);return this.push({ id: b }), b;
      }, a.prototype.generateUidIdentifier = function () {
        var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "temp";return I.identifier(this.generateUid(a));
      }, a.prototype.generateUid = function () {
        var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "temp";a = I.toIdentifier(a).replace(/^_+/, "").replace(/[0-9]+$/g, "");var b = void 0,
            c = 0;do {
          b = this._generateUid(a, c), c++;
        } while (this.hasLabel(b) || this.hasBinding(b) || this.hasGlobal(b) || this.hasReference(b));var d = this.getProgramParent();return d.references[b] = !0, d.uids[b] = !0, b;
      }, a.prototype._generateUid = function (a, b) {
        var c = a;return b > 1 && (c += b), "_" + c;
      }, a.prototype.generateUidIdentifierBasedOnNode = function (a, b) {
        var c = a;I.isAssignmentExpression(a) ? c = a.left : I.isVariableDeclarator(a) ? c = a.id : (I.isObjectProperty(c) || I.isObjectMethod(c)) && (c = c.key);var d = [];g(c, d);var e = d.join("$");return e = e.replace(/^_/, "") || b || "ref", this.generateUidIdentifier(e.slice(0, 20));
      }, a.prototype.isStatic = function (a) {
        if (I.isThisExpression(a) || I.isSuper(a)) return !0;if (I.isIdentifier(a)) {
          var b = this.getBinding(a.name);return b ? b.constant : this.hasBinding(a.name);
        }return !1;
      }, a.prototype.maybeGenerateMemoised = function (a, b) {
        if (this.isStatic(a)) return null;var c = this.generateUidIdentifierBasedOnNode(a);return b || this.push({ id: c }), c;
      }, a.prototype.checkBlockScopedCollisions = function (a, b, c, d) {
        if ("param" !== b && ("hoisted" !== b || "let" !== a.kind)) {
          if ("let" === b || "let" === a.kind || "const" === a.kind || "module" === a.kind || "param" === a.kind && ("let" === b || "const" === b)) throw this.hub.file.buildCodeFrameError(d, C.get("scopeDuplicateDeclaration", c), TypeError);
        }
      }, a.prototype.rename = function (a, b, c) {
        var d = this.getBinding(a);if (d) return b = b || this.generateUidIdentifier(a).name, new w.default(d, a, b).rename(c);
      }, a.prototype._renameFromMap = function (a, b, c, d) {
        a[b] && (a[c] = d, a[b] = null);
      }, a.prototype.dump = function () {
        var a = (0, u.default)("-", 60);console.log(a);var b = this;do {
          console.log("#", b.block.type);for (var c in b.bindings) {
            var d = b.bindings[c];console.log(" -", c, { constant: d.constant, references: d.references, violations: d.constantViolations.length, kind: d.kind });
          }
        } while (b = b.parent);console.log(a);
      }, a.prototype.toArray = function (a, b) {
        var c = this.hub.file;if (I.isIdentifier(a)) {
          var d = this.getBinding(a.name);if (d && d.constant && d.path.isGenericType("Array")) return a;
        }if (I.isArrayExpression(a)) return a;if (I.isIdentifier(a, { name: "arguments" })) return I.callExpression(I.memberExpression(I.memberExpression(I.memberExpression(I.identifier("Array"), I.identifier("prototype")), I.identifier("slice")), I.identifier("call")), [a]);var e = "toArray",
            f = [a];return !0 === b ? e = "toConsumableArray" : b && (f.push(I.numericLiteral(b)), e = "slicedToArray"), I.callExpression(c.addHelper(e), f);
      }, a.prototype.hasLabel = function (a) {
        return !!this.getLabel(a);
      }, a.prototype.getLabel = function (a) {
        return this.labels.get(a);
      }, a.prototype.registerLabel = function (a) {
        this.labels.set(a.node.label.name, a);
      }, a.prototype.registerDeclaration = function (a) {
        if (a.isLabeledStatement()) this.registerLabel(a);else if (a.isFunctionDeclaration()) this.registerBinding("hoisted", a.get("id"), a);else if (a.isVariableDeclaration()) for (var b = a.get("declarations"), c = b, d = Array.isArray(c), e = 0, c = d ? c : (0, q.default)(c);;) {
          var f;if (d) {
            if (e >= c.length) break;f = c[e++];
          } else {
            if (e = c.next(), e.done) break;f = e.value;
          }var g = f;this.registerBinding(a.node.kind, g);
        } else if (a.isClassDeclaration()) this.registerBinding("let", a);else if (a.isImportDeclaration()) for (var h = a.get("specifiers"), i = h, j = Array.isArray(i), k = 0, i = j ? i : (0, q.default)(i);;) {
          var l;if (j) {
            if (k >= i.length) break;l = i[k++];
          } else {
            if (k = i.next(), k.done) break;l = k.value;
          }var m = l;this.registerBinding("module", m);
        } else if (a.isExportDeclaration()) {
          var n = a.get("declaration");(n.isClassDeclaration() || n.isFunctionDeclaration() || n.isVariableDeclaration()) && this.registerDeclaration(n);
        } else this.registerBinding("unknown", a);
      }, a.prototype.buildUndefinedNode = function () {
        return this.hasBinding("undefined") ? I.unaryExpression("void", I.numericLiteral(0), !0) : I.identifier("undefined");
      }, a.prototype.registerConstantViolation = function (a) {
        var b = a.getBindingIdentifiers();for (var c in b) {
          var d = this.getBinding(c);d && d.reassign(a);
        }
      }, a.prototype.registerBinding = function (a, b) {
        var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : b;if (!a) throw new ReferenceError("no `kind`");if (b.isVariableDeclaration()) for (var d = b.get("declarations"), e = d, f = Array.isArray(e), g = 0, e = f ? e : (0, q.default)(e);;) {
          var h;if (f) {
            if (g >= e.length) break;h = e[g++];
          } else {
            if (g = e.next(), g.done) break;h = g.value;
          }var i = h;this.registerBinding(a, i);
        } else {
          var j = this.getProgramParent(),
              k = b.getBindingIdentifiers(!0);for (var l in k) for (var m = k[l], n = Array.isArray(m), o = 0, m = n ? m : (0, q.default)(m);;) {
            var p;if (n) {
              if (o >= m.length) break;p = m[o++];
            } else {
              if (o = m.next(), o.done) break;p = o.value;
            }var r = p,
                s = this.getOwnBinding(l);if (s) {
              if (s.identifier === r) continue;this.checkBlockScopedCollisions(s, a, l, r);
            }s && s.path.isFlow() && (s = null), j.references[l] = !0, this.bindings[l] = new E.default({ identifier: r, existing: s, scope: this, path: c, kind: a });
          }
        }
      }, a.prototype.addGlobal = function (a) {
        this.globals[a.name] = a;
      }, a.prototype.hasUid = function (a) {
        var b = this;do {
          if (b.uids[a]) return !0;
        } while (b = b.parent);return !1;
      }, a.prototype.hasGlobal = function (a) {
        var b = this;do {
          if (b.globals[a]) return !0;
        } while (b = b.parent);return !1;
      }, a.prototype.hasReference = function (a) {
        var b = this;do {
          if (b.references[a]) return !0;
        } while (b = b.parent);return !1;
      }, a.prototype.isPure = function (a, b) {
        if (I.isIdentifier(a)) {
          var c = this.getBinding(a.name);return !!c && (!b || c.constant);
        }if (I.isClass(a)) return !(a.superClass && !this.isPure(a.superClass, b)) && this.isPure(a.body, b);if (I.isClassBody(a)) {
          for (var d = a.body, e = Array.isArray(d), f = 0, d = e ? d : (0, q.default)(d);;) {
            var g;if (e) {
              if (f >= d.length) break;g = d[f++];
            } else {
              if (f = d.next(), f.done) break;g = f.value;
            }var h = g;if (!this.isPure(h, b)) return !1;
          }return !0;
        }if (I.isBinary(a)) return this.isPure(a.left, b) && this.isPure(a.right, b);if (I.isArrayExpression(a)) {
          for (var i = a.elements, j = Array.isArray(i), k = 0, i = j ? i : (0, q.default)(i);;) {
            var l;if (j) {
              if (k >= i.length) break;l = i[k++];
            } else {
              if (k = i.next(), k.done) break;l = k.value;
            }var m = l;if (!this.isPure(m, b)) return !1;
          }return !0;
        }if (I.isObjectExpression(a)) {
          for (var n = a.properties, o = Array.isArray(n), p = 0, n = o ? n : (0, q.default)(n);;) {
            var r;if (o) {
              if (p >= n.length) break;r = n[p++];
            } else {
              if (p = n.next(), p.done) break;r = p.value;
            }var s = r;if (!this.isPure(s, b)) return !1;
          }return !0;
        }return I.isClassMethod(a) ? !(a.computed && !this.isPure(a.key, b)) && "get" !== a.kind && "set" !== a.kind : I.isClassProperty(a) || I.isObjectProperty(a) ? !(a.computed && !this.isPure(a.key, b)) && this.isPure(a.value, b) : I.isUnaryExpression(a) ? this.isPure(a.argument, b) : I.isPureish(a);
      }, a.prototype.setData = function (a, b) {
        return this.data[a] = b;
      }, a.prototype.getData = function (a) {
        var b = this;do {
          var c = b.data[a];if (null != c) return c;
        } while (b = b.parent);
      }, a.prototype.removeData = function (a) {
        var b = this;do {
          null != b.data[a] && (b.data[a] = null);
        } while (b = b.parent);
      }, a.prototype.init = function () {
        this.references || this.crawl();
      }, a.prototype.crawl = function () {
        K++, this._crawl(), K--;
      }, a.prototype._crawl = function () {
        var a = this.path;if (this.references = (0, k.default)(null), this.bindings = (0, k.default)(null), this.globals = (0, k.default)(null), this.uids = (0, k.default)(null), this.data = (0, k.default)(null), a.isLoop()) for (var b = I.FOR_INIT_KEYS, c = Array.isArray(b), d = 0, b = c ? b : (0, q.default)(b);;) {
          var e;if (c) {
            if (d >= b.length) break;e = b[d++];
          } else {
            if (d = b.next(), d.done) break;e = d.value;
          }var f = e,
              g = a.get(f);g.isBlockScoped() && this.registerBinding(g.node.kind, g);
        }if (a.isFunctionExpression() && a.has("id") && (a.get("id").node[I.NOT_LOCAL_BINDING] || this.registerBinding("local", a.get("id"), a)), a.isClassExpression() && a.has("id") && (a.get("id").node[I.NOT_LOCAL_BINDING] || this.registerBinding("local", a)), a.isFunction()) for (var h = a.get("params"), i = h, j = Array.isArray(i), l = 0, i = j ? i : (0, q.default)(i);;) {
          var m;if (j) {
            if (l >= i.length) break;m = i[l++];
          } else {
            if (l = i.next(), l.done) break;m = l.value;
          }var n = m;this.registerBinding("param", n);
        }if (a.isCatchClause() && this.registerBinding("let", a), !this.getProgramParent().crawling) {
          var o = { references: [], constantViolations: [], assignments: [] };this.crawling = !0, a.traverse(L, o), this.crawling = !1;for (var p = o.assignments, r = Array.isArray(p), s = 0, p = r ? p : (0, q.default)(p);;) {
            var t;if (r) {
              if (s >= p.length) break;t = p[s++];
            } else {
              if (s = p.next(), s.done) break;t = s.value;
            }var u = t,
                v = u.getBindingIdentifiers(),
                w = void 0;for (var x in v) u.scope.getBinding(x) || (w = w || u.scope.getProgramParent(), w.addGlobal(v[x]));u.scope.registerConstantViolation(u);
          }for (var y = o.references, z = Array.isArray(y), A = 0, y = z ? y : (0, q.default)(y);;) {
            var B;if (z) {
              if (A >= y.length) break;B = y[A++];
            } else {
              if (A = y.next(), A.done) break;B = A.value;
            }var C = B,
                D = C.scope.getBinding(C.node.name);D ? D.reference(C) : C.scope.getProgramParent().addGlobal(C.node);
          }for (var E = o.constantViolations, F = Array.isArray(E), G = 0, E = F ? E : (0, q.default)(E);;) {
            var H;if (F) {
              if (G >= E.length) break;H = E[G++];
            } else {
              if (G = E.next(), G.done) break;H = G.value;
            }var J = H;J.scope.registerConstantViolation(J);
          }
        }
      }, a.prototype.push = function (a) {
        var b = this.path;b.isBlockStatement() || b.isProgram() || (b = this.getBlockParent().path), b.isSwitchStatement() && (b = this.getFunctionParent().path), (b.isLoop() || b.isCatchClause() || b.isFunction()) && (I.ensureBlock(b.node), b = b.get("body"));var c = a.unique,
            d = a.kind || "var",
            e = null == a._blockHoist ? 2 : a._blockHoist,
            f = "declaration:" + d + ":" + e,
            g = !c && b.getData(f);if (!g) {
          var h = I.variableDeclaration(d, []);h._generated = !0, h._blockHoist = e;g = b.unshiftContainer("body", [h])[0], c || b.setData(f, g);
        }var i = I.variableDeclarator(a.id, a.init);g.node.declarations.push(i), this.registerBinding(d, g.get("declarations").pop());
      }, a.prototype.getProgramParent = function () {
        var a = this;do {
          if (a.path.isProgram()) return a;
        } while (a = a.parent);throw new Error("We couldn't find a Function or Program...");
      }, a.prototype.getFunctionParent = function () {
        var a = this;do {
          if (a.path.isFunctionParent()) return a;
        } while (a = a.parent);throw new Error("We couldn't find a Function or Program...");
      }, a.prototype.getBlockParent = function () {
        var a = this;do {
          if (a.path.isBlockParent()) return a;
        } while (a = a.parent);throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");
      }, a.prototype.getAllBindings = function () {
        var a = (0, k.default)(null),
            b = this;do {
          (0, A.default)(a, b.bindings), b = b.parent;
        } while (b);return a;
      }, a.prototype.getAllBindingsOfKind = function () {
        for (var a = (0, k.default)(null), b = arguments, c = Array.isArray(b), d = 0, b = c ? b : (0, q.default)(b);;) {
          var e;if (c) {
            if (d >= b.length) break;e = b[d++];
          } else {
            if (d = b.next(), d.done) break;e = d.value;
          }var f = e,
              g = this;do {
            for (var h in g.bindings) {
              var i = g.bindings[h];i.kind === f && (a[h] = i);
            }g = g.parent;
          } while (g);
        }return a;
      }, a.prototype.bindingIdentifierEquals = function (a, b) {
        return this.getBindingIdentifier(a) === b;
      }, a.prototype.warnOnFlowBinding = function (a) {
        return 0 === K && a && a.path.isFlow() && console.warn("\n        You or one of the Babel plugins you are using are using Flow declarations as bindings.\n        Support for this will be removed in version 7. To find out the caller, grep for this\n        message and change it to a `console.trace()`.\n      "), a;
      }, a.prototype.getBinding = function (a) {
        var b = this;do {
          var c = b.getOwnBinding(a);if (c) return this.warnOnFlowBinding(c);
        } while (b = b.parent);
      }, a.prototype.getOwnBinding = function (a) {
        return this.warnOnFlowBinding(this.bindings[a]);
      }, a.prototype.getBindingIdentifier = function (a) {
        var b = this.getBinding(a);return b && b.identifier;
      }, a.prototype.getOwnBindingIdentifier = function (a) {
        var b = this.bindings[a];return b && b.identifier;
      }, a.prototype.hasOwnBinding = function (a) {
        return !!this.getOwnBinding(a);
      }, a.prototype.hasBinding = function (b, c) {
        return !!b && (!!this.hasOwnBinding(b) || !!this.parentHasBinding(b, c) || !!this.hasUid(b) || !(c || !(0, s.default)(a.globals, b)) || !(c || !(0, s.default)(a.contextVariables, b)));
      }, a.prototype.parentHasBinding = function (a, b) {
        return this.parent && this.parent.hasBinding(a, b);
      }, a.prototype.moveBindingTo = function (a, b) {
        var c = this.getBinding(a);c && (c.scope.removeOwnBinding(a), c.scope = b, b.bindings[a] = c);
      }, a.prototype.removeOwnBinding = function (a) {
        delete this.bindings[a];
      }, a.prototype.removeBinding = function (a) {
        var b = this.getBinding(a);b && b.scope.removeOwnBinding(a);var c = this;do {
          c.uids[a] && (c.uids[a] = !1);
        } while (c = c.parent);
      }, a;
    }();N.globals = (0, i.default)(G.default.builtin), N.contextVariables = ["arguments", "undefined", "Infinity", "NaN"], b.default = N, c.exports = b.default;
  }), a.registerDynamic("159", ["17", "11", "15a", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      for (var b = this; b = b.parentPath;) if (a(b)) return b;return null;
    }function g(a) {
      var b = this;do {
        if (a(b)) return b;
      } while (b = b.parentPath);return null;
    }function h() {
      return this.findParent(function (a) {
        return a.isFunction() || a.isProgram();
      });
    }function i() {
      var a = this;do {
        if (Array.isArray(a.container)) return a;
      } while (a = a.parentPath);
    }function j(a) {
      return this.getDeepestCommonAncestorFrom(a, function (a, b, c) {
        for (var d = void 0, e = t.VISITOR_KEYS[a.type], f = c, g = Array.isArray(f), h = 0, f = g ? f : (0, r.default)(f);;) {
          var i;if (g) {
            if (h >= f.length) break;i = f[h++];
          } else {
            if (h = f.next(), h.done) break;i = h.value;
          }var j = i,
              k = j[b + 1];if (d) {
            if (k.listKey && d.listKey === k.listKey && k.key < d.key) d = k;else {
              var l = e.indexOf(d.parentKey),
                  m = e.indexOf(k.parentKey);l > m && (d = k);
            }
          } else d = k;
        }return d;
      });
    }function k(a, b) {
      var c = this;if (!a.length) return this;if (1 === a.length) return a[0];var d = 1 / 0,
          e = void 0,
          f = void 0,
          g = a.map(function (a) {
        var b = [];do {
          b.unshift(a);
        } while ((a = a.parentPath) && a !== c);return b.length < d && (d = b.length), b;
      }),
          h = g[0];a: for (var i = 0; i < d; i++) {
        for (var j = h[i], k = g, l = Array.isArray(k), m = 0, k = l ? k : (0, r.default)(k);;) {
          var n;if (l) {
            if (m >= k.length) break;n = k[m++];
          } else {
            if (m = k.next(), m.done) break;n = m.value;
          }var o = n;if (o[i] !== j) break a;
        }e = i, f = j;
      }if (f) return b ? b(f, e, g) : f;throw new Error("Couldn't find intersection");
    }function l() {
      var a = this,
          b = [];do {
        b.push(a);
      } while (a = a.parentPath);return b;
    }function m(a) {
      return a.isDescendant(this);
    }function n(a) {
      return !!this.findParent(function (b) {
        return b === a;
      });
    }function o() {
      for (var a = this; a;) {
        for (var b = arguments, c = Array.isArray(b), d = 0, b = c ? b : (0, r.default)(b);;) {
          var e;if (c) {
            if (d >= b.length) break;e = b[d++];
          } else {
            if (d = b.next(), d.done) break;e = d.value;
          }var f = e;if (a.node.type === f) return !0;
        }a = a.parentPath;
      }return !1;
    }function p(a) {
      var b = this.isFunction() ? this : this.findParent(function (a) {
        return a.isFunction();
      });if (b) {
        if (b.isFunctionExpression() || b.isFunctionDeclaration()) {
          var c = b.node.shadow;if (c && (!a || !1 !== c[a])) return b;
        } else if (b.isArrowFunctionExpression()) return b;return null;
      }
    }a("c"), this || self;b.__esModule = !0;var q = a("17"),
        r = e(q);b.findParent = f, b.find = g, b.getFunctionParent = h, b.getStatementParent = i, b.getEarliestCommonAncestorFrom = j, b.getDeepestCommonAncestorFrom = k, b.getAncestry = l, b.isAncestor = m, b.isDescendant = n, b.inType = o, b.inShadow = p;var s = a("11"),
        t = d(s),
        u = a("15a");e(u);
  }), a.registerDynamic("15b", ["17", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b) {
      var c = a.scope.getBinding(b),
          d = [];a.typeAnnotation = n.unionTypeAnnotation(d);var e = [],
          f = g(c, a, e),
          h = j(a, b);if (h) {
        var i = g(c, h.ifStatement);f = f.filter(function (a) {
          return i.indexOf(a) < 0;
        }), d.push(h.typeAnnotation);
      }if (f.length) {
        f = f.concat(e);for (var k = f, m = Array.isArray(k), o = 0, k = m ? k : (0, l.default)(k);;) {
          var p;if (m) {
            if (o >= k.length) break;p = k[o++];
          } else {
            if (o = k.next(), o.done) break;p = o.value;
          }var q = p;d.push(q.getTypeAnnotation());
        }
      }if (d.length) return n.createUnionTypeAnnotation(d);
    }function g(a, b, c) {
      var d = a.constantViolations.slice();return d.unshift(a.path), d.filter(function (a) {
        a = a.resolve();var d = a._guessExecutionStatusRelativeTo(b);return c && "function" === d && c.push(a), "before" === d;
      });
    }function h(a, b) {
      var c = b.node.operator,
          d = b.get("right").resolve(),
          e = b.get("left").resolve(),
          f = void 0;if (e.isIdentifier({ name: a }) ? f = d : d.isIdentifier({ name: a }) && (f = e), f) return "===" === c ? f.getTypeAnnotation() : n.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(c) >= 0 ? n.numberTypeAnnotation() : void 0;if ("===" === c) {
        var g = void 0,
            h = void 0;if (e.isUnaryExpression({ operator: "typeof" }) ? (g = e, h = d) : d.isUnaryExpression({ operator: "typeof" }) && (g = d, h = e), (h || g) && (h = h.resolve(), h.isLiteral())) {
          if ("string" == typeof h.node.value && g.get("argument").isIdentifier({ name: a })) return n.createTypeAnnotationBasedOnTypeof(h.node.value);
        }
      }
    }function i(a) {
      for (var b = void 0; b = a.parentPath;) {
        if (b.isIfStatement() || b.isConditionalExpression()) return "test" === a.key ? void 0 : b;a = b;
      }
    }function j(a, b) {
      var c = i(a);if (c) {
        var d = c.get("test"),
            e = [d],
            f = [];do {
          var g = e.shift().resolve();if (g.isLogicalExpression() && (e.push(g.get("left")), e.push(g.get("right"))), g.isBinaryExpression()) {
            var k = h(b, g);k && f.push(k);
          }
        } while (e.length);return f.length ? { typeAnnotation: n.createUnionTypeAnnotation(f), ifStatement: c } : j(c, b);
      }
    }a("c"), this || self;b.__esModule = !0;var k = a("17"),
        l = e(k);b.default = function (a) {
      if (this.isReferenced()) {
        var b = this.scope.getBinding(a.name);return b ? b.identifier.typeAnnotation ? b.identifier.typeAnnotation : f(this, a.name) : "undefined" === a.name ? n.voidTypeAnnotation() : "NaN" === a.name || "Infinity" === a.name ? n.numberTypeAnnotation() : void a.name;
      }
    };var m = a("11"),
        n = d(m);c.exports = b.default;
  }), a.registerDynamic("15c", ["15b", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f() {
      return this.get("id").isIdentifier() ? this.get("init").getTypeAnnotation() : void 0;
    }function g(a) {
      return a.typeAnnotation;
    }function h(a) {
      if (this.get("callee").isIdentifier()) return E.genericTypeAnnotation(a.callee);
    }function i() {
      return E.stringTypeAnnotation();
    }function j(a) {
      var b = a.operator;return "void" === b ? E.voidTypeAnnotation() : E.NUMBER_UNARY_OPERATORS.indexOf(b) >= 0 ? E.numberTypeAnnotation() : E.STRING_UNARY_OPERATORS.indexOf(b) >= 0 ? E.stringTypeAnnotation() : E.BOOLEAN_UNARY_OPERATORS.indexOf(b) >= 0 ? E.booleanTypeAnnotation() : void 0;
    }function k(a) {
      var b = a.operator;if (E.NUMBER_BINARY_OPERATORS.indexOf(b) >= 0) return E.numberTypeAnnotation();if (E.BOOLEAN_BINARY_OPERATORS.indexOf(b) >= 0) return E.booleanTypeAnnotation();if ("+" === b) {
        var c = this.get("right"),
            d = this.get("left");return d.isBaseType("number") && c.isBaseType("number") ? E.numberTypeAnnotation() : d.isBaseType("string") || c.isBaseType("string") ? E.stringTypeAnnotation() : E.unionTypeAnnotation([E.stringTypeAnnotation(), E.numberTypeAnnotation()]);
      }
    }function l() {
      return E.createUnionTypeAnnotation([this.get("left").getTypeAnnotation(), this.get("right").getTypeAnnotation()]);
    }function m() {
      return E.createUnionTypeAnnotation([this.get("consequent").getTypeAnnotation(), this.get("alternate").getTypeAnnotation()]);
    }function n() {
      return this.get("expressions").pop().getTypeAnnotation();
    }function o() {
      return this.get("right").getTypeAnnotation();
    }function p(a) {
      var b = a.operator;if ("++" === b || "--" === b) return E.numberTypeAnnotation();
    }function q() {
      return E.stringTypeAnnotation();
    }function r() {
      return E.numberTypeAnnotation();
    }function s() {
      return E.booleanTypeAnnotation();
    }function t() {
      return E.nullLiteralTypeAnnotation();
    }function u() {
      return E.genericTypeAnnotation(E.identifier("RegExp"));
    }function v() {
      return E.genericTypeAnnotation(E.identifier("Object"));
    }function w() {
      return E.genericTypeAnnotation(E.identifier("Array"));
    }function x() {
      return w();
    }function y() {
      return E.genericTypeAnnotation(E.identifier("Function"));
    }function z() {
      return B(this.get("callee"));
    }function A() {
      return B(this.get("tag"));
    }function B(a) {
      if (a = a.resolve(), a.isFunction()) {
        if (a.is("async")) return a.is("generator") ? E.genericTypeAnnotation(E.identifier("AsyncIterator")) : E.genericTypeAnnotation(E.identifier("Promise"));if (a.node.returnType) return a.node.returnType;
      }
    }a("c"), this || self;b.__esModule = !0, b.ClassDeclaration = b.ClassExpression = b.FunctionDeclaration = b.ArrowFunctionExpression = b.FunctionExpression = b.Identifier = void 0;var C = a("15b");Object.defineProperty(b, "Identifier", { enumerable: !0, get: function () {
        return e(C).default;
      } }), b.VariableDeclarator = f, b.TypeCastExpression = g, b.NewExpression = h, b.TemplateLiteral = i, b.UnaryExpression = j, b.BinaryExpression = k, b.LogicalExpression = l, b.ConditionalExpression = m, b.SequenceExpression = n, b.AssignmentExpression = o, b.UpdateExpression = p, b.StringLiteral = q, b.NumericLiteral = r, b.BooleanLiteral = s, b.NullLiteral = t, b.RegExpLiteral = u, b.ObjectExpression = v, b.ArrayExpression = w, b.RestElement = x, b.CallExpression = z, b.TaggedTemplateExpression = A;var D = a("11"),
        E = d(D);g.validParent = !0, x.validParent = !0, b.FunctionExpression = y, b.ArrowFunctionExpression = y, b.FunctionDeclaration = y, b.ClassExpression = y, b.ClassDeclaration = y;
  }), a.registerDynamic("15d", ["17", "15c", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f() {
      if (this.typeAnnotation) return this.typeAnnotation;var a = this._getTypeAnnotation() || r.anyTypeAnnotation();return r.isTypeAnnotation(a) && (a = a.typeAnnotation), this.typeAnnotation = a;
    }function g() {
      var a = this.node;{
        if (a) {
          if (a.typeAnnotation) return a.typeAnnotation;var b = p[a.type];return b ? b.call(this, a) : (b = p[this.parentPath.type], b && b.validParent ? this.parentPath.getTypeAnnotation() : void 0);
        }if ("init" === this.key && this.parentPath.isVariableDeclarator()) {
          var c = this.parentPath.parentPath,
              d = c.parentPath;return "left" === c.key && d.isForInStatement() ? r.stringTypeAnnotation() : "left" === c.key && d.isForOfStatement() ? r.anyTypeAnnotation() : r.voidTypeAnnotation();
        }
      }
    }function h(a, b) {
      return i(a, this.getTypeAnnotation(), b);
    }function i(a, b, c) {
      if ("string" === a) return r.isStringTypeAnnotation(b);if ("number" === a) return r.isNumberTypeAnnotation(b);if ("boolean" === a) return r.isBooleanTypeAnnotation(b);if ("any" === a) return r.isAnyTypeAnnotation(b);if ("mixed" === a) return r.isMixedTypeAnnotation(b);if ("empty" === a) return r.isEmptyTypeAnnotation(b);if ("void" === a) return r.isVoidTypeAnnotation(b);if (c) return !1;throw new Error("Unknown base type " + a);
    }function j(a) {
      var b = this.getTypeAnnotation();if (r.isAnyTypeAnnotation(b)) return !0;if (r.isUnionTypeAnnotation(b)) {
        for (var c = b.types, d = Array.isArray(c), e = 0, c = d ? c : (0, n.default)(c);;) {
          var f;if (d) {
            if (e >= c.length) break;f = c[e++];
          } else {
            if (e = c.next(), e.done) break;f = e.value;
          }var g = f;if (r.isAnyTypeAnnotation(g) || i(a, g, !0)) return !0;
        }return !1;
      }return i(a, b, !0);
    }function k(a) {
      var b = this.getTypeAnnotation();if (a = a.getTypeAnnotation(), !r.isAnyTypeAnnotation(b) && r.isFlowBaseAnnotation(b)) return a.type === b.type;
    }function l(a) {
      var b = this.getTypeAnnotation();return r.isGenericTypeAnnotation(b) && r.isIdentifier(b.id, { name: a });
    }a("c"), this || self;b.__esModule = !0;var m = a("17"),
        n = e(m);b.getTypeAnnotation = f, b._getTypeAnnotation = g, b.isBaseType = h, b.couldBeBaseType = j, b.baseTypeStrictlyMatches = k, b.isGenericType = l;var o = a("15c"),
        p = d(o),
        q = a("11"),
        r = d(q);
  }), a.registerDynamic("15e", [], !0, function (a, b, c) {
    this || self;Object.defineProperty(b, "__esModule", { value: !0 }), b.default = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyu]{1,5}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g, b.matchToToken = function (a) {
      var b = { type: "invalid", value: a[0] };return a[1] ? (b.type = "string", b.closed = !(!a[3] && !a[4])) : a[5] ? b.type = "comment" : a[6] ? (b.type = "comment", b.closed = !!a[7]) : a[8] ? b.type = "regex" : a[9] ? b.type = "number" : a[10] ? b.type = "name" : a[11] ? b.type = "punctuator" : a[12] && (b.type = "whitespace"), b;
    };
  }), a.registerDynamic("15f", [], !0, function (a, b, c) {
    "use strict";
    var d = (this || self, /[|\\{}()[\]^$+*?.]/g);c.exports = function (a) {
      if ("string" != typeof a) throw new TypeError("Expected a string");return a.replace(d, "\\$&");
    };
  }), a.registerDynamic("160", [], !0, function (a, b, c) {
    "use strict";
    function d() {
      var a = { modifiers: { reset: [0, 0], bold: [1, 22], dim: [2, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], hidden: [8, 28], strikethrough: [9, 29] }, colors: { black: [30, 39], red: [31, 39], green: [32, 39], yellow: [33, 39], blue: [34, 39], magenta: [35, 39], cyan: [36, 39], white: [37, 39], gray: [90, 39] }, bgColors: { bgBlack: [40, 49], bgRed: [41, 49], bgGreen: [42, 49], bgYellow: [43, 49], bgBlue: [44, 49], bgMagenta: [45, 49], bgCyan: [46, 49], bgWhite: [47, 49] } };return a.colors.grey = a.colors.gray, Object.keys(a).forEach(function (b) {
        var c = a[b];Object.keys(c).forEach(function (b) {
          var d = c[b];a[b] = c[b] = { open: "[" + d[0] + "m", close: "[" + d[1] + "m" };
        }), Object.defineProperty(a, b, { value: c, enumerable: !1 });
      }), a;
    }this || self;c.exports = d();
  }), a.registerDynamic("161", ["162"], !0, function (a, b, c) {
    "use strict";
    var d = (this || self, a("162")());c.exports = function (a) {
      return "string" == typeof a ? a.replace(d, "") : a;
    };
  }), a.registerDynamic("162", [], !0, function (a, b, c) {
    "use strict";
    this || self;c.exports = function () {
      return (/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g
      );
    };
  }), a.registerDynamic("163", ["162"], !0, function (a, b, c) {
    "use strict";
    var d = (this || self, a("162")),
        e = new RegExp(d().source);c.exports = e.test.bind(e);
  }), a.registerDynamic("164", ["c"], !0, function (a, b, c) {
    "use strict";
    var d = a("c"),
        e = (this || self, d.argv),
        f = e.indexOf("--"),
        g = function (a) {
      a = "--" + a;var b = e.indexOf(a);return -1 !== b && (-1 === f || b < f);
    };c.exports = function () {
      return "FORCE_COLOR" in d.env || !(g("no-color") || g("no-colors") || g("color=false")) && (!!(g("color") || g("colors") || g("color=true") || g("color=always")) || !(d.stdout && !d.stdout.isTTY) && ("win32" === d.platform || "COLORTERM" in d.env || "dumb" !== d.env.TERM && !!/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(d.env.TERM)));
    }();
  }), a.registerDynamic("165", ["15f", "160", "161", "163", "164", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      this.enabled = a && void 0 !== a.enabled ? a.enabled : m;
    }function e(a) {
      var b = function () {
        return f.apply(b, arguments);
      };return b._styles = a, b.enabled = this.enabled, b.__proto__ = q, b;
    }function f() {
      var a = arguments,
          b = a.length,
          c = 0 !== b && String(arguments[0]);if (b > 1) for (var d = 1; d < b; d++) c += " " + a[d];if (!this.enabled || !c) return c;var e = this._styles,
          f = e.length,
          g = j.dim.open;for (!o || -1 === e.indexOf("gray") && -1 === e.indexOf("grey") || (j.dim.open = ""); f--;) {
        var h = j[e[f]];c = h.open + c.replace(h.closeRe, h.open) + h.close;
      }return j.dim.open = g, c;
    }function g() {
      var a = {};return Object.keys(p).forEach(function (b) {
        a[b] = { get: function () {
            return e.call(this, [b]);
          } };
      }), a;
    }var h = a("c"),
        i = (this || self, a("15f")),
        j = a("160"),
        k = a("161"),
        l = a("163"),
        m = a("164"),
        n = Object.defineProperties,
        o = "win32" === h.platform && !/^xterm/i.test(h.env.TERM);o && (j.blue.open = "[94m");var p = function () {
      var a = {};return Object.keys(j).forEach(function (b) {
        j[b].closeRe = new RegExp(i(j[b].close), "g"), a[b] = { get: function () {
            return e.call(this, this._styles.concat(b));
          } };
      }), a;
    }(),
        q = n(function () {}, p);n(d.prototype, g()), c.exports = new d(), c.exports.styles = j, c.exports.hasColor = l, c.exports.stripColor = k, c.exports.supportsColor = m;
  }), a.registerDynamic("da", ["15e", "104", "165"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      return { keyword: a.cyan, capitalized: a.yellow, jsx_tag: a.yellow, punctuator: a.yellow, number: a.magenta, string: a.green, regex: a.magenta, comment: a.grey, invalid: a.white.bgRed.bold, gutter: a.grey, marker: a.red.bold };
    }function f(a) {
      var b = a.slice(-2),
          c = b[0],
          d = b[1],
          e = (0, h.matchToToken)(a);if ("name" === e.type) {
        if (k.default.keyword.isReservedWordES6(e.value)) return "keyword";if (o.test(e.value) && ("<" === d[c - 1] || "</" == d.substr(c - 2, 2))) return "jsx_tag";if (e.value[0] !== e.value[0].toLowerCase()) return "capitalized";
      }return "punctuator" === e.type && p.test(e.value) ? "bracket" : e.type;
    }function g(a, b) {
      return b.replace(i.default, function () {
        for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];var e = f(c),
            g = a[e];return g ? c[0].split(n).map(function (a) {
          return g(a);
        }).join("\n") : c[0];
      });
    }this || self;b.__esModule = !0, b.default = function (a, b, c) {
      var d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};c = Math.max(c, 0);var f = d.highlightCode && m.default.supportsColor || d.forceColor,
          h = m.default;d.forceColor && (h = new m.default.constructor({ enabled: !0 }));var i = function (a, b) {
        return f ? a(b) : b;
      },
          j = e(h);f && (a = g(j, a));var k = d.linesAbove || 2,
          l = d.linesBelow || 3,
          o = a.split(n),
          p = Math.max(b - (k + 1), 0),
          q = Math.min(o.length, b + l);b || c || (p = 0, q = o.length);var r = String(q).length,
          s = o.slice(p, q).map(function (a, d) {
        var e = p + 1 + d,
            f = (" " + e).slice(-r),
            g = " " + f + " | ";if (e === b) {
          var h = "";if (c) {
            var k = a.slice(0, c - 1).replace(/[^\t]/g, " ");h = ["\n ", i(j.gutter, g.replace(/\d/g, " ")), k, i(j.marker, "^")].join("");
          }return [i(j.marker, ">"), i(j.gutter, g), a, h].join("");
        }return " " + i(j.gutter, g) + a;
      }).join("\n");return f ? h.reset(s) : s;
    };var h = a("15e"),
        i = d(h),
        j = a("104"),
        k = d(j),
        l = a("165"),
        m = d(l),
        n = /\r\n|[\n\r\u2028\u2029]/,
        o = /^[a-z][\w-]*$/i,
        p = /^[()\[\]{}]$/;c.exports = b.default;
  }), a.registerDynamic("166", ["17", "da", "d5", "15a", "dc", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      this.resync(), a = this._verifyNodeList(a), v.inheritLeadingComments(a[0], this.node), v.inheritTrailingComments(a[a.length - 1], this.node), this.node = this.container[this.key] = null, this.insertAfter(a), this.node ? this.requeue() : this.remove();
    }function g(a) {
      this.resync();try {
        a = "(" + a + ")", a = (0, t.parse)(a);
      } catch (c) {
        var b = c.loc;throw b && (c.message += " - make sure this is an expression.", c.message += "\n" + (0, o.default)(a, b.line, b.column + 1)), c;
      }return a = a.program.body[0].expression, q.default.removeProperties(a), this.replaceWith(a);
    }function h(a) {
      if (this.resync(), this.removed) throw new Error("You can't replace this node, we've already removed it");if (a instanceof s.default && (a = a.node), !a) throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");if (this.node !== a) {
        if (this.isProgram() && !v.isProgram(a)) throw new Error("You can only replace a Program root node with another Program node");if (Array.isArray(a)) throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");if ("string" == typeof a) throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");if (this.isNodeType("Statement") && v.isExpression(a) && (this.canHaveVariableDeclarationOrExpression() || this.canSwapBetweenExpressionAndStatement(a) || (a = v.expressionStatement(a))), this.isNodeType("Expression") && v.isStatement(a) && !this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(a)) return this.replaceExpressionWithStatements([a]);var b = this.node;b && (v.inheritsComments(a, b), v.removeComments(b)), this._replaceWith(a), this.type = a.type, this.setScope(), this.requeue();
      }
    }function i(a) {
      if (!this.container) throw new ReferenceError("Container is falsy");this.inList ? v.validate(this.parent, this.key, [a]) : v.validate(this.parent, this.key, a), this.debug(function () {
        return "Replace with " + (a && a.type);
      }), this.node = this.container[this.key] = a;
    }function j(a) {
      this.resync();var b = v.toSequenceExpression(a, this.scope);if (v.isSequenceExpression(b)) {
        var c = b.expressions;c.length >= 2 && this.parentPath.isExpressionStatement() && this._maybePopFromStatements(c), 1 === c.length ? this.replaceWith(c[0]) : this.replaceWith(b);
      } else {
        if (!b) {
          var d = v.functionExpression(null, [], v.blockStatement(a));d.shadow = !0, this.replaceWith(v.callExpression(d, [])), this.traverse(w);for (var e = this.get("callee").getCompletionRecords(), f = e, g = Array.isArray(f), h = 0, f = g ? f : (0, m.default)(f);;) {
            var i;if (g) {
              if (h >= f.length) break;i = f[h++];
            } else {
              if (h = f.next(), h.done) break;i = h.value;
            }var j = i;if (j.isExpressionStatement()) {
              var k = j.findParent(function (a) {
                return a.isLoop();
              });if (k) {
                var l = k.getData("expressionReplacementReturnUid");if (l) l = v.identifier(l.name);else {
                  var n = this.get("callee");l = n.scope.generateDeclaredUidIdentifier("ret"), n.get("body").pushContainer("body", v.returnStatement(l)), k.setData("expressionReplacementReturnUid", l);
                }j.get("expression").replaceWith(v.assignmentExpression("=", l, j.node.expression));
              } else j.replaceWith(v.returnStatement(j.node.expression));
            }
          }return this.node;
        }this.replaceWith(b);
      }
    }function k(a) {
      return this.resync(), Array.isArray(a) ? Array.isArray(this.container) ? (a = this._verifyNodeList(a), this._containerInsertAfter(a), this.remove()) : this.replaceWithMultiple(a) : this.replaceWith(a);
    }a("c"), this || self;b.__esModule = !0;var l = a("17"),
        m = e(l);b.replaceWithMultiple = f, b.replaceWithSourceString = g, b.replaceWith = h, b._replaceWith = i, b.replaceExpressionWithStatements = j, b.replaceInline = k;var n = a("da"),
        o = e(n),
        p = a("d5"),
        q = e(p),
        r = a("15a"),
        s = e(r),
        t = a("dc"),
        u = a("11"),
        v = d(u),
        w = { Function: function (a) {
        a.skip();
      }, VariableDeclaration: function (a) {
        if ("var" === a.node.kind) {
          var b = a.getBindingIdentifiers();for (var c in b) a.scope.push({ id: b[c] });for (var d = [], e = a.node.declarations, f = Array.isArray(e), g = 0, e = f ? e : (0, m.default)(e);;) {
            var h;if (f) {
              if (g >= e.length) break;h = e[g++];
            } else {
              if (g = e.next(), g.done) break;h = g.value;
            }var i = h;i.init && d.push(v.expressionStatement(v.assignmentExpression("=", i.id, i.init)));
          }a.replaceWithMultiple(d);
        }
      } };
  }), a.registerDynamic("167", ["168", "39", "169", "16a", "16b", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self),
        d = a("168"),
        e = a("39"),
        f = a("169"),
        g = a("16a"),
        h = a("16b")("species");c.exports = function (a) {
      var b = "function" == typeof e[a] ? e[a] : d[a];g && b && !b[h] && f.f(b, h, { configurable: !0, get: function () {
          return this;
        } });
    };
  }), a.registerDynamic("16c", ["169", "16d", "16e", "111", "16f", "170", "171", "172", "173", "167", "16a", "174", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self, a("169").f),
        e = a("16d"),
        f = a("16e"),
        g = a("111"),
        h = a("16f"),
        i = a("170"),
        j = a("171"),
        k = a("172"),
        l = a("173"),
        m = a("167"),
        n = a("16a"),
        o = a("174").fastKey,
        p = n ? "_s" : "size",
        q = function (a, b) {
      var c,
          d = o(b);if ("F" !== d) return a._i[d];for (c = a._f; c; c = c.n) if (c.k == b) return c;
    };c.exports = { getConstructor: function (a, b, c, k) {
        var l = a(function (a, d) {
          h(a, l, b, "_i"), a._i = e(null), a._f = void 0, a._l = void 0, a[p] = 0, void 0 != d && j(d, c, a[k], a);
        });return f(l.prototype, { clear: function () {
            for (var a = this, b = a._i, c = a._f; c; c = c.n) c.r = !0, c.p && (c.p = c.p.n = void 0), delete b[c.i];a._f = a._l = void 0, a[p] = 0;
          }, delete: function (a) {
            var b = this,
                c = q(b, a);if (c) {
              var d = c.n,
                  e = c.p;delete b._i[c.i], c.r = !0, e && (e.n = d), d && (d.p = e), b._f == c && (b._f = d), b._l == c && (b._l = e), b[p]--;
            }return !!c;
          }, forEach: function (a) {
            h(this, l, "forEach");for (var b, c = g(a, arguments.length > 1 ? arguments[1] : void 0, 3); b = b ? b.n : this._f;) for (c(b.v, b.k, this); b && b.r;) b = b.p;
          }, has: function (a) {
            return !!q(this, a);
          } }), n && d(l.prototype, "size", { get: function () {
            return i(this[p]);
          } }), l;
      }, def: function (a, b, c) {
        var d,
            e,
            f = q(a, b);return f ? f.v = c : (a._l = f = { i: e = o(b, !0), k: b, v: c, p: d = a._l, n: void 0, r: !1 }, a._f || (a._f = f), d && (d.n = f), a[p]++, "F" !== e && (a._i[e] = f)), a;
      }, getEntry: q, setStrong: function (a, b, c) {
        k(a, b, function (a, b) {
          this._t = a, this._k = b, this._l = void 0;
        }, function () {
          for (var a = this, b = a._k, c = a._l; c && c.r;) c = c.p;return a._t && (a._l = c = c ? c.n : a._t._f) ? "keys" == b ? l(0, c.k) : "values" == b ? l(0, c.v) : l(0, [c.k, c.v]) : (a._t = void 0, l(1));
        }, c ? "entries" : "values", !c, !0), m(b);
      } };
  }), a.registerDynamic("175", ["16c", "35", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self, a("16c"));c.exports = a("35")("Map", function (a) {
      return function () {
        return a(this, arguments.length > 0 ? arguments[0] : void 0);
      };
    }, { get: function (a) {
        var b = d.getEntry(this, a);return b && b.v;
      }, set: function (a, b) {
        return d.def(this, 0 === a ? 0 : a, b);
      } }, d, !0);
  }), a.registerDynamic("176", ["171", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("171"));c.exports = function (a, b) {
      var c = [];return d(a, !1, c.push, c, b), c;
    };
  }), a.registerDynamic("177", ["178", "176", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("178")),
        e = a("176");c.exports = function (a) {
      return function () {
        if (d(this) != a) throw TypeError(a + "#toJSON isn't generic");return e(this);
      };
    };
  }), a.registerDynamic("179", ["cb", "177", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("cb"));d(d.P + d.R, "Map", { toJSON: a("177")("Map") });
  }), a.registerDynamic("17a", ["37", "17b", "38", "175", "179", "39", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("37"), a("17b"), a("38"), a("175"), a("179"), c.exports = a("39").Map;
  }), a.registerDynamic("d4", ["17a"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("17a"), __esModule: !0 };
  }), a.registerDynamic("17c", ["32", "17", "d4", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e() {
      var a = this.evaluate();if (a.confident) return !!a.value;
    }function f() {
      function a(a) {
        d && (e = a, d = !1);
      }function b(b) {
        var e = b.node;if (f.has(e)) {
          var g = f.get(e);return g.resolved ? g.value : void a(b);
        }var h = { resolved: !1 };f.set(e, h);var i = c(b);return d && (h.resolved = !0, h.value = i), i;
      }function c(c) {
        if (d) {
          var e = c.node;if (c.isSequenceExpression()) {
            var f = c.get("expressions");return b(f[f.length - 1]);
          }if (c.isStringLiteral() || c.isNumericLiteral() || c.isBooleanLiteral()) return e.value;if (c.isNullLiteral()) return null;if (c.isTemplateLiteral()) {
            for (var h = "", j = 0, l = c.get("expressions"), m = e.quasis, p = Array.isArray(m), q = 0, m = p ? m : (0, k.default)(m);;) {
              var r;if (p) {
                if (q >= m.length) break;r = m[q++];
              } else {
                if (q = m.next(), q.done) break;r = q.value;
              }var s = r;if (!d) break;h += s.value.cooked;var t = l[j++];t && (h += String(b(t)));
            }if (!d) return;return h;
          }if (c.isConditionalExpression()) {
            var u = b(c.get("test"));if (!d) return;return b(u ? c.get("consequent") : c.get("alternate"));
          }if (c.isExpressionWrapper()) return b(c.get("expression"));if (c.isMemberExpression() && !c.parentPath.isCallExpression({ callee: e })) {
            var v = c.get("property"),
                w = c.get("object");if (w.isLiteral() && v.isIdentifier()) {
              var x = w.node.value,
                  y = void 0 === x ? "undefined" : (0, i.default)(x);if ("number" === y || "string" === y) return x[v.node.name];
            }
          }if (c.isReferencedIdentifier()) {
            var z = c.scope.getBinding(e.name);if (z && z.constantViolations.length > 0) return a(z.path);if (z && c.node.start < z.path.node.end) return a(z.path);if (z && z.hasValue) return z.value;if ("undefined" === e.name) return z ? a(z.path) : void 0;if ("Infinity" === e.name) return z ? a(z.path) : 1 / 0;if ("NaN" === e.name) return z ? a(z.path) : NaN;var A = c.resolve();return A === c ? a(c) : b(A);
          }if (c.isUnaryExpression({ prefix: !0 })) {
            if ("void" === e.operator) return;var B = c.get("argument");if ("typeof" === e.operator && (B.isFunction() || B.isClass())) return "function";var C = b(B);if (!d) return;switch (e.operator) {case "!":
                return !C;case "+":
                return +C;case "-":
                return -C;case "~":
                return ~C;case "typeof":
                return void 0 === C ? "undefined" : (0, i.default)(C);}
          }if (c.isArrayExpression()) {
            for (var D = [], E = c.get("elements"), F = E, G = Array.isArray(F), H = 0, F = G ? F : (0, k.default)(F);;) {
              var I;if (G) {
                if (H >= F.length) break;I = F[H++];
              } else {
                if (H = F.next(), H.done) break;I = H.value;
              }var J = I;if (J = J.evaluate(), !J.confident) return a(J);D.push(J.value);
            }return D;
          }if (c.isObjectExpression()) {
            for (var K = {}, L = c.get("properties"), M = L, N = Array.isArray(M), O = 0, M = N ? M : (0, k.default)(M);;) {
              var P;if (N) {
                if (O >= M.length) break;P = M[O++];
              } else {
                if (O = M.next(), O.done) break;P = O.value;
              }var Q = P;if (Q.isObjectMethod() || Q.isSpreadProperty()) return a(Q);var R = Q.get("key"),
                  S = R;if (Q.node.computed) {
                if (S = S.evaluate(), !S.confident) return a(R);S = S.value;
              } else S = S.isIdentifier() ? S.node.name : S.node.value;var T = Q.get("value"),
                  U = T.evaluate();if (!U.confident) return a(T);U = U.value, K[S] = U;
            }return K;
          }if (c.isLogicalExpression()) {
            var V = d,
                W = b(c.get("left")),
                X = d;d = V;var Y = b(c.get("right")),
                Z = d;switch (d = X && Z, e.operator) {case "||":
                if (W && X) return d = !0, W;if (!d) return;return W || Y;case "&&":
                if ((!W && X || !Y && Z) && (d = !0), !d) return;return W && Y;}
          }if (c.isBinaryExpression()) {
            var $ = b(c.get("left"));if (!d) return;var _ = b(c.get("right"));if (!d) return;switch (e.operator) {case "-":
                return $ - _;case "+":
                return $ + _;case "/":
                return $ / _;case "*":
                return $ * _;case "%":
                return $ % _;case "**":
                return Math.pow($, _);case "<":
                return $ < _;case ">":
                return $ > _;case "<=":
                return $ <= _;case ">=":
                return $ >= _;case "==":
                return $ == _;case "!=":
                return $ != _;case "===":
                return $ === _;case "!==":
                return $ !== _;case "|":
                return $ | _;case "&":
                return $ & _;case "^":
                return $ ^ _;case "<<":
                return $ << _;case ">>":
                return $ >> _;case ">>>":
                return $ >>> _;}
          }if (c.isCallExpression()) {
            var aa = c.get("callee"),
                ba = void 0,
                ca = void 0;if (aa.isIdentifier() && !c.scope.getBinding(aa.node.name, !0) && n.indexOf(aa.node.name) >= 0 && (ca = g[e.callee.name]), aa.isMemberExpression()) {
              var da = aa.get("object"),
                  ea = aa.get("property");if (da.isIdentifier() && ea.isIdentifier() && n.indexOf(da.node.name) >= 0 && o.indexOf(ea.node.name) < 0 && (ba = g[da.node.name], ca = ba[ea.node.name]), da.isLiteral() && ea.isIdentifier()) {
                var fa = (0, i.default)(da.node.value);"string" !== fa && "number" !== fa || (ba = da.node.value, ca = ba[ea.node.name]);
              }
            }if (ca) {
              var ga = c.get("arguments").map(b);if (!d) return;return ca.apply(ba, ga);
            }
          }a(c);
        }
      }var d = !0,
          e = void 0,
          f = new m.default(),
          h = b(this);return d || (h = void 0), { confident: d, deopt: e, value: h };
    }var g = (a("c"), this || self);b.__esModule = !0;var h = a("32"),
        i = d(h),
        j = a("17"),
        k = d(j),
        l = a("d4"),
        m = d(l);b.evaluateTruthy = e, b.evaluate = f;var n = ["String", "Number", "Math"],
        o = ["random"];
  }), a.registerDynamic("17d", ["11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e() {
      var a = this.node,
          b = void 0;if (this.isMemberExpression()) b = a.property;else {
        if (!this.isProperty() && !this.isMethod()) throw new ReferenceError("todo");b = a.key;
      }return a.computed || i.isIdentifier(b) && (b = i.stringLiteral(b.name)), b;
    }function f() {
      return i.ensureBlock(this.node);
    }function g() {
      if (this.isArrowFunctionExpression()) {
        this.ensureBlock();var a = this.node;a.expression = !1, a.type = "FunctionExpression", a.shadow = a.shadow || !0;
      }
    }a("c"), this || self;b.__esModule = !0, b.toComputedKey = e, b.ensureBlock = f, b.arrowFunctionToShadowed = g;var h = a("11"),
        i = d(h);
  }), a.registerDynamic("17e", ["17", "aa", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b) {
      function c(a) {
        var b = d[f];return "*" === b || a === b;
      }if (!this.isMemberExpression()) return !1;for (var d = a.split("."), e = [this.node], f = 0; e.length;) {
        var g = e.shift();if (b && f === d.length) return !0;if (B.isIdentifier(g)) {
          if (!c(g.name)) return !1;
        } else if (B.isLiteral(g)) {
          if (!c(g.value)) return !1;
        } else {
          if (B.isMemberExpression(g)) {
            if (g.computed && !B.isLiteral(g.property)) return !1;e.unshift(g.property), e.unshift(g.object);continue;
          }if (!B.isThisExpression(g)) return !1;if (!c("this")) return !1;
        }if (++f > d.length) return !1;
      }return f === d.length;
    }function g(a) {
      var b = this.node && this.node[a];return b && Array.isArray(b) ? !!b.length : !!b;
    }function h() {
      return this.scope.isStatic(this.node);
    }function i(a) {
      return !this.has(a);
    }function j(a, b) {
      return this.node[a] === b;
    }function k(a) {
      return B.isType(this.type, a);
    }function l() {
      return ("init" === this.key || "left" === this.key) && this.parentPath.isFor();
    }function m(a) {
      return !("body" !== this.key || !this.parentPath.isArrowFunctionExpression()) && (this.isExpression() ? B.isBlockStatement(a) : !!this.isBlockStatement() && B.isExpression(a));
    }function n(a) {
      var b = this,
          c = !0;do {
        var d = b.container;if (b.isFunction() && !c) return !!a;if (c = !1, Array.isArray(d) && b.key !== d.length - 1) return !1;
      } while ((b = b.parentPath) && !b.isProgram());return !0;
    }function o() {
      return !this.parentPath.isLabeledStatement() && !B.isBlockStatement(this.container) && (0, z.default)(B.STATEMENT_OR_BLOCK_KEYS, this.key);
    }function p(a, b) {
      if (!this.isReferencedIdentifier()) return !1;var c = this.scope.getBinding(this.node.name);if (!c || "module" !== c.kind) return !1;var d = c.path,
          e = d.parentPath;return !!e.isImportDeclaration() && e.node.source.value === a && (!b || !(!d.isImportDefaultSpecifier() || "default" !== b) || !(!d.isImportNamespaceSpecifier() || "*" !== b) || !(!d.isImportSpecifier() || d.node.imported.name !== b));
    }function q() {
      var a = this.node;return a.end ? this.hub.file.code.slice(a.start, a.end) : "";
    }function r(a) {
      return "after" !== this._guessExecutionStatusRelativeTo(a);
    }function s(a) {
      var b = a.scope.getFunctionParent(),
          c = this.scope.getFunctionParent();if (b.node !== c.node) {
        var d = this._guessExecutionStatusRelativeToDifferentFunctions(b);if (d) return d;a = b.path;
      }var e = a.getAncestry();if (e.indexOf(this) >= 0) return "after";var f = this.getAncestry(),
          g = void 0,
          h = void 0,
          i = void 0;for (i = 0; i < f.length; i++) {
        var j = f[i];if ((h = e.indexOf(j)) >= 0) {
          g = j;break;
        }
      }if (!g) return "before";var k = e[h - 1],
          l = f[i - 1];return k && l ? k.listKey && k.container === l.container ? k.key > l.key ? "before" : "after" : B.VISITOR_KEYS[k.type].indexOf(k.key) > B.VISITOR_KEYS[l.type].indexOf(l.key) ? "before" : "after" : "before";
    }function t(a) {
      var b = a.path;if (b.isFunctionDeclaration()) {
        var c = b.scope.getBinding(b.node.id.name);if (!c.references) return "before";for (var d = c.referencePaths, e = d, f = Array.isArray(e), g = 0, e = f ? e : (0, x.default)(e);;) {
          var h;if (f) {
            if (g >= e.length) break;h = e[g++];
          } else {
            if (g = e.next(), g.done) break;h = g.value;
          }var i = h;if ("callee" !== i.key || !i.parentPath.isCallExpression()) return;
        }for (var j = void 0, k = d, l = Array.isArray(k), m = 0, k = l ? k : (0, x.default)(k);;) {
          var n;if (l) {
            if (m >= k.length) break;n = k[m++];
          } else {
            if (m = k.next(), m.done) break;n = m.value;
          }var o = n;if (!!!o.find(function (a) {
            return a.node === b.node;
          })) {
            var p = this._guessExecutionStatusRelativeTo(o);if (j) {
              if (j !== p) return;
            } else j = p;
          }
        }return j;
      }
    }function u(a, b) {
      return this._resolve(a, b) || this;
    }function v(a, b) {
      if (!(b && b.indexOf(this) >= 0)) if (b = b || [], b.push(this), this.isVariableDeclarator()) {
        if (this.get("id").isIdentifier()) return this.get("init").resolve(a, b);
      } else if (this.isReferencedIdentifier()) {
        var c = this.scope.getBinding(this.node.name);if (!c) return;if (!c.constant) return;if ("module" === c.kind) return;if (c.path !== this) {
          var d = c.path.resolve(a, b);if (this.find(function (a) {
            return a.node === d.node;
          })) return;return d;
        }
      } else {
        if (this.isTypeCastExpression()) return this.get("expression").resolve(a, b);if (a && this.isMemberExpression()) {
          var e = this.toComputedKey();if (!B.isLiteral(e)) return;var f = e.value,
              g = this.get("object").resolve(a, b);if (g.isObjectExpression()) for (var h = g.get("properties"), i = h, j = Array.isArray(i), k = 0, i = j ? i : (0, x.default)(i);;) {
            var l;if (j) {
              if (k >= i.length) break;l = i[k++];
            } else {
              if (k = i.next(), k.done) break;l = k.value;
            }var m = l;if (m.isProperty()) {
              var n = m.get("key"),
                  o = m.isnt("computed") && n.isIdentifier({ name: f });if (o = o || n.isLiteral({ value: f })) return m.get("value").resolve(a, b);
            }
          } else if (g.isArrayExpression() && !isNaN(+f)) {
            var p = g.get("elements"),
                q = p[f];if (q) return q.resolve(a, b);
          }
        }
      }
    }a("c"), this || self;b.__esModule = !0, b.is = void 0;var w = a("17"),
        x = e(w);b.matchesPattern = f, b.has = g, b.isStatic = h, b.isnt = i, b.equals = j, b.isNodeType = k, b.canHaveVariableDeclarationOrExpression = l, b.canSwapBetweenExpressionAndStatement = m, b.isCompletionRecord = n, b.isStatementOrBlock = o, b.referencesImport = p, b.getSource = q, b.willIMaybeExecuteBefore = r, b._guessExecutionStatusRelativeTo = s, b._guessExecutionStatusRelativeToDifferentFunctions = t, b.resolve = u, b._resolve = v;var y = a("aa"),
        z = e(y),
        A = a("11"),
        B = d(A);b.is = g;
  }), a.registerDynamic("17f", ["17", "d5", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      var b = this.opts;return this.debug(function () {
        return a;
      }), !(!this.node || !this._call(b[a])) || !!this.node && this._call(b[this.node.type] && b[this.node.type][a]);
    }function f(a) {
      if (!a) return !1;for (var b = a, c = Array.isArray(b), d = 0, b = c ? b : (0, z.default)(b);;) {
        var e;if (c) {
          if (d >= b.length) break;e = b[d++];
        } else {
          if (d = b.next(), d.done) break;e = d.value;
        }var f = e;if (f) {
          var g = this.node;if (!g) return !0;if (f.call(this.state, this, this.state)) throw new Error("Unexpected return value from visitor method " + f);if (this.node !== g) return !0;if (this.shouldStop || this.shouldSkip || this.removed) return !0;
        }
      }return !1;
    }function g() {
      var a = this.opts.blacklist;return a && a.indexOf(this.node.type) > -1;
    }function h() {
      return !!this.node && !this.isBlacklisted() && (!this.opts.shouldSkip || !this.opts.shouldSkip(this)) && (this.call("enter") || this.shouldSkip ? (this.debug(function () {
        return "Skip...";
      }), this.shouldStop) : (this.debug(function () {
        return "Recursing into...";
      }), B.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys), this.call("exit"), this.shouldStop));
    }function i() {
      this.shouldSkip = !0;
    }function j(a) {
      this.skipKeys[a] = !0;
    }function k() {
      this.shouldStop = !0, this.shouldSkip = !0;
    }function l() {
      if (!this.opts || !this.opts.noScope) {
        var a = this.context && this.context.scope;if (!a) for (var b = this.parentPath; b && !a;) {
          if (b.opts && b.opts.noScope) return;a = b.scope, b = b.parentPath;
        }this.scope = this.getScope(a), this.scope && this.scope.init();
      }
    }function m(a) {
      return this.shouldSkip = !1, this.shouldStop = !1, this.removed = !1, this.skipKeys = {}, a && (this.context = a, this.state = a.state, this.opts = a.opts), this.setScope(), this;
    }function n() {
      this.removed || (this._resyncParent(), this._resyncList(), this._resyncKey());
    }function o() {
      this.parentPath && (this.parent = this.parentPath.node);
    }function p() {
      if (this.container && this.node !== this.container[this.key]) {
        if (Array.isArray(this.container)) {
          for (var a = 0; a < this.container.length; a++) if (this.container[a] === this.node) return this.setKey(a);
        } else for (var b in this.container) if (this.container[b] === this.node) return this.setKey(b);this.key = null;
      }
    }function q() {
      if (this.parent && this.inList) {
        var a = this.parent[this.listKey];this.container !== a && (this.container = a || null);
      }
    }function r() {
      null != this.key && this.container && this.container[this.key] === this.node || this._markRemoved();
    }function s() {
      this.contexts.pop(), this.setContext(this.contexts[this.contexts.length - 1]);
    }function t(a) {
      this.contexts.push(a), this.setContext(a);
    }function u(a, b, c, d) {
      this.inList = !!c, this.listKey = c, this.parentKey = c || d, this.container = b, this.parentPath = a || this.parentPath, this.setKey(d);
    }function v(a) {
      this.key = a, this.node = this.container[this.key], this.type = this.node && this.node.type;
    }function w() {
      var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this;if (!a.removed) for (var b = this.contexts, c = b, d = Array.isArray(c), e = 0, c = d ? c : (0, z.default)(c);;) {
        var f;if (d) {
          if (e >= c.length) break;f = c[e++];
        } else {
          if (e = c.next(), e.done) break;f = e.value;
        }var g = f;g.maybeQueue(a);
      }
    }function x() {
      for (var a = this, b = this.contexts; !b.length;) a = a.parentPath, b = a.contexts;return b;
    }a("c"), this || self;b.__esModule = !0;var y = a("17"),
        z = d(y);b.call = e, b._call = f, b.isBlacklisted = g, b.visit = h, b.skip = i, b.skipKey = j, b.stop = k, b.setScope = l, b.setContext = m, b.resync = n, b._resyncParent = o, b._resyncKey = p, b._resyncList = q, b._resyncRemoved = r, b.popContext = s, b.pushContext = t, b.setup = u, b.setKey = v, b.requeue = w, b._getQueueContexts = x;var A = a("d5"),
        B = d(A);
  }), a.registerDynamic("180", ["c"], !0, function (a, b, c) {
    "use strict";
    a("c"), this || self;b.__esModule = !0;b.hooks = [function (a, b) {
      if ("test" === a.key && (b.isWhile() || b.isSwitchCase()) || "declaration" === a.key && b.isExportDeclaration() || "body" === a.key && b.isLabeledStatement() || "declarations" === a.listKey && b.isVariableDeclaration() && 1 === b.node.declarations.length || "expression" === a.key && b.isExpressionStatement()) return b.remove(), !0;
    }, function (a, b) {
      if (b.isSequenceExpression() && 1 === b.node.expressions.length) return b.replaceWith(b.node.expressions[0]), !0;
    }, function (a, b) {
      if (b.isBinary()) return "left" === a.key ? b.replaceWith(b.node.right) : b.replaceWith(b.node.left), !0;
    }, function (a, b) {
      if (b.isIfStatement() && ("consequent" === a.key || "alternate" === a.key) || "body" === a.key && (b.isLoop() || b.isArrowFunctionExpression())) return a.replaceWith({ type: "BlockStatement", body: [] }), !0;
    }];
  }), a.registerDynamic("181", ["17", "180", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e() {
      if (this._assertUnremoved(), this.resync(), this._callRemovalHooks()) return void this._markRemoved();this.shareCommentsWithSiblings(), this._remove(), this._markRemoved();
    }function f() {
      for (var a = l.hooks, b = Array.isArray(a), c = 0, a = b ? a : (0, k.default)(a);;) {
        var d;if (b) {
          if (c >= a.length) break;d = a[c++];
        } else {
          if (c = a.next(), c.done) break;d = c.value;
        }if (d(this, this.parentPath)) return !0;
      }
    }function g() {
      Array.isArray(this.container) ? (this.container.splice(this.key, 1), this.updateSiblingKeys(this.key, -1)) : this._replaceWith(null);
    }function h() {
      this.shouldSkip = !0, this.removed = !0, this.node = null;
    }function i() {
      if (this.removed) throw this.buildCodeFrameError("NodePath has been removed so is read-only.");
    }a("c"), this || self;b.__esModule = !0;var j = a("17"),
        k = d(j);b.remove = e, b._callRemovalHooks = f, b._remove = g, b._markRemoved = h, b._assertUnremoved = i;var l = a("180");
  }), a.registerDynamic("1f", [], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function (a, b) {
      if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function");
    };
  }), a.registerDynamic("182", ["17", "1f", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var f = a("17"),
        g = e(f),
        h = a("1f"),
        i = e(h),
        j = a("11"),
        k = d(j),
        l = { ReferencedIdentifier: function (a, b) {
        if (!a.isJSXIdentifier() || !j.react.isCompatTag(a.node.name) || a.parentPath.isJSXMemberExpression()) {
          if ("this" === a.node.name) {
            var c = a.scope;do {
              if (c.path.isFunction() && !c.path.isArrowFunctionExpression()) break;
            } while (c = c.parent);c && b.breakOnScopePaths.push(c.path);
          }var d = a.scope.getBinding(a.node.name);d && d === b.scope.getBinding(a.node.name) && (b.bindings[a.node.name] = d);
        }
      } },
        m = function () {
      function a(b, c) {
        (0, i.default)(this, a), this.breakOnScopePaths = [], this.bindings = {}, this.scopes = [], this.scope = c, this.path = b, this.attachAfter = !1;
      }return a.prototype.isCompatibleScope = function (a) {
        for (var b in this.bindings) {
          var c = this.bindings[b];if (!a.bindingIdentifierEquals(b, c.identifier)) return !1;
        }return !0;
      }, a.prototype.getCompatibleScopes = function () {
        var a = this.path.scope;do {
          if (!this.isCompatibleScope(a)) break;if (this.scopes.push(a), this.breakOnScopePaths.indexOf(a.path) >= 0) break;
        } while (a = a.parent);
      }, a.prototype.getAttachmentPath = function () {
        var a = this._getAttachmentPath();if (a) {
          var b = a.scope;if (b.path === a && (b = a.scope.parent), b.path.isProgram() || b.path.isFunction()) for (var c in this.bindings) if (b.hasOwnBinding(c)) {
            var d = this.bindings[c];if ("param" !== d.kind && this.getAttachmentParentForPath(d.path).key > a.key) {
              this.attachAfter = !0, a = d.path;for (var e = d.constantViolations, f = Array.isArray(e), h = 0, e = f ? e : (0, g.default)(e);;) {
                var i;if (f) {
                  if (h >= e.length) break;i = e[h++];
                } else {
                  if (h = e.next(), h.done) break;i = h.value;
                }var j = i;this.getAttachmentParentForPath(j).key > a.key && (a = j);
              }
            }
          }return a.parentPath.isExportDeclaration() && (a = a.parentPath), a;
        }
      }, a.prototype._getAttachmentPath = function () {
        var a = this.scopes,
            b = a.pop();if (b) {
          if (b.path.isFunction()) {
            if (this.hasOwnParamBindings(b)) {
              if (this.scope === b) return;return b.path.get("body").get("body")[0];
            }return this.getNextScopeAttachmentParent();
          }return b.path.isProgram() ? this.getNextScopeAttachmentParent() : void 0;
        }
      }, a.prototype.getNextScopeAttachmentParent = function () {
        var a = this.scopes.pop();if (a) return this.getAttachmentParentForPath(a.path);
      }, a.prototype.getAttachmentParentForPath = function (a) {
        do {
          if (!a.parentPath || Array.isArray(a.container) && a.isStatement() || a.isVariableDeclarator() && null !== a.parentPath.node && a.parentPath.node.declarations.length > 1) return a;
        } while (a = a.parentPath);
      }, a.prototype.hasOwnParamBindings = function (a) {
        for (var b in this.bindings) if (a.hasOwnBinding(b)) {
          var c = this.bindings[b];if ("param" === c.kind && c.constant) return !0;
        }return !1;
      }, a.prototype.run = function () {
        var a = this.path.node;if (!a._hoisted) {
          a._hoisted = !0, this.path.traverse(l, this), this.getCompatibleScopes();var b = this.getAttachmentPath();if (b && b.getFunctionParent() !== this.path.getFunctionParent()) {
            var c = b.scope.generateUidIdentifier("ref"),
                d = k.variableDeclarator(c, this.path.node);b[this.attachAfter ? "insertAfter" : "insertBefore"]([b.isVariableDeclarator() ? d : k.variableDeclaration("var", [d])]);var e = this.path.parentPath;e.isJSXElement() && this.path.container === e.node.children && (c = k.JSXExpressionContainer(c)), this.path.replaceWith(c);
          }
        }
      }, a;
    }();b.default = m, c.exports = b.default;
  }), a.registerDynamic("183", ["32", "17", "158", "182", "15a", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      if (this._assertUnremoved(), a = this._verifyNodeList(a), this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) return this.parentPath.insertBefore(a);if (this.isNodeType("Expression") || this.parentPath.isForStatement() && "init" === this.key) this.node && a.push(this.node), this.replaceExpressionWithStatements(a);else {
        if (this._maybePopFromStatements(a), Array.isArray(this.container)) return this._containerInsertBefore(a);if (!this.isStatementOrBlock()) throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");this.node && a.push(this.node), this._replaceWith(A.blockStatement(a));
      }return [this];
    }function g(a, b) {
      this.updateSiblingKeys(a, b.length);for (var c = [], d = 0; d < b.length; d++) {
        var e = a + d,
            f = b[d];if (this.container.splice(e, 0, f), this.context) {
          var g = this.context.create(this.parent, this.container, e, this.listKey);this.context.queue && g.pushContext(this.context), c.push(g);
        } else c.push(y.default.get({ parentPath: this.parentPath, parent: this.parent, container: this.container, listKey: this.listKey, key: e }));
      }for (var h = this._getQueueContexts(), i = c, j = Array.isArray(i), k = 0, i = j ? i : (0, t.default)(i);;) {
        var l;if (j) {
          if (k >= i.length) break;l = i[k++];
        } else {
          if (k = i.next(), k.done) break;l = k.value;
        }var m = l;m.setScope(), m.debug(function () {
          return "Inserted.";
        });for (var n = h, o = Array.isArray(n), p = 0, n = o ? n : (0, t.default)(n);;) {
          var q;if (o) {
            if (p >= n.length) break;q = n[p++];
          } else {
            if (p = n.next(), p.done) break;q = p.value;
          }q.maybeQueue(m, !0);
        }
      }return c;
    }function h(a) {
      return this._containerInsert(this.key, a);
    }function i(a) {
      return this._containerInsert(this.key + 1, a);
    }function j(a) {
      var b = a[a.length - 1];(A.isIdentifier(b) || A.isExpressionStatement(b) && A.isIdentifier(b.expression)) && !this.isCompletionRecord() && a.pop();
    }function k(a) {
      if (this._assertUnremoved(), a = this._verifyNodeList(a), this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) return this.parentPath.insertAfter(a);if (this.isNodeType("Expression") || this.parentPath.isForStatement() && "init" === this.key) {
        if (this.node) {
          var b = this.scope.generateDeclaredUidIdentifier();a.unshift(A.expressionStatement(A.assignmentExpression("=", b, this.node))), a.push(A.expressionStatement(b));
        }this.replaceExpressionWithStatements(a);
      } else {
        if (this._maybePopFromStatements(a), Array.isArray(this.container)) return this._containerInsertAfter(a);if (!this.isStatementOrBlock()) throw new Error("We don't know what to do with this node type. We were previously a Statement but we can't fit in here?");this.node && a.unshift(this.node), this._replaceWith(A.blockStatement(a));
      }return [this];
    }function l(a, b) {
      if (this.parent) for (var c = u.path.get(this.parent), d = 0; d < c.length; d++) {
        var e = c[d];e.key >= a && (e.key += b);
      }
    }function m(a) {
      if (!a) return [];a.constructor !== Array && (a = [a]);for (var b = 0; b < a.length; b++) {
        var c = a[b],
            d = void 0;if (c ? "object" !== (void 0 === c ? "undefined" : (0, r.default)(c)) ? d = "contains a non-object node" : c.type ? c instanceof y.default && (d = "has a NodePath when it expected a raw object") : d = "without a type" : d = "has falsy node", d) {
          var e = Array.isArray(c) ? "array" : void 0 === c ? "undefined" : (0, r.default)(c);throw new Error("Node list " + d + " with the index of " + b + " and type of " + e);
        }
      }return a;
    }function n(a, b) {
      return this._assertUnremoved(), b = this._verifyNodeList(b), y.default.get({ parentPath: this, parent: this.node, container: this.node[a], listKey: a, key: 0 }).insertBefore(b);
    }function o(a, b) {
      this._assertUnremoved(), b = this._verifyNodeList(b);var c = this.node[a];return y.default.get({ parentPath: this, parent: this.node, container: c, listKey: a, key: c.length }).replaceWithMultiple(b);
    }function p() {
      var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.scope;return new w.default(this, a).run();
    }a("c"), this || self;b.__esModule = !0;var q = a("32"),
        r = e(q),
        s = a("17"),
        t = e(s);b.insertBefore = f, b._containerInsert = g, b._containerInsertBefore = h, b._containerInsertAfter = i, b._maybePopFromStatements = j, b.insertAfter = k, b.updateSiblingKeys = l, b._verifyNodeList = m, b.unshiftContainer = n, b.pushContainer = o, b.hoist = p;var u = a("158"),
        v = a("182"),
        w = e(v),
        x = a("15a"),
        y = e(x),
        z = a("11"),
        A = d(z);
  }), a.registerDynamic("184", ["d9", "17", "15a", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f() {
      var a = this;do {
        if (!a.parentPath || Array.isArray(a.container) && a.isStatement()) break;a = a.parentPath;
      } while (a);if (a && (a.isProgram() || a.isFile())) throw new Error("File/Program node, we can't possibly find a statement parent to this");return a;
    }function g() {
      return "left" === this.key ? this.getSibling("right") : "right" === this.key ? this.getSibling("left") : void 0;
    }function h() {
      var a = [],
          b = function (b) {
        b && (a = a.concat(b.getCompletionRecords()));
      };if (this.isIfStatement()) b(this.get("consequent")), b(this.get("alternate"));else if (this.isDoExpression() || this.isFor() || this.isWhile()) b(this.get("body"));else if (this.isProgram() || this.isBlockStatement()) b(this.get("body").pop());else {
        if (this.isFunction()) return this.get("body").getCompletionRecords();this.isTryStatement() ? (b(this.get("block")), b(this.get("handler")), b(this.get("finalizer"))) : a.push(this);
      }return a;
    }function i(a) {
      return z.default.get({ parentPath: this.parentPath, parent: this.parent, container: this.container, listKey: this.listKey, key: a });
    }function j() {
      return this.getSibling(this.key - 1);
    }function k() {
      return this.getSibling(this.key + 1);
    }function l() {
      for (var a = this.key, b = this.getSibling(++a), c = []; b.node;) c.push(b), b = this.getSibling(++a);return c;
    }function m() {
      for (var a = this.key, b = this.getSibling(--a), c = []; b.node;) c.push(b), b = this.getSibling(--a);return c;
    }function n(a, b) {
      !0 === b && (b = this.context);var c = a.split(".");return 1 === c.length ? this._getKey(a, b) : this._getPattern(c, b);
    }function o(a, b) {
      var c = this,
          d = this.node,
          e = d[a];return Array.isArray(e) ? e.map(function (f, g) {
        return z.default.get({ listKey: a, parentPath: c, parent: d, container: e, key: g }).setContext(b);
      }) : z.default.get({ parentPath: this, parent: d, container: d, key: a }).setContext(b);
    }function p(a, b) {
      for (var c = this, d = a, e = Array.isArray(d), f = 0, d = e ? d : (0, x.default)(d);;) {
        var g;if (e) {
          if (f >= d.length) break;g = d[f++];
        } else {
          if (f = d.next(), f.done) break;g = f.value;
        }var h = g;c = "." === h ? c.parentPath : Array.isArray(c) ? c[h] : c.get(h, b);
      }return c;
    }function q(a) {
      return B.getBindingIdentifiers(this.node, a);
    }function r(a) {
      return B.getOuterBindingIdentifiers(this.node, a);
    }function s() {
      for (var a = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], b = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], c = this, d = [].concat(c), e = (0, v.default)(null); d.length;) {
        var f = d.shift();if (f && f.node) {
          var g = B.getBindingIdentifiers.keys[f.node.type];if (f.isIdentifier()) {
            if (a) {
              var h = e[f.node.name] = e[f.node.name] || [];h.push(f);
            } else e[f.node.name] = f;
          } else if (f.isExportDeclaration()) {
            var i = f.get("declaration");i.isDeclaration() && d.push(i);
          } else {
            if (b) {
              if (f.isFunctionDeclaration()) {
                d.push(f.get("id"));continue;
              }if (f.isFunctionExpression()) continue;
            }if (g) for (var j = 0; j < g.length; j++) {
              var k = g[j],
                  l = f.get(k);(Array.isArray(l) || l.node) && (d = d.concat(l));
            }
          }
        }
      }return e;
    }function t(a) {
      return this.getBindingIdentifierPaths(a, !0);
    }a("c"), this || self;b.__esModule = !0;var u = a("d9"),
        v = e(u),
        w = a("17"),
        x = e(w);b.getStatementParent = f, b.getOpposite = g, b.getCompletionRecords = h, b.getSibling = i, b.getPrevSibling = j, b.getNextSibling = k, b.getAllNextSiblings = l, b.getAllPrevSiblings = m, b.get = n, b._getKey = o, b._getPattern = p, b.getBindingIdentifiers = q, b.getOuterBindingIdentifiers = r, b.getBindingIdentifierPaths = s, b.getOuterBindingIdentifierPaths = t;var y = a("15a"),
        z = e(y),
        A = a("11"),
        B = d(A);
  }), a.registerDynamic("185", ["c"], !0, function (a, b, c) {
    "use strict";
    function d() {
      if ("string" != typeof this.key) {
        var a = this.node;if (a) {
          var b = a.trailingComments,
              c = a.leadingComments;if (b || c) {
            var d = this.getSibling(this.key - 1),
                e = this.getSibling(this.key + 1);d.node || (d = e), e.node || (e = d), d.addComments("trailing", c), e.addComments("leading", b);
          }
        }
      }
    }function e(a, b, c) {
      this.addComments(a, [{ type: c ? "CommentLine" : "CommentBlock", value: b }]);
    }function f(a, b) {
      if (b) {
        var c = this.node;if (c) {
          var d = a + "Comments";c[d] ? c[d] = c[d].concat(b) : c[d] = b;
        }
      }
    }a("c"), this || self;b.__esModule = !0, b.shareCommentsWithSiblings = d, b.addComment = e, b.addComments = f;
  }), a.registerDynamic("15a", ["17", "1f", "186", "63", "146", "d5", "d6", "157", "11", "158", "159", "15d", "166", "17c", "17d", "17e", "17f", "181", "183", "184", "185", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var f = a("17"),
        g = e(f),
        h = a("1f"),
        i = e(h),
        j = a("186"),
        k = d(j),
        l = a("63"),
        m = e(l),
        n = a("146"),
        o = e(n),
        p = a("d5"),
        q = e(p),
        r = a("d6"),
        s = e(r),
        t = a("157"),
        u = e(t),
        v = a("11"),
        w = d(v),
        x = a("158"),
        y = (0, m.default)("babel"),
        z = function () {
      function a(b, c) {
        (0, i.default)(this, a), this.parent = c, this.hub = b, this.contexts = [], this.data = {}, this.shouldSkip = !1, this.shouldStop = !1, this.removed = !1, this.state = null, this.opts = null, this.skipKeys = null, this.parentPath = null, this.context = null, this.container = null, this.listKey = null, this.inList = !1, this.parentKey = null, this.key = null, this.node = null, this.scope = null, this.type = null, this.typeAnnotation = null;
      }return a.get = function (b) {
        var c = b.hub,
            d = b.parentPath,
            e = b.parent,
            f = b.container,
            g = b.listKey,
            h = b.key;!c && d && (c = d.hub), (0, o.default)(e, "To get a node path the parent needs to exist");var i = f[h],
            j = x.path.get(e) || [];x.path.has(e) || x.path.set(e, j);for (var k = void 0, l = 0; l < j.length; l++) {
          var m = j[l];if (m.node === i) {
            k = m;break;
          }
        }return k || (k = new a(c, e), j.push(k)), k.setup(d, f, g, h), k;
      }, a.prototype.getScope = function (a) {
        var b = a;return this.isScope() && (b = new u.default(this, a)), b;
      }, a.prototype.setData = function (a, b) {
        return this.data[a] = b;
      }, a.prototype.getData = function (a, b) {
        var c = this.data[a];return !c && b && (c = this.data[a] = b), c;
      }, a.prototype.buildCodeFrameError = function (a) {
        var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : SyntaxError;return this.hub.file.buildCodeFrameError(this.node, a, b);
      }, a.prototype.traverse = function (a, b) {
        (0, q.default)(this.node, a, this.scope, b, this);
      }, a.prototype.mark = function (a, b) {
        this.hub.file.metadata.marked.push({ type: a, message: b, loc: this.node.loc });
      }, a.prototype.set = function (a, b) {
        w.validate(this.node, a, b), this.node[a] = b;
      }, a.prototype.getPathLocation = function () {
        var a = [],
            b = this;do {
          var c = b.key;b.inList && (c = b.listKey + "[" + c + "]"), a.unshift(c);
        } while (b = b.parentPath);return a.join(".");
      }, a.prototype.debug = function (a) {
        y.enabled && y(this.getPathLocation() + " " + this.type + ": " + a());
      }, a;
    }();b.default = z, (0, s.default)(z.prototype, a("159")), (0, s.default)(z.prototype, a("15d")), (0, s.default)(z.prototype, a("166")), (0, s.default)(z.prototype, a("17c")), (0, s.default)(z.prototype, a("17d")), (0, s.default)(z.prototype, a("17e")), (0, s.default)(z.prototype, a("17f")), (0, s.default)(z.prototype, a("181")), (0, s.default)(z.prototype, a("183")), (0, s.default)(z.prototype, a("184")), (0, s.default)(z.prototype, a("185"));for (var A = function () {
      if (C) {
        if (D >= B.length) return "break";E = B[D++];
      } else {
        if (D = B.next(), D.done) return "break";E = D.value;
      }var a = E,
          b = "is" + a;z.prototype[b] = function (a) {
        return w[b](this.node, a);
      }, z.prototype["assert" + a] = function (c) {
        if (!this[b](c)) throw new TypeError("Expected node path of type " + a);
      };
    }, B = w.TYPES, C = Array.isArray(B), D = 0, B = C ? B : (0, g.default)(B);;) {
      var E;if ("break" === A()) break;
    }var F = function (a) {
      if ("_" === a[0]) return "continue";w.TYPES.indexOf(a) < 0 && w.TYPES.push(a);var b = k[a];z.prototype["is" + a] = function (a) {
        return b.checkPath(this, a);
      };
    };for (var G in k) {
      F(G);
    }c.exports = b.default;
  }), a.registerDynamic("187", ["17", "1f", "15a", "11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }a("c"), this || self;b.__esModule = !0;var f = a("17"),
        g = e(f),
        h = a("1f"),
        i = e(h),
        j = a("15a"),
        k = e(j),
        l = a("11"),
        m = d(l),
        n = !1,
        o = function () {
      function a(b, c, d, e) {
        (0, i.default)(this, a), this.queue = null, this.parentPath = e, this.scope = b, this.state = d, this.opts = c;
      }return a.prototype.shouldVisit = function (a) {
        var b = this.opts;if (b.enter || b.exit) return !0;if (b[a.type]) return !0;var c = m.VISITOR_KEYS[a.type];if (!c || !c.length) return !1;for (var d = c, e = Array.isArray(d), f = 0, d = e ? d : (0, g.default)(d);;) {
          var h;if (e) {
            if (f >= d.length) break;h = d[f++];
          } else {
            if (f = d.next(), f.done) break;h = f.value;
          }if (a[h]) return !0;
        }return !1;
      }, a.prototype.create = function (a, b, c, d) {
        return k.default.get({ parentPath: this.parentPath, parent: a, container: b, key: c, listKey: d });
      }, a.prototype.maybeQueue = function (a, b) {
        if (this.trap) throw new Error("Infinite cycle detected");this.queue && (b ? this.queue.push(a) : this.priorityQueue.push(a));
      }, a.prototype.visitMultiple = function (a, b, c) {
        if (0 === a.length) return !1;for (var d = [], e = 0; e < a.length; e++) {
          var f = a[e];f && this.shouldVisit(f) && d.push(this.create(b, a, e, c));
        }return this.visitQueue(d);
      }, a.prototype.visitSingle = function (a, b) {
        return !!this.shouldVisit(a[b]) && this.visitQueue([this.create(a, a, b)]);
      }, a.prototype.visitQueue = function (a) {
        this.queue = a, this.priorityQueue = [];for (var b = [], c = !1, d = a, e = Array.isArray(d), f = 0, d = e ? d : (0, g.default)(d);;) {
          var h;if (e) {
            if (f >= d.length) break;h = d[f++];
          } else {
            if (f = d.next(), f.done) break;h = f.value;
          }var i = h;if (i.resync(), 0 !== i.contexts.length && i.contexts[i.contexts.length - 1] === this || i.pushContext(this), null !== i.key && (n && a.length >= 1e4 && (this.trap = !0), !(b.indexOf(i.node) >= 0))) {
            if (b.push(i.node), i.visit()) {
              c = !0;break;
            }if (this.priorityQueue.length && (c = this.visitQueue(this.priorityQueue), this.priorityQueue = [], this.queue = a, c)) break;
          }
        }for (var j = a, k = Array.isArray(j), l = 0, j = k ? j : (0, g.default)(j);;) {
          var m;if (k) {
            if (l >= j.length) break;m = j[l++];
          } else {
            if (l = j.next(), l.done) break;m = l.value;
          }m.popContext();
        }return this.queue = null, c;
      }, a.prototype.visit = function (a, b) {
        var c = a[b];return !!c && (Array.isArray(c) ? this.visitMultiple(c, a, b) : this.visitSingle(a, b));
      }, a;
    }();b.default = o, c.exports = b.default;
  }), a.registerDynamic("186", ["11", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }a("c"), this || self;b.__esModule = !0, b.Flow = b.Pure = b.Generated = b.User = b.Var = b.BlockScoped = b.Referenced = b.Scope = b.Expression = b.Statement = b.BindingIdentifier = b.ReferencedMemberExpression = b.ReferencedIdentifier = void 0;var e = a("11"),
        f = d(e);b.ReferencedIdentifier = { types: ["Identifier", "JSXIdentifier"], checkPath: function (a, b) {
        var c = a.node,
            d = a.parent;if (!f.isIdentifier(c, b) && !f.isJSXMemberExpression(d, b)) {
          if (!f.isJSXIdentifier(c, b)) return !1;if (e.react.isCompatTag(c.name)) return !1;
        }return f.isReferenced(c, d);
      } }, b.ReferencedMemberExpression = { types: ["MemberExpression"], checkPath: function (a) {
        var b = a.node,
            c = a.parent;return f.isMemberExpression(b) && f.isReferenced(b, c);
      } }, b.BindingIdentifier = { types: ["Identifier"], checkPath: function (a) {
        var b = a.node,
            c = a.parent;return f.isIdentifier(b) && f.isBinding(b, c);
      } }, b.Statement = { types: ["Statement"], checkPath: function (a) {
        var b = a.node,
            c = a.parent;if (f.isStatement(b)) {
          if (f.isVariableDeclaration(b)) {
            if (f.isForXStatement(c, { left: b })) return !1;if (f.isForStatement(c, { init: b })) return !1;
          }return !0;
        }return !1;
      } }, b.Expression = { types: ["Expression"], checkPath: function (a) {
        return a.isIdentifier() ? a.isReferencedIdentifier() : f.isExpression(a.node);
      } }, b.Scope = { types: ["Scopable"], checkPath: function (a) {
        return f.isScope(a.node, a.parent);
      } }, b.Referenced = { checkPath: function (a) {
        return f.isReferenced(a.node, a.parent);
      } }, b.BlockScoped = { checkPath: function (a) {
        return f.isBlockScoped(a.node);
      } }, b.Var = { types: ["VariableDeclaration"], checkPath: function (a) {
        return f.isVar(a.node);
      } }, b.User = { checkPath: function (a) {
        return a.node && !!a.node.loc;
      } }, b.Generated = { checkPath: function (a) {
        return !a.isUser();
      } }, b.Pure = { checkPath: function (a, b) {
        return a.scope.isPure(a.node, b);
      } }, b.Flow = { types: ["Flow", "ImportDeclaration", "ExportDeclaration", "ImportSpecifier"], checkPath: function (a) {
        var b = a.node;return !!f.isFlow(b) || (f.isImportDeclaration(b) ? "type" === b.importKind || "typeof" === b.importKind : f.isExportDeclaration(b) ? "type" === b.exportKind : !!f.isImportSpecifier(b) && ("type" === b.importKind || "typeof" === b.importKind));
      } };
  }), a.registerDynamic("188", ["32", "15", "17", "186", "f", "11", "d3", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      if (a._exploded) return a;a._exploded = !0;for (var b in a) if (!n(b)) {
        var c = b.split("|");if (1 !== c.length) {
          var d = a[b];delete a[b];for (var e = c, f = Array.isArray(e), h = 0, e = f ? e : (0, u.default)(e);;) {
            var i;if (f) {
              if (h >= e.length) break;i = e[h++];
            } else {
              if (h = e.next(), h.done) break;i = h.value;
            }var j = i;a[j] = d;
          }
        }
      }g(a), delete a.__esModule, k(a), l(a);for (var p = (0, s.default)(a), q = Array.isArray(p), r = 0, p = q ? p : (0, u.default)(p);;) {
        var t;if (q) {
          if (r >= p.length) break;t = p[r++];
        } else {
          if (r = p.next(), r.done) break;t = r.value;
        }var v = t;if (!n(v)) {
          var x = w[v];if (x) {
            var y = a[v];for (var z in y) y[z] = m(x, y[z]);if (delete a[v], x.types) for (var B = x.types, D = Array.isArray(B), E = 0, B = D ? B : (0, u.default)(B);;) {
              var F;if (D) {
                if (E >= B.length) break;F = B[E++];
              } else {
                if (E = B.next(), E.done) break;F = E.value;
              }var G = F;a[G] ? o(a[G], y) : a[G] = y;
            } else o(a, y);
          }
        }
      }for (var H in a) if (!n(H)) {
        var I = a[H],
            J = A.FLIPPED_ALIAS_KEYS[H],
            K = A.DEPRECATED_KEYS[H];if (K && (console.trace("Visitor defined for " + H + " but it has been renamed to " + K), J = [K]), J) {
          delete a[H];for (var L = J, M = Array.isArray(L), N = 0, L = M ? L : (0, u.default)(L);;) {
            var O;if (M) {
              if (N >= L.length) break;O = L[N++];
            } else {
              if (N = L.next(), N.done) break;O = N.value;
            }var P = O,
                Q = a[P];Q ? o(Q, I) : a[P] = (0, C.default)(I);
          }
        }
      }for (var R in a) n(R) || l(a[R]);return a;
    }function g(a) {
      if (!a._verified) {
        if ("function" == typeof a) throw new Error(y.get("traverseVerifyRootFunction"));for (var b in a) if ("enter" !== b && "exit" !== b || h(b, a[b]), !n(b)) {
          if (A.TYPES.indexOf(b) < 0) throw new Error(y.get("traverseVerifyNodeType", b));var c = a[b];if ("object" === (void 0 === c ? "undefined" : (0, q.default)(c))) for (var d in c) {
            if ("enter" !== d && "exit" !== d) throw new Error(y.get("traverseVerifyVisitorProperty", b, d));h(b + "." + d, c[d]);
          }
        }a._verified = !0;
      }
    }function h(a, b) {
      for (var c = [].concat(b), d = c, e = Array.isArray(d), f = 0, d = e ? d : (0, u.default)(d);;) {
        var g;if (e) {
          if (f >= d.length) break;g = d[f++];
        } else {
          if (f = d.next(), f.done) break;g = f.value;
        }var h = g;if ("function" != typeof h) throw new TypeError("Non-function found defined in " + a + " with type " + (void 0 === h ? "undefined" : (0, q.default)(h)));
      }
    }function i(a) {
      for (var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], c = arguments[2], d = {}, e = 0; e < a.length; e++) {
        var g = a[e],
            h = b[e];f(g);for (var i in g) {
          var k = g[i];(h || c) && (k = j(k, h, c));o(d[i] = d[i] || {}, k);
        }
      }return d;
    }function j(a, b, c) {
      var d = {},
          e = function (e) {
        var f = a[e];if (!Array.isArray(f)) return "continue";f = f.map(function (a) {
          var d = a;return b && (d = function (c) {
            return a.call(b, c, b);
          }), c && (d = c(b.key, e, d)), d;
        }), d[e] = f;
      };for (var f in a) {
        e(f);
      }return d;
    }function k(a) {
      for (var b in a) if (!n(b)) {
        var c = a[b];"function" == typeof c && (a[b] = { enter: c });
      }
    }function l(a) {
      a.enter && !Array.isArray(a.enter) && (a.enter = [a.enter]), a.exit && !Array.isArray(a.exit) && (a.exit = [a.exit]);
    }function m(a, b) {
      var c = function (c) {
        if (a.checkPath(c)) return b.apply(this, arguments);
      };return c.toString = function () {
        return b.toString();
      }, c;
    }function n(a) {
      return "_" === a[0] || "enter" === a || "exit" === a || "shouldSkip" === a || "blacklist" === a || "noScope" === a || "skipKeys" === a;
    }function o(a, b) {
      for (var c in b) a[c] = [].concat(a[c] || [], b[c]);
    }a("c"), this || self;b.__esModule = !0;var p = a("32"),
        q = e(p),
        r = a("15"),
        s = e(r),
        t = a("17"),
        u = e(t);b.explode = f, b.verify = g, b.merge = i;var v = a("186"),
        w = d(v),
        x = a("f"),
        y = d(x),
        z = a("11"),
        A = d(z),
        B = a("d3"),
        C = e(B);
  }), a.registerDynamic("f", ["60", "a9"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];var e = l[a];if (!e) throw new ReferenceError("Unknown message " + (0, i.default)(a));return c = g(c), e.replace(/\$(\d+)/g, function (a, b) {
        return c[b - 1];
      });
    }function g(a) {
      return a.map(function (a) {
        if (null != a && a.inspect) return a.inspect();try {
          return (0, i.default)(a) || a + "";
        } catch (b) {
          return k.inspect(a);
        }
      });
    }this || self;b.__esModule = !0, b.MESSAGES = void 0;var h = a("60"),
        i = e(h);b.get = f, b.parseArgs = g;var j = a("a9"),
        k = d(j),
        l = b.MESSAGES = { tailCallReassignmentDeopt: "Function reference has been reassigned, so it will probably be dereferenced, therefore we can't optimise this with confidence", classesIllegalBareSuper: "Illegal use of bare super", classesIllegalSuperCall: "Direct super call is illegal in non-constructor, use super.$1() instead", scopeDuplicateDeclaration: "Duplicate declaration $1", settersNoRest: "Setters aren't allowed to have a rest", noAssignmentsInForHead: "No assignments allowed in for-in/of head", expectedMemberExpressionOrIdentifier: "Expected type MemberExpression or Identifier", invalidParentForThisNode: "We don't know how to handle this node within the current parent - please open an issue", readOnly: "$1 is read-only", unknownForHead: "Unknown node type $1 in ForStatement", didYouMean: "Did you mean $1?", codeGeneratorDeopt: "Note: The code generator has deoptimised the styling of $1 as it exceeds the max of $2.", missingTemplatesDirectory: "no templates directory - this is most likely the result of a broken `npm publish`. Please report to https://github.com/babel/babel/issues", unsupportedOutputType: "Unsupported output type $1", illegalMethodName: "Illegal method name $1", lostTrackNodePath: "We lost track of this node's position, likely because the AST was directly manipulated", modulesIllegalExportName: "Illegal export $1", modulesDuplicateDeclarations: "Duplicate module declarations with the same source but in different scopes", undeclaredVariable: "Reference to undeclared variable $1", undeclaredVariableType: "Referencing a type alias outside of a type annotation", undeclaredVariableSuggestion: "Reference to undeclared variable $1 - did you mean $2?", traverseNeedsParent: "You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a $1 node without passing scope and parentPath.", traverseVerifyRootFunction: "You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?", traverseVerifyVisitorProperty: "You passed `traverse()` a visitor object with the property $1 that has the invalid property $2", traverseVerifyNodeType: "You gave us a visitor for the node type $1 but it's not a valid type", pluginNotObject: "Plugin $2 specified in $1 was expected to return an object when invoked but returned $3", pluginNotFunction: "Plugin $2 specified in $1 was expected to return a function but returned $3", pluginUnknown: "Unknown plugin $1 specified in $2 at $3, attempted to resolve relative to $4", pluginInvalidProperty: "Plugin $2 specified in $1 provided an invalid property of $3" };
  }), a.registerDynamic("189", ["18a", "50", "7f"], !0, function (a, b, c) {
    function d(a) {
      return "string" == typeof a || !f(a) && g(a) && e(a) == h;
    }var e = (this || self, a("18a")),
        f = a("50"),
        g = a("7f"),
        h = "[object String]";c.exports = d;
  }), a.registerDynamic("94", ["18a", "7f"], !0, function (a, b, c) {
    function d(a) {
      return "symbol" == typeof a || f(a) && e(a) == g;
    }var e = (this || self, a("18a")),
        f = a("7f"),
        g = "[object Symbol]";c.exports = d;
  }), a.registerDynamic("18b", ["85", "94"], !0, function (a, b, c) {
    function d(a) {
      if ("number" == typeof a) return a;if (f(a)) return g;if (e(a)) {
        var b = "function" == typeof a.valueOf ? a.valueOf() : a;a = e(b) ? b + "" : b;
      }if ("string" != typeof a) return 0 === a ? a : +a;a = a.replace(h, "");var c = j.test(a);return c || k.test(a) ? l(a.slice(2), c ? 2 : 8) : i.test(a) ? g : +a;
    }var e = (this || self, a("85")),
        f = a("94"),
        g = NaN,
        h = /^\s+|\s+$/g,
        i = /^[-+]0x[0-9a-f]+$/i,
        j = /^0b[01]+$/i,
        k = /^0o[0-7]+$/i,
        l = parseInt;c.exports = d;
  }), a.registerDynamic("18c", ["18b"], !0, function (a, b, c) {
    function d(a) {
      if (!a) return 0 === a ? a : 0;if ((a = e(a)) === f || a === -f) {
        return (a < 0 ? -1 : 1) * g;
      }return a === a ? a : 0;
    }var e = (this || self, a("18b")),
        f = 1 / 0,
        g = 1.7976931348623157e308;c.exports = d;
  }), a.registerDynamic("3e", ["18c"], !0, function (a, b, c) {
    function d(a) {
      var b = e(a),
          c = b % 1;return b === b ? c ? b - c : b : 0;
    }var e = (this || self, a("18c"));c.exports = d;
  }), a.registerDynamic("4e", [], !0, function (a, b, c) {
    function d(a, b) {
      for (var c = -1, d = null == a ? 0 : a.length, e = Array(d); ++c < d;) e[c] = b(a[c], c, a);return e;
    }this || self;c.exports = d;
  }), a.registerDynamic("18d", ["4e"], !0, function (a, b, c) {
    function d(a, b) {
      return e(b, function (b) {
        return a[b];
      });
    }var e = (this || self, a("4e"));c.exports = d;
  }), a.registerDynamic("18e", ["18d", "42"], !0, function (a, b, c) {
    function d(a) {
      return null == a ? [] : e(a, f(a));
    }var e = (this || self, a("18d")),
        f = a("42");c.exports = d;
  }), a.registerDynamic("aa", ["12c", "41", "189", "3e", "18e"], !0, function (a, b, c) {
    function d(a, b, c, d) {
      a = f(a) ? a : i(a), c = c && !d ? h(c) : 0;var k = a.length;return c < 0 && (c = j(k + c, 0)), g(a) ? c <= k && a.indexOf(b, c) > -1 : !!k && e(a, b, c) > -1;
    }var e = (this || self, a("12c")),
        f = a("41"),
        g = a("189"),
        h = a("3e"),
        i = a("18e"),
        j = Math.max;c.exports = d;
  }), a.registerDynamic("cc", ["18f", "190", "191", "192", "193", "194", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self, a("18f")),
        e = a("190"),
        f = a("191"),
        g = a("192"),
        h = a("193"),
        i = Object.assign;c.exports = !i || a("194")(function () {
      var a = {},
          b = {},
          c = Symbol(),
          d = "abcdefghijklmnopqrst";return a[c] = 7, d.split("").forEach(function (a) {
        b[a] = a;
      }), 7 != i({}, a)[c] || Object.keys(i({}, b)).join("") != d;
    }) ? function (a, b) {
      for (var c = g(a), i = arguments.length, j = 1, k = e.f, l = f.f; i > j;) for (var m, n = h(arguments[j++]), o = k ? d(n).concat(k(n)) : d(n), p = o.length, q = 0; p > q;) l.call(n, m = o[q++]) && (c[m] = n[m]);return c;
    } : i;
  }), a.registerDynamic("34", ["16e", "174", "110", "10f", "16f", "171", "195", "196", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self, a("16e")),
        e = a("174").getWeak,
        f = a("110"),
        g = a("10f"),
        h = a("16f"),
        i = a("171"),
        j = a("195"),
        k = a("196"),
        l = j(5),
        m = j(6),
        n = 0,
        o = function (a) {
      return a._l || (a._l = new p());
    },
        p = function () {
      this.a = [];
    },
        q = function (a, b) {
      return l(a.a, function (a) {
        return a[0] === b;
      });
    };p.prototype = { get: function (a) {
        var b = q(this, a);if (b) return b[1];
      }, has: function (a) {
        return !!q(this, a);
      }, set: function (a, b) {
        var c = q(this, a);c ? c[1] = b : this.a.push([a, b]);
      }, delete: function (a) {
        var b = m(this.a, function (b) {
          return b[0] === a;
        });return ~b && this.a.splice(b, 1), !!~b;
      } }, c.exports = { getConstructor: function (a, b, c, f) {
        var j = a(function (a, d) {
          h(a, j, b, "_i"), a._i = n++, a._l = void 0, void 0 != d && i(d, c, a[f], a);
        });return d(j.prototype, { delete: function (a) {
            if (!g(a)) return !1;var b = e(a);return !0 === b ? o(this).delete(a) : b && k(b, this._i) && delete b[this._i];
          }, has: function (a) {
            if (!g(a)) return !1;var b = e(a);return !0 === b ? o(this).has(a) : b && k(b, this._i);
          } }), j;
      }, def: function (a, b, c) {
        var d = e(f(b), !0);return !0 === d ? o(a).set(b, c) : d[a._i] = c, a;
      }, ufstore: o };
  }), a.registerDynamic("16e", ["197", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("197"));c.exports = function (a, b, c) {
      for (var e in b) c && a[e] ? a[e] = b[e] : d(a, e, b[e]);return a;
    };
  }), a.registerDynamic("198", ["110", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("110"));c.exports = function (a, b, c, e) {
      try {
        return e ? b(d(c)[0], c[1]) : b(c);
      } catch (b) {
        var f = a.return;throw void 0 !== f && d(f.call(a)), b;
      }
    };
  }), a.registerDynamic("199", ["19a", "16b", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("19a")),
        e = a("16b")("iterator"),
        f = Array.prototype;c.exports = function (a) {
      return void 0 !== a && (d.Array === a || f[e] === a);
    };
  }), a.registerDynamic("171", ["111", "198", "199", "110", "19b", "19c", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("111")),
        e = a("198"),
        f = a("199"),
        g = a("110"),
        h = a("19b"),
        i = a("19c"),
        j = {},
        k = {},
        b = c.exports = function (a, b, c, l, m) {
      var n,
          o,
          p,
          q,
          r = m ? function () {
        return a;
      } : i(a),
          s = d(c, l, b ? 2 : 1),
          t = 0;if ("function" != typeof r) throw TypeError(a + " is not iterable!");if (f(r)) {
        for (n = h(a.length); n > t; t++) if ((q = b ? s(g(o = a[t])[0], o[1]) : s(a[t])) === j || q === k) return q;
      } else for (p = r.call(a); !(o = p.next()).done;) if ((q = e(p, s, o.value, b)) === j || q === k) return q;
    };b.BREAK = j, b.RETURN = k;
  }), a.registerDynamic("16f", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = function (a, b, c, d) {
      if (!(a instanceof b) || void 0 !== d && d in a) throw TypeError(c + ": incorrect invocation!");return a;
    };
  }), a.registerDynamic("19d", ["10f", "19e", "16b", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("10f")),
        e = a("19e"),
        f = a("16b")("species");c.exports = function (a) {
      var b;return e(a) && (b = a.constructor, "function" != typeof b || b !== Array && !e(b.prototype) || (b = void 0), d(b) && null === (b = b[f]) && (b = void 0)), void 0 === b ? Array : b;
    };
  }), a.registerDynamic("19f", ["19d", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("19d"));c.exports = function (a, b) {
      return new (d(a))(b);
    };
  }), a.registerDynamic("195", ["111", "193", "192", "19b", "19f", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("111")),
        e = a("193"),
        f = a("192"),
        g = a("19b"),
        h = a("19f");c.exports = function (a, b) {
      var c = 1 == a,
          i = 2 == a,
          j = 3 == a,
          k = 4 == a,
          l = 6 == a,
          m = 5 == a || l,
          n = b || h;return function (b, h, o) {
        for (var p, q, r = f(b), s = e(r), t = d(h, o, 3), u = g(s.length), v = 0, w = c ? n(b, u) : i ? n(b, 0) : void 0; u > v; v++) if ((m || v in s) && (p = s[v], q = t(p, v, r), a)) if (c) w[v] = q;else if (q) switch (a) {case 3:
            return !0;case 5:
            return p;case 6:
            return v;case 2:
            w.push(p);} else if (k) return !1;return l ? -1 : j || k ? k : w;
      };
    };
  }), a.registerDynamic("35", ["168", "cb", "174", "194", "197", "16e", "171", "16f", "10f", "1a0", "169", "195", "16a", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self),
        d = a("168"),
        e = a("cb"),
        f = a("174"),
        g = a("194"),
        h = a("197"),
        i = a("16e"),
        j = a("171"),
        k = a("16f"),
        l = a("10f"),
        m = a("1a0"),
        n = a("169").f,
        o = a("195")(0),
        p = a("16a");c.exports = function (a, b, c, q, r, s) {
      var t = d[a],
          u = t,
          v = r ? "set" : "add",
          w = u && u.prototype,
          x = {};return p && "function" == typeof u && (s || w.forEach && !g(function () {
        new u().entries().next();
      })) ? (u = b(function (b, c) {
        k(b, u, a, "_c"), b._c = new t(), void 0 != c && j(c, r, b[v], b);
      }), o("add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(","), function (a) {
        var b = "add" == a || "set" == a;a in w && (!s || "clear" != a) && h(u.prototype, a, function (c, d) {
          if (k(this, u, a), !b && s && !l(c)) return "get" == a && void 0;var e = this._c[a](0 === c ? 0 : c, d);return b ? this : e;
        });
      }), "size" in w && n(u.prototype, "size", { get: function () {
          return this._c.size;
        } })) : (u = q.getConstructor(b, a, r, v), i(u.prototype, c), f.NEED = !0), m(u, a), x[a] = u, e(e.G + e.W + e.F, x), s || q.setStrong(u, a, r), u;
    };
  }), a.registerDynamic("1a1", ["195", "1a2", "174", "cc", "34", "10f", "35", "c"], !0, function (a, b, c) {
    "use strict";
    var d,
        e = (a("c"), this || self, a("195")(0)),
        f = a("1a2"),
        g = a("174"),
        h = a("cc"),
        i = a("34"),
        j = a("10f"),
        k = g.getWeak,
        l = Object.isExtensible,
        m = i.ufstore,
        n = {},
        o = function (a) {
      return function () {
        return a(this, arguments.length > 0 ? arguments[0] : void 0);
      };
    },
        p = { get: function (a) {
        if (j(a)) {
          var b = k(a);return !0 === b ? m(this).get(a) : b ? b[this._i] : void 0;
        }
      }, set: function (a, b) {
        return i.def(this, a, b);
      } },
        q = c.exports = a("35")("WeakMap", o, p, i, !0, !0);7 != new q().set((Object.freeze || Object)(n), 7).get(n) && (d = i.getConstructor(o), h(d.prototype, p), g.NEED = !0, e(["delete", "has", "get", "set"], function (a) {
      var b = q.prototype,
          c = b[a];f(b, a, function (b, e) {
        if (j(b) && !l(b)) {
          this._f || (this._f = new d());var f = this._f[a](b, e);return "set" == a ? this : f;
        }return c.call(this, b, e);
      });
    }));
  }), a.registerDynamic("1a3", ["37", "38", "1a1", "39", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("37"), a("38"), a("1a1"), c.exports = a("39").WeakMap;
  }), a.registerDynamic("1a4", ["1a3"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("1a3"), __esModule: !0 };
  }), a.registerDynamic("158", ["1a4", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e() {
      f(), g();
    }function f() {
      b.path = j = new i.default();
    }function g() {
      b.scope = k = new i.default();
    }a("c"), this || self;b.__esModule = !0, b.scope = b.path = void 0;var h = a("1a4"),
        i = d(h);b.clear = e, b.clearPath = f, b.clearScope = g;var j = b.path = new i.default(),
        k = b.scope = new i.default();
  }), a.registerDynamic("d5", ["17", "15a", "157", "143", "187", "188", "f", "aa", "11", "158", "c"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b, c, d, e) {
      if (a) {
        if (b || (b = {}), !b.noScope && !c && "Program" !== a.type && "File" !== a.type) throw new Error(r.get("traverseNeedsParent", a.type));p.explode(b), f.node(a, b, c, d, e);
      }
    }function g(a, b) {
      a.node.type === b.type && (b.has = !0, a.stop());
    }a("c"), this || self;b.__esModule = !0, b.visitors = b.Hub = b.Scope = b.NodePath = void 0;var h = a("17"),
        i = e(h),
        j = a("15a");Object.defineProperty(b, "NodePath", { enumerable: !0, get: function () {
        return e(j).default;
      } });var k = a("157");Object.defineProperty(b, "Scope", { enumerable: !0, get: function () {
        return e(k).default;
      } });var l = a("143");Object.defineProperty(b, "Hub", { enumerable: !0, get: function () {
        return e(l).default;
      } }), b.default = f;var m = a("187"),
        n = e(m),
        o = a("188"),
        p = d(o),
        q = a("f"),
        r = d(q),
        s = a("aa"),
        t = e(s),
        u = a("11"),
        v = d(u),
        w = a("158"),
        x = d(w);b.visitors = p, f.visitors = p, f.verify = p.verify, f.explode = p.explode, f.NodePath = a("15a"), f.Scope = a("157"), f.Hub = a("143"), f.cheap = function (a, b) {
      return v.traverseFast(a, b);
    }, f.node = function (a, b, c, d, e, f) {
      var g = v.VISITOR_KEYS[a.type];if (g) for (var h = new n.default(c, b, d, e), j = g, k = Array.isArray(j), l = 0, j = k ? j : (0, i.default)(j);;) {
        var m;if (k) {
          if (l >= j.length) break;m = j[l++];
        } else {
          if (l = j.next(), l.done) break;m = l.value;
        }var o = m;if ((!f || !f[o]) && h.visit(a, o)) return;
      }
    }, f.clearNode = function (a, b) {
      v.removeProperties(a, b), x.path.delete(a);
    }, f.removeProperties = function (a, b) {
      return v.traverseFast(a, f.clearNode, b), a;
    }, f.hasType = function (a, b, c, d) {
      if ((0, t.default)(d, a.type)) return !1;if (a.type === c) return !0;var e = { has: !1, type: c };return f(a, { blacklist: d, enter: g }, b, e), e.has;
    }, f.clearCache = function () {
      x.clear();
    }, f.clearCache.clearPath = x.clearPath, f.clearCache.clearScope = x.clearScope, f.copyCache = function (a, b) {
      x.path.has(a) && x.path.set(b, x.path.get(a));
    };
  }), a.registerDynamic("dc", [], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a = a.split(" "), function (b) {
        return a.indexOf(b) >= 0;
      };
    }function e(a, b) {
      for (var c = 65536, d = 0; d < b.length; d += 2) {
        if ((c += b[d]) > a) return !1;if ((c += b[d + 1]) >= a) return !0;
      }
    }function f(a) {
      return a < 65 ? 36 === a : a < 91 || (a < 97 ? 95 === a : a < 123 || (a <= 65535 ? a >= 170 && v.test(String.fromCharCode(a)) : e(a, x)));
    }function g(a) {
      return a < 48 ? 36 === a : a < 58 || !(a < 65) && (a < 91 || (a < 97 ? 95 === a : a < 123 || (a <= 65535 ? a >= 170 && w.test(String.fromCharCode(a)) : e(a, x) || e(a, y))));
    }function h(a) {
      var b = {};for (var c in z) b[c] = a && c in a ? a[c] : z[c];return b;
    }function i(a) {
      return 10 === a || 13 === a || 8232 === a || 8233 === a;
    }function j(a, b) {
      for (var c = 1, d = 0;;) {
        Q.lastIndex = d;var e = Q.exec(a);if (!(e && e.index < b)) return new U(c, b - d);++c, d = e.index + e[0].length;
      }
    }function k(a) {
      return a <= 65535 ? String.fromCharCode(a) : String.fromCharCode(55296 + (a - 65536 >> 10), 56320 + (a - 65536 & 1023));
    }function l(a, b, c, d) {
      return a.type = b, a.end = c, a.loc.end = d, this.processComment(a), a;
    }function m(a) {
      return a[a.length - 1];
    }function n(a) {
      return a && "Property" === a.type && "init" === a.kind && !1 === a.method;
    }function o(a) {
      return "JSXIdentifier" === a.type ? a.name : "JSXNamespacedName" === a.type ? a.namespace.name + ":" + a.name.name : "JSXMemberExpression" === a.type ? o(a.object) + "." + o(a.property) : void 0;
    }function p(a, b) {
      return new _(b, a).parse();
    }function q(a, b) {
      var c = new _(b, a);return c.options.strictMode && (c.state.strict = !0), c.getExpression();
    }this || self;Object.defineProperty(b, "__esModule", { value: !0 });var r = { 6: d("enum await"), strict: d("implements interface let package private protected public static yield"), strictBind: d("eval arguments") },
        s = d("break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super"),
        t = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞮꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
        u = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣔ-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఃా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഁ-ഃാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ູົຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭ᳲ-᳴᳸᳹᷀-᷵᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱꤀-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",
        v = new RegExp("[" + t + "]"),
        w = new RegExp("[" + t + u + "]");t = u = null;var x = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 785, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 25, 391, 63, 32, 0, 449, 56, 264, 8, 2, 36, 18, 0, 50, 29, 881, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 65, 0, 32, 6124, 20, 754, 9486, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 10591, 541],
        y = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 10, 2, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 87, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 423, 9, 838, 7, 2, 7, 17, 9, 57, 21, 2, 13, 19882, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239],
        z = { sourceType: "script", sourceFilename: void 0, startLine: 1, allowReturnOutsideFunction: !1, allowImportExportEverywhere: !1, allowSuperOutsideMethod: !1, plugins: [], strictMode: null },
        A = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (a) {
      return typeof a;
    } : function (a) {
      return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a;
    },
        B = function (a, b) {
      if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function");
    },
        C = function (a, b) {
      if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);a.prototype = Object.create(b && b.prototype, { constructor: { value: a, enumerable: !1, writable: !0, configurable: !0 } }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b);
    },
        D = function (a, b) {
      if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !b || "object" != typeof b && "function" != typeof b ? a : b;
    },
        E = !0,
        F = !0,
        G = !0,
        H = !0,
        I = !0,
        J = !0,
        K = function a(b) {
      var c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};B(this, a), this.label = b, this.keyword = c.keyword, this.beforeExpr = !!c.beforeExpr, this.startsExpr = !!c.startsExpr, this.rightAssociative = !!c.rightAssociative, this.isLoop = !!c.isLoop, this.isAssign = !!c.isAssign, this.prefix = !!c.prefix, this.postfix = !!c.postfix, this.binop = c.binop || null, this.updateContext = null;
    },
        L = function (a) {
      function b(c) {
        var d = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};return B(this, b), d.keyword = c, D(this, a.call(this, c, d));
      }return C(b, a), b;
    }(K),
        M = function (a) {
      function b(c, d) {
        return B(this, b), D(this, a.call(this, c, { beforeExpr: E, binop: d }));
      }return C(b, a), b;
    }(K),
        N = { num: new K("num", { startsExpr: F }), regexp: new K("regexp", { startsExpr: F }), string: new K("string", { startsExpr: F }), name: new K("name", { startsExpr: F }), eof: new K("eof"), bracketL: new K("[", { beforeExpr: E, startsExpr: F }), bracketR: new K("]"), braceL: new K("{", { beforeExpr: E, startsExpr: F }), braceBarL: new K("{|", { beforeExpr: E, startsExpr: F }), braceR: new K("}"), braceBarR: new K("|}"), parenL: new K("(", { beforeExpr: E, startsExpr: F }), parenR: new K(")"), comma: new K(",", { beforeExpr: E }), semi: new K(";", { beforeExpr: E }), colon: new K(":", { beforeExpr: E }), doubleColon: new K("::", { beforeExpr: E }), dot: new K("."), question: new K("?", { beforeExpr: E }), arrow: new K("=>", { beforeExpr: E }), template: new K("template"), ellipsis: new K("...", { beforeExpr: E }), backQuote: new K("`", { startsExpr: F }), dollarBraceL: new K("${", { beforeExpr: E, startsExpr: F }), at: new K("@"), eq: new K("=", { beforeExpr: E, isAssign: H }), assign: new K("_=", { beforeExpr: E, isAssign: H }), incDec: new K("++/--", { prefix: I, postfix: J, startsExpr: F }), prefix: new K("prefix", { beforeExpr: E, prefix: I, startsExpr: F }), logicalOR: new M("||", 1), logicalAND: new M("&&", 2), bitwiseOR: new M("|", 3), bitwiseXOR: new M("^", 4), bitwiseAND: new M("&", 5), equality: new M("==/!=", 6), relational: new M("</>", 7), bitShift: new M("<</>>", 8), plusMin: new K("+/-", { beforeExpr: E, binop: 9, prefix: I, startsExpr: F }), modulo: new M("%", 10), star: new M("*", 10), slash: new M("/", 10), exponent: new K("**", { beforeExpr: E, binop: 11, rightAssociative: !0 }) },
        O = { break: new L("break"), case: new L("case", { beforeExpr: E }), catch: new L("catch"), continue: new L("continue"), debugger: new L("debugger"), default: new L("default", { beforeExpr: E }), do: new L("do", { isLoop: G, beforeExpr: E }), else: new L("else", { beforeExpr: E }), finally: new L("finally"), for: new L("for", { isLoop: G }), function: new L("function", { startsExpr: F }), if: new L("if"), return: new L("return", { beforeExpr: E }), switch: new L("switch"), throw: new L("throw", { beforeExpr: E }), try: new L("try"), var: new L("var"), let: new L("let"), const: new L("const"), while: new L("while", { isLoop: G }), with: new L("with"), new: new L("new", { beforeExpr: E, startsExpr: F }), this: new L("this", { startsExpr: F }), super: new L("super", { startsExpr: F }), class: new L("class"), extends: new L("extends", { beforeExpr: E }), export: new L("export"), import: new L("import", { startsExpr: F }), yield: new L("yield", { beforeExpr: E, startsExpr: F }), null: new L("null", { startsExpr: F }), true: new L("true", { startsExpr: F }), false: new L("false", { startsExpr: F }), in: new L("in", { beforeExpr: E, binop: 7 }), instanceof: new L("instanceof", { beforeExpr: E, binop: 7 }), typeof: new L("typeof", { beforeExpr: E, prefix: I, startsExpr: F }), void: new L("void", { beforeExpr: E, prefix: I, startsExpr: F }), delete: new L("delete", { beforeExpr: E, prefix: I, startsExpr: F }) };Object.keys(O).forEach(function (a) {
      N["_" + a] = O[a];
    });var P = /\r\n?|\n|\u2028|\u2029/,
        Q = new RegExp(P.source, "g"),
        R = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/,
        S = function a(b, c, d, e) {
      B(this, a), this.token = b, this.isExpr = !!c, this.preserveSpace = !!d, this.override = e;
    },
        T = { braceStatement: new S("{", !1), braceExpression: new S("{", !0), templateQuasi: new S("${", !0), parenStatement: new S("(", !1), parenExpression: new S("(", !0), template: new S("`", !0, !0, function (a) {
        return a.readTmplToken();
      }), functionExpression: new S("function", !0) };N.parenR.updateContext = N.braceR.updateContext = function () {
      if (1 === this.state.context.length) return void (this.state.exprAllowed = !0);var a = this.state.context.pop();a === T.braceStatement && this.curContext() === T.functionExpression ? (this.state.context.pop(), this.state.exprAllowed = !1) : a === T.templateQuasi ? this.state.exprAllowed = !0 : this.state.exprAllowed = !a.isExpr;
    }, N.name.updateContext = function (a) {
      this.state.exprAllowed = !1, a !== N._let && a !== N._const && a !== N._var || P.test(this.input.slice(this.state.end)) && (this.state.exprAllowed = !0);
    }, N.braceL.updateContext = function (a) {
      this.state.context.push(this.braceIsBlock(a) ? T.braceStatement : T.braceExpression), this.state.exprAllowed = !0;
    }, N.dollarBraceL.updateContext = function () {
      this.state.context.push(T.templateQuasi), this.state.exprAllowed = !0;
    }, N.parenL.updateContext = function (a) {
      var b = a === N._if || a === N._for || a === N._with || a === N._while;this.state.context.push(b ? T.parenStatement : T.parenExpression), this.state.exprAllowed = !0;
    }, N.incDec.updateContext = function () {}, N._function.updateContext = function () {
      this.curContext() !== T.braceStatement && this.state.context.push(T.functionExpression), this.state.exprAllowed = !1;
    }, N.backQuote.updateContext = function () {
      this.curContext() === T.template ? this.state.context.pop() : this.state.context.push(T.template), this.state.exprAllowed = !1;
    };var U = function a(b, c) {
      B(this, a), this.line = b, this.column = c;
    },
        V = function a(b, c) {
      B(this, a), this.start = b, this.end = c;
    },
        W = function () {
      function a() {
        B(this, a);
      }return a.prototype.init = function (a, b) {
        return this.strict = !1 !== a.strictMode && "module" === a.sourceType, this.input = b, this.potentialArrowAt = -1, this.inMethod = this.inFunction = this.inGenerator = this.inAsync = this.inPropertyName = this.inType = this.inClassProperty = this.noAnonFunctionType = !1, this.labels = [], this.decorators = [], this.tokens = [], this.comments = [], this.trailingComments = [], this.leadingComments = [], this.commentStack = [], this.pos = this.lineStart = 0, this.curLine = a.startLine, this.type = N.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = [T.braceStatement], this.exprAllowed = !0, this.containsEsc = this.containsOctal = !1, this.octalPosition = null, this.invalidTemplateEscapePosition = null, this.exportedIdentifiers = [], this;
      }, a.prototype.curPosition = function () {
        return new U(this.curLine, this.pos - this.lineStart);
      }, a.prototype.clone = function (b) {
        var c = new a();for (var d in this) {
          var e = this[d];b && "context" !== d || !Array.isArray(e) || (e = e.slice()), c[d] = e;
        }return c;
      }, a;
    }(),
        X = function a(b) {
      B(this, a), this.type = b.type, this.value = b.value, this.start = b.start, this.end = b.end, this.loc = new V(b.startLoc, b.endLoc);
    },
        Y = function () {
      function a(b, c) {
        B(this, a), this.state = new W(), this.state.init(b, c);
      }return a.prototype.next = function () {
        this.isLookahead || this.state.tokens.push(new X(this.state)), this.state.lastTokEnd = this.state.end, this.state.lastTokStart = this.state.start, this.state.lastTokEndLoc = this.state.endLoc, this.state.lastTokStartLoc = this.state.startLoc, this.nextToken();
      }, a.prototype.eat = function (a) {
        return !!this.match(a) && (this.next(), !0);
      }, a.prototype.match = function (a) {
        return this.state.type === a;
      }, a.prototype.isKeyword = function (a) {
        return s(a);
      }, a.prototype.lookahead = function () {
        var a = this.state;this.state = a.clone(!0), this.isLookahead = !0, this.next(), this.isLookahead = !1;var b = this.state.clone(!0);return this.state = a, b;
      }, a.prototype.setStrict = function (a) {
        if (this.state.strict = a, this.match(N.num) || this.match(N.string)) {
          for (this.state.pos = this.state.start; this.state.pos < this.state.lineStart;) this.state.lineStart = this.input.lastIndexOf("\n", this.state.lineStart - 2) + 1, --this.state.curLine;this.nextToken();
        }
      }, a.prototype.curContext = function () {
        return this.state.context[this.state.context.length - 1];
      }, a.prototype.nextToken = function () {
        var a = this.curContext();return a && a.preserveSpace || this.skipSpace(), this.state.containsOctal = !1, this.state.octalPosition = null, this.state.start = this.state.pos, this.state.startLoc = this.state.curPosition(), this.state.pos >= this.input.length ? this.finishToken(N.eof) : a.override ? a.override(this) : this.readToken(this.fullCharCodeAtPos());
      }, a.prototype.readToken = function (a) {
        return f(a) || 92 === a ? this.readWord() : this.getTokenFromCode(a);
      }, a.prototype.fullCharCodeAtPos = function () {
        var a = this.input.charCodeAt(this.state.pos);return a <= 55295 || a >= 57344 ? a : (a << 10) + this.input.charCodeAt(this.state.pos + 1) - 56613888;
      }, a.prototype.pushComment = function (a, b, c, d, e, f) {
        var g = { type: a ? "CommentBlock" : "CommentLine", value: b, start: c, end: d, loc: new V(e, f) };this.isLookahead || (this.state.tokens.push(g), this.state.comments.push(g), this.addComment(g));
      }, a.prototype.skipBlockComment = function () {
        var a = this.state.curPosition(),
            b = this.state.pos,
            c = this.input.indexOf("*/", this.state.pos += 2);-1 === c && this.raise(this.state.pos - 2, "Unterminated comment"), this.state.pos = c + 2, Q.lastIndex = b;for (var d = void 0; (d = Q.exec(this.input)) && d.index < this.state.pos;) ++this.state.curLine, this.state.lineStart = d.index + d[0].length;this.pushComment(!0, this.input.slice(b + 2, c), b, this.state.pos, a, this.state.curPosition());
      }, a.prototype.skipLineComment = function (a) {
        for (var b = this.state.pos, c = this.state.curPosition(), d = this.input.charCodeAt(this.state.pos += a); this.state.pos < this.input.length && 10 !== d && 13 !== d && 8232 !== d && 8233 !== d;) ++this.state.pos, d = this.input.charCodeAt(this.state.pos);this.pushComment(!1, this.input.slice(b + a, this.state.pos), b, this.state.pos, c, this.state.curPosition());
      }, a.prototype.skipSpace = function () {
        a: for (; this.state.pos < this.input.length;) {
          var a = this.input.charCodeAt(this.state.pos);switch (a) {case 32:case 160:
              ++this.state.pos;break;case 13:
              10 === this.input.charCodeAt(this.state.pos + 1) && ++this.state.pos;case 10:case 8232:case 8233:
              ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;break;case 47:
              switch (this.input.charCodeAt(this.state.pos + 1)) {case 42:
                  this.skipBlockComment();break;case 47:
                  this.skipLineComment(2);break;default:
                  break a;}break;default:
              if (!(a > 8 && a < 14 || a >= 5760 && R.test(String.fromCharCode(a)))) break a;++this.state.pos;}
        }
      }, a.prototype.finishToken = function (a, b) {
        this.state.end = this.state.pos, this.state.endLoc = this.state.curPosition();var c = this.state.type;this.state.type = a, this.state.value = b, this.updateContext(c);
      }, a.prototype.readToken_dot = function () {
        var a = this.input.charCodeAt(this.state.pos + 1);if (a >= 48 && a <= 57) return this.readNumber(!0);var b = this.input.charCodeAt(this.state.pos + 2);return 46 === a && 46 === b ? (this.state.pos += 3, this.finishToken(N.ellipsis)) : (++this.state.pos, this.finishToken(N.dot));
      }, a.prototype.readToken_slash = function () {
        return this.state.exprAllowed ? (++this.state.pos, this.readRegexp()) : 61 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(N.assign, 2) : this.finishOp(N.slash, 1);
      }, a.prototype.readToken_mult_modulo = function (a) {
        var b = 42 === a ? N.star : N.modulo,
            c = 1,
            d = this.input.charCodeAt(this.state.pos + 1);return 42 === d && (c++, d = this.input.charCodeAt(this.state.pos + 2), b = N.exponent), 61 === d && (c++, b = N.assign), this.finishOp(b, c);
      }, a.prototype.readToken_pipe_amp = function (a) {
        var b = this.input.charCodeAt(this.state.pos + 1);return b === a ? this.finishOp(124 === a ? N.logicalOR : N.logicalAND, 2) : 61 === b ? this.finishOp(N.assign, 2) : 124 === a && 125 === b && this.hasPlugin("flow") ? this.finishOp(N.braceBarR, 2) : this.finishOp(124 === a ? N.bitwiseOR : N.bitwiseAND, 1);
      }, a.prototype.readToken_caret = function () {
        return 61 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(N.assign, 2) : this.finishOp(N.bitwiseXOR, 1);
      }, a.prototype.readToken_plus_min = function (a) {
        var b = this.input.charCodeAt(this.state.pos + 1);return b === a ? 45 === b && 62 === this.input.charCodeAt(this.state.pos + 2) && P.test(this.input.slice(this.state.lastTokEnd, this.state.pos)) ? (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : this.finishOp(N.incDec, 2) : 61 === b ? this.finishOp(N.assign, 2) : this.finishOp(N.plusMin, 1);
      }, a.prototype.readToken_lt_gt = function (a) {
        var b = this.input.charCodeAt(this.state.pos + 1),
            c = 1;return b === a ? (c = 62 === a && 62 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2, 61 === this.input.charCodeAt(this.state.pos + c) ? this.finishOp(N.assign, c + 1) : this.finishOp(N.bitShift, c)) : 33 === b && 60 === a && 45 === this.input.charCodeAt(this.state.pos + 2) && 45 === this.input.charCodeAt(this.state.pos + 3) ? (this.inModule && this.unexpected(), this.skipLineComment(4), this.skipSpace(), this.nextToken()) : (61 === b && (c = 2), this.finishOp(N.relational, c));
      }, a.prototype.readToken_eq_excl = function (a) {
        var b = this.input.charCodeAt(this.state.pos + 1);return 61 === b ? this.finishOp(N.equality, 61 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2) : 61 === a && 62 === b ? (this.state.pos += 2, this.finishToken(N.arrow)) : this.finishOp(61 === a ? N.eq : N.prefix, 1);
      }, a.prototype.getTokenFromCode = function (a) {
        switch (a) {case 46:
            return this.readToken_dot();case 40:
            return ++this.state.pos, this.finishToken(N.parenL);case 41:
            return ++this.state.pos, this.finishToken(N.parenR);case 59:
            return ++this.state.pos, this.finishToken(N.semi);case 44:
            return ++this.state.pos, this.finishToken(N.comma);case 91:
            return ++this.state.pos, this.finishToken(N.bracketL);case 93:
            return ++this.state.pos, this.finishToken(N.bracketR);case 123:
            return this.hasPlugin("flow") && 124 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(N.braceBarL, 2) : (++this.state.pos, this.finishToken(N.braceL));case 125:
            return ++this.state.pos, this.finishToken(N.braceR);case 58:
            return this.hasPlugin("functionBind") && 58 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(N.doubleColon, 2) : (++this.state.pos, this.finishToken(N.colon));case 63:
            return ++this.state.pos, this.finishToken(N.question);case 64:
            return ++this.state.pos, this.finishToken(N.at);case 96:
            return ++this.state.pos, this.finishToken(N.backQuote);case 48:
            var b = this.input.charCodeAt(this.state.pos + 1);if (120 === b || 88 === b) return this.readRadixNumber(16);if (111 === b || 79 === b) return this.readRadixNumber(8);if (98 === b || 66 === b) return this.readRadixNumber(2);case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
            return this.readNumber(!1);case 34:case 39:
            return this.readString(a);case 47:
            return this.readToken_slash();case 37:case 42:
            return this.readToken_mult_modulo(a);case 124:case 38:
            return this.readToken_pipe_amp(a);case 94:
            return this.readToken_caret();case 43:case 45:
            return this.readToken_plus_min(a);case 60:case 62:
            return this.readToken_lt_gt(a);case 61:case 33:
            return this.readToken_eq_excl(a);case 126:
            return this.finishOp(N.prefix, 1);}this.raise(this.state.pos, "Unexpected character '" + k(a) + "'");
      }, a.prototype.finishOp = function (a, b) {
        var c = this.input.slice(this.state.pos, this.state.pos + b);return this.state.pos += b, this.finishToken(a, c);
      }, a.prototype.readRegexp = function () {
        for (var a = this.state.pos, b = void 0, c = void 0;;) {
          this.state.pos >= this.input.length && this.raise(a, "Unterminated regular expression");var d = this.input.charAt(this.state.pos);if (P.test(d) && this.raise(a, "Unterminated regular expression"), b) b = !1;else {
            if ("[" === d) c = !0;else if ("]" === d && c) c = !1;else if ("/" === d && !c) break;b = "\\" === d;
          }++this.state.pos;
        }var e = this.input.slice(a, this.state.pos);++this.state.pos;var f = this.readWord1();if (f) {
          /^[gmsiyu]*$/.test(f) || this.raise(a, "Invalid regular expression flag");
        }return this.finishToken(N.regexp, { pattern: e, flags: f });
      }, a.prototype.readInt = function (a, b) {
        for (var c = this.state.pos, d = 0, e = 0, f = null == b ? 1 / 0 : b; e < f; ++e) {
          var g = this.input.charCodeAt(this.state.pos),
              h = void 0;if ((h = g >= 97 ? g - 97 + 10 : g >= 65 ? g - 65 + 10 : g >= 48 && g <= 57 ? g - 48 : 1 / 0) >= a) break;++this.state.pos, d = d * a + h;
        }return this.state.pos === c || null != b && this.state.pos - c !== b ? null : d;
      }, a.prototype.readRadixNumber = function (a) {
        this.state.pos += 2;var b = this.readInt(a);return null == b && this.raise(this.state.start + 2, "Expected number in radix " + a), f(this.fullCharCodeAtPos()) && this.raise(this.state.pos, "Identifier directly after number"), this.finishToken(N.num, b);
      }, a.prototype.readNumber = function (a) {
        var b = this.state.pos,
            c = 48 === this.input.charCodeAt(b),
            d = !1;a || null !== this.readInt(10) || this.raise(b, "Invalid number"), c && this.state.pos == b + 1 && (c = !1);var e = this.input.charCodeAt(this.state.pos);46 !== e || c || (++this.state.pos, this.readInt(10), d = !0, e = this.input.charCodeAt(this.state.pos)), 69 !== e && 101 !== e || c || (e = this.input.charCodeAt(++this.state.pos), 43 !== e && 45 !== e || ++this.state.pos, null === this.readInt(10) && this.raise(b, "Invalid number"), d = !0), f(this.fullCharCodeAtPos()) && this.raise(this.state.pos, "Identifier directly after number");var g = this.input.slice(b, this.state.pos),
            h = void 0;return d ? h = parseFloat(g) : c && 1 !== g.length ? this.state.strict ? this.raise(b, "Invalid number") : h = /[89]/.test(g) ? parseInt(g, 10) : parseInt(g, 8) : h = parseInt(g, 10), this.finishToken(N.num, h);
      }, a.prototype.readCodePoint = function (a) {
        var b = this.input.charCodeAt(this.state.pos),
            c = void 0;if (123 === b) {
          var d = ++this.state.pos;if (c = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos, a), ++this.state.pos, null === c) --this.state.invalidTemplateEscapePosition;else if (c > 1114111) {
            if (!a) return this.state.invalidTemplateEscapePosition = d - 2, null;this.raise(d, "Code point out of bounds");
          }
        } else c = this.readHexChar(4, a);return c;
      }, a.prototype.readString = function (a) {
        for (var b = "", c = ++this.state.pos;;) {
          this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated string constant");var d = this.input.charCodeAt(this.state.pos);if (d === a) break;92 === d ? (b += this.input.slice(c, this.state.pos), b += this.readEscapedChar(!1), c = this.state.pos) : (i(d) && this.raise(this.state.start, "Unterminated string constant"), ++this.state.pos);
        }return b += this.input.slice(c, this.state.pos++), this.finishToken(N.string, b);
      }, a.prototype.readTmplToken = function () {
        for (var a = "", b = this.state.pos, c = !1;;) {
          this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated template");var d = this.input.charCodeAt(this.state.pos);if (96 === d || 36 === d && 123 === this.input.charCodeAt(this.state.pos + 1)) return this.state.pos === this.state.start && this.match(N.template) ? 36 === d ? (this.state.pos += 2, this.finishToken(N.dollarBraceL)) : (++this.state.pos, this.finishToken(N.backQuote)) : (a += this.input.slice(b, this.state.pos), this.finishToken(N.template, c ? null : a));if (92 === d) {
            a += this.input.slice(b, this.state.pos);var e = this.readEscapedChar(!0);null === e ? c = !0 : a += e, b = this.state.pos;
          } else if (i(d)) {
            switch (a += this.input.slice(b, this.state.pos), ++this.state.pos, d) {case 13:
                10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;case 10:
                a += "\n";break;default:
                a += String.fromCharCode(d);}++this.state.curLine, this.state.lineStart = this.state.pos, b = this.state.pos;
          } else ++this.state.pos;
        }
      }, a.prototype.readEscapedChar = function (a) {
        var b = !a,
            c = this.input.charCodeAt(++this.state.pos);switch (++this.state.pos, c) {case 110:
            return "\n";case 114:
            return "\r";case 120:
            var d = this.readHexChar(2, b);return null === d ? null : String.fromCharCode(d);case 117:
            var e = this.readCodePoint(b);return null === e ? null : k(e);case 116:
            return "\t";case 98:
            return "\b";case 118:
            return "\v";case 102:
            return "\f";case 13:
            10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;case 10:
            return this.state.lineStart = this.state.pos, ++this.state.curLine, "";default:
            if (c >= 48 && c <= 55) {
              var f = this.state.pos - 1,
                  g = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0],
                  h = parseInt(g, 8);if (h > 255 && (g = g.slice(0, -1), h = parseInt(g, 8)), h > 0) {
                if (a) return this.state.invalidTemplateEscapePosition = f, null;this.state.strict ? this.raise(f, "Octal literal in strict mode") : this.state.containsOctal || (this.state.containsOctal = !0, this.state.octalPosition = f);
              }return this.state.pos += g.length - 1, String.fromCharCode(h);
            }return String.fromCharCode(c);}
      }, a.prototype.readHexChar = function (a, b) {
        var c = this.state.pos,
            d = this.readInt(16, a);return null === d && (b ? this.raise(c, "Bad character escape sequence") : (this.state.pos = c - 1, this.state.invalidTemplateEscapePosition = c - 1)), d;
      }, a.prototype.readWord1 = function () {
        this.state.containsEsc = !1;for (var a = "", b = !0, c = this.state.pos; this.state.pos < this.input.length;) {
          var d = this.fullCharCodeAtPos();if (g(d)) this.state.pos += d <= 65535 ? 1 : 2;else {
            if (92 !== d) break;this.state.containsEsc = !0, a += this.input.slice(c, this.state.pos);var e = this.state.pos;117 !== this.input.charCodeAt(++this.state.pos) && this.raise(this.state.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.state.pos;var h = this.readCodePoint(!0);(b ? f : g)(h, !0) || this.raise(e, "Invalid Unicode escape"), a += k(h), c = this.state.pos;
          }b = !1;
        }return a + this.input.slice(c, this.state.pos);
      }, a.prototype.readWord = function () {
        var a = this.readWord1(),
            b = N.name;return !this.state.containsEsc && this.isKeyword(a) && (b = O[a]), this.finishToken(b, a);
      }, a.prototype.braceIsBlock = function (a) {
        if (a === N.colon) {
          var b = this.curContext();if (b === T.braceStatement || b === T.braceExpression) return !b.isExpr;
        }return a === N._return ? P.test(this.input.slice(this.state.lastTokEnd, this.state.start)) : a === N._else || a === N.semi || a === N.eof || a === N.parenR || (a === N.braceL ? this.curContext() === T.braceStatement : !this.state.exprAllowed);
      }, a.prototype.updateContext = function (a) {
        var b = this.state.type,
            c = void 0;b.keyword && a === N.dot ? this.state.exprAllowed = !1 : (c = b.updateContext) ? c.call(this, a) : this.state.exprAllowed = b.beforeExpr;
      }, a;
    }(),
        Z = {},
        $ = ["jsx", "doExpressions", "objectRestSpread", "decorators", "classProperties", "exportExtensions", "asyncGenerators", "functionBind", "functionSent", "dynamicImport", "flow"],
        _ = function (a) {
      function b(c, d) {
        B(this, b), c = h(c);var e = D(this, a.call(this, c, d));return e.options = c, e.inModule = "module" === e.options.sourceType, e.input = d, e.plugins = e.loadPlugins(e.options.plugins), e.filename = c.sourceFilename, 0 === e.state.pos && "#" === e.input[0] && "!" === e.input[1] && e.skipLineComment(2), e;
      }return C(b, a), b.prototype.isReservedWord = function (a) {
        return "await" === a ? this.inModule : r[6](a);
      }, b.prototype.hasPlugin = function (a) {
        return !!(this.plugins["*"] && $.indexOf(a) > -1) || !!this.plugins[a];
      }, b.prototype.extend = function (a, b) {
        this[a] = b(this[a]);
      }, b.prototype.loadAllPlugins = function () {
        var a = this,
            b = Object.keys(Z).filter(function (a) {
          return "flow" !== a && "estree" !== a;
        });b.push("flow"), b.forEach(function (b) {
          var c = Z[b];c && c(a);
        });
      }, b.prototype.loadPlugins = function (a) {
        if (a.indexOf("*") >= 0) return this.loadAllPlugins(), { "*": !0 };var b = {};a.indexOf("flow") >= 0 && (a = a.filter(function (a) {
          return "flow" !== a;
        }), a.push("flow")), a.indexOf("estree") >= 0 && (a = a.filter(function (a) {
          return "estree" !== a;
        }), a.unshift("estree"));for (var c = a, d = Array.isArray(c), e = 0, c = d ? c : c[Symbol.iterator]();;) {
          var f;if (d) {
            if (e >= c.length) break;f = c[e++];
          } else {
            if (e = c.next(), e.done) break;f = e.value;
          }var g = f;if (!b[g]) {
            b[g] = !0;var h = Z[g];h && h(this);
          }
        }return b;
      }, b.prototype.parse = function () {
        var a = this.startNode(),
            b = this.startNode();return this.nextToken(), this.parseTopLevel(a, b);
      }, b;
    }(Y),
        aa = _.prototype;aa.addExtra = function (a, b, c) {
      if (a) {
        (a.extra = a.extra || {})[b] = c;
      }
    }, aa.isRelational = function (a) {
      return this.match(N.relational) && this.state.value === a;
    }, aa.expectRelational = function (a) {
      this.isRelational(a) ? this.next() : this.unexpected(null, N.relational);
    }, aa.isContextual = function (a) {
      return this.match(N.name) && this.state.value === a;
    }, aa.eatContextual = function (a) {
      return this.state.value === a && this.eat(N.name);
    }, aa.expectContextual = function (a, b) {
      this.eatContextual(a) || this.unexpected(null, b);
    }, aa.canInsertSemicolon = function () {
      return this.match(N.eof) || this.match(N.braceR) || P.test(this.input.slice(this.state.lastTokEnd, this.state.start));
    }, aa.isLineTerminator = function () {
      return this.eat(N.semi) || this.canInsertSemicolon();
    }, aa.semicolon = function () {
      this.isLineTerminator() || this.unexpected(null, N.semi);
    }, aa.expect = function (a, b) {
      return this.eat(a) || this.unexpected(b, a);
    }, aa.unexpected = function (a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "Unexpected token";b && "object" === (void 0 === b ? "undefined" : A(b)) && b.label && (b = "Unexpected token, expected " + b.label), this.raise(null != a ? a : this.state.start, b);
    };var ba = _.prototype;ba.parseTopLevel = function (a, b) {
      return b.sourceType = this.options.sourceType, this.parseBlockBody(b, !0, !0, N.eof), a.program = this.finishNode(b, "Program"), a.comments = this.state.comments, a.tokens = this.state.tokens, this.finishNode(a, "File");
    };var ca = { kind: "loop" },
        da = { kind: "switch" };ba.stmtToDirective = function (a) {
      var b = a.expression,
          c = this.startNodeAt(b.start, b.loc.start),
          d = this.startNodeAt(a.start, a.loc.start),
          e = this.input.slice(b.start, b.end),
          f = c.value = e.slice(1, -1);return this.addExtra(c, "raw", e), this.addExtra(c, "rawValue", f), d.value = this.finishNodeAt(c, "DirectiveLiteral", b.end, b.loc.end), this.finishNodeAt(d, "Directive", a.end, a.loc.end);
    }, ba.parseStatement = function (a, b) {
      this.match(N.at) && this.parseDecorators(!0);var c = this.state.type,
          d = this.startNode();switch (c) {case N._break:case N._continue:
          return this.parseBreakContinueStatement(d, c.keyword);case N._debugger:
          return this.parseDebuggerStatement(d);case N._do:
          return this.parseDoStatement(d);case N._for:
          return this.parseForStatement(d);case N._function:
          return a || this.unexpected(), this.parseFunctionStatement(d);case N._class:
          return a || this.unexpected(), this.parseClass(d, !0);case N._if:
          return this.parseIfStatement(d);case N._return:
          return this.parseReturnStatement(d);case N._switch:
          return this.parseSwitchStatement(d);case N._throw:
          return this.parseThrowStatement(d);case N._try:
          return this.parseTryStatement(d);case N._let:case N._const:
          a || this.unexpected();case N._var:
          return this.parseVarStatement(d, c);case N._while:
          return this.parseWhileStatement(d);case N._with:
          return this.parseWithStatement(d);case N.braceL:
          return this.parseBlock();case N.semi:
          return this.parseEmptyStatement(d);case N._export:case N._import:
          if (this.hasPlugin("dynamicImport") && this.lookahead().type === N.parenL) break;return this.options.allowImportExportEverywhere || (b || this.raise(this.state.start, "'import' and 'export' may only appear at the top level"), this.inModule || this.raise(this.state.start, "'import' and 'export' may appear only with 'sourceType: module'")), c === N._import ? this.parseImport(d) : this.parseExport(d);case N.name:
          if ("async" === this.state.value) {
            var e = this.state.clone();if (this.next(), this.match(N._function) && !this.canInsertSemicolon()) return this.expect(N._function), this.parseFunction(d, !0, !1, !0);this.state = e;
          }}var f = this.state.value,
          g = this.parseExpression();return c === N.name && "Identifier" === g.type && this.eat(N.colon) ? this.parseLabeledStatement(d, f, g) : this.parseExpressionStatement(d, g);
    }, ba.takeDecorators = function (a) {
      this.state.decorators.length && (a.decorators = this.state.decorators, this.state.decorators = []);
    }, ba.parseDecorators = function (a) {
      for (; this.match(N.at);) {
        var b = this.parseDecorator();this.state.decorators.push(b);
      }a && this.match(N._export) || this.match(N._class) || this.raise(this.state.start, "Leading decorators must be attached to a class declaration");
    }, ba.parseDecorator = function () {
      this.hasPlugin("decorators") || this.unexpected();var a = this.startNode();return this.next(), a.expression = this.parseMaybeAssign(), this.finishNode(a, "Decorator");
    }, ba.parseBreakContinueStatement = function (a, b) {
      var c = "break" === b;this.next(), this.isLineTerminator() ? a.label = null : this.match(N.name) ? (a.label = this.parseIdentifier(), this.semicolon()) : this.unexpected();var d = void 0;for (d = 0; d < this.state.labels.length; ++d) {
        var e = this.state.labels[d];if (null == a.label || e.name === a.label.name) {
          if (null != e.kind && (c || "loop" === e.kind)) break;if (a.label && c) break;
        }
      }return d === this.state.labels.length && this.raise(a.start, "Unsyntactic " + b), this.finishNode(a, c ? "BreakStatement" : "ContinueStatement");
    }, ba.parseDebuggerStatement = function (a) {
      return this.next(), this.semicolon(), this.finishNode(a, "DebuggerStatement");
    }, ba.parseDoStatement = function (a) {
      return this.next(), this.state.labels.push(ca), a.body = this.parseStatement(!1), this.state.labels.pop(), this.expect(N._while), a.test = this.parseParenExpression(), this.eat(N.semi), this.finishNode(a, "DoWhileStatement");
    }, ba.parseForStatement = function (a) {
      this.next(), this.state.labels.push(ca);var b = !1;if (this.hasPlugin("asyncGenerators") && this.state.inAsync && this.isContextual("await") && (b = !0, this.next()), this.expect(N.parenL), this.match(N.semi)) return b && this.unexpected(), this.parseFor(a, null);if (this.match(N._var) || this.match(N._let) || this.match(N._const)) {
        var c = this.startNode(),
            d = this.state.type;return this.next(), (this.parseVar(c, !0, d), this.finishNode(c, "VariableDeclaration"), !this.match(N._in) && !this.isContextual("of") || 1 !== c.declarations.length || c.declarations[0].init) ? (b && this.unexpected(), this.parseFor(a, c)) : this.parseForIn(a, c, b);
      }var e = { start: 0 },
          f = this.parseExpression(!0, e);if (this.match(N._in) || this.isContextual("of")) {
        var g = this.isContextual("of") ? "for-of statement" : "for-in statement";return this.toAssignable(f, void 0, g), this.checkLVal(f, void 0, void 0, g), this.parseForIn(a, f, b);
      }return e.start && this.unexpected(e.start), b && this.unexpected(), this.parseFor(a, f);
    }, ba.parseFunctionStatement = function (a) {
      return this.next(), this.parseFunction(a, !0);
    }, ba.parseIfStatement = function (a) {
      return this.next(), a.test = this.parseParenExpression(), a.consequent = this.parseStatement(!1), a.alternate = this.eat(N._else) ? this.parseStatement(!1) : null, this.finishNode(a, "IfStatement");
    }, ba.parseReturnStatement = function (a) {
      return this.state.inFunction || this.options.allowReturnOutsideFunction || this.raise(this.state.start, "'return' outside of function"), this.next(), this.isLineTerminator() ? a.argument = null : (a.argument = this.parseExpression(), this.semicolon()), this.finishNode(a, "ReturnStatement");
    }, ba.parseSwitchStatement = function (a) {
      this.next(), a.discriminant = this.parseParenExpression(), a.cases = [], this.expect(N.braceL), this.state.labels.push(da);for (var b, c = void 0; !this.match(N.braceR);) if (this.match(N._case) || this.match(N._default)) {
        var d = this.match(N._case);c && this.finishNode(c, "SwitchCase"), a.cases.push(c = this.startNode()), c.consequent = [], this.next(), d ? c.test = this.parseExpression() : (b && this.raise(this.state.lastTokStart, "Multiple default clauses"), b = !0, c.test = null), this.expect(N.colon);
      } else c ? c.consequent.push(this.parseStatement(!0)) : this.unexpected();return c && this.finishNode(c, "SwitchCase"), this.next(), this.state.labels.pop(), this.finishNode(a, "SwitchStatement");
    }, ba.parseThrowStatement = function (a) {
      return this.next(), P.test(this.input.slice(this.state.lastTokEnd, this.state.start)) && this.raise(this.state.lastTokEnd, "Illegal newline after throw"), a.argument = this.parseExpression(), this.semicolon(), this.finishNode(a, "ThrowStatement");
    };var ea = [];ba.parseTryStatement = function (a) {
      if (this.next(), a.block = this.parseBlock(), a.handler = null, this.match(N._catch)) {
        var b = this.startNode();this.next(), this.expect(N.parenL), b.param = this.parseBindingAtom(), this.checkLVal(b.param, !0, Object.create(null), "catch clause"), this.expect(N.parenR), b.body = this.parseBlock(), a.handler = this.finishNode(b, "CatchClause");
      }return a.guardedHandlers = ea, a.finalizer = this.eat(N._finally) ? this.parseBlock() : null, a.handler || a.finalizer || this.raise(a.start, "Missing catch or finally clause"), this.finishNode(a, "TryStatement");
    }, ba.parseVarStatement = function (a, b) {
      return this.next(), this.parseVar(a, !1, b), this.semicolon(), this.finishNode(a, "VariableDeclaration");
    }, ba.parseWhileStatement = function (a) {
      return this.next(), a.test = this.parseParenExpression(), this.state.labels.push(ca), a.body = this.parseStatement(!1), this.state.labels.pop(), this.finishNode(a, "WhileStatement");
    }, ba.parseWithStatement = function (a) {
      return this.state.strict && this.raise(this.state.start, "'with' in strict mode"), this.next(), a.object = this.parseParenExpression(), a.body = this.parseStatement(!1), this.finishNode(a, "WithStatement");
    }, ba.parseEmptyStatement = function (a) {
      return this.next(), this.finishNode(a, "EmptyStatement");
    }, ba.parseLabeledStatement = function (a, b, c) {
      for (var d = this.state.labels, e = Array.isArray(d), f = 0, d = e ? d : d[Symbol.iterator]();;) {
        var g;if (e) {
          if (f >= d.length) break;g = d[f++];
        } else {
          if (f = d.next(), f.done) break;g = f.value;
        }g.name === b && this.raise(c.start, "Label '" + b + "' is already declared");
      }for (var h = this.state.type.isLoop ? "loop" : this.match(N._switch) ? "switch" : null, i = this.state.labels.length - 1; i >= 0; i--) {
        var j = this.state.labels[i];if (j.statementStart !== a.start) break;j.statementStart = this.state.start, j.kind = h;
      }return this.state.labels.push({ name: b, kind: h, statementStart: this.state.start }), a.body = this.parseStatement(!0), this.state.labels.pop(), a.label = c, this.finishNode(a, "LabeledStatement");
    }, ba.parseExpressionStatement = function (a, b) {
      return a.expression = b, this.semicolon(), this.finishNode(a, "ExpressionStatement");
    }, ba.parseBlock = function (a) {
      var b = this.startNode();return this.expect(N.braceL), this.parseBlockBody(b, a, !1, N.braceR), this.finishNode(b, "BlockStatement");
    }, ba.isValidDirective = function (a) {
      return "ExpressionStatement" === a.type && "StringLiteral" === a.expression.type && !a.expression.extra.parenthesized;
    }, ba.parseBlockBody = function (a, b, c, d) {
      a.body = [], a.directives = [];for (var e = !1, f = void 0, g = void 0; !this.eat(d);) {
        e || !this.state.containsOctal || g || (g = this.state.octalPosition);var h = this.parseStatement(!0, c);if (b && !e && this.isValidDirective(h)) {
          var i = this.stmtToDirective(h);a.directives.push(i), void 0 === f && "use strict" === i.value.value && (f = this.state.strict, this.setStrict(!0), g && this.raise(g, "Octal literal in strict mode"));
        } else e = !0, a.body.push(h);
      }!1 === f && this.setStrict(!1);
    }, ba.parseFor = function (a, b) {
      return a.init = b, this.expect(N.semi), a.test = this.match(N.semi) ? null : this.parseExpression(), this.expect(N.semi), a.update = this.match(N.parenR) ? null : this.parseExpression(), this.expect(N.parenR), a.body = this.parseStatement(!1), this.state.labels.pop(), this.finishNode(a, "ForStatement");
    }, ba.parseForIn = function (a, b, c) {
      var d = void 0;return c ? (this.eatContextual("of"), d = "ForAwaitStatement") : (d = this.match(N._in) ? "ForInStatement" : "ForOfStatement", this.next()), a.left = b, a.right = this.parseExpression(), this.expect(N.parenR), a.body = this.parseStatement(!1), this.state.labels.pop(), this.finishNode(a, d);
    }, ba.parseVar = function (a, b, c) {
      for (a.declarations = [], a.kind = c.keyword;;) {
        var d = this.startNode();if (this.parseVarHead(d), this.eat(N.eq) ? d.init = this.parseMaybeAssign(b) : c !== N._const || this.match(N._in) || this.isContextual("of") ? "Identifier" === d.id.type || b && (this.match(N._in) || this.isContextual("of")) ? d.init = null : this.raise(this.state.lastTokEnd, "Complex binding patterns require an initialization value") : this.unexpected(), a.declarations.push(this.finishNode(d, "VariableDeclarator")), !this.eat(N.comma)) break;
      }return a;
    }, ba.parseVarHead = function (a) {
      a.id = this.parseBindingAtom(), this.checkLVal(a.id, !0, void 0, "variable declaration");
    }, ba.parseFunction = function (a, b, c, d, e) {
      var f = this.state.inMethod;return this.state.inMethod = !1, this.initFunction(a, d), this.match(N.star) && (a.async && !this.hasPlugin("asyncGenerators") ? this.unexpected() : (a.generator = !0, this.next())), !b || e || this.match(N.name) || this.match(N._yield) || this.unexpected(), (this.match(N.name) || this.match(N._yield)) && (a.id = this.parseBindingIdentifier()), this.parseFunctionParams(a), this.parseFunctionBody(a, c), this.state.inMethod = f, this.finishNode(a, b ? "FunctionDeclaration" : "FunctionExpression");
    }, ba.parseFunctionParams = function (a) {
      this.expect(N.parenL), a.params = this.parseBindingList(N.parenR);
    }, ba.parseClass = function (a, b, c) {
      return this.next(), this.takeDecorators(a), this.parseClassId(a, b, c), this.parseClassSuper(a), this.parseClassBody(a), this.finishNode(a, b ? "ClassDeclaration" : "ClassExpression");
    }, ba.isClassProperty = function () {
      return this.match(N.eq) || this.match(N.semi) || this.match(N.braceR);
    }, ba.isClassMethod = function () {
      return this.match(N.parenL);
    }, ba.isNonstaticConstructor = function (a) {
      return !(a.computed || a.static || "constructor" !== a.key.name && "constructor" !== a.key.value);
    }, ba.parseClassBody = function (a) {
      var b = this.state.strict;this.state.strict = !0;var c = !1,
          d = !1,
          e = [],
          f = this.startNode();for (f.body = [], this.expect(N.braceL); !this.eat(N.braceR);) if (this.eat(N.semi)) e.length > 0 && this.raise(this.state.lastTokEnd, "Decorators must not be followed by a semicolon");else if (this.match(N.at)) e.push(this.parseDecorator());else {
        var g = this.startNode();if (e.length && (g.decorators = e, e = []), g.static = !1, this.match(N.name) && "static" === this.state.value) {
          var h = this.parseIdentifier(!0);if (this.isClassMethod()) {
            g.kind = "method", g.computed = !1, g.key = h, this.parseClassMethod(f, g, !1, !1);continue;
          }if (this.isClassProperty()) {
            g.computed = !1, g.key = h, f.body.push(this.parseClassProperty(g));continue;
          }g.static = !0;
        }if (this.eat(N.star)) g.kind = "method", this.parsePropertyName(g), this.isNonstaticConstructor(g) && this.raise(g.key.start, "Constructor can't be a generator"), g.computed || !g.static || "prototype" !== g.key.name && "prototype" !== g.key.value || this.raise(g.key.start, "Classes may not have static property named prototype"), this.parseClassMethod(f, g, !0, !1);else {
          var i = this.match(N.name),
              j = this.parsePropertyName(g);if (g.computed || !g.static || "prototype" !== g.key.name && "prototype" !== g.key.value || this.raise(g.key.start, "Classes may not have static property named prototype"), this.isClassMethod()) this.isNonstaticConstructor(g) ? (d ? this.raise(j.start, "Duplicate constructor in the same class") : g.decorators && this.raise(g.start, "You can't attach decorators to a class constructor"), d = !0, g.kind = "constructor") : g.kind = "method", this.parseClassMethod(f, g, !1, !1);else if (this.isClassProperty()) this.isNonstaticConstructor(g) && this.raise(g.key.start, "Classes may not have a non-static field named 'constructor'"), f.body.push(this.parseClassProperty(g));else if (i && "async" === j.name && !this.isLineTerminator()) {
            var k = this.hasPlugin("asyncGenerators") && this.eat(N.star);g.kind = "method", this.parsePropertyName(g), this.isNonstaticConstructor(g) && this.raise(g.key.start, "Constructor can't be an async function"), this.parseClassMethod(f, g, k, !0);
          } else !i || "get" !== j.name && "set" !== j.name || this.isLineTerminator() && this.match(N.star) ? this.hasPlugin("classConstructorCall") && i && "call" === j.name && this.match(N.name) && "constructor" === this.state.value ? (c ? this.raise(g.start, "Duplicate constructor call in the same class") : g.decorators && this.raise(g.start, "You can't attach decorators to a class constructor"), c = !0, g.kind = "constructorCall", this.parsePropertyName(g), this.parseClassMethod(f, g, !1, !1)) : this.isLineTerminator() ? (this.isNonstaticConstructor(g) && this.raise(g.key.start, "Classes may not have a non-static field named 'constructor'"), f.body.push(this.parseClassProperty(g))) : this.unexpected() : (g.kind = j.name, this.parsePropertyName(g), this.isNonstaticConstructor(g) && this.raise(g.key.start, "Constructor can't have get/set modifier"), this.parseClassMethod(f, g, !1, !1), this.checkGetterSetterParamCount(g));
        }
      }e.length && this.raise(this.state.start, "You have trailing decorators with no method"), a.body = this.finishNode(f, "ClassBody"), this.state.strict = b;
    }, ba.parseClassProperty = function (a) {
      return this.state.inClassProperty = !0, this.match(N.eq) ? (this.hasPlugin("classProperties") || this.unexpected(), this.next(), a.value = this.parseMaybeAssign()) : a.value = null, this.semicolon(), this.state.inClassProperty = !1, this.finishNode(a, "ClassProperty");
    }, ba.parseClassMethod = function (a, b, c, d) {
      this.parseMethod(b, c, d), a.body.push(this.finishNode(b, "ClassMethod"));
    }, ba.parseClassId = function (a, b, c) {
      this.match(N.name) ? a.id = this.parseIdentifier() : c || !b ? a.id = null : this.unexpected();
    }, ba.parseClassSuper = function (a) {
      a.superClass = this.eat(N._extends) ? this.parseExprSubscripts() : null;
    }, ba.parseExport = function (a) {
      if (this.next(), this.match(N.star)) {
        var b = this.startNode();if (this.next(), !this.hasPlugin("exportExtensions") || !this.eatContextual("as")) return this.parseExportFrom(a, !0), this.finishNode(a, "ExportAllDeclaration");b.exported = this.parseIdentifier(), a.specifiers = [this.finishNode(b, "ExportNamespaceSpecifier")], this.parseExportSpecifiersMaybe(a), this.parseExportFrom(a, !0);
      } else if (this.hasPlugin("exportExtensions") && this.isExportDefaultSpecifier()) {
        var c = this.startNode();if (c.exported = this.parseIdentifier(!0), a.specifiers = [this.finishNode(c, "ExportDefaultSpecifier")], this.match(N.comma) && this.lookahead().type === N.star) {
          this.expect(N.comma);var d = this.startNode();this.expect(N.star), this.expectContextual("as"), d.exported = this.parseIdentifier(), a.specifiers.push(this.finishNode(d, "ExportNamespaceSpecifier"));
        } else this.parseExportSpecifiersMaybe(a);this.parseExportFrom(a, !0);
      } else {
        if (this.eat(N._default)) {
          var e = this.startNode(),
              f = !1;return this.eat(N._function) ? e = this.parseFunction(e, !0, !1, !1, !0) : this.match(N._class) ? e = this.parseClass(e, !0, !0) : (f = !0, e = this.parseMaybeAssign()), a.declaration = e, f && this.semicolon(), this.checkExport(a, !0, !0), this.finishNode(a, "ExportDefaultDeclaration");
        }this.shouldParseExportDeclaration() ? (a.specifiers = [], a.source = null, a.declaration = this.parseExportDeclaration(a)) : (a.declaration = null, a.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(a));
      }return this.checkExport(a, !0), this.finishNode(a, "ExportNamedDeclaration");
    }, ba.parseExportDeclaration = function () {
      return this.parseStatement(!0);
    }, ba.isExportDefaultSpecifier = function () {
      if (this.match(N.name)) return "async" !== this.state.value;if (!this.match(N._default)) return !1;var a = this.lookahead();return a.type === N.comma || a.type === N.name && "from" === a.value;
    }, ba.parseExportSpecifiersMaybe = function (a) {
      this.eat(N.comma) && (a.specifiers = a.specifiers.concat(this.parseExportSpecifiers()));
    }, ba.parseExportFrom = function (a, b) {
      this.eatContextual("from") ? (a.source = this.match(N.string) ? this.parseExprAtom() : this.unexpected(), this.checkExport(a)) : b ? this.unexpected() : a.source = null, this.semicolon();
    }, ba.shouldParseExportDeclaration = function () {
      return "var" === this.state.type.keyword || "const" === this.state.type.keyword || "let" === this.state.type.keyword || "function" === this.state.type.keyword || "class" === this.state.type.keyword || this.isContextual("async");
    }, ba.checkExport = function (a, b, c) {
      if (b) if (c) this.checkDuplicateExports(a, "default");else if (a.specifiers && a.specifiers.length) for (var d = a.specifiers, e = Array.isArray(d), f = 0, d = e ? d : d[Symbol.iterator]();;) {
        var g;if (e) {
          if (f >= d.length) break;g = d[f++];
        } else {
          if (f = d.next(), f.done) break;g = f.value;
        }var h = g;this.checkDuplicateExports(h, h.exported.name);
      } else if (a.declaration) if ("FunctionDeclaration" === a.declaration.type || "ClassDeclaration" === a.declaration.type) this.checkDuplicateExports(a, a.declaration.id.name);else if ("VariableDeclaration" === a.declaration.type) for (var i = a.declaration.declarations, j = Array.isArray(i), k = 0, i = j ? i : i[Symbol.iterator]();;) {
        var l;if (j) {
          if (k >= i.length) break;l = i[k++];
        } else {
          if (k = i.next(), k.done) break;l = k.value;
        }var m = l;this.checkDeclaration(m.id);
      }if (this.state.decorators.length) {
        var n = a.declaration && ("ClassDeclaration" === a.declaration.type || "ClassExpression" === a.declaration.type);a.declaration && n || this.raise(a.start, "You can only use decorators on an export when exporting a class"), this.takeDecorators(a.declaration);
      }
    }, ba.checkDeclaration = function (a) {
      if ("ObjectPattern" === a.type) for (var b = a.properties, c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator]();;) {
        var e;if (c) {
          if (d >= b.length) break;e = b[d++];
        } else {
          if (d = b.next(), d.done) break;e = d.value;
        }var f = e;this.checkDeclaration(f);
      } else if ("ArrayPattern" === a.type) for (var g = a.elements, h = Array.isArray(g), i = 0, g = h ? g : g[Symbol.iterator]();;) {
        var j;if (h) {
          if (i >= g.length) break;j = g[i++];
        } else {
          if (i = g.next(), i.done) break;j = i.value;
        }var k = j;k && this.checkDeclaration(k);
      } else "ObjectProperty" === a.type ? this.checkDeclaration(a.value) : "RestElement" === a.type || "RestProperty" === a.type ? this.checkDeclaration(a.argument) : "Identifier" === a.type && this.checkDuplicateExports(a, a.name);
    }, ba.checkDuplicateExports = function (a, b) {
      this.state.exportedIdentifiers.indexOf(b) > -1 && this.raiseDuplicateExportError(a, b), this.state.exportedIdentifiers.push(b);
    }, ba.raiseDuplicateExportError = function (a, b) {
      this.raise(a.start, "default" === b ? "Only one default export allowed per module." : "`" + b + "` has already been exported. Exported identifiers must be unique.");
    }, ba.parseExportSpecifiers = function () {
      var a = [],
          b = !0,
          c = void 0;for (this.expect(N.braceL); !this.eat(N.braceR);) {
        if (b) b = !1;else if (this.expect(N.comma), this.eat(N.braceR)) break;var d = this.match(N._default);d && !c && (c = !0);var e = this.startNode();e.local = this.parseIdentifier(d), e.exported = this.eatContextual("as") ? this.parseIdentifier(!0) : e.local.__clone(), a.push(this.finishNode(e, "ExportSpecifier"));
      }return c && !this.isContextual("from") && this.unexpected(), a;
    }, ba.parseImport = function (a) {
      return this.eat(N._import), this.match(N.string) ? (a.specifiers = [], a.source = this.parseExprAtom()) : (a.specifiers = [], this.parseImportSpecifiers(a), this.expectContextual("from"), a.source = this.match(N.string) ? this.parseExprAtom() : this.unexpected()), this.semicolon(), this.finishNode(a, "ImportDeclaration");
    }, ba.parseImportSpecifiers = function (a) {
      var b = !0;if (this.match(N.name)) {
        var c = this.state.start,
            d = this.state.startLoc;if (a.specifiers.push(this.parseImportSpecifierDefault(this.parseIdentifier(), c, d)), !this.eat(N.comma)) return;
      }if (this.match(N.star)) {
        var e = this.startNode();return this.next(), this.expectContextual("as"), e.local = this.parseIdentifier(), this.checkLVal(e.local, !0, void 0, "import namespace specifier"), void a.specifiers.push(this.finishNode(e, "ImportNamespaceSpecifier"));
      }for (this.expect(N.braceL); !this.eat(N.braceR);) {
        if (b) b = !1;else if (this.eat(N.colon) && this.unexpected(null, "ES2015 named imports do not destructure. Use another statement for destructuring after the import."), this.expect(N.comma), this.eat(N.braceR)) break;this.parseImportSpecifier(a);
      }
    }, ba.parseImportSpecifier = function (a) {
      var b = this.startNode();b.imported = this.parseIdentifier(!0), this.eatContextual("as") ? b.local = this.parseIdentifier() : (this.checkReservedWord(b.imported.name, b.start, !0, !0), b.local = b.imported.__clone()), this.checkLVal(b.local, !0, void 0, "import specifier"), a.specifiers.push(this.finishNode(b, "ImportSpecifier"));
    }, ba.parseImportSpecifierDefault = function (a, b, c) {
      var d = this.startNodeAt(b, c);return d.local = a, this.checkLVal(d.local, !0, void 0, "default import specifier"), this.finishNode(d, "ImportDefaultSpecifier");
    };var fa = _.prototype;fa.toAssignable = function (a, b, c) {
      if (a) switch (a.type) {case "Identifier":case "ObjectPattern":case "ArrayPattern":case "AssignmentPattern":
          break;case "ObjectExpression":
          a.type = "ObjectPattern";for (var d = a.properties, e = Array.isArray(d), f = 0, d = e ? d : d[Symbol.iterator]();;) {
            var g;if (e) {
              if (f >= d.length) break;g = d[f++];
            } else {
              if (f = d.next(), f.done) break;g = f.value;
            }var h = g;"ObjectMethod" === h.type ? "get" === h.kind || "set" === h.kind ? this.raise(h.key.start, "Object pattern can't contain getter or setter") : this.raise(h.key.start, "Object pattern can't contain methods") : this.toAssignable(h, b, "object destructuring pattern");
          }break;case "ObjectProperty":
          this.toAssignable(a.value, b, c);break;case "SpreadProperty":
          a.type = "RestProperty";var i = a.argument;this.toAssignable(i, b, c);break;case "ArrayExpression":
          a.type = "ArrayPattern", this.toAssignableList(a.elements, b, c);break;case "AssignmentExpression":
          "=" === a.operator ? (a.type = "AssignmentPattern", delete a.operator) : this.raise(a.left.end, "Only '=' operator can be used for specifying default value.");break;case "MemberExpression":
          if (!b) break;default:
          var j = "Invalid left-hand side" + (c ? " in " + c : "expression");this.raise(a.start, j);}return a;
    }, fa.toAssignableList = function (a, b, c) {
      var d = a.length;if (d) {
        var e = a[d - 1];if (e && "RestElement" === e.type) --d;else if (e && "SpreadElement" === e.type) {
          e.type = "RestElement";var f = e.argument;this.toAssignable(f, b, c), "Identifier" !== f.type && "MemberExpression" !== f.type && "ArrayPattern" !== f.type && this.unexpected(f.start), --d;
        }
      }for (var g = 0; g < d; g++) {
        var h = a[g];h && this.toAssignable(h, b, c);
      }return a;
    }, fa.toReferencedList = function (a) {
      return a;
    }, fa.parseSpread = function (a) {
      var b = this.startNode();return this.next(), b.argument = this.parseMaybeAssign(!1, a), this.finishNode(b, "SpreadElement");
    }, fa.parseRest = function () {
      var a = this.startNode();return this.next(), a.argument = this.parseBindingIdentifier(), this.finishNode(a, "RestElement");
    }, fa.shouldAllowYieldIdentifier = function () {
      return this.match(N._yield) && !this.state.strict && !this.state.inGenerator;
    }, fa.parseBindingIdentifier = function () {
      return this.parseIdentifier(this.shouldAllowYieldIdentifier());
    }, fa.parseBindingAtom = function () {
      switch (this.state.type) {case N._yield:
          (this.state.strict || this.state.inGenerator) && this.unexpected();case N.name:
          return this.parseIdentifier(!0);case N.bracketL:
          var a = this.startNode();return this.next(), a.elements = this.parseBindingList(N.bracketR, !0), this.finishNode(a, "ArrayPattern");case N.braceL:
          return this.parseObj(!0);default:
          this.unexpected();}
    }, fa.parseBindingList = function (a, b) {
      for (var c = [], d = !0; !this.eat(a);) if (d ? d = !1 : this.expect(N.comma), b && this.match(N.comma)) c.push(null);else {
        if (this.eat(a)) break;if (this.match(N.ellipsis)) {
          c.push(this.parseAssignableListItemTypes(this.parseRest())), this.expect(a);break;
        }for (var e = []; this.match(N.at);) e.push(this.parseDecorator());var f = this.parseMaybeDefault();e.length && (f.decorators = e), this.parseAssignableListItemTypes(f), c.push(this.parseMaybeDefault(f.start, f.loc.start, f));
      }return c;
    }, fa.parseAssignableListItemTypes = function (a) {
      return a;
    }, fa.parseMaybeDefault = function (a, b, c) {
      if (b = b || this.state.startLoc, a = a || this.state.start, c = c || this.parseBindingAtom(), !this.eat(N.eq)) return c;var d = this.startNodeAt(a, b);return d.left = c, d.right = this.parseMaybeAssign(), this.finishNode(d, "AssignmentPattern");
    }, fa.checkLVal = function (a, b, c, d) {
      switch (a.type) {case "Identifier":
          if (this.checkReservedWord(a.name, a.start, !1, !0), c) {
            var e = "_" + a.name;c[e] ? this.raise(a.start, "Argument name clash in strict mode") : c[e] = !0;
          }break;case "MemberExpression":
          b && this.raise(a.start, (b ? "Binding" : "Assigning to") + " member expression");break;case "ObjectPattern":
          for (var f = a.properties, g = Array.isArray(f), h = 0, f = g ? f : f[Symbol.iterator]();;) {
            var i;if (g) {
              if (h >= f.length) break;i = f[h++];
            } else {
              if (h = f.next(), h.done) break;i = h.value;
            }var j = i;"ObjectProperty" === j.type && (j = j.value), this.checkLVal(j, b, c, "object destructuring pattern");
          }break;case "ArrayPattern":
          for (var k = a.elements, l = Array.isArray(k), m = 0, k = l ? k : k[Symbol.iterator]();;) {
            var n;if (l) {
              if (m >= k.length) break;n = k[m++];
            } else {
              if (m = k.next(), m.done) break;n = m.value;
            }var o = n;o && this.checkLVal(o, b, c, "array destructuring pattern");
          }break;case "AssignmentPattern":
          this.checkLVal(a.left, b, c, "assignment pattern");break;case "RestProperty":
          this.checkLVal(a.argument, b, c, "rest property");break;case "RestElement":
          this.checkLVal(a.argument, b, c, "rest element");break;default:
          var p = (b ? "Binding invalid" : "Invalid") + " left-hand side" + (d ? " in " + d : "expression");this.raise(a.start, p);}
    };var ga = _.prototype;ga.checkPropClash = function (a, b) {
      if (!a.computed && !a.kind) {
        var c = a.key;"__proto__" === ("Identifier" === c.type ? c.name : String(c.value)) && (b.proto && this.raise(c.start, "Redefinition of __proto__ property"), b.proto = !0);
      }
    }, ga.getExpression = function () {
      this.nextToken();var a = this.parseExpression();return this.match(N.eof) || this.unexpected(), a;
    }, ga.parseExpression = function (a, b) {
      var c = this.state.start,
          d = this.state.startLoc,
          e = this.parseMaybeAssign(a, b);if (this.match(N.comma)) {
        var f = this.startNodeAt(c, d);for (f.expressions = [e]; this.eat(N.comma);) f.expressions.push(this.parseMaybeAssign(a, b));return this.toReferencedList(f.expressions), this.finishNode(f, "SequenceExpression");
      }return e;
    }, ga.parseMaybeAssign = function (a, b, c, d) {
      var e = this.state.start,
          f = this.state.startLoc;if (this.match(N._yield) && this.state.inGenerator) {
        var g = this.parseYield();return c && (g = c.call(this, g, e, f)), g;
      }var h = void 0;b ? h = !1 : (b = { start: 0 }, h = !0), (this.match(N.parenL) || this.match(N.name)) && (this.state.potentialArrowAt = this.state.start);var i = this.parseMaybeConditional(a, b, d);if (c && (i = c.call(this, i, e, f)), this.state.type.isAssign) {
        var j = this.startNodeAt(e, f);if (j.operator = this.state.value, j.left = this.match(N.eq) ? this.toAssignable(i, void 0, "assignment expression") : i, b.start = 0, this.checkLVal(i, void 0, void 0, "assignment expression"), i.extra && i.extra.parenthesized) {
          var k = void 0;"ObjectPattern" === i.type ? k = "`({a}) = 0` use `({a} = 0)`" : "ArrayPattern" === i.type && (k = "`([a]) = 0` use `([a] = 0)`"), k && this.raise(i.start, "You're trying to assign to a parenthesized expression, eg. instead of " + k);
        }return this.next(), j.right = this.parseMaybeAssign(a), this.finishNode(j, "AssignmentExpression");
      }return h && b.start && this.unexpected(b.start), i;
    }, ga.parseMaybeConditional = function (a, b, c) {
      var d = this.state.start,
          e = this.state.startLoc,
          f = this.parseExprOps(a, b);return b && b.start ? f : this.parseConditional(f, a, d, e, c);
    }, ga.parseConditional = function (a, b, c, d) {
      if (this.eat(N.question)) {
        var e = this.startNodeAt(c, d);return e.test = a, e.consequent = this.parseMaybeAssign(), this.expect(N.colon), e.alternate = this.parseMaybeAssign(b), this.finishNode(e, "ConditionalExpression");
      }return a;
    }, ga.parseExprOps = function (a, b) {
      var c = this.state.start,
          d = this.state.startLoc,
          e = this.parseMaybeUnary(b);return b && b.start ? e : this.parseExprOp(e, c, d, -1, a);
    }, ga.parseExprOp = function (a, b, c, d, e) {
      var f = this.state.type.binop;if (!(null == f || e && this.match(N._in)) && f > d) {
        var g = this.startNodeAt(b, c);g.left = a, g.operator = this.state.value, "**" !== g.operator || "UnaryExpression" !== a.type || !a.extra || a.extra.parenthesizedArgument || a.extra.parenthesized || this.raise(a.argument.start, "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.");var h = this.state.type;this.next();var i = this.state.start,
            j = this.state.startLoc;return g.right = this.parseExprOp(this.parseMaybeUnary(), i, j, h.rightAssociative ? f - 1 : f, e), this.finishNode(g, h === N.logicalOR || h === N.logicalAND ? "LogicalExpression" : "BinaryExpression"), this.parseExprOp(g, b, c, d, e);
      }return a;
    }, ga.parseMaybeUnary = function (a) {
      if (this.state.type.prefix) {
        var b = this.startNode(),
            c = this.match(N.incDec);b.operator = this.state.value, b.prefix = !0, this.next();var d = this.state.type;return b.argument = this.parseMaybeUnary(), this.addExtra(b, "parenthesizedArgument", !(d !== N.parenL || b.argument.extra && b.argument.extra.parenthesized)), a && a.start && this.unexpected(a.start), c ? this.checkLVal(b.argument, void 0, void 0, "prefix operation") : this.state.strict && "delete" === b.operator && "Identifier" === b.argument.type && this.raise(b.start, "Deleting local variable in strict mode"), this.finishNode(b, c ? "UpdateExpression" : "UnaryExpression");
      }var e = this.state.start,
          f = this.state.startLoc,
          g = this.parseExprSubscripts(a);if (a && a.start) return g;for (; this.state.type.postfix && !this.canInsertSemicolon();) {
        var h = this.startNodeAt(e, f);h.operator = this.state.value, h.prefix = !1, h.argument = g, this.checkLVal(g, void 0, void 0, "postfix operation"), this.next(), g = this.finishNode(h, "UpdateExpression");
      }return g;
    }, ga.parseExprSubscripts = function (a) {
      var b = this.state.start,
          c = this.state.startLoc,
          d = this.state.potentialArrowAt,
          e = this.parseExprAtom(a);return "ArrowFunctionExpression" === e.type && e.start === d ? e : a && a.start ? e : this.parseSubscripts(e, b, c);
    }, ga.parseSubscripts = function (a, b, c, d) {
      for (;;) {
        if (!d && this.eat(N.doubleColon)) {
          var e = this.startNodeAt(b, c);return e.object = a, e.callee = this.parseNoCallExpr(), this.parseSubscripts(this.finishNode(e, "BindExpression"), b, c, d);
        }if (this.eat(N.dot)) {
          var f = this.startNodeAt(b, c);f.object = a, f.property = this.parseIdentifier(!0), f.computed = !1, a = this.finishNode(f, "MemberExpression");
        } else if (this.eat(N.bracketL)) {
          var g = this.startNodeAt(b, c);g.object = a, g.property = this.parseExpression(), g.computed = !0, this.expect(N.bracketR), a = this.finishNode(g, "MemberExpression");
        } else if (!d && this.match(N.parenL)) {
          var h = this.state.potentialArrowAt === a.start && "Identifier" === a.type && "async" === a.name && !this.canInsertSemicolon();this.next();var i = this.startNodeAt(b, c);if (i.callee = a, i.arguments = this.parseCallExpressionArguments(N.parenR, h), "Import" === i.callee.type && 1 !== i.arguments.length && this.raise(i.start, "import() requires exactly one argument"), a = this.finishNode(i, "CallExpression"), h && this.shouldParseAsyncArrow()) return this.parseAsyncArrowFromCallExpression(this.startNodeAt(b, c), i);this.toReferencedList(i.arguments);
        } else {
          if (!this.match(N.backQuote)) return a;var j = this.startNodeAt(b, c);j.tag = a, j.quasi = this.parseTemplate(!0), a = this.finishNode(j, "TaggedTemplateExpression");
        }
      }
    }, ga.parseCallExpressionArguments = function (a, b) {
      for (var c = [], d = void 0, e = !0; !this.eat(a);) {
        if (e) e = !1;else if (this.expect(N.comma), this.eat(a)) break;this.match(N.parenL) && !d && (d = this.state.start), c.push(this.parseExprListItem(!1, b ? { start: 0 } : void 0, b ? { start: 0 } : void 0));
      }return b && d && this.shouldParseAsyncArrow() && this.unexpected(), c;
    }, ga.shouldParseAsyncArrow = function () {
      return this.match(N.arrow);
    }, ga.parseAsyncArrowFromCallExpression = function (a, b) {
      return this.expect(N.arrow), this.parseArrowExpression(a, b.arguments, !0);
    }, ga.parseNoCallExpr = function () {
      var a = this.state.start,
          b = this.state.startLoc;return this.parseSubscripts(this.parseExprAtom(), a, b, !0);
    }, ga.parseExprAtom = function (a) {
      var b = this.state.potentialArrowAt === this.state.start,
          c = void 0;switch (this.state.type) {case N._super:
          return this.state.inMethod || this.state.inClassProperty || this.options.allowSuperOutsideMethod || this.raise(this.state.start, "'super' outside of function or class"), c = this.startNode(), this.next(), this.match(N.parenL) || this.match(N.bracketL) || this.match(N.dot) || this.unexpected(), this.match(N.parenL) && "constructor" !== this.state.inMethod && !this.options.allowSuperOutsideMethod && this.raise(c.start, "super() outside of class constructor"), this.finishNode(c, "Super");case N._import:
          return this.hasPlugin("dynamicImport") || this.unexpected(), c = this.startNode(), this.next(), this.match(N.parenL) || this.unexpected(null, N.parenL), this.finishNode(c, "Import");case N._this:
          return c = this.startNode(), this.next(), this.finishNode(c, "ThisExpression");case N._yield:
          this.state.inGenerator && this.unexpected();case N.name:
          c = this.startNode();var d = "await" === this.state.value && this.state.inAsync,
              e = this.shouldAllowYieldIdentifier(),
              f = this.parseIdentifier(d || e);if ("await" === f.name) {
            if (this.state.inAsync || this.inModule) return this.parseAwait(c);
          } else {
            if ("async" === f.name && this.match(N._function) && !this.canInsertSemicolon()) return this.next(), this.parseFunction(c, !1, !1, !0);if (b && "async" === f.name && this.match(N.name)) {
              var g = [this.parseIdentifier()];return this.expect(N.arrow), this.parseArrowExpression(c, g, !0);
            }
          }return b && !this.canInsertSemicolon() && this.eat(N.arrow) ? this.parseArrowExpression(c, [f]) : f;case N._do:
          if (this.hasPlugin("doExpressions")) {
            var h = this.startNode();this.next();var i = this.state.inFunction,
                j = this.state.labels;return this.state.labels = [], this.state.inFunction = !1, h.body = this.parseBlock(!1, !0), this.state.inFunction = i, this.state.labels = j, this.finishNode(h, "DoExpression");
          }case N.regexp:
          var k = this.state.value;return c = this.parseLiteral(k.value, "RegExpLiteral"), c.pattern = k.pattern, c.flags = k.flags, c;case N.num:
          return this.parseLiteral(this.state.value, "NumericLiteral");case N.string:
          return this.parseLiteral(this.state.value, "StringLiteral");case N._null:
          return c = this.startNode(), this.next(), this.finishNode(c, "NullLiteral");case N._true:case N._false:
          return c = this.startNode(), c.value = this.match(N._true), this.next(), this.finishNode(c, "BooleanLiteral");case N.parenL:
          return this.parseParenAndDistinguishExpression(null, null, b);case N.bracketL:
          return c = this.startNode(), this.next(), c.elements = this.parseExprList(N.bracketR, !0, a), this.toReferencedList(c.elements), this.finishNode(c, "ArrayExpression");case N.braceL:
          return this.parseObj(!1, a);case N._function:
          return this.parseFunctionExpression();case N.at:
          this.parseDecorators();case N._class:
          return c = this.startNode(), this.takeDecorators(c), this.parseClass(c, !1);case N._new:
          return this.parseNew();case N.backQuote:
          return this.parseTemplate(!1);case N.doubleColon:
          c = this.startNode(), this.next(), c.object = null;var l = c.callee = this.parseNoCallExpr();if ("MemberExpression" === l.type) return this.finishNode(c, "BindExpression");this.raise(l.start, "Binding should be performed on object property.");default:
          this.unexpected();}
    }, ga.parseFunctionExpression = function () {
      var a = this.startNode(),
          b = this.parseIdentifier(!0);return this.state.inGenerator && this.eat(N.dot) && this.hasPlugin("functionSent") ? this.parseMetaProperty(a, b, "sent") : this.parseFunction(a, !1);
    }, ga.parseMetaProperty = function (a, b, c) {
      return a.meta = b, a.property = this.parseIdentifier(!0), a.property.name !== c && this.raise(a.property.start, "The only valid meta property for new is " + b.name + "." + c), this.finishNode(a, "MetaProperty");
    }, ga.parseLiteral = function (a, b, c, d) {
      c = c || this.state.start, d = d || this.state.startLoc;var e = this.startNodeAt(c, d);return this.addExtra(e, "rawValue", a), this.addExtra(e, "raw", this.input.slice(c, this.state.end)), e.value = a, this.next(), this.finishNode(e, b);
    }, ga.parseParenExpression = function () {
      this.expect(N.parenL);var a = this.parseExpression();return this.expect(N.parenR), a;
    }, ga.parseParenAndDistinguishExpression = function (a, b, c) {
      a = a || this.state.start, b = b || this.state.startLoc;var d = void 0;this.expect(N.parenL);for (var e = this.state.start, f = this.state.startLoc, g = [], h = { start: 0 }, i = { start: 0 }, j = !0, k = void 0, l = void 0; !this.match(N.parenR);) {
        if (j) j = !1;else if (this.expect(N.comma, i.start || null), this.match(N.parenR)) {
          l = this.state.start;break;
        }if (this.match(N.ellipsis)) {
          var m = this.state.start,
              n = this.state.startLoc;k = this.state.start, g.push(this.parseParenItem(this.parseRest(), m, n));break;
        }g.push(this.parseMaybeAssign(!1, h, this.parseParenItem, i));
      }var o = this.state.start,
          p = this.state.startLoc;this.expect(N.parenR);var q = this.startNodeAt(a, b);if (c && this.shouldParseArrow() && (q = this.parseArrow(q))) {
        for (var r = g, s = Array.isArray(r), t = 0, r = s ? r : r[Symbol.iterator]();;) {
          var u;if (s) {
            if (t >= r.length) break;u = r[t++];
          } else {
            if (t = r.next(), t.done) break;u = t.value;
          }var v = u;v.extra && v.extra.parenthesized && this.unexpected(v.extra.parenStart);
        }return this.parseArrowExpression(q, g);
      }return g.length || this.unexpected(this.state.lastTokStart), l && this.unexpected(l), k && this.unexpected(k), h.start && this.unexpected(h.start), i.start && this.unexpected(i.start), g.length > 1 ? (d = this.startNodeAt(e, f), d.expressions = g, this.toReferencedList(d.expressions), this.finishNodeAt(d, "SequenceExpression", o, p)) : d = g[0], this.addExtra(d, "parenthesized", !0), this.addExtra(d, "parenStart", a), d;
    }, ga.shouldParseArrow = function () {
      return !this.canInsertSemicolon();
    }, ga.parseArrow = function (a) {
      if (this.eat(N.arrow)) return a;
    }, ga.parseParenItem = function (a) {
      return a;
    }, ga.parseNew = function () {
      var a = this.startNode(),
          b = this.parseIdentifier(!0);if (this.eat(N.dot)) {
        var c = this.parseMetaProperty(a, b, "target");return this.state.inFunction || this.raise(c.property.start, "new.target can only be used in functions"), c;
      }return a.callee = this.parseNoCallExpr(), this.eat(N.parenL) ? (a.arguments = this.parseExprList(N.parenR), this.toReferencedList(a.arguments)) : a.arguments = [], this.finishNode(a, "NewExpression");
    }, ga.parseTemplateElement = function (a) {
      var b = this.startNode();return null === this.state.value && (a && this.hasPlugin("templateInvalidEscapes") ? this.state.invalidTemplateEscapePosition = null : this.raise(this.state.invalidTemplateEscapePosition, "Invalid escape sequence in template")), b.value = { raw: this.input.slice(this.state.start, this.state.end).replace(/\r\n?/g, "\n"), cooked: this.state.value }, this.next(), b.tail = this.match(N.backQuote), this.finishNode(b, "TemplateElement");
    }, ga.parseTemplate = function (a) {
      var b = this.startNode();this.next(), b.expressions = [];var c = this.parseTemplateElement(a);for (b.quasis = [c]; !c.tail;) this.expect(N.dollarBraceL), b.expressions.push(this.parseExpression()), this.expect(N.braceR), b.quasis.push(c = this.parseTemplateElement(a));return this.next(), this.finishNode(b, "TemplateLiteral");
    }, ga.parseObj = function (a, b) {
      var c = [],
          d = Object.create(null),
          e = !0,
          f = this.startNode();f.properties = [], this.next();for (var g = null; !this.eat(N.braceR);) {
        if (e) e = !1;else if (this.expect(N.comma), this.eat(N.braceR)) break;for (; this.match(N.at);) c.push(this.parseDecorator());var h = this.startNode(),
            i = !1,
            j = !1,
            k = void 0,
            l = void 0;if (c.length && (h.decorators = c, c = []), this.hasPlugin("objectRestSpread") && this.match(N.ellipsis)) {
          if (h = this.parseSpread(a ? { start: 0 } : void 0), h.type = a ? "RestProperty" : "SpreadProperty", a && this.toAssignable(h.argument, !0, "object pattern"), f.properties.push(h), !a) continue;var m = this.state.start;if (null === g) {
            if (this.eat(N.braceR)) break;if (this.match(N.comma) && this.lookahead().type === N.braceR) continue;g = m;continue;
          }this.unexpected(g, "Cannot have multiple rest elements when destructuring");
        }if (h.method = !1, h.shorthand = !1, (a || b) && (k = this.state.start, l = this.state.startLoc), a || (i = this.eat(N.star)), !a && this.isContextual("async")) {
          i && this.unexpected();var n = this.parseIdentifier();this.match(N.colon) || this.match(N.parenL) || this.match(N.braceR) || this.match(N.eq) || this.match(N.comma) ? (h.key = n, h.computed = !1) : (j = !0, this.hasPlugin("asyncGenerators") && (i = this.eat(N.star)), this.parsePropertyName(h));
        } else this.parsePropertyName(h);this.parseObjPropValue(h, k, l, i, j, a, b), this.checkPropClash(h, d), h.shorthand && this.addExtra(h, "shorthand", !0), f.properties.push(h);
      }return null !== g && this.unexpected(g, "The rest element has to be the last element when destructuring"), c.length && this.raise(this.state.start, "You have trailing decorators with no property"), this.finishNode(f, a ? "ObjectPattern" : "ObjectExpression");
    }, ga.isGetterOrSetterMethod = function (a, b) {
      return !b && !a.computed && "Identifier" === a.key.type && ("get" === a.key.name || "set" === a.key.name) && (this.match(N.string) || this.match(N.num) || this.match(N.bracketL) || this.match(N.name) || this.state.type.keyword);
    }, ga.checkGetterSetterParamCount = function (a) {
      var b = "get" === a.kind ? 0 : 1;if (a.params.length !== b) {
        var c = a.start;"get" === a.kind ? this.raise(c, "getter should have no params") : this.raise(c, "setter should have exactly one param");
      }
    }, ga.parseObjectMethod = function (a, b, c, d) {
      return c || b || this.match(N.parenL) ? (d && this.unexpected(), a.kind = "method", a.method = !0, this.parseMethod(a, b, c), this.finishNode(a, "ObjectMethod")) : this.isGetterOrSetterMethod(a, d) ? ((b || c) && this.unexpected(), a.kind = a.key.name, this.parsePropertyName(a), this.parseMethod(a), this.checkGetterSetterParamCount(a), this.finishNode(a, "ObjectMethod")) : void 0;
    }, ga.parseObjectProperty = function (a, b, c, d, e) {
      return this.eat(N.colon) ? (a.value = d ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(!1, e), this.finishNode(a, "ObjectProperty")) : a.computed || "Identifier" !== a.key.type ? void 0 : (this.checkReservedWord(a.key.name, a.key.start, !0, !0), d ? a.value = this.parseMaybeDefault(b, c, a.key.__clone()) : this.match(N.eq) && e ? (e.start || (e.start = this.state.start), a.value = this.parseMaybeDefault(b, c, a.key.__clone())) : a.value = a.key.__clone(), a.shorthand = !0, this.finishNode(a, "ObjectProperty"));
    }, ga.parseObjPropValue = function (a, b, c, d, e, f, g) {
      var h = this.parseObjectMethod(a, d, e, f) || this.parseObjectProperty(a, b, c, f, g);return h || this.unexpected(), h;
    }, ga.parsePropertyName = function (a) {
      if (this.eat(N.bracketL)) a.computed = !0, a.key = this.parseMaybeAssign(), this.expect(N.bracketR);else {
        a.computed = !1;var b = this.state.inPropertyName;this.state.inPropertyName = !0, a.key = this.match(N.num) || this.match(N.string) ? this.parseExprAtom() : this.parseIdentifier(!0), this.state.inPropertyName = b;
      }return a.key;
    }, ga.initFunction = function (a, b) {
      a.id = null, a.generator = !1, a.expression = !1, a.async = !!b;
    }, ga.parseMethod = function (a, b, c) {
      var d = this.state.inMethod;return this.state.inMethod = a.kind || !0, this.initFunction(a, c), this.expect(N.parenL), a.params = this.parseBindingList(N.parenR), a.generator = !!b, this.parseFunctionBody(a), this.state.inMethod = d, a;
    }, ga.parseArrowExpression = function (a, b, c) {
      return this.initFunction(a, c), a.params = this.toAssignableList(b, !0, "arrow function parameters"), this.parseFunctionBody(a, !0), this.finishNode(a, "ArrowFunctionExpression");
    }, ga.isStrictBody = function (a, b) {
      if (!b && a.body.directives.length) for (var c = a.body.directives, d = Array.isArray(c), e = 0, c = d ? c : c[Symbol.iterator]();;) {
        var f;if (d) {
          if (e >= c.length) break;f = c[e++];
        } else {
          if (e = c.next(), e.done) break;f = e.value;
        }var g = f;if ("use strict" === g.value.value) return !0;
      }return !1;
    }, ga.parseFunctionBody = function (a, b) {
      var c = b && !this.match(N.braceL),
          d = this.state.inAsync;if (this.state.inAsync = a.async, c) a.body = this.parseMaybeAssign(), a.expression = !0;else {
        var e = this.state.inFunction,
            f = this.state.inGenerator,
            g = this.state.labels;this.state.inFunction = !0, this.state.inGenerator = a.generator, this.state.labels = [], a.body = this.parseBlock(!0), a.expression = !1, this.state.inFunction = e, this.state.inGenerator = f, this.state.labels = g;
      }this.state.inAsync = d;var h = this.isStrictBody(a, c),
          i = this.state.strict || b || h;if (h && a.id && "Identifier" === a.id.type && "yield" === a.id.name && this.raise(a.id.start, "Binding yield in strict mode"), i) {
        var j = Object.create(null),
            k = this.state.strict;h && (this.state.strict = !0), a.id && this.checkLVal(a.id, !0, void 0, "function name");for (var l = a.params, m = Array.isArray(l), n = 0, l = m ? l : l[Symbol.iterator]();;) {
          var o;if (m) {
            if (n >= l.length) break;o = l[n++];
          } else {
            if (n = l.next(), n.done) break;o = n.value;
          }var p = o;h && "Identifier" !== p.type && this.raise(p.start, "Non-simple parameter in strict mode"), this.checkLVal(p, !0, j, "function parameter list");
        }this.state.strict = k;
      }
    }, ga.parseExprList = function (a, b, c) {
      for (var d = [], e = !0; !this.eat(a);) {
        if (e) e = !1;else if (this.expect(N.comma), this.eat(a)) break;d.push(this.parseExprListItem(b, c));
      }return d;
    }, ga.parseExprListItem = function (a, b, c) {
      return a && this.match(N.comma) ? null : this.match(N.ellipsis) ? this.parseSpread(b) : this.parseMaybeAssign(!1, b, this.parseParenItem, c);
    }, ga.parseIdentifier = function (a) {
      var b = this.startNode();return a || this.checkReservedWord(this.state.value, this.state.start, !!this.state.type.keyword, !1), this.match(N.name) ? b.name = this.state.value : this.state.type.keyword ? b.name = this.state.type.keyword : this.unexpected(), !a && "await" === b.name && this.state.inAsync && this.raise(b.start, "invalid use of await inside of an async function"), b.loc.identifierName = b.name, this.next(), this.finishNode(b, "Identifier");
    }, ga.checkReservedWord = function (a, b, c, d) {
      (this.isReservedWord(a) || c && this.isKeyword(a)) && this.raise(b, a + " is a reserved word"), this.state.strict && (r.strict(a) || d && r.strictBind(a)) && this.raise(b, a + " is a reserved word in strict mode");
    }, ga.parseAwait = function (a) {
      return this.state.inAsync || this.unexpected(), this.match(N.star) && this.raise(a.start, "await* has been removed from the async functions proposal. Use Promise.all() instead."), a.argument = this.parseMaybeUnary(), this.finishNode(a, "AwaitExpression");
    }, ga.parseYield = function () {
      var a = this.startNode();return this.next(), this.match(N.semi) || this.canInsertSemicolon() || !this.match(N.star) && !this.state.type.startsExpr ? (a.delegate = !1, a.argument = null) : (a.delegate = this.eat(N.star), a.argument = this.parseMaybeAssign()), this.finishNode(a, "YieldExpression");
    };var ha = _.prototype,
        ia = ["leadingComments", "trailingComments", "innerComments"],
        ja = function () {
      function a(b, c, d) {
        B(this, a), this.type = "", this.start = b, this.end = 0, this.loc = new V(c), d && (this.loc.filename = d);
      }return a.prototype.__clone = function () {
        var b = new a();for (var c in this) ia.indexOf(c) < 0 && (b[c] = this[c]);return b;
      }, a;
    }();ha.startNode = function () {
      return new ja(this.state.start, this.state.startLoc, this.filename);
    }, ha.startNodeAt = function (a, b) {
      return new ja(a, b, this.filename);
    }, ha.finishNode = function (a, b) {
      return l.call(this, a, b, this.state.lastTokEnd, this.state.lastTokEndLoc);
    }, ha.finishNodeAt = function (a, b, c, d) {
      return l.call(this, a, b, c, d);
    }, _.prototype.raise = function (a, b) {
      var c = j(this.input, a);b += " (" + c.line + ":" + c.column + ")";var d = new SyntaxError(b);throw d.pos = a, d.loc = c, d;
    };var ka = _.prototype;ka.addComment = function (a) {
      this.filename && (a.loc.filename = this.filename), this.state.trailingComments.push(a), this.state.leadingComments.push(a);
    }, ka.processComment = function (a) {
      if (!("Program" === a.type && a.body.length > 0)) {
        var b = this.state.commentStack,
            c = void 0,
            d = void 0,
            e = void 0,
            f = void 0,
            g = void 0;if (this.state.trailingComments.length > 0) this.state.trailingComments[0].start >= a.end ? (e = this.state.trailingComments, this.state.trailingComments = []) : this.state.trailingComments.length = 0;else {
          var h = m(b);b.length > 0 && h.trailingComments && h.trailingComments[0].start >= a.end && (e = h.trailingComments, h.trailingComments = null);
        }for (b.length > 0 && m(b).start >= a.start && (c = b.pop()); b.length > 0 && m(b).start >= a.start;) d = b.pop();if (!d && c && (d = c), c && ("ObjectProperty" === c.type || "CallExpression" === a.type) && this.state.leadingComments.length > 0) {
          if (m(this.state.leadingComments).start >= a.start && this.state.commentPreviousNode) {
            for (g = 0; g < this.state.leadingComments.length; g++) this.state.leadingComments[g].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(g, 1), g--);this.state.leadingComments.length > 0 && (c.trailingComments = this.state.leadingComments, this.state.leadingComments = []);
          }
        }if (d) {
          if (d.leadingComments) if (d !== a && m(d.leadingComments).end <= a.start) a.leadingComments = d.leadingComments, d.leadingComments = null;else for (f = d.leadingComments.length - 2; f >= 0; --f) if (d.leadingComments[f].end <= a.start) {
            a.leadingComments = d.leadingComments.splice(0, f + 1);break;
          }
        } else if (this.state.leadingComments.length > 0) if (m(this.state.leadingComments).end <= a.start) {
          if (this.state.commentPreviousNode) for (g = 0; g < this.state.leadingComments.length; g++) this.state.leadingComments[g].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(g, 1), g--);this.state.leadingComments.length > 0 && (a.leadingComments = this.state.leadingComments, this.state.leadingComments = []);
        } else {
          for (f = 0; f < this.state.leadingComments.length && !(this.state.leadingComments[f].end > a.start); f++);a.leadingComments = this.state.leadingComments.slice(0, f), 0 === a.leadingComments.length && (a.leadingComments = null), e = this.state.leadingComments.slice(f), 0 === e.length && (e = null);
        }this.state.commentPreviousNode = a, e && (e.length && e[0].start >= a.start && m(e).end <= a.end ? a.innerComments = e : a.trailingComments = e), b.push(a);
      }
    };var la = _.prototype;la.estreeParseRegExpLiteral = function (a) {
      var b = a.pattern,
          c = a.flags,
          d = null;try {
        d = new RegExp(b, c);
      } catch (a) {}var e = this.estreeParseLiteral(d);return e.regex = { pattern: b, flags: c }, e;
    }, la.estreeParseLiteral = function (a) {
      return this.parseLiteral(a, "Literal");
    }, la.directiveToStmt = function (a) {
      var b = a.value,
          c = this.startNodeAt(a.start, a.loc.start),
          d = this.startNodeAt(b.start, b.loc.start);return d.value = b.value, d.raw = b.extra.raw, c.expression = this.finishNodeAt(d, "Literal", b.end, b.loc.end), c.directive = b.extra.raw.slice(1, -1), this.finishNodeAt(c, "ExpressionStatement", a.end, a.loc.end);
    };var ma = function (a) {
      a.extend("checkDeclaration", function (a) {
        return function (b) {
          n(b) ? this.checkDeclaration(b.value) : a.call(this, b);
        };
      }), a.extend("checkGetterSetterParamCount", function () {
        return function (a) {
          var b = "get" === a.kind ? 0 : 1;if (a.value.params.length !== b) {
            var c = a.start;"get" === a.kind ? this.raise(c, "getter should have no params") : this.raise(c, "setter should have exactly one param");
          }
        };
      }), a.extend("checkLVal", function (a) {
        return function (b, c, d) {
          var e = this;switch (b.type) {case "ObjectPattern":
              b.properties.forEach(function (a) {
                e.checkLVal("Property" === a.type ? a.value : a, c, d, "object destructuring pattern");
              });break;default:
              for (var f = arguments.length, g = Array(f > 3 ? f - 3 : 0), h = 3; h < f; h++) g[h - 3] = arguments[h];a.call.apply(a, [this, b, c, d].concat(g));}
        };
      }), a.extend("checkPropClash", function () {
        return function (a, b) {
          if (!a.computed && n(a)) {
            var c = a.key;"__proto__" === ("Identifier" === c.type ? c.name : String(c.value)) && (b.proto && this.raise(c.start, "Redefinition of __proto__ property"), b.proto = !0);
          }
        };
      }), a.extend("isStrictBody", function () {
        return function (a, b) {
          if (!b && a.body.body.length > 0) for (var c = a.body.body, d = Array.isArray(c), e = 0, c = d ? c : c[Symbol.iterator]();;) {
            var f;if (d) {
              if (e >= c.length) break;f = c[e++];
            } else {
              if (e = c.next(), e.done) break;f = e.value;
            }var g = f;if ("ExpressionStatement" !== g.type || "Literal" !== g.expression.type) break;if ("use strict" === g.expression.value) return !0;
          }return !1;
        };
      }), a.extend("isValidDirective", function () {
        return function (a) {
          return !("ExpressionStatement" !== a.type || "Literal" !== a.expression.type || "string" != typeof a.expression.value || a.expression.extra && a.expression.extra.parenthesized);
        };
      }), a.extend("stmtToDirective", function (a) {
        return function (b) {
          var c = a.call(this, b),
              d = b.expression.value;return c.value.value = d, c;
        };
      }), a.extend("parseBlockBody", function (a) {
        return function (b) {
          for (var c = this, d = arguments.length, e = Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];a.call.apply(a, [this, b].concat(e)), b.directives.reverse().forEach(function (a) {
            b.body.unshift(c.directiveToStmt(a));
          }), delete b.directives;
        };
      }), a.extend("parseClassMethod", function (a) {
        return function (b) {
          for (var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), e = 1; e < c; e++) d[e - 1] = arguments[e];a.call.apply(a, [this, b].concat(d));var f = b.body;f[f.length - 1].type = "MethodDefinition";
        };
      }), a.extend("parseExprAtom", function (a) {
        return function () {
          switch (this.state.type) {case N.regexp:
              return this.estreeParseRegExpLiteral(this.state.value);case N.num:case N.string:
              return this.estreeParseLiteral(this.state.value);case N._null:
              return this.estreeParseLiteral(null);case N._true:
              return this.estreeParseLiteral(!0);case N._false:
              return this.estreeParseLiteral(!1);default:
              for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];return a.call.apply(a, [this].concat(c));}
        };
      }), a.extend("parseLiteral", function (a) {
        return function () {
          for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];var e = a.call.apply(a, [this].concat(c));return e.raw = e.extra.raw, delete e.extra, e;
        };
      }), a.extend("parseMethod", function (a) {
        return function (b) {
          var c = this.startNode();c.kind = b.kind;for (var d = arguments.length, e = Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];return c = a.call.apply(a, [this, c].concat(e)), delete c.kind, b.value = this.finishNode(c, "FunctionExpression"), b;
        };
      }), a.extend("parseObjectMethod", function (a) {
        return function () {
          for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];var e = a.call.apply(a, [this].concat(c));return e && ("method" === e.kind && (e.kind = "init"), e.type = "Property"), e;
        };
      }), a.extend("parseObjectProperty", function (a) {
        return function () {
          for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];var e = a.call.apply(a, [this].concat(c));return e && (e.kind = "init", e.type = "Property"), e;
        };
      }), a.extend("toAssignable", function (a) {
        return function (b, c) {
          for (var d = arguments.length, e = Array(d > 2 ? d - 2 : 0), f = 2; f < d; f++) e[f - 2] = arguments[f];if (n(b)) return this.toAssignable.apply(this, [b.value, c].concat(e)), b;if ("ObjectExpression" === b.type) {
            b.type = "ObjectPattern";for (var g = b.properties, h = Array.isArray(g), i = 0, g = h ? g : g[Symbol.iterator]();;) {
              var j;if (h) {
                if (i >= g.length) break;j = g[i++];
              } else {
                if (i = g.next(), i.done) break;j = i.value;
              }var k = j;"get" === k.kind || "set" === k.kind ? this.raise(k.key.start, "Object pattern can't contain getter or setter") : k.method ? this.raise(k.key.start, "Object pattern can't contain methods") : this.toAssignable(k, c, "object destructuring pattern");
            }return b;
          }return a.call.apply(a, [this, b, c].concat(e));
        };
      });
    },
        na = ["any", "mixed", "empty", "bool", "boolean", "number", "string", "void", "null"],
        oa = _.prototype;oa.flowParseTypeInitialiser = function (a) {
      var b = this.state.inType;this.state.inType = !0, this.expect(a || N.colon);var c = this.flowParseType();return this.state.inType = b, c;
    }, oa.flowParsePredicate = function () {
      var a = this.startNode(),
          b = this.state.startLoc,
          c = this.state.start;this.expect(N.modulo);var d = this.state.startLoc;return this.expectContextual("checks"), b.line === d.line && b.column === d.column - 1 || this.raise(c, "Spaces between ´%´ and ´checks´ are not allowed here."), this.eat(N.parenL) ? (a.expression = this.parseExpression(), this.expect(N.parenR), this.finishNode(a, "DeclaredPredicate")) : this.finishNode(a, "InferredPredicate");
    }, oa.flowParseTypeAndPredicateInitialiser = function () {
      var a = this.state.inType;this.state.inType = !0, this.expect(N.colon);var b = null,
          c = null;return this.match(N.modulo) ? (this.state.inType = a, c = this.flowParsePredicate()) : (b = this.flowParseType(), this.state.inType = a, this.match(N.modulo) && (c = this.flowParsePredicate())), [b, c];
    }, oa.flowParseDeclareClass = function (a) {
      return this.next(), this.flowParseInterfaceish(a, !0), this.finishNode(a, "DeclareClass");
    }, oa.flowParseDeclareFunction = function (a) {
      this.next();var b = a.id = this.parseIdentifier(),
          c = this.startNode(),
          d = this.startNode();this.isRelational("<") ? c.typeParameters = this.flowParseTypeParameterDeclaration() : c.typeParameters = null, this.expect(N.parenL);var e = this.flowParseFunctionTypeParams();c.params = e.params, c.rest = e.rest, this.expect(N.parenR);var f = null,
          g = this.flowParseTypeAndPredicateInitialiser();return c.returnType = g[0], f = g[1], d.typeAnnotation = this.finishNode(c, "FunctionTypeAnnotation"), d.predicate = f, b.typeAnnotation = this.finishNode(d, "TypeAnnotation"), this.finishNode(b, b.type), this.semicolon(), this.finishNode(a, "DeclareFunction");
    }, oa.flowParseDeclare = function (a) {
      return this.match(N._class) ? this.flowParseDeclareClass(a) : this.match(N._function) ? this.flowParseDeclareFunction(a) : this.match(N._var) ? this.flowParseDeclareVariable(a) : this.isContextual("module") ? this.lookahead().type === N.dot ? this.flowParseDeclareModuleExports(a) : this.flowParseDeclareModule(a) : this.isContextual("type") ? this.flowParseDeclareTypeAlias(a) : this.isContextual("interface") ? this.flowParseDeclareInterface(a) : void this.unexpected();
    }, oa.flowParseDeclareVariable = function (a) {
      return this.next(), a.id = this.flowParseTypeAnnotatableIdentifier(), this.semicolon(), this.finishNode(a, "DeclareVariable");
    }, oa.flowParseDeclareModule = function (a) {
      this.next(), this.match(N.string) ? a.id = this.parseExprAtom() : a.id = this.parseIdentifier();var b = a.body = this.startNode(),
          c = b.body = [];for (this.expect(N.braceL); !this.match(N.braceR);) {
        var d = this.startNode();if (this.match(N._import)) {
          var e = this.lookahead();"type" !== e.value && "typeof" !== e.value && this.unexpected(null, "Imports within a `declare module` body must always be `import type` or `import typeof`"), this.parseImport(d);
        } else this.expectContextual("declare", "Only declares and type imports are allowed inside declare module"), d = this.flowParseDeclare(d, !0);c.push(d);
      }return this.expect(N.braceR), this.finishNode(b, "BlockStatement"), this.finishNode(a, "DeclareModule");
    }, oa.flowParseDeclareModuleExports = function (a) {
      return this.expectContextual("module"), this.expect(N.dot), this.expectContextual("exports"), a.typeAnnotation = this.flowParseTypeAnnotation(), this.semicolon(), this.finishNode(a, "DeclareModuleExports");
    }, oa.flowParseDeclareTypeAlias = function (a) {
      return this.next(), this.flowParseTypeAlias(a), this.finishNode(a, "DeclareTypeAlias");
    }, oa.flowParseDeclareInterface = function (a) {
      return this.next(), this.flowParseInterfaceish(a), this.finishNode(a, "DeclareInterface");
    }, oa.flowParseInterfaceish = function (a) {
      if (a.id = this.parseIdentifier(), this.isRelational("<") ? a.typeParameters = this.flowParseTypeParameterDeclaration() : a.typeParameters = null, a.extends = [], a.mixins = [], this.eat(N._extends)) do {
        a.extends.push(this.flowParseInterfaceExtends());
      } while (this.eat(N.comma));if (this.isContextual("mixins")) {
        this.next();do {
          a.mixins.push(this.flowParseInterfaceExtends());
        } while (this.eat(N.comma));
      }a.body = this.flowParseObjectType(!0, !1, !1);
    }, oa.flowParseInterfaceExtends = function () {
      var a = this.startNode();return a.id = this.flowParseQualifiedTypeIdentifier(), this.isRelational("<") ? a.typeParameters = this.flowParseTypeParameterInstantiation() : a.typeParameters = null, this.finishNode(a, "InterfaceExtends");
    }, oa.flowParseInterface = function (a) {
      return this.flowParseInterfaceish(a, !1), this.finishNode(a, "InterfaceDeclaration");
    }, oa.flowParseRestrictedIdentifier = function (a) {
      return na.indexOf(this.state.value) > -1 && this.raise(this.state.start, "Cannot overwrite primitive type " + this.state.value), this.parseIdentifier(a);
    }, oa.flowParseTypeAlias = function (a) {
      return a.id = this.flowParseRestrictedIdentifier(), this.isRelational("<") ? a.typeParameters = this.flowParseTypeParameterDeclaration() : a.typeParameters = null, a.right = this.flowParseTypeInitialiser(N.eq), this.semicolon(), this.finishNode(a, "TypeAlias");
    }, oa.flowParseTypeParameter = function () {
      var a = this.startNode(),
          b = this.flowParseVariance(),
          c = this.flowParseTypeAnnotatableIdentifier();return a.name = c.name, a.variance = b, a.bound = c.typeAnnotation, this.match(N.eq) && (this.eat(N.eq), a.default = this.flowParseType()), this.finishNode(a, "TypeParameter");
    }, oa.flowParseTypeParameterDeclaration = function () {
      var a = this.state.inType,
          b = this.startNode();b.params = [], this.state.inType = !0, this.isRelational("<") || this.match(N.jsxTagStart) ? this.next() : this.unexpected();do {
        b.params.push(this.flowParseTypeParameter()), this.isRelational(">") || this.expect(N.comma);
      } while (!this.isRelational(">"));return this.expectRelational(">"), this.state.inType = a, this.finishNode(b, "TypeParameterDeclaration");
    }, oa.flowParseTypeParameterInstantiation = function () {
      var a = this.startNode(),
          b = this.state.inType;for (a.params = [], this.state.inType = !0, this.expectRelational("<"); !this.isRelational(">");) a.params.push(this.flowParseType()), this.isRelational(">") || this.expect(N.comma);return this.expectRelational(">"), this.state.inType = b, this.finishNode(a, "TypeParameterInstantiation");
    }, oa.flowParseObjectPropertyKey = function () {
      return this.match(N.num) || this.match(N.string) ? this.parseExprAtom() : this.parseIdentifier(!0);
    }, oa.flowParseObjectTypeIndexer = function (a, b, c) {
      return a.static = b, this.expect(N.bracketL), this.lookahead().type === N.colon ? (a.id = this.flowParseObjectPropertyKey(), a.key = this.flowParseTypeInitialiser()) : (a.id = null, a.key = this.flowParseType()), this.expect(N.bracketR), a.value = this.flowParseTypeInitialiser(), a.variance = c, this.flowObjectTypeSemicolon(), this.finishNode(a, "ObjectTypeIndexer");
    }, oa.flowParseObjectTypeMethodish = function (a) {
      for (a.params = [], a.rest = null, a.typeParameters = null, this.isRelational("<") && (a.typeParameters = this.flowParseTypeParameterDeclaration()), this.expect(N.parenL); !this.match(N.parenR) && !this.match(N.ellipsis);) a.params.push(this.flowParseFunctionTypeParam()), this.match(N.parenR) || this.expect(N.comma);return this.eat(N.ellipsis) && (a.rest = this.flowParseFunctionTypeParam()), this.expect(N.parenR), a.returnType = this.flowParseTypeInitialiser(), this.finishNode(a, "FunctionTypeAnnotation");
    }, oa.flowParseObjectTypeMethod = function (a, b, c, d) {
      var e = this.startNodeAt(a, b);return e.value = this.flowParseObjectTypeMethodish(this.startNodeAt(a, b)), e.static = c, e.key = d, e.optional = !1, this.flowObjectTypeSemicolon(), this.finishNode(e, "ObjectTypeProperty");
    }, oa.flowParseObjectTypeCallProperty = function (a, b) {
      var c = this.startNode();return a.static = b, a.value = this.flowParseObjectTypeMethodish(c), this.flowObjectTypeSemicolon(), this.finishNode(a, "ObjectTypeCallProperty");
    }, oa.flowParseObjectType = function (a, b, c) {
      var d = this.state.inType;this.state.inType = !0;var e = this.startNode(),
          f = void 0,
          g = void 0,
          h = !1;e.callProperties = [], e.properties = [], e.indexers = [];var i = void 0,
          j = void 0;for (b && this.match(N.braceBarL) ? (this.expect(N.braceBarL), i = N.braceBarR, j = !0) : (this.expect(N.braceL), i = N.braceR, j = !1), e.exact = j; !this.match(i);) {
        var k = !1,
            l = this.state.start,
            m = this.state.startLoc;f = this.startNode(), a && this.isContextual("static") && this.lookahead().type !== N.colon && (this.next(), h = !0);var n = this.state.start,
            o = this.flowParseVariance();this.match(N.bracketL) ? e.indexers.push(this.flowParseObjectTypeIndexer(f, h, o)) : this.match(N.parenL) || this.isRelational("<") ? (o && this.unexpected(n), e.callProperties.push(this.flowParseObjectTypeCallProperty(f, h))) : this.match(N.ellipsis) ? (c || this.unexpected(null, "Spread operator cannot appear in class or interface definitions"), o && this.unexpected(o.start, "Spread properties cannot have variance"), this.expect(N.ellipsis), f.argument = this.flowParseType(), this.flowObjectTypeSemicolon(), e.properties.push(this.finishNode(f, "ObjectTypeSpreadProperty"))) : (g = this.flowParseObjectPropertyKey(), this.isRelational("<") || this.match(N.parenL) ? (o && this.unexpected(o.start), e.properties.push(this.flowParseObjectTypeMethod(l, m, h, g))) : (this.eat(N.question) && (k = !0), f.key = g, f.value = this.flowParseTypeInitialiser(), f.optional = k, f.static = h, f.variance = o, this.flowObjectTypeSemicolon(), e.properties.push(this.finishNode(f, "ObjectTypeProperty")))), h = !1;
      }this.expect(i);var p = this.finishNode(e, "ObjectTypeAnnotation");return this.state.inType = d, p;
    }, oa.flowObjectTypeSemicolon = function () {
      this.eat(N.semi) || this.eat(N.comma) || this.match(N.braceR) || this.match(N.braceBarR) || this.unexpected();
    }, oa.flowParseQualifiedTypeIdentifier = function (a, b, c) {
      a = a || this.state.start, b = b || this.state.startLoc;for (var d = c || this.parseIdentifier(); this.eat(N.dot);) {
        var e = this.startNodeAt(a, b);e.qualification = d, e.id = this.parseIdentifier(), d = this.finishNode(e, "QualifiedTypeIdentifier");
      }return d;
    }, oa.flowParseGenericType = function (a, b, c) {
      var d = this.startNodeAt(a, b);return d.typeParameters = null, d.id = this.flowParseQualifiedTypeIdentifier(a, b, c), this.isRelational("<") && (d.typeParameters = this.flowParseTypeParameterInstantiation()), this.finishNode(d, "GenericTypeAnnotation");
    }, oa.flowParseTypeofType = function () {
      var a = this.startNode();return this.expect(N._typeof), a.argument = this.flowParsePrimaryType(), this.finishNode(a, "TypeofTypeAnnotation");
    }, oa.flowParseTupleType = function () {
      var a = this.startNode();for (a.types = [], this.expect(N.bracketL); this.state.pos < this.input.length && !this.match(N.bracketR) && (a.types.push(this.flowParseType()), !this.match(N.bracketR));) this.expect(N.comma);return this.expect(N.bracketR), this.finishNode(a, "TupleTypeAnnotation");
    }, oa.flowParseFunctionTypeParam = function () {
      var a = null,
          b = !1,
          c = null,
          d = this.startNode(),
          e = this.lookahead();return e.type === N.colon || e.type === N.question ? (a = this.parseIdentifier(), this.eat(N.question) && (b = !0), c = this.flowParseTypeInitialiser()) : c = this.flowParseType(), d.name = a, d.optional = b, d.typeAnnotation = c, this.finishNode(d, "FunctionTypeParam");
    }, oa.reinterpretTypeAsFunctionTypeParam = function (a) {
      var b = this.startNodeAt(a.start, a.loc.start);return b.name = null, b.optional = !1, b.typeAnnotation = a, this.finishNode(b, "FunctionTypeParam");
    }, oa.flowParseFunctionTypeParams = function () {
      for (var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], b = { params: a, rest: null }; !this.match(N.parenR) && !this.match(N.ellipsis);) b.params.push(this.flowParseFunctionTypeParam()), this.match(N.parenR) || this.expect(N.comma);return this.eat(N.ellipsis) && (b.rest = this.flowParseFunctionTypeParam()), b;
    }, oa.flowIdentToTypeAnnotation = function (a, b, c, d) {
      switch (d.name) {case "any":
          return this.finishNode(c, "AnyTypeAnnotation");case "void":
          return this.finishNode(c, "VoidTypeAnnotation");case "bool":case "boolean":
          return this.finishNode(c, "BooleanTypeAnnotation");case "mixed":
          return this.finishNode(c, "MixedTypeAnnotation");case "empty":
          return this.finishNode(c, "EmptyTypeAnnotation");case "number":
          return this.finishNode(c, "NumberTypeAnnotation");case "string":
          return this.finishNode(c, "StringTypeAnnotation");default:
          return this.flowParseGenericType(a, b, d);}
    }, oa.flowParsePrimaryType = function () {
      var a = this.state.start,
          b = this.state.startLoc,
          c = this.startNode(),
          d = void 0,
          e = void 0,
          f = !1,
          g = this.state.noAnonFunctionType;switch (this.state.type) {case N.name:
          return this.flowIdentToTypeAnnotation(a, b, c, this.parseIdentifier());case N.braceL:
          return this.flowParseObjectType(!1, !1, !0);case N.braceBarL:
          return this.flowParseObjectType(!1, !0, !0);case N.bracketL:
          return this.flowParseTupleType();case N.relational:
          if ("<" === this.state.value) return c.typeParameters = this.flowParseTypeParameterDeclaration(), this.expect(N.parenL), d = this.flowParseFunctionTypeParams(), c.params = d.params, c.rest = d.rest, this.expect(N.parenR), this.expect(N.arrow), c.returnType = this.flowParseType(), this.finishNode(c, "FunctionTypeAnnotation");break;case N.parenL:
          if (this.next(), !this.match(N.parenR) && !this.match(N.ellipsis)) if (this.match(N.name)) {
            var h = this.lookahead().type;f = h !== N.question && h !== N.colon;
          } else f = !0;if (f) {
            if (this.state.noAnonFunctionType = !1, e = this.flowParseType(), this.state.noAnonFunctionType = g, this.state.noAnonFunctionType || !(this.match(N.comma) || this.match(N.parenR) && this.lookahead().type === N.arrow)) return this.expect(N.parenR), e;this.eat(N.comma);
          }return d = e ? this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(e)]) : this.flowParseFunctionTypeParams(), c.params = d.params, c.rest = d.rest, this.expect(N.parenR), this.expect(N.arrow), c.returnType = this.flowParseType(), c.typeParameters = null, this.finishNode(c, "FunctionTypeAnnotation");case N.string:
          return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");case N._true:case N._false:
          return c.value = this.match(N._true), this.next(), this.finishNode(c, "BooleanLiteralTypeAnnotation");case N.plusMin:
          if ("-" === this.state.value) return this.next(), this.match(N.num) || this.unexpected(null, "Unexpected token, expected number"), this.parseLiteral(-this.state.value, "NumericLiteralTypeAnnotation", c.start, c.loc.start);this.unexpected();case N.num:
          return this.parseLiteral(this.state.value, "NumericLiteralTypeAnnotation");case N._null:
          return c.value = this.match(N._null), this.next(), this.finishNode(c, "NullLiteralTypeAnnotation");case N._this:
          return c.value = this.match(N._this), this.next(), this.finishNode(c, "ThisTypeAnnotation");case N.star:
          return this.next(), this.finishNode(c, "ExistentialTypeParam");default:
          if ("typeof" === this.state.type.keyword) return this.flowParseTypeofType();}this.unexpected();
    }, oa.flowParsePostfixType = function () {
      for (var a = this.state.start, b = this.state.startLoc, c = this.flowParsePrimaryType(); !this.canInsertSemicolon() && this.match(N.bracketL);) {
        var d = this.startNodeAt(a, b);d.elementType = c, this.expect(N.bracketL), this.expect(N.bracketR), c = this.finishNode(d, "ArrayTypeAnnotation");
      }return c;
    }, oa.flowParsePrefixType = function () {
      var a = this.startNode();return this.eat(N.question) ? (a.typeAnnotation = this.flowParsePrefixType(), this.finishNode(a, "NullableTypeAnnotation")) : this.flowParsePostfixType();
    }, oa.flowParseAnonFunctionWithoutParens = function () {
      var a = this.flowParsePrefixType();if (!this.state.noAnonFunctionType && this.eat(N.arrow)) {
        var b = this.startNodeAt(a.start, a.loc.start);return b.params = [this.reinterpretTypeAsFunctionTypeParam(a)], b.rest = null, b.returnType = this.flowParseType(), b.typeParameters = null, this.finishNode(b, "FunctionTypeAnnotation");
      }return a;
    }, oa.flowParseIntersectionType = function () {
      var a = this.startNode();this.eat(N.bitwiseAND);var b = this.flowParseAnonFunctionWithoutParens();for (a.types = [b]; this.eat(N.bitwiseAND);) a.types.push(this.flowParseAnonFunctionWithoutParens());return 1 === a.types.length ? b : this.finishNode(a, "IntersectionTypeAnnotation");
    }, oa.flowParseUnionType = function () {
      var a = this.startNode();this.eat(N.bitwiseOR);var b = this.flowParseIntersectionType();for (a.types = [b]; this.eat(N.bitwiseOR);) a.types.push(this.flowParseIntersectionType());return 1 === a.types.length ? b : this.finishNode(a, "UnionTypeAnnotation");
    }, oa.flowParseType = function () {
      var a = this.state.inType;this.state.inType = !0;var b = this.flowParseUnionType();return this.state.inType = a, b;
    }, oa.flowParseTypeAnnotation = function () {
      var a = this.startNode();return a.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(a, "TypeAnnotation");
    }, oa.flowParseTypeAndPredicateAnnotation = function () {
      var a = this.startNode(),
          b = this.flowParseTypeAndPredicateInitialiser();return a.typeAnnotation = b[0], a.predicate = b[1], this.finishNode(a, "TypeAnnotation");
    }, oa.flowParseTypeAnnotatableIdentifier = function () {
      var a = this.flowParseRestrictedIdentifier();return this.match(N.colon) && (a.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(a, a.type)), a;
    }, oa.typeCastToParameter = function (a) {
      return a.expression.typeAnnotation = a.typeAnnotation, this.finishNodeAt(a.expression, a.expression.type, a.typeAnnotation.end, a.typeAnnotation.loc.end);
    }, oa.flowParseVariance = function () {
      var a = null;return this.match(N.plusMin) && ("+" === this.state.value ? a = "plus" : "-" === this.state.value && (a = "minus"), this.next()), a;
    };var pa = function (a) {
      a.extend("parseFunctionBody", function (a) {
        return function (b, c) {
          return this.match(N.colon) && !c && (b.returnType = this.flowParseTypeAndPredicateAnnotation()), a.call(this, b, c);
        };
      }), a.extend("parseStatement", function (a) {
        return function (b, c) {
          if (this.state.strict && this.match(N.name) && "interface" === this.state.value) {
            var d = this.startNode();return this.next(), this.flowParseInterface(d);
          }return a.call(this, b, c);
        };
      }), a.extend("parseExpressionStatement", function (a) {
        return function (b, c) {
          if ("Identifier" === c.type) if ("declare" === c.name) {
            if (this.match(N._class) || this.match(N.name) || this.match(N._function) || this.match(N._var)) return this.flowParseDeclare(b);
          } else if (this.match(N.name)) {
            if ("interface" === c.name) return this.flowParseInterface(b);if ("type" === c.name) return this.flowParseTypeAlias(b);
          }return a.call(this, b, c);
        };
      }), a.extend("shouldParseExportDeclaration", function (a) {
        return function () {
          return this.isContextual("type") || this.isContextual("interface") || a.call(this);
        };
      }), a.extend("isExportDefaultSpecifier", function (a) {
        return function () {
          return (!this.match(N.name) || "type" !== this.state.value && "interface" !== this.state.value) && a.call(this);
        };
      }), a.extend("parseConditional", function (a) {
        return function (b, c, d, e, f) {
          if (f && this.match(N.question)) {
            var g = this.state.clone();try {
              return a.call(this, b, c, d, e);
            } catch (a) {
              if (a instanceof SyntaxError) return this.state = g, f.start = a.pos || this.state.start, b;throw a;
            }
          }return a.call(this, b, c, d, e);
        };
      }), a.extend("parseParenItem", function (a) {
        return function (b, c, d) {
          if (b = a.call(this, b, c, d), this.eat(N.question) && (b.optional = !0), this.match(N.colon)) {
            var e = this.startNodeAt(c, d);return e.expression = b, e.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(e, "TypeCastExpression");
          }return b;
        };
      }), a.extend("parseExport", function (a) {
        return function (b) {
          return b = a.call(this, b), "ExportNamedDeclaration" === b.type && (b.exportKind = b.exportKind || "value"), b;
        };
      }), a.extend("parseExportDeclaration", function (a) {
        return function (b) {
          if (this.isContextual("type")) {
            b.exportKind = "type";var c = this.startNode();return this.next(), this.match(N.braceL) ? (b.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(b), null) : this.flowParseTypeAlias(c);
          }if (this.isContextual("interface")) {
            b.exportKind = "type";var d = this.startNode();return this.next(), this.flowParseInterface(d);
          }return a.call(this, b);
        };
      }), a.extend("parseClassId", function (a) {
        return function (b) {
          a.apply(this, arguments), this.isRelational("<") && (b.typeParameters = this.flowParseTypeParameterDeclaration());
        };
      }), a.extend("isKeyword", function (a) {
        return function (b) {
          return (!this.state.inType || "void" !== b) && a.call(this, b);
        };
      }), a.extend("readToken", function (a) {
        return function (b) {
          return !this.state.inType || 62 !== b && 60 !== b ? a.call(this, b) : this.finishOp(N.relational, 1);
        };
      }), a.extend("jsx_readToken", function (a) {
        return function () {
          if (!this.state.inType) return a.call(this);
        };
      }), a.extend("toAssignable", function (a) {
        return function (b, c, d) {
          return "TypeCastExpression" === b.type ? a.call(this, this.typeCastToParameter(b), c, d) : a.call(this, b, c, d);
        };
      }), a.extend("toAssignableList", function (a) {
        return function (b, c, d) {
          for (var e = 0; e < b.length; e++) {
            var f = b[e];f && "TypeCastExpression" === f.type && (b[e] = this.typeCastToParameter(f));
          }return a.call(this, b, c, d);
        };
      }), a.extend("toReferencedList", function () {
        return function (a) {
          for (var b = 0; b < a.length; b++) {
            var c = a[b];c && c._exprListItem && "TypeCastExpression" === c.type && this.raise(c.start, "Unexpected type cast");
          }return a;
        };
      }), a.extend("parseExprListItem", function (a) {
        return function () {
          for (var b = this.startNode(), c = arguments.length, d = Array(c), e = 0; e < c; e++) d[e] = arguments[e];var f = a.call.apply(a, [this].concat(d));return this.match(N.colon) ? (b._exprListItem = !0, b.expression = f, b.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(b, "TypeCastExpression")) : f;
        };
      }), a.extend("checkLVal", function (a) {
        return function (b) {
          if ("TypeCastExpression" !== b.type) return a.apply(this, arguments);
        };
      }), a.extend("parseClassProperty", function (a) {
        return function (b) {
          return delete b.variancePos, this.match(N.colon) && (b.typeAnnotation = this.flowParseTypeAnnotation()), a.call(this, b);
        };
      }), a.extend("isClassMethod", function (a) {
        return function () {
          return this.isRelational("<") || a.call(this);
        };
      }), a.extend("isClassProperty", function (a) {
        return function () {
          return this.match(N.colon) || a.call(this);
        };
      }), a.extend("isNonstaticConstructor", function (a) {
        return function (b) {
          return !this.match(N.colon) && a.call(this, b);
        };
      }), a.extend("parseClassMethod", function (a) {
        return function (b, c) {
          c.variance && this.unexpected(c.variancePos), delete c.variance, delete c.variancePos, this.isRelational("<") && (c.typeParameters = this.flowParseTypeParameterDeclaration());for (var d = arguments.length, e = Array(d > 2 ? d - 2 : 0), f = 2; f < d; f++) e[f - 2] = arguments[f];a.call.apply(a, [this, b, c].concat(e));
        };
      }), a.extend("parseClassSuper", function (a) {
        return function (b, c) {
          if (a.call(this, b, c), b.superClass && this.isRelational("<") && (b.superTypeParameters = this.flowParseTypeParameterInstantiation()), this.isContextual("implements")) {
            this.next();var d = b.implements = [];do {
              var e = this.startNode();e.id = this.parseIdentifier(), this.isRelational("<") ? e.typeParameters = this.flowParseTypeParameterInstantiation() : e.typeParameters = null, d.push(this.finishNode(e, "ClassImplements"));
            } while (this.eat(N.comma));
          }
        };
      }), a.extend("parsePropertyName", function (a) {
        return function (b) {
          var c = this.state.start,
              d = this.flowParseVariance(),
              e = a.call(this, b);return b.variance = d, b.variancePos = c, e;
        };
      }), a.extend("parseObjPropValue", function (a) {
        return function (b) {
          b.variance && this.unexpected(b.variancePos), delete b.variance, delete b.variancePos;var c = void 0;this.isRelational("<") && (c = this.flowParseTypeParameterDeclaration(), this.match(N.parenL) || this.unexpected()), a.apply(this, arguments), c && ((b.value || b).typeParameters = c);
        };
      }), a.extend("parseAssignableListItemTypes", function () {
        return function (a) {
          return this.eat(N.question) && (a.optional = !0), this.match(N.colon) && (a.typeAnnotation = this.flowParseTypeAnnotation()), this.finishNode(a, a.type), a;
        };
      }), a.extend("parseMaybeDefault", function (a) {
        return function () {
          for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];var e = a.apply(this, c);return "AssignmentPattern" === e.type && e.typeAnnotation && e.right.start < e.typeAnnotation.start && this.raise(e.typeAnnotation.start, "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`"), e;
        };
      }), a.extend("parseImportSpecifiers", function (a) {
        return function (b) {
          b.importKind = "value";var c = null;if (this.match(N._typeof) ? c = "typeof" : this.isContextual("type") && (c = "type"), c) {
            var d = this.lookahead();(d.type === N.name && "from" !== d.value || d.type === N.braceL || d.type === N.star) && (this.next(), b.importKind = c);
          }a.call(this, b);
        };
      }), a.extend("parseImportSpecifier", function () {
        return function (a) {
          var b = this.startNode(),
              c = this.state.start,
              d = this.parseIdentifier(!0),
              e = null;"type" === d.name ? e = "type" : "typeof" === d.name && (e = "typeof");var f = !1;if (this.isContextual("as")) {
            var g = this.parseIdentifier(!0);null === e || this.match(N.name) || this.state.type.keyword ? (b.imported = d, b.importKind = null, b.local = this.parseIdentifier()) : (b.imported = g, b.importKind = e, b.local = g.__clone());
          } else null !== e && (this.match(N.name) || this.state.type.keyword) ? (b.imported = this.parseIdentifier(!0), b.importKind = e, this.eatContextual("as") ? b.local = this.parseIdentifier() : (f = !0, b.local = b.imported.__clone())) : (f = !0, b.imported = d, b.importKind = null, b.local = b.imported.__clone());"type" !== a.importKind && "typeof" !== a.importKind || "type" !== b.importKind && "typeof" !== b.importKind || this.raise(c, "`The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements`"), f && this.checkReservedWord(b.local.name, b.start, !0, !0), this.checkLVal(b.local, !0, void 0, "import specifier"), a.specifiers.push(this.finishNode(b, "ImportSpecifier"));
        };
      }), a.extend("parseFunctionParams", function (a) {
        return function (b) {
          this.isRelational("<") && (b.typeParameters = this.flowParseTypeParameterDeclaration()), a.call(this, b);
        };
      }), a.extend("parseVarHead", function (a) {
        return function (b) {
          a.call(this, b), this.match(N.colon) && (b.id.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(b.id, b.id.type));
        };
      }), a.extend("parseAsyncArrowFromCallExpression", function (a) {
        return function (b, c) {
          if (this.match(N.colon)) {
            var d = this.state.noAnonFunctionType;this.state.noAnonFunctionType = !0, b.returnType = this.flowParseTypeAnnotation(), this.state.noAnonFunctionType = d;
          }return a.call(this, b, c);
        };
      }), a.extend("shouldParseAsyncArrow", function (a) {
        return function () {
          return this.match(N.colon) || a.call(this);
        };
      }), a.extend("parseMaybeAssign", function (a) {
        return function () {
          for (var b = null, c = arguments.length, d = Array(c), e = 0; e < c; e++) d[e] = arguments[e];if (N.jsxTagStart && this.match(N.jsxTagStart)) {
            var f = this.state.clone();try {
              return a.apply(this, d);
            } catch (a) {
              if (!(a instanceof SyntaxError)) throw a;this.state = f, this.state.context.length -= 2, b = a;
            }
          }if (null != b || this.isRelational("<")) {
            var g = void 0,
                h = void 0;try {
              h = this.flowParseTypeParameterDeclaration(), g = a.apply(this, d), g.typeParameters = h, g.start = h.start, g.loc.start = h.loc.start;
            } catch (a) {
              throw b || a;
            }if ("ArrowFunctionExpression" === g.type) return g;if (null != b) throw b;this.raise(h.start, "Expected an arrow function after this type parameter declaration");
          }return a.apply(this, d);
        };
      }), a.extend("parseArrow", function (a) {
        return function (b) {
          if (this.match(N.colon)) {
            var c = this.state.clone();try {
              var d = this.state.noAnonFunctionType;this.state.noAnonFunctionType = !0;var e = this.flowParseTypeAndPredicateAnnotation();this.state.noAnonFunctionType = d, this.canInsertSemicolon() && this.unexpected(), this.match(N.arrow) || this.unexpected(), b.returnType = e;
            } catch (a) {
              if (!(a instanceof SyntaxError)) throw a;this.state = c;
            }
          }return a.call(this, b);
        };
      }), a.extend("shouldParseArrow", function (a) {
        return function () {
          return this.match(N.colon) || a.call(this);
        };
      });
    },
        qa = String.fromCodePoint;if (!qa) {
      var ra = String.fromCharCode,
          sa = Math.floor;qa = function () {
        var a = 16384,
            b = [],
            c = void 0,
            d = void 0,
            e = -1,
            f = arguments.length;if (!f) return "";for (var g = ""; ++e < f;) {
          var h = Number(arguments[e]);if (!isFinite(h) || h < 0 || h > 1114111 || sa(h) != h) throw RangeError("Invalid code point: " + h);h <= 65535 ? b.push(h) : (h -= 65536, c = 55296 + (h >> 10), d = h % 1024 + 56320, b.push(c, d)), (e + 1 == f || b.length > a) && (g += ra.apply(null, b), b.length = 0);
        }return g;
      };
    }var ta = qa,
        ua = { quot: '"', amp: "&", apos: "'", lt: "<", gt: ">", nbsp: " ", iexcl: "¡", cent: "¢", pound: "£", curren: "¤", yen: "¥", brvbar: "¦", sect: "§", uml: "¨", copy: "©", ordf: "ª", laquo: "«", not: "¬", shy: "­", reg: "®", macr: "¯", deg: "°", plusmn: "±", sup2: "²", sup3: "³", acute: "´", micro: "µ", para: "¶", middot: "·", cedil: "¸", sup1: "¹", ordm: "º", raquo: "»", frac14: "¼", frac12: "½", frac34: "¾", iquest: "¿", Agrave: "À", Aacute: "Á", Acirc: "Â", Atilde: "Ã", Auml: "Ä", Aring: "Å", AElig: "Æ", Ccedil: "Ç", Egrave: "È", Eacute: "É", Ecirc: "Ê", Euml: "Ë", Igrave: "Ì", Iacute: "Í", Icirc: "Î", Iuml: "Ï", ETH: "Ð", Ntilde: "Ñ", Ograve: "Ò", Oacute: "Ó", Ocirc: "Ô", Otilde: "Õ", Ouml: "Ö", times: "×", Oslash: "Ø", Ugrave: "Ù", Uacute: "Ú", Ucirc: "Û", Uuml: "Ü", Yacute: "Ý", THORN: "Þ", szlig: "ß", agrave: "à", aacute: "á", acirc: "â", atilde: "ã", auml: "ä", aring: "å", aelig: "æ", ccedil: "ç", egrave: "è", eacute: "é", ecirc: "ê", euml: "ë", igrave: "ì", iacute: "í", icirc: "î", iuml: "ï", eth: "ð", ntilde: "ñ", ograve: "ò", oacute: "ó", ocirc: "ô", otilde: "õ", ouml: "ö", divide: "÷", oslash: "ø", ugrave: "ù", uacute: "ú", ucirc: "û", uuml: "ü", yacute: "ý", thorn: "þ", yuml: "ÿ", OElig: "Œ", oelig: "œ", Scaron: "Š", scaron: "š", Yuml: "Ÿ", fnof: "ƒ", circ: "ˆ", tilde: "˜", Alpha: "Α", Beta: "Β", Gamma: "Γ", Delta: "Δ", Epsilon: "Ε", Zeta: "Ζ", Eta: "Η", Theta: "Θ", Iota: "Ι", Kappa: "Κ", Lambda: "Λ", Mu: "Μ", Nu: "Ν", Xi: "Ξ", Omicron: "Ο", Pi: "Π", Rho: "Ρ", Sigma: "Σ", Tau: "Τ", Upsilon: "Υ", Phi: "Φ", Chi: "Χ", Psi: "Ψ", Omega: "Ω", alpha: "α", beta: "β", gamma: "γ", delta: "δ", epsilon: "ε", zeta: "ζ", eta: "η", theta: "θ", iota: "ι", kappa: "κ", lambda: "λ", mu: "μ", nu: "ν", xi: "ξ", omicron: "ο", pi: "π", rho: "ρ", sigmaf: "ς", sigma: "σ", tau: "τ", upsilon: "υ", phi: "φ", chi: "χ", psi: "ψ", omega: "ω", thetasym: "ϑ", upsih: "ϒ", piv: "ϖ", ensp: " ", emsp: " ", thinsp: " ", zwnj: "‌", zwj: "‍", lrm: "‎", rlm: "‏", ndash: "–", mdash: "—", lsquo: "‘", rsquo: "’", sbquo: "‚", ldquo: "“", rdquo: "”", bdquo: "„", dagger: "†", Dagger: "‡", bull: "•", hellip: "…", permil: "‰", prime: "′", Prime: "″", lsaquo: "‹", rsaquo: "›", oline: "‾", frasl: "⁄", euro: "€", image: "ℑ", weierp: "℘", real: "ℜ", trade: "™", alefsym: "ℵ", larr: "←", uarr: "↑", rarr: "→", darr: "↓", harr: "↔", crarr: "↵", lArr: "⇐", uArr: "⇑", rArr: "⇒", dArr: "⇓", hArr: "⇔", forall: "∀", part: "∂", exist: "∃", empty: "∅", nabla: "∇", isin: "∈", notin: "∉", ni: "∋", prod: "∏", sum: "∑", minus: "−", lowast: "∗", radic: "√", prop: "∝", infin: "∞", ang: "∠", and: "∧", or: "∨", cap: "∩", cup: "∪", int: "∫", there4: "∴", sim: "∼", cong: "≅", asymp: "≈", ne: "≠", equiv: "≡", le: "≤", ge: "≥", sub: "⊂", sup: "⊃", nsub: "⊄", sube: "⊆", supe: "⊇", oplus: "⊕", otimes: "⊗", perp: "⊥", sdot: "⋅", lceil: "⌈", rceil: "⌉", lfloor: "⌊", rfloor: "⌋", lang: "〈", rang: "〉", loz: "◊", spades: "♠", clubs: "♣", hearts: "♥", diams: "♦" },
        va = /^[\da-fA-F]+$/,
        wa = /^\d+$/;T.j_oTag = new S("<tag", !1), T.j_cTag = new S("</tag", !1), T.j_expr = new S("<tag>...</tag>", !0, !0), N.jsxName = new K("jsxName"), N.jsxText = new K("jsxText", { beforeExpr: !0 }), N.jsxTagStart = new K("jsxTagStart", { startsExpr: !0 }), N.jsxTagEnd = new K("jsxTagEnd"), N.jsxTagStart.updateContext = function () {
      this.state.context.push(T.j_expr), this.state.context.push(T.j_oTag), this.state.exprAllowed = !1;
    }, N.jsxTagEnd.updateContext = function (a) {
      var b = this.state.context.pop();b === T.j_oTag && a === N.slash || b === T.j_cTag ? (this.state.context.pop(), this.state.exprAllowed = this.curContext() === T.j_expr) : this.state.exprAllowed = !0;
    };var xa = _.prototype;xa.jsxReadToken = function () {
      for (var a = "", b = this.state.pos;;) {
        this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated JSX contents");var c = this.input.charCodeAt(this.state.pos);switch (c) {case 60:case 123:
            return this.state.pos === this.state.start ? 60 === c && this.state.exprAllowed ? (++this.state.pos, this.finishToken(N.jsxTagStart)) : this.getTokenFromCode(c) : (a += this.input.slice(b, this.state.pos), this.finishToken(N.jsxText, a));case 38:
            a += this.input.slice(b, this.state.pos), a += this.jsxReadEntity(), b = this.state.pos;break;default:
            i(c) ? (a += this.input.slice(b, this.state.pos), a += this.jsxReadNewLine(!0), b = this.state.pos) : ++this.state.pos;}
      }
    }, xa.jsxReadNewLine = function (a) {
      var b = this.input.charCodeAt(this.state.pos),
          c = void 0;return ++this.state.pos, 13 === b && 10 === this.input.charCodeAt(this.state.pos) ? (++this.state.pos, c = a ? "\n" : "\r\n") : c = String.fromCharCode(b), ++this.state.curLine, this.state.lineStart = this.state.pos, c;
    }, xa.jsxReadString = function (a) {
      for (var b = "", c = ++this.state.pos;;) {
        this.state.pos >= this.input.length && this.raise(this.state.start, "Unterminated string constant");var d = this.input.charCodeAt(this.state.pos);if (d === a) break;38 === d ? (b += this.input.slice(c, this.state.pos), b += this.jsxReadEntity(), c = this.state.pos) : i(d) ? (b += this.input.slice(c, this.state.pos), b += this.jsxReadNewLine(!1), c = this.state.pos) : ++this.state.pos;
      }return b += this.input.slice(c, this.state.pos++), this.finishToken(N.string, b);
    }, xa.jsxReadEntity = function () {
      for (var a = "", b = 0, c = void 0, d = this.input[this.state.pos], e = ++this.state.pos; this.state.pos < this.input.length && b++ < 10;) {
        if (";" === (d = this.input[this.state.pos++])) {
          "#" === a[0] ? "x" === a[1] ? (a = a.substr(2), va.test(a) && (c = ta(parseInt(a, 16)))) : (a = a.substr(1), wa.test(a) && (c = ta(parseInt(a, 10)))) : c = ua[a];break;
        }a += d;
      }return c || (this.state.pos = e, "&");
    }, xa.jsxReadWord = function () {
      var a = void 0,
          b = this.state.pos;do {
        a = this.input.charCodeAt(++this.state.pos);
      } while (g(a) || 45 === a);return this.finishToken(N.jsxName, this.input.slice(b, this.state.pos));
    }, xa.jsxParseIdentifier = function () {
      var a = this.startNode();return this.match(N.jsxName) ? a.name = this.state.value : this.state.type.keyword ? a.name = this.state.type.keyword : this.unexpected(), this.next(), this.finishNode(a, "JSXIdentifier");
    }, xa.jsxParseNamespacedName = function () {
      var a = this.state.start,
          b = this.state.startLoc,
          c = this.jsxParseIdentifier();if (!this.eat(N.colon)) return c;var d = this.startNodeAt(a, b);return d.namespace = c, d.name = this.jsxParseIdentifier(), this.finishNode(d, "JSXNamespacedName");
    }, xa.jsxParseElementName = function () {
      for (var a = this.state.start, b = this.state.startLoc, c = this.jsxParseNamespacedName(); this.eat(N.dot);) {
        var d = this.startNodeAt(a, b);d.object = c, d.property = this.jsxParseIdentifier(), c = this.finishNode(d, "JSXMemberExpression");
      }return c;
    }, xa.jsxParseAttributeValue = function () {
      var a = void 0;switch (this.state.type) {case N.braceL:
          if (a = this.jsxParseExpressionContainer(), "JSXEmptyExpression" !== a.expression.type) return a;this.raise(a.start, "JSX attributes must only be assigned a non-empty expression");case N.jsxTagStart:case N.string:
          return a = this.parseExprAtom(), a.extra = null, a;default:
          this.raise(this.state.start, "JSX value should be either an expression or a quoted JSX text");}
    }, xa.jsxParseEmptyExpression = function () {
      var a = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);return this.finishNodeAt(a, "JSXEmptyExpression", this.state.start, this.state.startLoc);
    }, xa.jsxParseSpreadChild = function () {
      var a = this.startNode();return this.expect(N.braceL), this.expect(N.ellipsis), a.expression = this.parseExpression(), this.expect(N.braceR), this.finishNode(a, "JSXSpreadChild");
    }, xa.jsxParseExpressionContainer = function () {
      var a = this.startNode();return this.next(), this.match(N.braceR) ? a.expression = this.jsxParseEmptyExpression() : a.expression = this.parseExpression(), this.expect(N.braceR), this.finishNode(a, "JSXExpressionContainer");
    }, xa.jsxParseAttribute = function () {
      var a = this.startNode();return this.eat(N.braceL) ? (this.expect(N.ellipsis), a.argument = this.parseMaybeAssign(), this.expect(N.braceR), this.finishNode(a, "JSXSpreadAttribute")) : (a.name = this.jsxParseNamespacedName(), a.value = this.eat(N.eq) ? this.jsxParseAttributeValue() : null, this.finishNode(a, "JSXAttribute"));
    }, xa.jsxParseOpeningElementAt = function (a, b) {
      var c = this.startNodeAt(a, b);for (c.attributes = [], c.name = this.jsxParseElementName(); !this.match(N.slash) && !this.match(N.jsxTagEnd);) c.attributes.push(this.jsxParseAttribute());return c.selfClosing = this.eat(N.slash), this.expect(N.jsxTagEnd), this.finishNode(c, "JSXOpeningElement");
    }, xa.jsxParseClosingElementAt = function (a, b) {
      var c = this.startNodeAt(a, b);return c.name = this.jsxParseElementName(), this.expect(N.jsxTagEnd), this.finishNode(c, "JSXClosingElement");
    }, xa.jsxParseElementAt = function (a, b) {
      var c = this.startNodeAt(a, b),
          d = [],
          e = this.jsxParseOpeningElementAt(a, b),
          f = null;if (!e.selfClosing) {
        a: for (;;) switch (this.state.type) {case N.jsxTagStart:
            if (a = this.state.start, b = this.state.startLoc, this.next(), this.eat(N.slash)) {
              f = this.jsxParseClosingElementAt(a, b);break a;
            }d.push(this.jsxParseElementAt(a, b));break;case N.jsxText:
            d.push(this.parseExprAtom());break;case N.braceL:
            this.lookahead().type === N.ellipsis ? d.push(this.jsxParseSpreadChild()) : d.push(this.jsxParseExpressionContainer());break;default:
            this.unexpected();}o(f.name) !== o(e.name) && this.raise(f.start, "Expected corresponding JSX closing tag for <" + o(e.name) + ">");
      }return c.openingElement = e, c.closingElement = f, c.children = d, this.match(N.relational) && "<" === this.state.value && this.raise(this.state.start, "Adjacent JSX elements must be wrapped in an enclosing tag"), this.finishNode(c, "JSXElement");
    }, xa.jsxParseElement = function () {
      var a = this.state.start,
          b = this.state.startLoc;return this.next(), this.jsxParseElementAt(a, b);
    };var ya = function (a) {
      a.extend("parseExprAtom", function (a) {
        return function (b) {
          if (this.match(N.jsxText)) {
            var c = this.parseLiteral(this.state.value, "JSXText");return c.extra = null, c;
          }return this.match(N.jsxTagStart) ? this.jsxParseElement() : a.call(this, b);
        };
      }), a.extend("readToken", function (a) {
        return function (b) {
          if (this.state.inPropertyName) return a.call(this, b);var c = this.curContext();if (c === T.j_expr) return this.jsxReadToken();if (c === T.j_oTag || c === T.j_cTag) {
            if (f(b)) return this.jsxReadWord();if (62 === b) return ++this.state.pos, this.finishToken(N.jsxTagEnd);if ((34 === b || 39 === b) && c === T.j_oTag) return this.jsxReadString(b);
          }return 60 === b && this.state.exprAllowed ? (++this.state.pos, this.finishToken(N.jsxTagStart)) : a.call(this, b);
        };
      }), a.extend("updateContext", function (a) {
        return function (b) {
          if (this.match(N.braceL)) {
            var c = this.curContext();c === T.j_oTag ? this.state.context.push(T.braceExpression) : c === T.j_expr ? this.state.context.push(T.templateQuasi) : a.call(this, b), this.state.exprAllowed = !0;
          } else {
            if (!this.match(N.slash) || b !== N.jsxTagStart) return a.call(this, b);this.state.context.length -= 2, this.state.context.push(T.j_cTag), this.state.exprAllowed = !1;
          }
        };
      });
    };Z.estree = ma, Z.flow = pa, Z.jsx = ya, b.parse = p, b.parseExpression = q, b.tokTypes = N;
  }), a.registerDynamic("10", ["d8", "13b", "d6", "119", "d5", "dc", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b) {
      a = (0, j.default)(a);var c = a,
          d = c.program;return b.length && (0, p.default)(a, w, null, b), d.body.length > 1 ? d.body : d.body[0];
    }this || self;b.__esModule = !0;var g = a("d8"),
        h = e(g);b.default = function (a, b) {
      var c = void 0;try {
        throw new Error();
      } catch (a) {
        a.stack && (c = a.stack.split("\n").slice(1).join("\n"));
      }b = (0, l.default)({ allowReturnOutsideFunction: !0, allowSuperOutsideMethod: !0, preserveComments: !1 }, b);var d = function () {
        var e = void 0;try {
          e = r.parse(a, b), e = p.default.removeProperties(e, { preserveComments: b.preserveComments }), p.default.cheap(e, function (a) {
            a[u] = !0;
          });
        } catch (a) {
          throw a.stack = a.stack + "from\n" + c, a;
        }return d = function () {
          return e;
        }, e;
      };return function () {
        for (var a = arguments.length, b = Array(a), c = 0; c < a; c++) b[c] = arguments[c];return f(d(), b);
      };
    };var i = a("13b"),
        j = e(i),
        k = a("d6"),
        l = e(k),
        m = a("119"),
        n = e(m),
        o = a("d5"),
        p = e(o),
        q = a("dc"),
        r = d(q),
        s = a("11"),
        t = d(s),
        u = "_fromTemplate",
        v = (0, h.default)(),
        w = { noScope: !0, enter: function (a, b) {
        var c = a.node;if (c[v]) return a.skip();t.isExpressionStatement(c) && (c = c.expression);var d = void 0;if (t.isIdentifier(c) && c[u]) if ((0, n.default)(b[0], c.name)) d = b[0][c.name];else if ("$" === c.name[0]) {
          var e = +c.name.slice(1);b[e] && (d = b[e]);
        }null === d && a.remove(), d && (d[v] = !0, a.replaceInline(d));
      }, exit: function (a) {
        var b = a.node;b.loc || p.default.clearNode(b);
      } };c.exports = b.default;
  }), a.registerDynamic("1a5", ["d8", "d9", "1f", "d5", "138", "11", "18e", "13a", "10"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      return u.isLoop(a.parent) || u.isCatchClause(a.parent);
    }function g(a) {
      return !!u.isVariableDeclaration(a) && (!!a[u.BLOCK_SCOPED_SYMBOL] || "let" === a.kind || "const" === a.kind);
    }function h(a, b, c, d) {
      var e = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];if (b || (b = a.node), !u.isFor(c)) for (var f = 0; f < b.declarations.length; f++) {
        var g = b.declarations[f];g.init = g.init || d.buildUndefinedNode();
      }if (b[u.BLOCK_SCOPED_SYMBOL] = !0, b.kind = "var", e) {
        var h = d.getFunctionParent(),
            i = a.getBindingIdentifiers();for (var j in i) {
          var k = d.getOwnBinding(j);k && (k.kind = "var"), d.moveBindingTo(j, h);
        }
      }
    }function i(a) {
      return u.isVariableDeclaration(a, { kind: "var" }) && !g(a);
    }function j(a) {
      return u.isBreakStatement(a) ? "break" : u.isContinueStatement(a) ? "continue" : void 0;
    }this || self;b.__esModule = !0;var k = a("d8"),
        l = e(k),
        m = a("d9"),
        n = e(m),
        o = a("1f"),
        p = e(o);b.default = function () {
      return { visitor: { VariableDeclaration: function (a, b) {
            var c = a.node,
                d = a.parent,
                e = a.scope;if (g(c) && (h(a, null, d, e, !0), c._tdzThis)) {
              for (var f = [c], i = 0; i < c.declarations.length; i++) {
                var j = c.declarations[i];if (j.init) {
                  var k = u.assignmentExpression("=", j.id, j.init);k._ignoreBlockScopingTDZ = !0, f.push(u.expressionStatement(k));
                }j.init = b.addHelper("temporalUndefined");
              }c._blockHoist = 2, a.isCompletionRecord() && f.push(u.expressionStatement(e.buildUndefinedNode())), a.replaceWithMultiple(f);
            }
          }, Loop: function (a, b) {
            var c = a.node,
                d = a.parent,
                e = a.scope;u.ensureBlock(c);var f = new I(a, a.get("body"), d, e, b),
                g = f.run();g && a.replaceWith(g);
          }, CatchClause: function (a, b) {
            var c = a.parent,
                d = a.scope;new I(null, a.get("body"), c, d, b).run();
          }, "BlockStatement|SwitchStatement|Program": function (a, b) {
            if (!f(a)) {
              new I(null, a, a.parent, a.scope, b).run();
            }
          } } };
    };var q = a("d5"),
        r = e(q),
        s = a("138"),
        t = a("11"),
        u = d(t),
        v = a("18e"),
        w = e(v),
        x = a("13a"),
        y = e(x),
        z = a("10"),
        A = e(z),
        B = (0, A.default)('\n  if (typeof RETURN === "object") return RETURN.v;\n'),
        C = r.default.visitors.merge([{ Loop: { enter: function (a, b) {
          b.loopDepth++;
        }, exit: function (a, b) {
          b.loopDepth--;
        } }, Function: function (a, b) {
        return b.loopDepth > 0 && a.traverse(D, b), a.skip();
      } }, s.visitor]),
        D = r.default.visitors.merge([{ ReferencedIdentifier: function (a, b) {
        var c = b.letReferences[a.node.name];if (c) {
          var d = a.scope.getBindingIdentifier(a.node.name);d && d !== c || (b.closurify = !0);
        }
      } }, s.visitor]),
        E = { enter: function (a, b) {
        var c = a.node,
            d = a.parent;if (a.isForStatement()) {
          if (i(c.init, c)) {
            var e = b.pushDeclar(c.init);1 === e.length ? c.init = e[0] : c.init = u.sequenceExpression(e);
          }
        } else if (a.isFor()) i(c.left, c) && (b.pushDeclar(c.left), c.left = c.left.declarations[0].id);else if (i(c, d)) a.replaceWithMultiple(b.pushDeclar(c).map(function (a) {
          return u.expressionStatement(a);
        }));else if (a.isFunction()) return a.skip();
      } },
        F = { LabeledStatement: function (a, b) {
        var c = a.node;b.innerLabels.push(c.label.name);
      } },
        G = { enter: function (a, b) {
        if (a.isAssignmentExpression() || a.isUpdateExpression()) {
          var c = a.getBindingIdentifiers();for (var d in c) b.outsideReferences[d] === a.scope.getBindingIdentifier(d) && (b.reassignments[d] = !0);
        }
      } },
        H = { Loop: function (a, b) {
        var c = b.ignoreLabeless;b.ignoreLabeless = !0, a.traverse(H, b), b.ignoreLabeless = c, a.skip();
      }, Function: function (a) {
        a.skip();
      }, SwitchCase: function (a, b) {
        var c = b.inSwitchCase;b.inSwitchCase = !0, a.traverse(H, b), b.inSwitchCase = c, a.skip();
      }, "BreakStatement|ContinueStatement|ReturnStatement": function (a, b) {
        var c = a.node,
            d = a.parent,
            e = a.scope;if (!c[this.LOOP_IGNORE]) {
          var f = void 0,
              g = j(c);if (g) {
            if (c.label) {
              if (b.innerLabels.indexOf(c.label.name) >= 0) return;g = g + "|" + c.label.name;
            } else {
              if (b.ignoreLabeless) return;if (b.inSwitchCase) return;if (u.isBreakStatement(c) && u.isSwitchCase(d)) return;
            }b.hasBreakContinue = !0, b.map[g] = c, f = u.stringLiteral(g);
          }a.isReturnStatement() && (b.hasReturn = !0, f = u.objectExpression([u.objectProperty(u.identifier("v"), c.argument || e.buildUndefinedNode())])), f && (f = u.returnStatement(f), f[this.LOOP_IGNORE] = !0, a.skip(), a.replaceWith(u.inherits(f, c)));
        }
      } },
        I = function () {
      function a(b, c, d, e, f) {
        (0, p.default)(this, a), this.parent = d, this.scope = e, this.file = f, this.blockPath = c, this.block = c.node, this.outsideLetReferences = (0, n.default)(null), this.hasLetReferences = !1, this.letReferences = (0, n.default)(null), this.body = [], b && (this.loopParent = b.parent, this.loopLabel = u.isLabeledStatement(this.loopParent) && this.loopParent.label, this.loopPath = b, this.loop = b.node);
      }return a.prototype.run = function () {
        var a = this.block;if (!a._letDone) {
          a._letDone = !0;var b = this.getLetReferences();if (u.isFunction(this.parent) || u.isProgram(this.block)) return void this.updateScopeInfo();if (this.hasLetReferences) return b ? this.wrapClosure() : this.remap(), this.updateScopeInfo(b), this.loopLabel && !u.isLabeledStatement(this.loopParent) ? u.labeledStatement(this.loopLabel, this.loop) : void 0;
        }
      }, a.prototype.updateScopeInfo = function (a) {
        var b = this.scope,
            c = b.getFunctionParent(),
            d = this.letReferences;for (var e in d) {
          var f = d[e],
              g = b.getBinding(f.name);g && ("let" !== g.kind && "const" !== g.kind || (g.kind = "var", a ? b.removeBinding(f.name) : b.moveBindingTo(f.name, c)));
        }
      }, a.prototype.remap = function () {
        var a = this.letReferences,
            b = this.scope;for (var c in a) {
          var d = a[c];(b.parentHasBinding(c) || b.hasGlobal(c)) && (b.hasOwnBinding(c) && b.rename(d.name), this.blockPath.scope.hasOwnBinding(c) && this.blockPath.scope.rename(d.name));
        }
      }, a.prototype.wrapClosure = function () {
        if (this.file.opts.throwIfClosureRequired) throw this.blockPath.buildCodeFrameError("Compiling let/const in this block would add a closure (throwIfClosureRequired).");var a = this.block,
            b = this.outsideLetReferences;if (this.loop) for (var c in b) {
          var d = b[c];(this.scope.hasGlobal(d.name) || this.scope.parentHasBinding(d.name)) && (delete b[d.name], delete this.letReferences[d.name], this.scope.rename(d.name), this.letReferences[d.name] = d, b[d.name] = d);
        }this.has = this.checkLoop(), this.hoistVarDeclarations();var e = (0, w.default)(b),
            f = (0, w.default)(b),
            g = this.blockPath.isSwitchStatement(),
            h = u.functionExpression(null, e, u.blockStatement(g ? [a] : a.body));h.shadow = !0, this.addContinuations(h);var i = h;this.loop && (i = this.scope.generateUidIdentifier("loop"), this.loopPath.insertBefore(u.variableDeclaration("var", [u.variableDeclarator(i, h)])));var j = u.callExpression(i, f),
            k = this.scope.generateUidIdentifier("ret");r.default.hasType(h.body, this.scope, "YieldExpression", u.FUNCTION_TYPES) && (h.generator = !0, j = u.yieldExpression(j, !0)), r.default.hasType(h.body, this.scope, "AwaitExpression", u.FUNCTION_TYPES) && (h.async = !0, j = u.awaitExpression(j)), this.buildClosure(k, j), g ? this.blockPath.replaceWithMultiple(this.body) : a.body = this.body;
      }, a.prototype.buildClosure = function (a, b) {
        var c = this.has;c.hasReturn || c.hasBreakContinue ? this.buildHas(a, b) : this.body.push(u.expressionStatement(b));
      }, a.prototype.addContinuations = function (a) {
        var b = { reassignments: {}, outsideReferences: this.outsideLetReferences };this.scope.traverse(a, G, b);for (var c = 0; c < a.params.length; c++) {
          var d = a.params[c];if (b.reassignments[d.name]) {
            var e = this.scope.generateUidIdentifier(d.name);a.params[c] = e, this.scope.rename(d.name, e.name, a), a.body.body.push(u.expressionStatement(u.assignmentExpression("=", d, e)));
          }
        }
      }, a.prototype.getLetReferences = function () {
        var a = this,
            b = this.block,
            c = [];if (this.loop) {
          var d = this.loop.left || this.loop.init;g(d) && (c.push(d), (0, y.default)(this.outsideLetReferences, u.getBindingIdentifiers(d)));
        }var e = function d(e, f) {
          f = f || e.node, (u.isClassDeclaration(f) || u.isFunctionDeclaration(f) || g(f)) && (g(f) && h(e, f, b, a.scope), c = c.concat(f.declarations || f)), u.isLabeledStatement(f) && d(e.get("body"), f.body);
        };if (b.body) for (var f = 0; f < b.body.length; f++) {
          var i = this.blockPath.get("body")[f];e(i);
        }if (b.cases) for (var j = 0; j < b.cases.length; j++) for (var k = b.cases[j].consequent, l = 0; l < k.length; l++) {
          var m = this.blockPath.get("cases")[j],
              n = k[l];e(m, n);
        }for (var o = 0; o < c.length; o++) {
          var p = c[o],
              q = u.getBindingIdentifiers(p, !1, !0);(0, y.default)(this.letReferences, q), this.hasLetReferences = !0;
        }if (this.hasLetReferences) {
          var r = { letReferences: this.letReferences, closurify: !1, file: this.file, loopDepth: 0 },
              s = this.blockPath.find(function (a) {
            return a.isLoop() || a.isFunction();
          });return s && s.isLoop() && r.loopDepth++, this.blockPath.traverse(C, r), r.closurify;
        }
      }, a.prototype.checkLoop = function () {
        var a = { hasBreakContinue: !1, ignoreLabeless: !1, inSwitchCase: !1, innerLabels: [], hasReturn: !1, isLoop: !!this.loop, map: {}, LOOP_IGNORE: (0, l.default)() };return this.blockPath.traverse(F, a), this.blockPath.traverse(H, a), a;
      }, a.prototype.hoistVarDeclarations = function () {
        this.blockPath.traverse(E, this);
      }, a.prototype.pushDeclar = function (a) {
        var b = [],
            c = u.getBindingIdentifiers(a);for (var d in c) b.push(u.variableDeclarator(c[d]));this.body.push(u.variableDeclaration(a.kind, b));for (var e = [], f = 0; f < a.declarations.length; f++) {
          var g = a.declarations[f];if (g.init) {
            var h = u.assignmentExpression("=", g.id, g.init);e.push(u.inherits(h, g));
          }
        }return e;
      }, a.prototype.buildHas = function (a, b) {
        var c = this.body;c.push(u.variableDeclaration("var", [u.variableDeclarator(a, b)]));var d = void 0,
            e = this.has,
            f = [];if (e.hasReturn && (d = B({ RETURN: a })), e.hasBreakContinue) {
          for (var g in e.map) f.push(u.switchCase(u.stringLiteral(g), [e.map[g]]));if (e.hasReturn && f.push(u.switchCase(null, [d])), 1 === f.length) {
            var h = f[0];c.push(u.ifStatement(u.binaryExpression("===", a, h.test), h.consequent[0]));
          } else {
            if (this.loop) for (var i = 0; i < f.length; i++) {
              var j = f[i].consequent[0];u.isBreakStatement(j) && !j.label && (j.label = this.loopLabel = this.loopLabel || this.scope.generateUidIdentifier("loop"));
            }c.push(u.switchStatement(a, f));
          }
        } else e.hasReturn && c.push(d);
      }, a;
    }();c.exports = b.default;
  }), a.registerDynamic("1a6", ["15", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }var f = (this || self, a("15")),
        g = e(f),
        h = a("11"),
        i = d(h),
        j = Object.prototype.hasOwnProperty;b.hoist = function (a) {
      function b(a, b) {
        i.assertVariableDeclaration(a);var d = [];return a.declarations.forEach(function (a) {
          c[a.id.name] = i.identifier(a.id.name), a.init ? d.push(i.assignmentExpression("=", a.id, a.init)) : b && d.push(a.id);
        }), 0 === d.length ? null : 1 === d.length ? d[0] : i.sequenceExpression(d);
      }i.assertFunction(a.node);var c = {};a.get("body").traverse({ VariableDeclaration: { exit: function (a) {
            var c = b(a.node, !1);null === c ? a.remove() : a.replaceWith(i.expressionStatement(c)), a.skip();
          } }, ForStatement: function (a) {
          var c = a.node.init;i.isVariableDeclaration(c) && a.get("init").replaceWith(b(c, !1));
        }, ForXStatement: function (a) {
          var c = a.get("left");c.isVariableDeclaration() && c.replaceWith(b(c.node, !0));
        }, FunctionDeclaration: function (a) {
          var b = a.node;c[b.id.name] = b.id;var d = i.expressionStatement(i.assignmentExpression("=", b.id, i.functionExpression(b.id, b.params, b.body, b.generator, b.expression)));a.parentPath.isBlockStatement() ? (a.parentPath.unshiftContainer("body", d), a.remove()) : a.replaceWith(d), a.skip();
        }, FunctionExpression: function (a) {
          a.skip();
        } });var d = {};a.get("params").forEach(function (a) {
        var b = a.node;i.isIdentifier(b) && (d[b.name] = b);
      });var e = [];return (0, g.default)(c).forEach(function (a) {
        j.call(d, a) || e.push(i.variableDeclarator(c[a], null));
      }), 0 === e.length ? null : i.variableDeclaration("var", e);
    };
  }), a.registerDynamic("1a7", ["1a8", "11", "a9", "1a9"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f() {
      p.default.ok(this instanceof f);
    }function g(a) {
      f.call(this), r.assertLiteral(a), this.returnLoc = a;
    }function h(a, b, c) {
      f.call(this), r.assertLiteral(a), r.assertLiteral(b), c ? r.assertIdentifier(c) : c = null, this.breakLoc = a, this.continueLoc = b, this.label = c;
    }function i(a) {
      f.call(this), r.assertLiteral(a), this.breakLoc = a;
    }function j(a, b, c) {
      f.call(this), r.assertLiteral(a), b ? p.default.ok(b instanceof k) : b = null, c ? p.default.ok(c instanceof l) : c = null, p.default.ok(b || c), this.firstLoc = a, this.catchEntry = b, this.finallyEntry = c;
    }function k(a, b) {
      f.call(this), r.assertLiteral(a), r.assertIdentifier(b), this.firstLoc = a, this.paramId = b;
    }function l(a, b) {
      f.call(this), r.assertLiteral(a), r.assertLiteral(b), this.firstLoc = a, this.afterLoc = b;
    }function m(a, b) {
      f.call(this), r.assertLiteral(a), r.assertIdentifier(b), this.breakLoc = a, this.label = b;
    }function n(b) {
      p.default.ok(this instanceof n);var c = a("1a9").Emitter;p.default.ok(b instanceof c), this.emitter = b, this.entryStack = [new g(b.finalLoc)];
    }var o = (this || self, a("1a8")),
        p = e(o),
        q = a("11"),
        r = d(q),
        s = a("a9");(0, s.inherits)(g, f), b.FunctionEntry = g, (0, s.inherits)(h, f), b.LoopEntry = h, (0, s.inherits)(i, f), b.SwitchEntry = i, (0, s.inherits)(j, f), b.TryEntry = j, (0, s.inherits)(k, f), b.CatchEntry = k, (0, s.inherits)(l, f), b.FinallyEntry = l, (0, s.inherits)(m, f), b.LabeledEntry = m;var t = n.prototype;b.LeapManager = n, t.withEntry = function (a, b) {
      p.default.ok(a instanceof f), this.entryStack.push(a);try {
        b.call(this.emitter);
      } finally {
        var c = this.entryStack.pop();p.default.strictEqual(c, a);
      }
    }, t._findLeapLocation = function (a, b) {
      for (var c = this.entryStack.length - 1; c >= 0; --c) {
        var d = this.entryStack[c],
            e = d[a];if (e) if (b) {
          if (d.label && d.label.name === b.name) return e;
        } else if (!(d instanceof m)) return e;
      }return null;
    }, t.getBreakLoc = function (a) {
      return this._findLeapLocation("breakLoc", a);
    }, t.getContinueLoc = function (a) {
      return this._findLeapLocation("continueLoc", a);
    };
  }), a.registerDynamic("1aa", [], !0, function (a, b, c) {
    this || self;c.exports = function (a) {
      return a && "object" == typeof a && "function" == typeof a.copy && "function" == typeof a.fill && "function" == typeof a.readUInt8;
    };
  }), a.registerDynamic("a9", ["c", "1aa"], !0, function (a, b, c) {
    function d(a, c) {
      var d = { seen: [], stylize: f };return arguments.length >= 3 && (d.depth = arguments[2]), arguments.length >= 4 && (d.colors = arguments[3]), o(c) ? d.showHidden = c : c && b._extend(d, c), u(d.showHidden) && (d.showHidden = !1), u(d.depth) && (d.depth = 2), u(d.colors) && (d.colors = !1), u(d.customInspect) && (d.customInspect = !0), d.colors && (d.stylize = e), h(d, a, d.depth);
    }function e(a, b) {
      var c = d.styles[b];return c ? "[" + d.colors[c][0] + "m" + a + "[" + d.colors[c][1] + "m" : a;
    }function f(a, b) {
      return a;
    }function g(a) {
      var b = {};return a.forEach(function (a, c) {
        b[a] = !0;
      }), b;
    }function h(a, c, d) {
      if (a.customInspect && c && z(c.inspect) && c.inspect !== b.inspect && (!c.constructor || c.constructor.prototype !== c)) {
        var e = c.inspect(d, a);return s(e) || (e = h(a, e, d)), e;
      }var f = i(a, c);if (f) return f;var o = Object.keys(c),
          p = g(o);if (a.showHidden && (o = Object.getOwnPropertyNames(c)), y(c) && (o.indexOf("message") >= 0 || o.indexOf("description") >= 0)) return j(c);if (0 === o.length) {
        if (z(c)) {
          var q = c.name ? ": " + c.name : "";return a.stylize("[Function" + q + "]", "special");
        }if (v(c)) return a.stylize(RegExp.prototype.toString.call(c), "regexp");if (x(c)) return a.stylize(Date.prototype.toString.call(c), "date");if (y(c)) return j(c);
      }var r = "",
          t = !1,
          u = ["{", "}"];if (n(c) && (t = !0, u = ["[", "]"]), z(c)) {
        r = " [Function" + (c.name ? ": " + c.name : "") + "]";
      }if (v(c) && (r = " " + RegExp.prototype.toString.call(c)), x(c) && (r = " " + Date.prototype.toUTCString.call(c)), y(c) && (r = " " + j(c)), 0 === o.length && (!t || 0 == c.length)) return u[0] + r + u[1];if (d < 0) return v(c) ? a.stylize(RegExp.prototype.toString.call(c), "regexp") : a.stylize("[Object]", "special");a.seen.push(c);var w;return w = t ? k(a, c, d, p, o) : o.map(function (b) {
        return l(a, c, d, p, b, t);
      }), a.seen.pop(), m(w, r, u);
    }function i(a, b) {
      if (u(b)) return a.stylize("undefined", "undefined");if (s(b)) {
        var c = "'" + JSON.stringify(b).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";return a.stylize(c, "string");
      }return r(b) ? a.stylize("" + b, "number") : o(b) ? a.stylize("" + b, "boolean") : p(b) ? a.stylize("null", "null") : void 0;
    }function j(a) {
      return "[" + Error.prototype.toString.call(a) + "]";
    }function k(a, b, c, d, e) {
      for (var f = [], g = 0, h = b.length; g < h; ++g) E(b, String(g)) ? f.push(l(a, b, c, d, String(g), !0)) : f.push("");return e.forEach(function (e) {
        e.match(/^\d+$/) || f.push(l(a, b, c, d, e, !0));
      }), f;
    }function l(a, b, c, d, e, f) {
      var g, i, j;if (j = Object.getOwnPropertyDescriptor(b, e) || { value: b[e] }, j.get ? i = j.set ? a.stylize("[Getter/Setter]", "special") : a.stylize("[Getter]", "special") : j.set && (i = a.stylize("[Setter]", "special")), E(d, e) || (g = "[" + e + "]"), i || (a.seen.indexOf(j.value) < 0 ? (i = p(c) ? h(a, j.value, null) : h(a, j.value, c - 1), i.indexOf("\n") > -1 && (i = f ? i.split("\n").map(function (a) {
        return "  " + a;
      }).join("\n").substr(2) : "\n" + i.split("\n").map(function (a) {
        return "   " + a;
      }).join("\n"))) : i = a.stylize("[Circular]", "special")), u(g)) {
        if (f && e.match(/^\d+$/)) return i;g = JSON.stringify("" + e), g.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (g = g.substr(1, g.length - 2), g = a.stylize(g, "name")) : (g = g.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), g = a.stylize(g, "string"));
      }return g + ": " + i;
    }function m(a, b, c) {
      var d = 0;return a.reduce(function (a, b) {
        return d++, b.indexOf("\n") >= 0 && d++, a + b.replace(/\u001b\[\d\d?m/g, "").length + 1;
      }, 0) > 60 ? c[0] + ("" === b ? "" : b + "\n ") + " " + a.join(",\n  ") + " " + c[1] : c[0] + b + " " + a.join(", ") + " " + c[1];
    }function n(a) {
      return Array.isArray(a);
    }function o(a) {
      return "boolean" == typeof a;
    }function p(a) {
      return null === a;
    }function q(a) {
      return null == a;
    }function r(a) {
      return "number" == typeof a;
    }function s(a) {
      return "string" == typeof a;
    }function t(a) {
      return "symbol" == typeof a;
    }function u(a) {
      return void 0 === a;
    }function v(a) {
      return w(a) && "[object RegExp]" === B(a);
    }function w(a) {
      return "object" == typeof a && null !== a;
    }function x(a) {
      return w(a) && "[object Date]" === B(a);
    }function y(a) {
      return w(a) && ("[object Error]" === B(a) || a instanceof Error);
    }function z(a) {
      return "function" == typeof a;
    }function A(a) {
      return null === a || "boolean" == typeof a || "number" == typeof a || "string" == typeof a || "symbol" == typeof a || void 0 === a;
    }function B(a) {
      return Object.prototype.toString.call(a);
    }function C(a) {
      return a < 10 ? "0" + a.toString(10) : a.toString(10);
    }function D() {
      var a = new Date(),
          b = [C(a.getHours()), C(a.getMinutes()), C(a.getSeconds())].join(":");return [a.getDate(), K[a.getMonth()], b].join(" ");
    }function E(a, b) {
      return Object.prototype.hasOwnProperty.call(a, b);
    }var F = this || self,
        G = a("c"),
        H = /%[sdj%]/g;b.format = function (a) {
      if (!s(a)) {
        for (var b = [], c = 0; c < arguments.length; c++) b.push(d(arguments[c]));return b.join(" ");
      }for (var c = 1, e = arguments, f = e.length, g = String(a).replace(H, function (a) {
        if ("%%" === a) return "%";if (c >= f) return a;switch (a) {case "%s":
            return String(e[c++]);case "%d":
            return Number(e[c++]);case "%j":
            try {
              return JSON.stringify(e[c++]);
            } catch (a) {
              return "[Circular]";
            }default:
            return a;}
      }), h = e[c]; c < f; h = e[++c]) p(h) || !w(h) ? g += " " + h : g += " " + d(h);return g;
    }, b.deprecate = function (a, c) {
      function d() {
        if (!e) {
          if (G.throwDeprecation) throw new Error(c);G.traceDeprecation ? console.trace(c) : console.error(c), e = !0;
        }return a.apply(this, arguments);
      }if (u(F.process)) return function () {
        return b.deprecate(a, c).apply(this, arguments);
      };if (!0 === G.noDeprecation) return a;var e = !1;return d;
    };var I,
        J = {};b.debuglog = function (a) {
      if (u(I) && (I = G.env.NODE_DEBUG || ""), a = a.toUpperCase(), !J[a]) if (new RegExp("\\b" + a + "\\b", "i").test(I)) {
        var c = G.pid;J[a] = function () {
          var d = b.format.apply(b, arguments);console.error("%s %d: %s", a, c, d);
        };
      } else J[a] = function () {};return J[a];
    }, b.inspect = d, d.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, d.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, b.isArray = n, b.isBoolean = o, b.isNull = p, b.isNullOrUndefined = q, b.isNumber = r, b.isString = s, b.isSymbol = t, b.isUndefined = u, b.isRegExp = v, b.isObject = w, b.isDate = x, b.isError = y, b.isFunction = z, b.isPrimitive = A, b.isBuffer = a("1aa");var K = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];b.log = function () {
      console.log("%s - %s", D(), b.format.apply(b, arguments));
    }, "function" == typeof Object.create ? b.inherits = function (a, b) {
      a.super_ = b, a.prototype = Object.create(b.prototype, { constructor: { value: a, enumerable: !1, writable: !0, configurable: !0 } });
    } : b.inherits = function (a, b) {
      a.super_ = b;var c = function () {};c.prototype = b.prototype, a.prototype = new c(), a.prototype.constructor = a;
    }, b._extend = function (a, b) {
      if (!b || !w(b)) return a;for (var c = Object.keys(b), d = c.length; d--;) a[c[d]] = b[c[d]];return a;
    };
  }), a.registerDynamic("1a8", ["a9"], !0, function (a, b, c) {
    function d(a, b) {
      return n.isUndefined(b) ? "" + b : n.isNumber(b) && !isFinite(b) ? b.toString() : n.isFunction(b) || n.isRegExp(b) ? b.toString() : b;
    }function e(a, b) {
      return n.isString(a) ? a.length < b ? a : a.slice(0, b) : a;
    }function f(a) {
      return e(JSON.stringify(a.actual, d), 128) + " " + a.operator + " " + e(JSON.stringify(a.expected, d), 128);
    }function g(a, b, c, d, e) {
      throw new q.AssertionError({ message: c, actual: a, expected: b, operator: d, stackStartFunction: e });
    }function h(a, b) {
      a || g(a, !0, b, "==", q.ok);
    }function i(a, b) {
      if (a === b) return !0;if (n.isBuffer(a) && n.isBuffer(b)) {
        if (a.length != b.length) return !1;for (var c = 0; c < a.length; c++) if (a[c] !== b[c]) return !1;return !0;
      }return n.isDate(a) && n.isDate(b) ? a.getTime() === b.getTime() : n.isRegExp(a) && n.isRegExp(b) ? a.source === b.source && a.global === b.global && a.multiline === b.multiline && a.lastIndex === b.lastIndex && a.ignoreCase === b.ignoreCase : n.isObject(a) || n.isObject(b) ? k(a, b) : a == b;
    }function j(a) {
      return "[object Arguments]" == Object.prototype.toString.call(a);
    }function k(a, b) {
      if (n.isNullOrUndefined(a) || n.isNullOrUndefined(b)) return !1;if (a.prototype !== b.prototype) return !1;if (n.isPrimitive(a) || n.isPrimitive(b)) return a === b;var c = j(a),
          d = j(b);if (c && !d || !c && d) return !1;if (c) return a = o.call(a), b = o.call(b), i(a, b);var e,
          f,
          g = r(a),
          h = r(b);if (g.length != h.length) return !1;for (g.sort(), h.sort(), f = g.length - 1; f >= 0; f--) if (g[f] != h[f]) return !1;for (f = g.length - 1; f >= 0; f--) if (e = g[f], !i(a[e], b[e])) return !1;return !0;
    }function l(a, b) {
      return !(!a || !b) && ("[object RegExp]" == Object.prototype.toString.call(b) ? b.test(a) : a instanceof b || !0 === b.call({}, a));
    }function m(a, b, c, d) {
      var e;n.isString(c) && (d = c, c = null);try {
        b();
      } catch (a) {
        e = a;
      }if (d = (c && c.name ? " (" + c.name + ")." : ".") + (d ? " " + d : "."), a && !e && g(e, c, "Missing expected exception" + d), !a && l(e, c) && g(e, c, "Got unwanted exception" + d), a && e && c && !l(e, c) || !a && e) throw e;
    }var n = (this || self, a("a9")),
        o = Array.prototype.slice,
        p = Object.prototype.hasOwnProperty,
        q = c.exports = h;q.AssertionError = function (a) {
      this.name = "AssertionError", this.actual = a.actual, this.expected = a.expected, this.operator = a.operator, a.message ? (this.message = a.message, this.generatedMessage = !1) : (this.message = f(this), this.generatedMessage = !0);var b = a.stackStartFunction || g;if (Error.captureStackTrace) Error.captureStackTrace(this, b);else {
        var c = new Error();if (c.stack) {
          var d = c.stack,
              e = b.name,
              h = d.indexOf("\n" + e);if (h >= 0) {
            var i = d.indexOf("\n", h + 1);d = d.substring(i + 1);
          }this.stack = d;
        }
      }
    }, n.inherits(q.AssertionError, Error), q.fail = g, q.ok = h, q.equal = function (a, b, c) {
      a != b && g(a, b, c, "==", q.equal);
    }, q.notEqual = function (a, b, c) {
      a == b && g(a, b, c, "!=", q.notEqual);
    }, q.deepEqual = function (a, b, c) {
      i(a, b) || g(a, b, c, "deepEqual", q.deepEqual);
    }, q.notDeepEqual = function (a, b, c) {
      i(a, b) && g(a, b, c, "notDeepEqual", q.notDeepEqual);
    }, q.strictEqual = function (a, b, c) {
      a !== b && g(a, b, c, "===", q.strictEqual);
    }, q.notStrictEqual = function (a, b, c) {
      a === b && g(a, b, c, "!==", q.notStrictEqual);
    }, q.throws = function (a, b, c) {
      m.apply(this, [!0].concat(o.call(arguments)));
    }, q.doesNotThrow = function (a, b) {
      m.apply(this, [!1].concat(o.call(arguments)));
    }, q.ifError = function (a) {
      if (a) throw a;
    };var r = Object.keys || function (a) {
      var b = [];for (var c in a) p.call(a, c) && b.push(c);return b;
    };
  }), a.registerDynamic("1ab", ["1a8", "11", "1ac"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b) {
      function c(a) {
        function b(a) {
          return c || (Array.isArray(a) ? a.some(b) : j.isNode(a) && (h.default.strictEqual(c, !1), c = d(a))), c;
        }j.assertNode(a);var c = !1,
            e = j.VISITOR_KEYS[a.type];if (e) for (var f = 0; f < e.length; f++) {
          var g = e[f],
              i = a[g];b(i);
        }return c;
      }function d(d) {
        j.assertNode(d);var e = k(d);return l.call(e, a) ? e[a] : l.call(m, d.type) ? e[a] = !1 : l.call(b, d.type) ? e[a] = !0 : e[a] = c(d);
      }return d.onlyChildren = c, d;
    }var g = (this || self, a("1a8")),
        h = e(g),
        i = a("11"),
        j = d(i),
        k = a("1ac").makeAccessor(),
        l = Object.prototype.hasOwnProperty,
        m = { FunctionExpression: !0, ArrowFunctionExpression: !0 },
        n = { CallExpression: !0, ForInStatement: !0, UnaryExpression: !0, BinaryExpression: !0, AssignmentExpression: !0, UpdateExpression: !0, NewExpression: !0 },
        o = { YieldExpression: !0, BreakStatement: !0, ContinueStatement: !0, ReturnStatement: !0, ThrowStatement: !0 };for (var p in o) l.call(o, p) && (n[p] = o[p]);b.hasSideEffects = f("hasSideEffects", n), b.containsLeap = f("containsLeap", o);
  }), a.registerDynamic("1a9", ["60", "1a8", "11", "1a7", "1ab", "1ad"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      m.default.ok(this instanceof f), o.assertIdentifier(a), this.nextTempId = 0, this.contextId = a, this.listing = [], this.marked = [!0], this.finalLoc = g(), this.tryEntries = [], this.leapManager = new q.LeapManager(this);
    }function g() {
      return o.numericLiteral(-1);
    }function h(a) {
      return new Error("all declarations should have been transformed into assignments before the Exploder began its work: " + (0, k.default)(a));
    }function i(a) {
      var b = a.type;return "normal" === b ? !v.call(a, "target") : "break" === b || "continue" === b ? !v.call(a, "value") && o.isLiteral(a.target) : ("return" === b || "throw" === b) && v.call(a, "value") && !v.call(a, "target");
    }var j = (this || self, a("60")),
        k = e(j),
        l = a("1a8"),
        m = e(l),
        n = a("11"),
        o = d(n),
        p = a("1a7"),
        q = d(p),
        r = a("1ab"),
        s = d(r),
        t = a("1ad"),
        u = d(t),
        v = Object.prototype.hasOwnProperty,
        w = f.prototype;b.Emitter = f, w.mark = function (a) {
      o.assertLiteral(a);var b = this.listing.length;return -1 === a.value ? a.value = b : m.default.strictEqual(a.value, b), this.marked[b] = !0, a;
    }, w.emit = function (a) {
      o.isExpression(a) && (a = o.expressionStatement(a)), o.assertStatement(a), this.listing.push(a);
    }, w.emitAssign = function (a, b) {
      return this.emit(this.assign(a, b)), a;
    }, w.assign = function (a, b) {
      return o.expressionStatement(o.assignmentExpression("=", a, b));
    }, w.contextProperty = function (a, b) {
      return o.memberExpression(this.contextId, b ? o.stringLiteral(a) : o.identifier(a), !!b);
    }, w.stop = function (a) {
      a && this.setReturnValue(a), this.jump(this.finalLoc);
    }, w.setReturnValue = function (a) {
      o.assertExpression(a.value), this.emitAssign(this.contextProperty("rval"), this.explodeExpression(a));
    }, w.clearPendingException = function (a, b) {
      o.assertLiteral(a);var c = o.callExpression(this.contextProperty("catch", !0), [a]);b ? this.emitAssign(b, c) : this.emit(c);
    }, w.jump = function (a) {
      this.emitAssign(this.contextProperty("next"), a), this.emit(o.breakStatement());
    }, w.jumpIf = function (a, b) {
      o.assertExpression(a), o.assertLiteral(b), this.emit(o.ifStatement(a, o.blockStatement([this.assign(this.contextProperty("next"), b), o.breakStatement()])));
    }, w.jumpIfNot = function (a, b) {
      o.assertExpression(a), o.assertLiteral(b);var c = void 0;c = o.isUnaryExpression(a) && "!" === a.operator ? a.argument : o.unaryExpression("!", a), this.emit(o.ifStatement(c, o.blockStatement([this.assign(this.contextProperty("next"), b), o.breakStatement()])));
    }, w.makeTempVar = function () {
      return this.contextProperty("t" + this.nextTempId++);
    }, w.getContextFunction = function (a) {
      return o.functionExpression(a || null, [this.contextId], o.blockStatement([this.getDispatchLoop()]), !1, !1);
    }, w.getDispatchLoop = function () {
      var a = this,
          b = [],
          c = void 0,
          d = !1;return a.listing.forEach(function (e, f) {
        a.marked.hasOwnProperty(f) && (b.push(o.switchCase(o.numericLiteral(f), c = [])), d = !1), d || (c.push(e), o.isCompletionStatement(e) && (d = !0));
      }), this.finalLoc.value = this.listing.length, b.push(o.switchCase(this.finalLoc, []), o.switchCase(o.stringLiteral("end"), [o.returnStatement(o.callExpression(this.contextProperty("stop"), []))])), o.whileStatement(o.numericLiteral(1), o.switchStatement(o.assignmentExpression("=", this.contextProperty("prev"), this.contextProperty("next")), b));
    }, w.getTryLocsList = function () {
      if (0 === this.tryEntries.length) return null;var a = 0;return o.arrayExpression(this.tryEntries.map(function (b) {
        var c = b.firstLoc.value;m.default.ok(c >= a, "try entries out of order"), a = c;var d = b.catchEntry,
            e = b.finallyEntry,
            f = [b.firstLoc, d ? d.firstLoc : null];return e && (f[2] = e.firstLoc, f[3] = e.afterLoc), o.arrayExpression(f);
      }));
    }, w.explode = function (a, b) {
      var c = a.node,
          d = this;if (o.assertNode(c), o.isDeclaration(c)) throw h(c);if (o.isStatement(c)) return d.explodeStatement(a);if (o.isExpression(c)) return d.explodeExpression(a, b);switch (c.type) {case "Program":
          return a.get("body").map(d.explodeStatement, d);case "VariableDeclarator":
          throw h(c);case "Property":case "SwitchCase":case "CatchClause":
          throw new Error(c.type + " nodes should be handled by their parents");default:
          throw new Error("unknown Node of type " + (0, k.default)(c.type));}
    }, w.explodeStatement = function (a, b) {
      var c = a.node,
          d = this,
          e = void 0,
          f = void 0,
          h = void 0;if (o.assertStatement(c), b ? o.assertIdentifier(b) : b = null, o.isBlockStatement(c)) return void a.get("body").forEach(function (a) {
        d.explodeStatement(a);
      });if (!s.containsLeap(c)) return void d.emit(c);switch (c.type) {case "ExpressionStatement":
          d.explodeExpression(a.get("expression"), !0);break;case "LabeledStatement":
          f = g(), d.leapManager.withEntry(new q.LabeledEntry(f, c.label), function () {
            d.explodeStatement(a.get("body"), c.label);
          }), d.mark(f);break;case "WhileStatement":
          e = g(), f = g(), d.mark(e), d.jumpIfNot(d.explodeExpression(a.get("test")), f), d.leapManager.withEntry(new q.LoopEntry(f, e, b), function () {
            d.explodeStatement(a.get("body"));
          }), d.jump(e), d.mark(f);break;case "DoWhileStatement":
          var i = g(),
              j = g();f = g(), d.mark(i), d.leapManager.withEntry(new q.LoopEntry(f, j, b), function () {
            d.explode(a.get("body"));
          }), d.mark(j), d.jumpIf(d.explodeExpression(a.get("test")), i), d.mark(f);break;case "ForStatement":
          h = g();var l = g();f = g(), c.init && d.explode(a.get("init"), !0), d.mark(h), c.test && d.jumpIfNot(d.explodeExpression(a.get("test")), f), d.leapManager.withEntry(new q.LoopEntry(f, l, b), function () {
            d.explodeStatement(a.get("body"));
          }), d.mark(l), c.update && d.explode(a.get("update"), !0), d.jump(h), d.mark(f);break;case "TypeCastExpression":
          return d.explodeExpression(a.get("expression"));case "ForInStatement":
          h = g(), f = g();var n = d.makeTempVar();d.emitAssign(n, o.callExpression(u.runtimeProperty("keys"), [d.explodeExpression(a.get("right"))])), d.mark(h);var p = d.makeTempVar();d.jumpIf(o.memberExpression(o.assignmentExpression("=", p, o.callExpression(n, [])), o.identifier("done"), !1), f), d.emitAssign(c.left, o.memberExpression(p, o.identifier("value"), !1)), d.leapManager.withEntry(new q.LoopEntry(f, h, b), function () {
            d.explodeStatement(a.get("body"));
          }), d.jump(h), d.mark(f);break;case "BreakStatement":
          d.emitAbruptCompletion({ type: "break", target: d.leapManager.getBreakLoc(c.label) });break;case "ContinueStatement":
          d.emitAbruptCompletion({ type: "continue", target: d.leapManager.getContinueLoc(c.label) });break;case "SwitchStatement":
          var r = d.emitAssign(d.makeTempVar(), d.explodeExpression(a.get("discriminant")));f = g();for (var t = g(), v = t, w = [], y = c.cases || [], z = y.length - 1; z >= 0; --z) {
            var A = y[z];o.assertSwitchCase(A), A.test ? v = o.conditionalExpression(o.binaryExpression("===", r, A.test), w[z] = g(), v) : w[z] = t;
          }var B = a.get("discriminant");B.replaceWith(v), d.jump(d.explodeExpression(B)), d.leapManager.withEntry(new q.SwitchEntry(f), function () {
            a.get("cases").forEach(function (a) {
              var b = a.key;d.mark(w[b]), a.get("consequent").forEach(function (a) {
                d.explodeStatement(a);
              });
            });
          }), d.mark(f), -1 === t.value && (d.mark(t), m.default.strictEqual(f.value, t.value));break;case "IfStatement":
          var C = c.alternate && g();f = g(), d.jumpIfNot(d.explodeExpression(a.get("test")), C || f), d.explodeStatement(a.get("consequent")), C && (d.jump(f), d.mark(C), d.explodeStatement(a.get("alternate"))), d.mark(f);break;case "ReturnStatement":
          d.emitAbruptCompletion({ type: "return", value: d.explodeExpression(a.get("argument")) });break;case "WithStatement":
          throw new Error("WithStatement not supported in generator functions.");case "TryStatement":
          f = g();var D = c.handler,
              E = D && g(),
              F = E && new q.CatchEntry(E, D.param),
              G = c.finalizer && g(),
              H = G && new q.FinallyEntry(G, f),
              I = new q.TryEntry(d.getUnmarkedCurrentLoc(), F, H);d.tryEntries.push(I), d.updateContextPrevLoc(I.firstLoc), d.leapManager.withEntry(I, function () {
            if (d.explodeStatement(a.get("block")), E) {
              G ? d.jump(G) : d.jump(f), d.updateContextPrevLoc(d.mark(E));var b = a.get("handler.body"),
                  c = d.makeTempVar();d.clearPendingException(I.firstLoc, c), b.traverse(x, { safeParam: c, catchParamName: D.param.name }), d.leapManager.withEntry(F, function () {
                d.explodeStatement(b);
              });
            }G && (d.updateContextPrevLoc(d.mark(G)), d.leapManager.withEntry(H, function () {
              d.explodeStatement(a.get("finalizer"));
            }), d.emit(o.returnStatement(o.callExpression(d.contextProperty("finish"), [H.firstLoc]))));
          }), d.mark(f);break;case "ThrowStatement":
          d.emit(o.throwStatement(d.explodeExpression(a.get("argument"))));break;default:
          throw new Error("unknown Statement of type " + (0, k.default)(c.type));}
    };var x = { Identifier: function (a, b) {
        a.node.name === b.catchParamName && u.isReference(a) && a.replaceWith(b.safeParam);
      }, Scope: function (a, b) {
        a.scope.hasOwnBinding(b.catchParamName) && a.skip();
      } };w.emitAbruptCompletion = function (a) {
      i(a) || m.default.ok(!1, "invalid completion record: " + (0, k.default)(a)), m.default.notStrictEqual(a.type, "normal", "normal completions are not abrupt");var b = [o.stringLiteral(a.type)];"break" === a.type || "continue" === a.type ? (o.assertLiteral(a.target), b[1] = a.target) : "return" !== a.type && "throw" !== a.type || a.value && (o.assertExpression(a.value), b[1] = a.value), this.emit(o.returnStatement(o.callExpression(this.contextProperty("abrupt"), b)));
    }, w.getUnmarkedCurrentLoc = function () {
      return o.numericLiteral(this.listing.length);
    }, w.updateContextPrevLoc = function (a) {
      a ? (o.assertLiteral(a), -1 === a.value ? a.value = this.listing.length : m.default.strictEqual(a.value, this.listing.length)) : a = this.getUnmarkedCurrentLoc(), this.emitAssign(this.contextProperty("prev"), a);
    }, w.explodeExpression = function (a, b) {
      function c(a) {
        if (o.assertExpression(a), !b) return a;f.emit(a);
      }function d(a, b, c) {
        m.default.ok(!c || !a, "Ignoring the result of a child expression but forcing it to be assigned to a temporary variable?");var d = f.explodeExpression(b, c);return c || (a || j && !o.isLiteral(d)) && (d = f.emitAssign(a || f.makeTempVar(), d)), d;
      }var e = a.node;if (!e) return e;o.assertExpression(e);var f = this,
          h = void 0,
          i = void 0;if (!s.containsLeap(e)) return c(e);var j = s.containsLeap.onlyChildren(e);switch (e.type) {case "MemberExpression":
          return c(o.memberExpression(f.explodeExpression(a.get("object")), e.computed ? d(null, a.get("property")) : e.property, e.computed));case "CallExpression":
          var l = a.get("callee"),
              n = a.get("arguments"),
              p = void 0,
              q = [],
              r = !1;if (n.forEach(function (a) {
            r = r || s.containsLeap(a.node);
          }), o.isMemberExpression(l.node)) {
            if (r) {
              var t = d(f.makeTempVar(), l.get("object")),
                  u = l.node.computed ? d(null, l.get("property")) : l.node.property;q.unshift(t), p = o.memberExpression(o.memberExpression(t, u, l.node.computed), o.identifier("call"), !1);
            } else p = f.explodeExpression(l);
          } else p = d(null, l), o.isMemberExpression(p) && (p = o.sequenceExpression([o.numericLiteral(0), p]));return n.forEach(function (a) {
            q.push(d(null, a));
          }), c(o.callExpression(p, q));case "NewExpression":
          return c(o.newExpression(d(null, a.get("callee")), a.get("arguments").map(function (a) {
            return d(null, a);
          })));case "ObjectExpression":
          return c(o.objectExpression(a.get("properties").map(function (a) {
            return a.isObjectProperty() ? o.objectProperty(a.node.key, d(null, a.get("value")), a.node.computed) : a.node;
          })));case "ArrayExpression":
          return c(o.arrayExpression(a.get("elements").map(function (a) {
            return d(null, a);
          })));case "SequenceExpression":
          var v = e.expressions.length - 1;return a.get("expressions").forEach(function (a) {
            a.key === v ? h = f.explodeExpression(a, b) : f.explodeExpression(a, !0);
          }), h;case "LogicalExpression":
          i = g(), b || (h = f.makeTempVar());var w = d(h, a.get("left"));return "&&" === e.operator ? f.jumpIfNot(w, i) : (m.default.strictEqual(e.operator, "||"), f.jumpIf(w, i)), d(h, a.get("right"), b), f.mark(i), h;case "ConditionalExpression":
          var x = g();i = g();var y = f.explodeExpression(a.get("test"));return f.jumpIfNot(y, x), b || (h = f.makeTempVar()), d(h, a.get("consequent"), b), f.jump(i), f.mark(x), d(h, a.get("alternate"), b), f.mark(i), h;case "UnaryExpression":
          return c(o.unaryExpression(e.operator, f.explodeExpression(a.get("argument")), !!e.prefix));case "BinaryExpression":
          return c(o.binaryExpression(e.operator, d(null, a.get("left")), d(null, a.get("right"))));case "AssignmentExpression":
          return c(o.assignmentExpression(e.operator, f.explodeExpression(a.get("left")), f.explodeExpression(a.get("right"))));case "UpdateExpression":
          return c(o.updateExpression(e.operator, f.explodeExpression(a.get("argument")), e.prefix));case "YieldExpression":
          i = g();var z = e.argument && f.explodeExpression(a.get("argument"));if (z && e.delegate) {
            var A = f.makeTempVar();return f.emit(o.returnStatement(o.callExpression(f.contextProperty("delegateYield"), [z, o.stringLiteral(A.property.name), i]))), f.mark(i), A;
          }return f.emitAssign(f.contextProperty("next"), i), f.emit(o.returnStatement(z || null)), f.mark(i), f.contextProperty("sent");default:
          throw new Error("unknown Expression of type " + (0, k.default)(e.type));}
    };
  }), a.registerDynamic("1ae", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      if (!a.node || !g.isFunction(a.node)) throw new Error("replaceShorthandObjectMethod can only be called on Function AST node paths.");if (!g.isObjectMethod(a.node)) return a;if (!a.node.generator) return a;var b = a.node.params.map(function (a) {
        return g.cloneDeep(a);
      }),
          c = g.functionExpression(null, b, g.cloneDeep(a.node.body), a.node.generator, a.node.async);return a.replaceWith(g.objectProperty(g.cloneDeep(a.node.key), c, a.node.computed, !1)), a.get("value");
    }this || self;b.__esModule = !0, b.default = e;var f = a("11"),
        g = d(f);
  }), a.registerDynamic("1af", ["1b0", "39", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("1b0"), c.exports = a("39").Object.getOwnPropertySymbols;
  }), a.registerDynamic("1b1", ["1af"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("1af"), __esModule: !0 };
  }), a.registerDynamic("1b2", ["cb", "39", "194", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("cb")),
        e = a("39"),
        f = a("194");c.exports = function (a, b) {
      var c = (e.Object || {})[a] || Object[a],
          g = {};g[a] = b(c), d(d.S + d.F * f(function () {
        c(1);
      }), "Object", g);
    };
  }), a.registerDynamic("1b3", ["192", "18f", "1b2", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("192")),
        e = a("18f");a("1b2")("keys", function () {
      return function (a) {
        return e(d(a));
      };
    });
  }), a.registerDynamic("1b4", ["1b3", "39", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("1b3"), c.exports = a("39").Object.keys;
  }), a.registerDynamic("15", ["1b4"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("1b4"), __esModule: !0 };
  }), a.registerDynamic("1b5", ["cb", "16d", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("cb"));d(d.S, "Object", { create: a("16d") });
  }), a.registerDynamic("1b6", ["1b5", "39", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("1b5");var d = a("39").Object;c.exports = function (a, b) {
      return d.create(a, b);
    };
  }), a.registerDynamic("d9", ["1b6"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("1b6"), __esModule: !0 };
  }), a.registerDynamic("1b7", ["d9", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b, c) {
      for (var d = [].concat(a), e = (0, i.default)(null); d.length;) {
        var f = d.shift();if (f) {
          var g = k.getBindingIdentifiers.keys[f.type];if (k.isIdentifier(f)) {
            if (b) {
              var h = e[f.name] = e[f.name] || [];h.push(f);
            } else e[f.name] = f;
          } else if (k.isExportDeclaration(f)) k.isDeclaration(f.declaration) && d.push(f.declaration);else {
            if (c) {
              if (k.isFunctionDeclaration(f)) {
                d.push(f.id);continue;
              }if (k.isFunctionExpression(f)) continue;
            }if (g) for (var j = 0; j < g.length; j++) {
              var l = g[j];f[l] && (d = d.concat(f[l]));
            }
          }
        }
      }return e;
    }function g(a, b) {
      return f(a, b, !0);
    }this || self;b.__esModule = !0;var h = a("d9"),
        i = e(h);b.getBindingIdentifiers = f, b.getOuterBindingIdentifiers = g;var j = a("11"),
        k = d(j);f.keys = { DeclareClass: ["id"], DeclareFunction: ["id"], DeclareModule: ["id"], DeclareVariable: ["id"], InterfaceDeclaration: ["id"], TypeAlias: ["id"], CatchClause: ["param"], LabeledStatement: ["label"], UnaryExpression: ["argument"], AssignmentExpression: ["left"], ImportSpecifier: ["local"], ImportNamespaceSpecifier: ["local"], ImportDefaultSpecifier: ["local"], ImportDeclaration: ["specifiers"], ExportSpecifier: ["exported"], ExportNamespaceSpecifier: ["exported"], ExportDefaultSpecifier: ["exported"], FunctionDeclaration: ["id", "params"], FunctionExpression: ["id", "params"], ClassDeclaration: ["id"], ClassExpression: ["id"], RestElement: ["argument"], UpdateExpression: ["argument"], RestProperty: ["argument"], ObjectProperty: ["value"], AssignmentPattern: ["left"], ArrayPattern: ["elements"], ObjectPattern: ["properties"], VariableDeclaration: ["declarations"], VariableDeclarator: ["id"] };
  }), a.registerDynamic("1b8", [], !0, function (a, b, c) {
    this || self;!function () {
      "use strict";
      function a(a) {
        if (null == a) return !1;switch (a.type) {case "ArrayExpression":case "AssignmentExpression":case "BinaryExpression":case "CallExpression":case "ConditionalExpression":case "FunctionExpression":case "Identifier":case "Literal":case "LogicalExpression":case "MemberExpression":case "NewExpression":case "ObjectExpression":case "SequenceExpression":case "ThisExpression":case "UnaryExpression":case "UpdateExpression":
            return !0;}return !1;
      }function b(a) {
        if (null == a) return !1;switch (a.type) {case "DoWhileStatement":case "ForInStatement":case "ForStatement":case "WhileStatement":
            return !0;}return !1;
      }function d(a) {
        if (null == a) return !1;switch (a.type) {case "BlockStatement":case "BreakStatement":case "ContinueStatement":case "DebuggerStatement":case "DoWhileStatement":case "EmptyStatement":case "ExpressionStatement":case "ForInStatement":case "ForStatement":case "IfStatement":case "LabeledStatement":case "ReturnStatement":case "SwitchStatement":case "ThrowStatement":case "TryStatement":case "VariableDeclaration":case "WhileStatement":case "WithStatement":
            return !0;}return !1;
      }function e(a) {
        return d(a) || null != a && "FunctionDeclaration" === a.type;
      }function f(a) {
        switch (a.type) {case "IfStatement":
            return null != a.alternate ? a.alternate : a.consequent;case "LabeledStatement":case "ForStatement":case "ForInStatement":case "WhileStatement":case "WithStatement":
            return a.body;}return null;
      }function g(a) {
        var b;if ("IfStatement" !== a.type) return !1;if (null == a.alternate) return !1;b = a.consequent;do {
          if ("IfStatement" === b.type && null == b.alternate) return !0;b = f(b);
        } while (b);return !1;
      }c.exports = { isExpression: a, isStatement: d, isIterationStatement: b, isSourceElement: e, isProblematicIfStatement: g, trailingStatement: f };
    }();
  }), a.registerDynamic("1b9", [], !0, function (a, b, c) {
    this || self;!function () {
      "use strict";
      function a(a) {
        return 48 <= a && a <= 57;
      }function b(a) {
        return 48 <= a && a <= 57 || 97 <= a && a <= 102 || 65 <= a && a <= 70;
      }function d(a) {
        return a >= 48 && a <= 55;
      }function e(a) {
        return 32 === a || 9 === a || 11 === a || 12 === a || 160 === a || a >= 5760 && n.indexOf(a) >= 0;
      }function f(a) {
        return 10 === a || 13 === a || 8232 === a || 8233 === a;
      }function g(a) {
        return a <= 65535 ? String.fromCharCode(a) : String.fromCharCode(Math.floor((a - 65536) / 1024) + 55296) + String.fromCharCode((a - 65536) % 1024 + 56320);
      }function h(a) {
        return a < 128 ? o[a] : m.NonAsciiIdentifierStart.test(g(a));
      }function i(a) {
        return a < 128 ? p[a] : m.NonAsciiIdentifierPart.test(g(a));
      }function j(a) {
        return a < 128 ? o[a] : l.NonAsciiIdentifierStart.test(g(a));
      }function k(a) {
        return a < 128 ? p[a] : l.NonAsciiIdentifierPart.test(g(a));
      }var l, m, n, o, p, q;for (m = { NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/, NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/ }, l = { NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/, NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/ }, n = [5760, 6158, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8239, 8287, 12288, 65279], o = new Array(128), q = 0; q < 128; ++q) o[q] = q >= 97 && q <= 122 || q >= 65 && q <= 90 || 36 === q || 95 === q;for (p = new Array(128), q = 0; q < 128; ++q) p[q] = q >= 97 && q <= 122 || q >= 65 && q <= 90 || q >= 48 && q <= 57 || 36 === q || 95 === q;c.exports = { isDecimalDigit: a, isHexDigit: b, isOctalDigit: d, isWhiteSpace: e, isLineTerminator: f, isIdentifierStartES5: h, isIdentifierPartES5: i, isIdentifierStartES6: j, isIdentifierPartES6: k };
    }();
  }), a.registerDynamic("1ba", ["1b9"], !0, function (a, b, c) {
    this || self;!function () {
      "use strict";
      function b(a) {
        switch (a) {case "implements":case "interface":case "package":case "private":case "protected":case "public":case "static":case "let":
            return !0;default:
            return !1;}
      }function d(a, b) {
        return !(!b && "yield" === a) && e(a, b);
      }function e(a, c) {
        if (c && b(a)) return !0;switch (a.length) {case 2:
            return "if" === a || "in" === a || "do" === a;case 3:
            return "var" === a || "for" === a || "new" === a || "try" === a;case 4:
            return "this" === a || "else" === a || "case" === a || "void" === a || "with" === a || "enum" === a;case 5:
            return "while" === a || "break" === a || "catch" === a || "throw" === a || "const" === a || "yield" === a || "class" === a || "super" === a;case 6:
            return "return" === a || "typeof" === a || "delete" === a || "switch" === a || "export" === a || "import" === a;case 7:
            return "default" === a || "finally" === a || "extends" === a;case 8:
            return "function" === a || "continue" === a || "debugger" === a;case 10:
            return "instanceof" === a;default:
            return !1;}
      }function f(a, b) {
        return "null" === a || "true" === a || "false" === a || d(a, b);
      }function g(a, b) {
        return "null" === a || "true" === a || "false" === a || e(a, b);
      }function h(a) {
        return "eval" === a || "arguments" === a;
      }function i(a) {
        var b, c, d;if (0 === a.length) return !1;if (d = a.charCodeAt(0), !n.isIdentifierStartES5(d)) return !1;for (b = 1, c = a.length; b < c; ++b) if (d = a.charCodeAt(b), !n.isIdentifierPartES5(d)) return !1;return !0;
      }function j(a, b) {
        return 1024 * (a - 55296) + (b - 56320) + 65536;
      }function k(a) {
        var b, c, d, e, f;if (0 === a.length) return !1;for (f = n.isIdentifierStartES6, b = 0, c = a.length; b < c; ++b) {
          if (55296 <= (d = a.charCodeAt(b)) && d <= 56319) {
            if (++b >= c) return !1;if (!(56320 <= (e = a.charCodeAt(b)) && e <= 57343)) return !1;d = j(d, e);
          }if (!f(d)) return !1;f = n.isIdentifierPartES6;
        }return !0;
      }function l(a, b) {
        return i(a) && !f(a, b);
      }function m(a, b) {
        return k(a) && !g(a, b);
      }var n = a("1b9");c.exports = { isKeywordES5: d, isKeywordES6: e, isReservedWordES5: f, isReservedWordES6: g, isRestrictedWord: h, isIdentifierNameES5: i, isIdentifierNameES6: k, isIdentifierES5: l, isIdentifierES6: m };
    }();
  }), a.registerDynamic("104", ["1b8", "1b9", "1ba"], !0, function (a, b, c) {
    this || self;!function () {
      "use strict";
      b.ast = a("1b8"), b.code = a("1b9"), b.keyword = a("1ba");
    }();
  }), a.registerDynamic("1bb", ["15", "32", "17", "1b7", "104", "11", "1bc"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a, b) {
      var c = v.getBindingIdentifiers.keys[b.type];if (c) for (var d = 0; d < c.length; d++) {
        var e = c[d],
            f = b[e];if (Array.isArray(f)) {
          if (f.indexOf(a) >= 0) return !0;
        } else if (f === a) return !0;
      }return !1;
    }function g(a, b) {
      switch (b.type) {case "BindExpression":
          return b.object === a || b.callee === a;case "MemberExpression":case "JSXMemberExpression":
          return !(b.property !== a || !b.computed) || b.object === a;case "MetaProperty":
          return !1;case "ObjectProperty":
          if (b.key === a) return b.computed;case "VariableDeclarator":
          return b.id !== a;case "ArrowFunctionExpression":case "FunctionDeclaration":case "FunctionExpression":
          for (var c = b.params, d = Array.isArray(c), e = 0, c = d ? c : (0, u.default)(c);;) {
            var f;if (d) {
              if (e >= c.length) break;f = c[e++];
            } else {
              if (e = c.next(), e.done) break;f = e.value;
            }if (f === a) return !1;
          }return b.id !== a;case "ExportSpecifier":
          return !b.source && b.local === a;case "ExportNamespaceSpecifier":case "ExportDefaultSpecifier":
          return !1;case "JSXAttribute":
          return b.name !== a;case "ClassProperty":
          return b.key === a ? b.computed : b.value === a;case "ImportDefaultSpecifier":case "ImportNamespaceSpecifier":case "ImportSpecifier":
          return !1;case "ClassDeclaration":case "ClassExpression":
          return b.id !== a;case "ClassMethod":case "ObjectMethod":
          return b.key === a && b.computed;case "LabeledStatement":
          return !1;case "CatchClause":
          return b.param !== a;case "RestElement":
          return !1;case "AssignmentExpression":case "AssignmentPattern":
          return b.right === a;case "ObjectPattern":case "ArrayPattern":
          return !1;}return !0;
    }function h(a) {
      return "string" == typeof a && !x.default.keyword.isReservedWordES6(a, !0) && "await" !== a && x.default.keyword.isIdentifierNameES6(a);
    }function i(a) {
      return z.isVariableDeclaration(a) && ("var" !== a.kind || a[A.BLOCK_SCOPED_SYMBOL]);
    }function j(a) {
      return z.isFunctionDeclaration(a) || z.isClassDeclaration(a) || z.isLet(a);
    }function k(a) {
      return z.isVariableDeclaration(a, { kind: "var" }) && !a[A.BLOCK_SCOPED_SYMBOL];
    }function l(a) {
      return z.isImportDefaultSpecifier(a) || z.isIdentifier(a.imported || a.exported, { name: "default" });
    }function m(a, b) {
      return (!z.isBlockStatement(a) || !z.isFunction(b, { body: a })) && z.isScopable(a);
    }function n(a) {
      return !!z.isType(a.type, "Immutable") || !!z.isIdentifier(a) && "undefined" === a.name;
    }function o(a, b) {
      if ("object" !== (void 0 === a ? "undefined" : (0, s.default)(a)) || "object" !== (void 0 === a ? "undefined" : (0, s.default)(a)) || null == a || null == b) return a === b;if (a.type !== b.type) return !1;for (var c = (0, q.default)(z.NODE_FIELDS[a.type] || a.type), d = c, e = Array.isArray(d), f = 0, d = e ? d : (0, u.default)(d);;) {
        var g;if (e) {
          if (f >= d.length) break;g = d[f++];
        } else {
          if (f = d.next(), f.done) break;g = f.value;
        }var h = g;if ((0, s.default)(a[h]) !== (0, s.default)(b[h])) return !1;if (Array.isArray(a[h])) {
          if (!Array.isArray(b[h])) return !1;if (a[h].length !== b[h].length) return !1;for (var i = 0; i < a[h].length; i++) if (!o(a[h][i], b[h][i])) return !1;
        } else if (!o(a[h], b[h])) return !1;
      }return !0;
    }this || self;b.__esModule = !0;var p = a("15"),
        q = e(p),
        r = a("32"),
        s = e(r),
        t = a("17"),
        u = e(t);b.isBinding = f, b.isReferenced = g, b.isValidIdentifier = h, b.isLet = i, b.isBlockScoped = j, b.isVar = k, b.isSpecifierDefault = l, b.isScope = m, b.isImmutable = n, b.isNodesEquivalent = o;var v = a("1b7"),
        w = a("104"),
        x = e(w),
        y = a("11"),
        z = d(y),
        A = a("1bc");
  }), a.registerDynamic("1bd", ["cb", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("cb"));d(d.S, "Number", { MAX_SAFE_INTEGER: 9007199254740991 });
  }), a.registerDynamic("1be", ["1bd", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("1bd"), c.exports = 9007199254740991;
  }), a.registerDynamic("1bf", ["1be"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("1be"), __esModule: !0 };
  }), a.registerDynamic("c4", ["18a", "1c0", "7f"], !0, function (a, b, c) {
    function d(a) {
      if (!g(a) || e(a) != h) return !1;var b = f(a);if (null === b) return !0;var c = l.call(b, "constructor") && b.constructor;return "function" == typeof c && c instanceof c && k.call(c) == m;
    }var e = (this || self, a("18a")),
        f = a("1c0"),
        g = a("7f"),
        h = "[object Object]",
        i = Function.prototype,
        j = Object.prototype,
        k = i.toString,
        l = j.hasOwnProperty,
        m = k.call(Object);c.exports = d;
  }), a.registerDynamic("1c1", ["18a", "7f"], !0, function (a, b, c) {
    function d(a) {
      return f(a) && e(a) == g;
    }var e = (this || self, a("18a")),
        f = a("7f"),
        g = "[object RegExp]";c.exports = d;
  }), a.registerDynamic("ab", ["1c1", "97", "1c2"], !0, function (a, b, c) {
    var d = (this || self, a("1c1")),
        e = a("97"),
        f = a("1c2"),
        g = f && f.isRegExp,
        h = g ? e(g) : d;c.exports = h;
  }), a.registerDynamic("1c3", ["1bf", "60", "17", "c4", "ab", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a.key || a.property;return a.computed || z.isIdentifier(b) && (b = z.stringLiteral(b.name)), b;
    }function g(a, b) {
      function c(a) {
        for (var f = !1, g = [], h = a, i = Array.isArray(h), j = 0, h = i ? h : (0, t.default)(h);;) {
          var k;if (i) {
            if (j >= h.length) break;k = h[j++];
          } else {
            if (j = h.next(), j.done) break;k = j.value;
          }var l = k;if (z.isExpression(l)) g.push(l);else if (z.isExpressionStatement(l)) g.push(l.expression);else {
            if (z.isVariableDeclaration(l)) {
              if ("var" !== l.kind) return e = !0;for (var m = l.declarations, n = Array.isArray(m), o = 0, m = n ? m : (0, t.default)(m);;) {
                var p;if (n) {
                  if (o >= m.length) break;p = m[o++];
                } else {
                  if (o = m.next(), o.done) break;p = o.value;
                }var q = p,
                    r = z.getBindingIdentifiers(q);for (var s in r) d.push({ kind: l.kind, id: r[s] });q.init && g.push(z.assignmentExpression("=", q.id, q.init));
              }f = !0;continue;
            }if (z.isIfStatement(l)) {
              var u = l.consequent ? c([l.consequent]) : b.buildUndefinedNode(),
                  v = l.alternate ? c([l.alternate]) : b.buildUndefinedNode();if (!u || !v) return e = !0;g.push(z.conditionalExpression(l.test, u, v));
            } else {
              if (!z.isBlockStatement(l)) {
                if (z.isEmptyStatement(l)) {
                  f = !0;continue;
                }return e = !0;
              }g.push(c(l.body));
            }
          }f = !1;
        }return (f || 0 === g.length) && g.push(b.buildUndefinedNode()), 1 === g.length ? g[0] : z.sequenceExpression(g);
      }if (a && a.length) {
        var d = [],
            e = !1,
            f = c(a);if (!e) {
          for (var g = 0; g < d.length; g++) b.push(d[g]);return f;
        }
      }
    }function h(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a.key,
          c = void 0;return "method" === a.kind ? h.increment() + "" : (c = z.isIdentifier(b) ? b.name : z.isStringLiteral(b) ? (0, r.default)(b.value) : (0, r.default)(z.removePropertiesDeep(z.cloneDeep(b))), a.computed && (c = "[" + c + "]"), a.static && (c = "static:" + c), c);
    }function i(a) {
      return a += "", a = a.replace(/[^a-zA-Z0-9$_]/g, "-"), a = a.replace(/^[-0-9]+/, ""), a = a.replace(/[-\s]+(.)?/g, function (a, b) {
        return b ? b.toUpperCase() : "";
      }), z.isValidIdentifier(a) || (a = "_" + a), a || "_";
    }function j(a) {
      return a = i(a), "eval" !== a && "arguments" !== a || (a = "_" + a), a;
    }function k(a, b) {
      if (z.isStatement(a)) return a;var c = !1,
          d = void 0;if (z.isClass(a)) c = !0, d = "ClassDeclaration";else if (z.isFunction(a)) c = !0, d = "FunctionDeclaration";else if (z.isAssignmentExpression(a)) return z.expressionStatement(a);if (c && !a.id && (d = !1), !d) {
        if (b) return !1;throw new Error("cannot turn " + a.type + " to a statement");
      }return a.type = d, a;
    }function l(a) {
      if (z.isExpressionStatement(a) && (a = a.expression), z.isExpression(a)) return a;if (z.isClass(a) ? a.type = "ClassExpression" : z.isFunction(a) && (a.type = "FunctionExpression"), !z.isExpression(a)) throw new Error("cannot turn " + a.type + " to an expression");return a;
    }function m(a, b) {
      return z.isBlockStatement(a) ? a : (z.isEmptyStatement(a) && (a = []), Array.isArray(a) || (z.isStatement(a) || (a = z.isFunction(b) ? z.returnStatement(a) : z.expressionStatement(a)), a = [a]), z.blockStatement(a));
    }function n(a) {
      if (void 0 === a) return z.identifier("undefined");if (!0 === a || !1 === a) return z.booleanLiteral(a);if (null === a) return z.nullLiteral();if ("string" == typeof a) return z.stringLiteral(a);if ("number" == typeof a) return z.numericLiteral(a);if ((0, x.default)(a)) {
        var b = a.source,
            c = a.toString().match(/\/([a-z]+|)$/)[1];return z.regExpLiteral(b, c);
      }if (Array.isArray(a)) return z.arrayExpression(a.map(z.valueToNode));if ((0, v.default)(a)) {
        var d = [];for (var e in a) {
          var f = void 0;f = z.isValidIdentifier(e) ? z.identifier(e) : z.stringLiteral(e), d.push(z.objectProperty(f, z.valueToNode(a[e])));
        }return z.objectExpression(d);
      }throw new Error("don't know how to turn this value into a node");
    }this || self;b.__esModule = !0;var o = a("1bf"),
        p = e(o),
        q = a("60"),
        r = e(q),
        s = a("17"),
        t = e(s);b.toComputedKey = f, b.toSequenceExpression = g, b.toKeyAlias = h, b.toIdentifier = i, b.toBindingIdentifierName = j, b.toStatement = k, b.toExpression = l, b.toBlock = m, b.valueToNode = n;var u = a("c4"),
        v = e(u),
        w = a("ab"),
        x = e(w),
        y = a("11"),
        z = d(y);h.uid = 0, h.increment = function () {
      return h.uid >= p.default ? h.uid = 0 : h.uid++;
    };
  }), a.registerDynamic("1c4", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      var b = f(a);return 1 === b.length ? b[0] : i.unionTypeAnnotation(b);
    }function f(a) {
      for (var b = {}, c = {}, d = [], e = [], g = 0; g < a.length; g++) {
        var h = a[g];if (h && !(e.indexOf(h) >= 0)) {
          if (i.isAnyTypeAnnotation(h)) return [h];if (i.isFlowBaseAnnotation(h)) c[h.type] = h;else if (i.isUnionTypeAnnotation(h)) d.indexOf(h.types) < 0 && (a = a.concat(h.types), d.push(h.types));else if (i.isGenericTypeAnnotation(h)) {
            var j = h.id.name;if (b[j]) {
              var k = b[j];k.typeParameters ? h.typeParameters && (k.typeParameters.params = f(k.typeParameters.params.concat(h.typeParameters.params))) : k = h.typeParameters;
            } else b[j] = h;
          } else e.push(h);
        }
      }for (var l in c) e.push(c[l]);for (var m in b) e.push(b[m]);return e;
    }function g(a) {
      if ("string" === a) return i.stringTypeAnnotation();if ("number" === a) return i.numberTypeAnnotation();if ("undefined" === a) return i.voidTypeAnnotation();if ("boolean" === a) return i.booleanTypeAnnotation();if ("function" === a) return i.genericTypeAnnotation(i.identifier("Function"));if ("object" === a) return i.genericTypeAnnotation(i.identifier("Object"));if ("symbol" === a) return i.genericTypeAnnotation(i.identifier("Symbol"));throw new Error("Invalid typeof value");
    }this || self;b.__esModule = !0, b.createUnionTypeAnnotation = e, b.removeTypeDuplicates = f, b.createTypeAnnotationBasedOnTypeof = g;var h = a("11"),
        i = d(h);
  }), a.registerDynamic("1c5", [], !0, function (a, b, c) {
    "use strict";
    var d = this || self,
        e = d;c.exports = function a(b) {
      function c() {}function d() {
        return typeof e.foo;
      }c.prototype = b;var e = new c();return d(), d(), b;
    };
  }), a.registerDynamic("1c6", ["1c7"], !0, function (a, b, c) {
    function d() {
      this.__data__ = new e(), this.size = 0;
    }var e = (this || self, a("1c7"));c.exports = d;
  }), a.registerDynamic("1c8", [], !0, function (a, b, c) {
    function d(a) {
      var b = this.__data__,
          c = b.delete(a);return this.size = b.size, c;
    }this || self;c.exports = d;
  }), a.registerDynamic("1c9", [], !0, function (a, b, c) {
    function d(a) {
      return this.__data__.get(a);
    }this || self;c.exports = d;
  }), a.registerDynamic("1ca", [], !0, function (a, b, c) {
    function d(a) {
      return this.__data__.has(a);
    }this || self;c.exports = d;
  }), a.registerDynamic("1cb", ["1c7", "1cc", "13e"], !0, function (a, b, c) {
    function d(a, b) {
      var c = this.__data__;if (c instanceof e) {
        var d = c.__data__;if (!f || d.length < h - 1) return d.push([a, b]), this.size = ++c.size, this;c = this.__data__ = new g(d);
      }return c.set(a, b), this.size = c.size, this;
    }var e = (this || self, a("1c7")),
        f = a("1cc"),
        g = a("13e"),
        h = 200;c.exports = d;
  }), a.registerDynamic("6a", ["1c7", "1c6", "1c8", "1c9", "1ca", "1cb"], !0, function (a, b, c) {
    function d(a) {
      var b = this.__data__ = new e(a);this.size = b.size;
    }var e = (this || self, a("1c7")),
        f = a("1c6"),
        g = a("1c8"),
        h = a("1c9"),
        i = a("1ca"),
        j = a("1cb");d.prototype.clear = f, d.prototype.delete = g, d.prototype.get = h, d.prototype.has = i, d.prototype.set = j, c.exports = d;
  }), a.registerDynamic("1cd", [], !0, function (a, b, c) {
    function d(a, b) {
      for (var c = -1, d = null == a ? 0 : a.length; ++c < d && !1 !== b(a[c], c, a););return a;
    }this || self;c.exports = d;
  }), a.registerDynamic("1ce", ["bc", "42"], !0, function (a, b, c) {
    function d(a, b) {
      return a && e(b, f(b), a);
    }var e = (this || self, a("bc")),
        f = a("42");c.exports = d;
  }), a.registerDynamic("1cf", ["bc", "bd"], !0, function (a, b, c) {
    function d(a, b) {
      return a && e(b, f(b), a);
    }var e = (this || self, a("bc")),
        f = a("bd");c.exports = d;
  }), a.registerDynamic("bf", ["1d0"], !0, function (a, b, c) {
    function d(a, b) {
      if (b) return a.slice();var c = a.length,
          d = j ? j(c) : new a.constructor(c);return a.copy(d), d;
    }var e = (this || self, a("1d0")),
        f = "object" == typeof b && b && !b.nodeType && b,
        g = f && "object" == typeof c && c && !c.nodeType && c,
        h = g && g.exports === f,
        i = h ? e.Buffer : void 0,
        j = i ? i.allocUnsafe : void 0;c.exports = d;
  }), a.registerDynamic("c1", [], !0, function (a, b, c) {
    function d(a, b) {
      var c = -1,
          d = a.length;for (b || (b = Array(d)); ++c < d;) b[c] = a[c];return b;
    }this || self;c.exports = d;
  }), a.registerDynamic("1d1", ["bc", "1d2"], !0, function (a, b, c) {
    function d(a, b) {
      return e(a, f(a), b);
    }var e = (this || self, a("bc")),
        f = a("1d2");c.exports = d;
  }), a.registerDynamic("147", ["b9", "76"], !0, function (a, b, c) {
    function d(a, b, c) {
      var d = a[b];h.call(a, b) && f(d, c) && (void 0 !== c || b in a) || e(a, b, c);
    }var e = (this || self, a("b9")),
        f = a("76"),
        g = Object.prototype,
        h = g.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("151", ["1d3"], !0, function (a, b, c) {
    var d = (this || self, a("1d3")),
        e = function () {
      try {
        var a = d(Object, "defineProperty");return a({}, "", {}), a;
      } catch (a) {}
    }();c.exports = e;
  }), a.registerDynamic("b9", ["151"], !0, function (a, b, c) {
    function d(a, b, c) {
      "__proto__" == b && e ? e(a, b, { configurable: !0, enumerable: !0, value: c, writable: !0 }) : a[b] = c;
    }var e = (this || self, a("151"));c.exports = d;
  }), a.registerDynamic("bc", ["147", "b9"], !0, function (a, b, c) {
    function d(a, b, c, d) {
      var g = !c;c || (c = {});for (var h = -1, i = b.length; ++h < i;) {
        var j = b[h],
            k = d ? d(c[j], a[j], j, c, a) : void 0;void 0 === k && (k = a[j]), g ? f(c, j, k) : e(c, j, k);
      }return c;
    }var e = (this || self, a("147")),
        f = a("b9");c.exports = d;
  }), a.registerDynamic("1d4", ["bc", "1d5"], !0, function (a, b, c) {
    function d(a, b) {
      return e(a, f(a), b);
    }var e = (this || self, a("bc")),
        f = a("1d5");c.exports = d;
  }), a.registerDynamic("7a", ["1d6", "1d2", "42"], !0, function (a, b, c) {
    function d(a) {
      return e(a, g, f);
    }var e = (this || self, a("1d6")),
        f = a("1d2"),
        g = a("42");c.exports = d;
  }), a.registerDynamic("1d6", ["68", "50"], !0, function (a, b, c) {
    function d(a, b, c) {
      var d = b(a);return f(a) ? d : e(d, c(a));
    }var e = (this || self, a("68")),
        f = a("50");c.exports = d;
  }), a.registerDynamic("68", [], !0, function (a, b, c) {
    function d(a, b) {
      for (var c = -1, d = b.length, e = a.length; ++c < d;) a[e + c] = b[c];return a;
    }this || self;c.exports = d;
  }), a.registerDynamic("1d7", [], !0, function (a, b, c) {
    function d(a, b) {
      for (var c = -1, d = null == a ? 0 : a.length, e = 0, f = []; ++c < d;) {
        var g = a[c];b(g, c, a) && (f[e++] = g);
      }return f;
    }this || self;c.exports = d;
  }), a.registerDynamic("1d2", ["1d7", "1d8"], !0, function (a, b, c) {
    var d = (this || self, a("1d7")),
        e = a("1d8"),
        f = Object.prototype,
        g = f.propertyIsEnumerable,
        h = Object.getOwnPropertySymbols,
        i = h ? function (a) {
      return null == a ? [] : (a = Object(a), d(h(a), function (b) {
        return g.call(a, b);
      }));
    } : e;c.exports = i;
  }), a.registerDynamic("1d8", [], !0, function (a, b, c) {
    function d() {
      return [];
    }this || self;c.exports = d;
  }), a.registerDynamic("1d5", ["68", "1c0", "1d2", "1d8"], !0, function (a, b, c) {
    var d = (this || self, a("68")),
        e = a("1c0"),
        f = a("1d2"),
        g = a("1d8"),
        h = Object.getOwnPropertySymbols,
        i = h ? function (a) {
      for (var b = []; a;) d(b, f(a)), a = e(a);return b;
    } : g;c.exports = i;
  }), a.registerDynamic("1d9", [], !0, function (a, b, c) {
    function d(a) {
      var b = [];if (null != a) for (var c in Object(a)) b.push(c);return b;
    }this || self;c.exports = d;
  }), a.registerDynamic("1da", ["85", "148", "1d9"], !0, function (a, b, c) {
    function d(a) {
      if (!e(a)) return g(a);var b = f(a),
          c = [];for (var d in a) ("constructor" != d || !b && i.call(a, d)) && c.push(d);return c;
    }var e = (this || self, a("85")),
        f = a("148"),
        g = a("1d9"),
        h = Object.prototype,
        i = h.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("bd", ["1db", "1da", "41"], !0, function (a, b, c) {
    function d(a) {
      return g(a) ? e(a, !0) : f(a);
    }var e = (this || self, a("1db")),
        f = a("1da"),
        g = a("41");c.exports = d;
  }), a.registerDynamic("1dc", ["1d6", "1d5", "bd"], !0, function (a, b, c) {
    function d(a) {
      return e(a, g, f);
    }var e = (this || self, a("1d6")),
        f = a("1d5"),
        g = a("bd");c.exports = d;
  }), a.registerDynamic("1dd", ["1d3", "1d0"], !0, function (a, b, c) {
    var d = (this || self, a("1d3")),
        e = a("1d0"),
        f = d(e, "DataView");c.exports = f;
  }), a.registerDynamic("1de", ["1d3", "1d0"], !0, function (a, b, c) {
    var d = (this || self, a("1d3")),
        e = a("1d0"),
        f = d(e, "Promise");c.exports = f;
  }), a.registerDynamic("1df", ["1d3", "1d0"], !0, function (a, b, c) {
    var d = (this || self, a("1d3")),
        e = a("1d0"),
        f = d(e, "WeakMap");c.exports = f;
  }), a.registerDynamic("7c", ["1dd", "1cc", "1de", "1e0", "1df", "18a", "1e1"], !0, function (a, b, c) {
    var d = (this || self, a("1dd")),
        e = a("1cc"),
        f = a("1de"),
        g = a("1e0"),
        h = a("1df"),
        i = a("18a"),
        j = a("1e1"),
        k = "[object Map]",
        l = "[object Promise]",
        m = "[object Set]",
        n = "[object WeakMap]",
        o = "[object DataView]",
        p = j(d),
        q = j(e),
        r = j(f),
        s = j(g),
        t = j(h),
        u = i;(d && u(new d(new ArrayBuffer(1))) != o || e && u(new e()) != k || f && u(f.resolve()) != l || g && u(new g()) != m || h && u(new h()) != n) && (u = function (a) {
      var b = i(a),
          c = "[object Object]" == b ? a.constructor : void 0,
          d = c ? j(c) : "";if (d) switch (d) {case p:
          return o;case q:
          return k;case r:
          return l;case s:
          return m;case t:
          return n;}return b;
    }), c.exports = u;
  }), a.registerDynamic("1e2", [], !0, function (a, b, c) {
    function d(a) {
      var b = a.length,
          c = a.constructor(b);return b && "string" == typeof a[0] && f.call(a, "index") && (c.index = a.index, c.input = a.input), c;
    }var e = (this || self, Object.prototype),
        f = e.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("1e3", ["1e4"], !0, function (a, b, c) {
    function d(a, b) {
      var c = b ? e(a.buffer) : a.buffer;return new a.constructor(c, a.byteOffset, a.byteLength);
    }var e = (this || self, a("1e4"));c.exports = d;
  }), a.registerDynamic("1e5", [], !0, function (a, b, c) {
    function d(a, b) {
      return a.set(b[0], b[1]), a;
    }this || self;c.exports = d;
  }), a.registerDynamic("77", [], !0, function (a, b, c) {
    function d(a) {
      var b = -1,
          c = Array(a.size);return a.forEach(function (a, d) {
        c[++b] = [d, a];
      }), c;
    }this || self;c.exports = d;
  }), a.registerDynamic("1e6", ["1e5", "1e7", "77"], !0, function (a, b, c) {
    function d(a, b, c) {
      var d = b ? c(g(a), h) : g(a);return f(d, e, new a.constructor());
    }var e = (this || self, a("1e5")),
        f = a("1e7"),
        g = a("77"),
        h = 1;c.exports = d;
  }), a.registerDynamic("1e8", [], !0, function (a, b, c) {
    function d(a) {
      var b = new a.constructor(a.source, e.exec(a));return b.lastIndex = a.lastIndex, b;
    }var e = (this || self, /\w*$/);c.exports = d;
  }), a.registerDynamic("1e9", [], !0, function (a, b, c) {
    function d(a, b) {
      return a.add(b), a;
    }this || self;c.exports = d;
  }), a.registerDynamic("1e7", [], !0, function (a, b, c) {
    function d(a, b, c, d) {
      var e = -1,
          f = null == a ? 0 : a.length;for (d && f && (c = a[++e]); ++e < f;) c = b(c, a[e], e, a);return c;
    }this || self;c.exports = d;
  }), a.registerDynamic("1ea", ["1e9", "1e7", "78"], !0, function (a, b, c) {
    function d(a, b, c) {
      var d = b ? c(g(a), h) : g(a);return f(d, e, new a.constructor());
    }var e = (this || self, a("1e9")),
        f = a("1e7"),
        g = a("78"),
        h = 1;c.exports = d;
  });a.registerDynamic("1eb", ["65"], !0, function (a, b, c) {
    function d(a) {
      return g ? Object(g.call(a)) : {};
    }var e = (this || self, a("65")),
        f = e ? e.prototype : void 0,
        g = f ? f.valueOf : void 0;c.exports = d;
  }), a.registerDynamic("75", ["1d0"], !0, function (a, b, c) {
    var d = (this || self, a("1d0")),
        e = d.Uint8Array;c.exports = e;
  }), a.registerDynamic("1e4", ["75"], !0, function (a, b, c) {
    function d(a) {
      var b = new a.constructor(a.byteLength);return new e(b).set(new e(a)), b;
    }var e = (this || self, a("75"));c.exports = d;
  }), a.registerDynamic("c0", ["1e4"], !0, function (a, b, c) {
    function d(a, b) {
      var c = b ? e(a.buffer) : a.buffer;return new a.constructor(c, a.byteOffset, a.length);
    }var e = (this || self, a("1e4"));c.exports = d;
  }), a.registerDynamic("1ec", ["1e4", "1e3", "1e6", "1e8", "1ea", "1eb", "c0"], !0, function (a, b, c) {
    function d(a, b, c, d) {
      var E = a.constructor;switch (b) {case t:
          return e(a);case l:case m:
          return new E(+a);case u:
          return f(a, d);case v:case w:case x:case y:case z:case A:case B:case C:case D:
          return k(a, d);case n:
          return g(a, d, c);case o:case r:
          return new E(a);case p:
          return h(a);case q:
          return i(a, d, c);case s:
          return j(a);}
    }var e = (this || self, a("1e4")),
        f = a("1e3"),
        g = a("1e6"),
        h = a("1e8"),
        i = a("1ea"),
        j = a("1eb"),
        k = a("c0"),
        l = "[object Boolean]",
        m = "[object Date]",
        n = "[object Map]",
        o = "[object Number]",
        p = "[object RegExp]",
        q = "[object Set]",
        r = "[object String]",
        s = "[object Symbol]",
        t = "[object ArrayBuffer]",
        u = "[object DataView]",
        v = "[object Float32Array]",
        w = "[object Float64Array]",
        x = "[object Int8Array]",
        y = "[object Int16Array]",
        z = "[object Int32Array]",
        A = "[object Uint8Array]",
        B = "[object Uint8ClampedArray]",
        C = "[object Uint16Array]",
        D = "[object Uint32Array]";c.exports = d;
  }), a.registerDynamic("1ed", ["85"], !0, function (a, b, c) {
    var d = (this || self, a("85")),
        e = Object.create,
        f = function () {
      function a() {}return function (b) {
        if (!d(b)) return {};if (e) return e(b);a.prototype = b;var c = new a();return a.prototype = void 0, c;
      };
    }();c.exports = f;
  }), a.registerDynamic("1c0", ["1ee"], !0, function (a, b, c) {
    var d = (this || self, a("1ee")),
        e = d(Object.getPrototypeOf, Object);c.exports = e;
  }), a.registerDynamic("c2", ["1ed", "1c0", "148"], !0, function (a, b, c) {
    function d(a) {
      return "function" != typeof a.constructor || g(a) ? {} : e(f(a));
    }var e = (this || self, a("1ed")),
        f = a("1c0"),
        g = a("148");c.exports = d;
  }), a.registerDynamic("1ef", [], !0, function (a, b, c) {
    function d(a, b) {
      for (var c = -1, d = Array(a); ++c < a;) d[c] = b(c);return d;
    }this || self;c.exports = d;
  }), a.registerDynamic("1f0", ["18a", "7f"], !0, function (a, b, c) {
    function d(a) {
      return f(a) && e(a) == g;
    }var e = (this || self, a("18a")),
        f = a("7f"),
        g = "[object Arguments]";c.exports = d;
  }), a.registerDynamic("66", ["1f0", "7f"], !0, function (a, b, c) {
    var d = (this || self, a("1f0")),
        e = a("7f"),
        f = Object.prototype,
        g = f.hasOwnProperty,
        h = f.propertyIsEnumerable,
        i = d(function () {
      return arguments;
    }()) ? d : function (a) {
      return e(a) && g.call(a, "callee") && !h.call(a, "callee");
    };c.exports = i;
  }), a.registerDynamic("50", [], !0, function (a, b, c) {
    var d = (this || self, Array.isArray);c.exports = d;
  }), a.registerDynamic("1f1", [], !0, function (a, b, c) {
    function d() {
      return !1;
    }this || self;c.exports = d;
  }), a.registerDynamic("7d", ["1d0", "1f1"], !0, function (a, b, c) {
    var d = (this || self, a("1d0")),
        e = a("1f1"),
        f = "object" == typeof b && b && !b.nodeType && b,
        g = f && "object" == typeof c && c && !c.nodeType && c,
        h = g && g.exports === f,
        i = h ? d.Buffer : void 0,
        j = i ? i.isBuffer : void 0,
        k = j || e;c.exports = k;
  }), a.registerDynamic("141", [], !0, function (a, b, c) {
    function d(a, b) {
      return !!(b = null == b ? e : b) && ("number" == typeof a || f.test(a)) && a > -1 && a % 1 == 0 && a < b;
    }var e = (this || self, 9007199254740991),
        f = /^(?:0|[1-9]\d*)$/;c.exports = d;
  }), a.registerDynamic("7f", [], !0, function (a, b, c) {
    function d(a) {
      return null != a && "object" == typeof a;
    }this || self;c.exports = d;
  }), a.registerDynamic("1f2", ["18a", "142", "7f"], !0, function (a, b, c) {
    function d(a) {
      return g(a) && f(a.length) && !!h[e(a)];
    }var e = (this || self, a("18a")),
        f = a("142"),
        g = a("7f"),
        h = {};h["[object Float32Array]"] = h["[object Float64Array]"] = h["[object Int8Array]"] = h["[object Int16Array]"] = h["[object Int32Array]"] = h["[object Uint8Array]"] = h["[object Uint8ClampedArray]"] = h["[object Uint16Array]"] = h["[object Uint32Array]"] = !0, h["[object Arguments]"] = h["[object Array]"] = h["[object ArrayBuffer]"] = h["[object Boolean]"] = h["[object DataView]"] = h["[object Date]"] = h["[object Error]"] = h["[object Function]"] = h["[object Map]"] = h["[object Number]"] = h["[object Object]"] = h["[object RegExp]"] = h["[object Set]"] = h["[object String]"] = h["[object WeakMap]"] = !1, c.exports = d;
  }), a.registerDynamic("97", [], !0, function (a, b, c) {
    function d(a) {
      return function (b) {
        return a(b);
      };
    }this || self;c.exports = d;
  }), a.registerDynamic("1c2", ["1f3"], !0, function (a, b, c) {
    var d = (this || self, a("1f3")),
        e = "object" == typeof b && b && !b.nodeType && b,
        f = e && "object" == typeof c && c && !c.nodeType && c,
        g = f && f.exports === e,
        h = g && d.process,
        i = function () {
      try {
        return h && h.binding && h.binding("util");
      } catch (a) {}
    }();c.exports = i;
  }), a.registerDynamic("7e", ["1f2", "97", "1c2"], !0, function (a, b, c) {
    var d = (this || self, a("1f2")),
        e = a("97"),
        f = a("1c2"),
        g = f && f.isTypedArray,
        h = g ? e(g) : d;c.exports = h;
  }), a.registerDynamic("1db", ["1ef", "66", "50", "7d", "141", "7e"], !0, function (a, b, c) {
    function d(a, b) {
      var c = g(a),
          d = !c && f(a),
          k = !c && !d && h(a),
          m = !c && !d && !k && j(a),
          n = c || d || k || m,
          o = n ? e(a.length, String) : [],
          p = o.length;for (var q in a) !b && !l.call(a, q) || n && ("length" == q || k && ("offset" == q || "parent" == q) || m && ("buffer" == q || "byteLength" == q || "byteOffset" == q) || i(q, p)) || o.push(q);return o;
    }var e = (this || self, a("1ef")),
        f = a("66"),
        g = a("50"),
        h = a("7d"),
        i = a("141"),
        j = a("7e"),
        k = Object.prototype,
        l = k.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("148", [], !0, function (a, b, c) {
    function d(a) {
      var b = a && a.constructor;return a === ("function" == typeof b && b.prototype || e);
    }var e = (this || self, Object.prototype);c.exports = d;
  }), a.registerDynamic("1ee", [], !0, function (a, b, c) {
    function d(a, b) {
      return function (c) {
        return a(b(c));
      };
    }this || self;c.exports = d;
  }), a.registerDynamic("1f4", ["1ee"], !0, function (a, b, c) {
    var d = (this || self, a("1ee")),
        e = d(Object.keys, Object);c.exports = e;
  }), a.registerDynamic("1f5", ["148", "1f4"], !0, function (a, b, c) {
    function d(a) {
      if (!e(a)) return f(a);var b = [];for (var c in Object(a)) h.call(a, c) && "constructor" != c && b.push(c);return b;
    }var e = (this || self, a("148")),
        f = a("1f4"),
        g = Object.prototype,
        h = g.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("142", [], !0, function (a, b, c) {
    function d(a) {
      return "number" == typeof a && a > -1 && a % 1 == 0 && a <= e;
    }var e = (this || self, 9007199254740991);c.exports = d;
  }), a.registerDynamic("41", ["c3", "142"], !0, function (a, b, c) {
    function d(a) {
      return null != a && f(a.length) && !e(a);
    }var e = (this || self, a("c3")),
        f = a("142");c.exports = d;
  }), a.registerDynamic("42", ["1db", "1f5", "41"], !0, function (a, b, c) {
    function d(a) {
      return g(a) ? e(a) : f(a);
    }var e = (this || self, a("1db")),
        f = a("1f5"),
        g = a("41");c.exports = d;
  }), a.registerDynamic("b6", ["6a", "1cd", "147", "1ce", "1cf", "bf", "c1", "1d1", "1d4", "7a", "1dc", "7c", "1e2", "1ec", "c2", "50", "7d", "85", "42"], !0, function (a, b, c) {
    function d(a, b, c, F, G, H) {
      var I,
          J = b & x,
          K = b & y,
          L = b & z;if (c && (I = G ? c(a, F, G, H) : c(a)), void 0 !== I) return I;if (!v(a)) return a;var M = t(a);if (M) {
        if (I = q(a), !J) return k(a, I);
      } else {
        var N = p(a),
            O = N == B || N == C;if (u(a)) return j(a, J);if (N == D || N == A || O && !G) {
          if (I = K || O ? {} : s(a), !J) return K ? m(a, i(I, a)) : l(a, h(I, a));
        } else {
          if (!E[N]) return G ? a : {};I = r(a, N, d, J);
        }
      }H || (H = new e());var P = H.get(a);if (P) return P;H.set(a, I);var Q = L ? K ? o : n : K ? keysIn : w,
          R = M ? void 0 : Q(a);return f(R || a, function (e, f) {
        R && (f = e, e = a[f]), g(I, f, d(e, b, c, f, a, H));
      }), I;
    }var e = (this || self, a("6a")),
        f = a("1cd"),
        g = a("147"),
        h = a("1ce"),
        i = a("1cf"),
        j = a("bf"),
        k = a("c1"),
        l = a("1d1"),
        m = a("1d4"),
        n = a("7a"),
        o = a("1dc"),
        p = a("7c"),
        q = a("1e2"),
        r = a("1ec"),
        s = a("c2"),
        t = a("50"),
        u = a("7d"),
        v = a("85"),
        w = a("42"),
        x = 1,
        y = 2,
        z = 4,
        A = "[object Arguments]",
        B = "[object Function]",
        C = "[object GeneratorFunction]",
        D = "[object Object]",
        E = {};E[A] = E["[object Array]"] = E["[object ArrayBuffer]"] = E["[object DataView]"] = E["[object Boolean]"] = E["[object Date]"] = E["[object Float32Array]"] = E["[object Float64Array]"] = E["[object Int8Array]"] = E["[object Int16Array]"] = E["[object Int32Array]"] = E["[object Map]"] = E["[object Number]"] = E[D] = E["[object RegExp]"] = E["[object Set]"] = E["[object String]"] = E["[object Symbol]"] = E["[object Uint8Array]"] = E["[object Uint8ClampedArray]"] = E["[object Uint16Array]"] = E["[object Uint32Array]"] = !0, E["[object Error]"] = E[B] = E["[object WeakMap]"] = !1, c.exports = d;
  }), a.registerDynamic("d3", ["b6"], !0, function (a, b, c) {
    function d(a) {
      return e(a, f);
    }var e = (this || self, a("b6")),
        f = 4;c.exports = d;
  }), a.registerDynamic("1f6", ["1f7"], !0, function (a, b, c) {
    function d() {
      this.__data__ = e ? e(null) : {}, this.size = 0;
    }var e = (this || self, a("1f7"));c.exports = d;
  }), a.registerDynamic("1f8", [], !0, function (a, b, c) {
    function d(a) {
      var b = this.has(a) && delete this.__data__[a];return this.size -= b ? 1 : 0, b;
    }this || self;c.exports = d;
  }), a.registerDynamic("1f9", ["1f7"], !0, function (a, b, c) {
    function d(a) {
      var b = this.__data__;if (e) {
        var c = b[a];return c === f ? void 0 : c;
      }return h.call(b, a) ? b[a] : void 0;
    }var e = (this || self, a("1f7")),
        f = "__lodash_hash_undefined__",
        g = Object.prototype,
        h = g.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("1fa", ["1f7"], !0, function (a, b, c) {
    function d(a) {
      var b = this.__data__;return e ? void 0 !== b[a] : g.call(b, a);
    }var e = (this || self, a("1f7")),
        f = Object.prototype,
        g = f.hasOwnProperty;c.exports = d;
  }), a.registerDynamic("1f7", ["1d3"], !0, function (a, b, c) {
    var d = (this || self, a("1d3")),
        e = d(Object, "create");c.exports = e;
  }), a.registerDynamic("1fb", ["1f7"], !0, function (a, b, c) {
    function d(a, b) {
      var c = this.__data__;return this.size += this.has(a) ? 0 : 1, c[a] = e && void 0 === b ? f : b, this;
    }var e = (this || self, a("1f7")),
        f = "__lodash_hash_undefined__";c.exports = d;
  }), a.registerDynamic("1fc", ["1f6", "1f8", "1f9", "1fa", "1fb"], !0, function (a, b, c) {
    function d(a) {
      var b = -1,
          c = null == a ? 0 : a.length;for (this.clear(); ++b < c;) {
        var d = a[b];this.set(d[0], d[1]);
      }
    }var e = (this || self, a("1f6")),
        f = a("1f8"),
        g = a("1f9"),
        h = a("1fa"),
        i = a("1fb");d.prototype.clear = e, d.prototype.delete = f, d.prototype.get = g, d.prototype.has = h, d.prototype.set = i, c.exports = d;
  }), a.registerDynamic("1fd", [], !0, function (a, b, c) {
    function d() {
      this.__data__ = [], this.size = 0;
    }this || self;c.exports = d;
  }), a.registerDynamic("1fe", ["1ff"], !0, function (a, b, c) {
    function d(a) {
      var b = this.__data__,
          c = e(b, a);return !(c < 0) && (c == b.length - 1 ? b.pop() : g.call(b, c, 1), --this.size, !0);
    }var e = (this || self, a("1ff")),
        f = Array.prototype,
        g = f.splice;c.exports = d;
  }), a.registerDynamic("200", ["1ff"], !0, function (a, b, c) {
    function d(a) {
      var b = this.__data__,
          c = e(b, a);return c < 0 ? void 0 : b[c][1];
    }var e = (this || self, a("1ff"));c.exports = d;
  }), a.registerDynamic("201", ["1ff"], !0, function (a, b, c) {
    function d(a) {
      return e(this.__data__, a) > -1;
    }var e = (this || self, a("1ff"));c.exports = d;
  }), a.registerDynamic("76", [], !0, function (a, b, c) {
    function d(a, b) {
      return a === b || a !== a && b !== b;
    }this || self;c.exports = d;
  }), a.registerDynamic("1ff", ["76"], !0, function (a, b, c) {
    function d(a, b) {
      for (var c = a.length; c--;) if (e(a[c][0], b)) return c;return -1;
    }var e = (this || self, a("76"));c.exports = d;
  }), a.registerDynamic("202", ["1ff"], !0, function (a, b, c) {
    function d(a, b) {
      var c = this.__data__,
          d = e(c, a);return d < 0 ? (++this.size, c.push([a, b])) : c[d][1] = b, this;
    }var e = (this || self, a("1ff"));c.exports = d;
  }), a.registerDynamic("1c7", ["1fd", "1fe", "200", "201", "202"], !0, function (a, b, c) {
    function d(a) {
      var b = -1,
          c = null == a ? 0 : a.length;for (this.clear(); ++b < c;) {
        var d = a[b];this.set(d[0], d[1]);
      }
    }var e = (this || self, a("1fd")),
        f = a("1fe"),
        g = a("200"),
        h = a("201"),
        i = a("202");d.prototype.clear = e, d.prototype.delete = f, d.prototype.get = g, d.prototype.has = h, d.prototype.set = i, c.exports = d;
  }), a.registerDynamic("1cc", ["1d3", "1d0"], !0, function (a, b, c) {
    var d = (this || self, a("1d3")),
        e = a("1d0"),
        f = d(e, "Map");c.exports = f;
  }), a.registerDynamic("203", ["1fc", "1c7", "1cc"], !0, function (a, b, c) {
    function d() {
      this.size = 0, this.__data__ = { hash: new e(), map: new (g || f)(), string: new e() };
    }var e = (this || self, a("1fc")),
        f = a("1c7"),
        g = a("1cc");c.exports = d;
  }), a.registerDynamic("204", ["205"], !0, function (a, b, c) {
    function d(a) {
      var b = e(this, a).delete(a);return this.size -= b ? 1 : 0, b;
    }var e = (this || self, a("205"));c.exports = d;
  }), a.registerDynamic("206", ["205"], !0, function (a, b, c) {
    function d(a) {
      return e(this, a).get(a);
    }var e = (this || self, a("205"));c.exports = d;
  }), a.registerDynamic("207", ["205"], !0, function (a, b, c) {
    function d(a) {
      return e(this, a).has(a);
    }var e = (this || self, a("205"));c.exports = d;
  }), a.registerDynamic("208", [], !0, function (a, b, c) {
    function d(a) {
      var b = typeof a;return "string" == b || "number" == b || "symbol" == b || "boolean" == b ? "__proto__" !== a : null === a;
    }this || self;c.exports = d;
  }), a.registerDynamic("205", ["208"], !0, function (a, b, c) {
    function d(a, b) {
      var c = a.__data__;return e(b) ? c["string" == typeof b ? "string" : "hash"] : c.map;
    }var e = (this || self, a("208"));c.exports = d;
  }), a.registerDynamic("209", ["205"], !0, function (a, b, c) {
    function d(a, b) {
      var c = e(this, a),
          d = c.size;return c.set(a, b), this.size += c.size == d ? 0 : 1, this;
    }var e = (this || self, a("205"));c.exports = d;
  }), a.registerDynamic("13e", ["203", "204", "206", "207", "209"], !0, function (a, b, c) {
    function d(a) {
      var b = -1,
          c = null == a ? 0 : a.length;for (this.clear(); ++b < c;) {
        var d = a[b];this.set(d[0], d[1]);
      }
    }var e = (this || self, a("203")),
        f = a("204"),
        g = a("206"),
        h = a("207"),
        i = a("209");d.prototype.clear = e, d.prototype.delete = f, d.prototype.get = g, d.prototype.has = h, d.prototype.set = i, c.exports = d;
  }), a.registerDynamic("20a", [], !0, function (a, b, c) {
    function d(a) {
      return this.__data__.set(a, e), this;
    }var e = (this || self, "__lodash_hash_undefined__");c.exports = d;
  }), a.registerDynamic("20b", [], !0, function (a, b, c) {
    function d(a) {
      return this.__data__.has(a);
    }this || self;c.exports = d;
  }), a.registerDynamic("72", ["13e", "20a", "20b"], !0, function (a, b, c) {
    function d(a) {
      var b = -1,
          c = null == a ? 0 : a.length;for (this.__data__ = new e(); ++b < c;) this.add(a[b]);
    }var e = (this || self, a("13e")),
        f = a("20a"),
        g = a("20b");d.prototype.add = d.prototype.push = f, d.prototype.has = g, c.exports = d;
  }), a.registerDynamic("3c", [], !0, function (a, b, c) {
    function d(a, b, c, d) {
      for (var e = a.length, f = c + (d ? 1 : -1); d ? f-- : ++f < e;) if (b(a[f], f, a)) return f;return -1;
    }this || self;c.exports = d;
  }), a.registerDynamic("20c", [], !0, function (a, b, c) {
    function d(a) {
      return a !== a;
    }this || self;c.exports = d;
  }), a.registerDynamic("20d", [], !0, function (a, b, c) {
    function d(a, b, c) {
      for (var d = c - 1, e = a.length; ++d < e;) if (a[d] === b) return d;return -1;
    }this || self;c.exports = d;
  }), a.registerDynamic("12c", ["3c", "20c", "20d"], !0, function (a, b, c) {
    function d(a, b, c) {
      return b === b ? g(a, b, c) : e(a, f, c);
    }var e = (this || self, a("3c")),
        f = a("20c"),
        g = a("20d");c.exports = d;
  }), a.registerDynamic("20e", ["12c"], !0, function (a, b, c) {
    function d(a, b) {
      return !!(null == a ? 0 : a.length) && e(a, b, 0) > -1;
    }var e = (this || self, a("12c"));c.exports = d;
  }), a.registerDynamic("20f", [], !0, function (a, b, c) {
    function d(a, b, c) {
      for (var d = -1, e = null == a ? 0 : a.length; ++d < e;) if (c(b, a[d])) return !0;return !1;
    }this || self;c.exports = d;
  }), a.registerDynamic("73", [], !0, function (a, b, c) {
    function d(a, b) {
      return a.has(b);
    }this || self;c.exports = d;
  }), a.registerDynamic("65", ["1d0"], !0, function (a, b, c) {
    var d = (this || self, a("1d0")),
        e = d.Symbol;c.exports = e;
  }), a.registerDynamic("210", ["65"], !0, function (a, b, c) {
    function d(a) {
      var b = g.call(a, i),
          c = a[i];try {
        a[i] = void 0;var d = !0;
      } catch (a) {}var e = h.call(a);return d && (b ? a[i] = c : delete a[i]), e;
    }var e = (this || self, a("65")),
        f = Object.prototype,
        g = f.hasOwnProperty,
        h = f.toString,
        i = e ? e.toStringTag : void 0;c.exports = d;
  }), a.registerDynamic("211", [], !0, function (a, b, c) {
    function d(a) {
      return f.call(a);
    }var e = (this || self, Object.prototype),
        f = e.toString;c.exports = d;
  }), a.registerDynamic("18a", ["65", "210", "211"], !0, function (a, b, c) {
    function d(a) {
      return null == a ? void 0 === a ? i : h : j && j in Object(a) ? f(a) : g(a);
    }var e = (this || self, a("65")),
        f = a("210"),
        g = a("211"),
        h = "[object Null]",
        i = "[object Undefined]",
        j = e ? e.toStringTag : void 0;c.exports = d;
  }), a.registerDynamic("c3", ["18a", "85"], !0, function (a, b, c) {
    function d(a) {
      if (!f(a)) return !1;var b = e(a);return b == h || b == i || b == g || b == j;
    }var e = (this || self, a("18a")),
        f = a("85"),
        g = "[object AsyncFunction]",
        h = "[object Function]",
        i = "[object GeneratorFunction]",
        j = "[object Proxy]";c.exports = d;
  }), a.registerDynamic("212", ["1d0"], !0, function (a, b, c) {
    var d = (this || self, a("1d0")),
        e = d["__core-js_shared__"];c.exports = e;
  }), a.registerDynamic("213", ["212"], !0, function (a, b, c) {
    function d(a) {
      return !!f && f in a;
    }var e = (this || self, a("212")),
        f = function () {
      var a = /[^.]+$/.exec(e && e.keys && e.keys.IE_PROTO || "");return a ? "Symbol(src)_1." + a : "";
    }();c.exports = d;
  }), a.registerDynamic("85", [], !0, function (a, b, c) {
    function d(a) {
      var b = typeof a;return null != a && ("object" == b || "function" == b);
    }this || self;c.exports = d;
  }), a.registerDynamic("1e1", [], !0, function (a, b, c) {
    function d(a) {
      if (null != a) {
        try {
          return f.call(a);
        } catch (a) {}try {
          return a + "";
        } catch (a) {}
      }return "";
    }var e = (this || self, Function.prototype),
        f = e.toString;c.exports = d;
  }), a.registerDynamic("214", ["c3", "213", "85", "1e1"], !0, function (a, b, c) {
    function d(a) {
      return !(!g(a) || f(a)) && (e(a) ? o : j).test(h(a));
    }var e = (this || self, a("c3")),
        f = a("213"),
        g = a("85"),
        h = a("1e1"),
        i = /[\\^$.*+?()[\]{}|]/g,
        j = /^\[object .+?Constructor\]$/,
        k = Function.prototype,
        l = Object.prototype,
        m = k.toString,
        n = l.hasOwnProperty,
        o = RegExp("^" + m.call(n).replace(i, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");c.exports = d;
  }), a.registerDynamic("215", [], !0, function (a, b, c) {
    function d(a, b) {
      return null == a ? void 0 : a[b];
    }this || self;c.exports = d;
  }), a.registerDynamic("1d3", ["214", "215"], !0, function (a, b, c) {
    function d(a, b) {
      var c = f(a, b);return e(c) ? c : void 0;
    }var e = (this || self, a("214")),
        f = a("215");c.exports = d;
  }), a.registerDynamic("1f3", [], !0, function (a, b, c) {
    var d = this || self,
        e = "object" == typeof d && d && d.Object === Object && d;c.exports = e;
  }), a.registerDynamic("1d0", ["1f3"], !0, function (a, b, c) {
    var d = (this || self, a("1f3")),
        e = "object" == typeof self && self && self.Object === Object && self,
        f = d || e || Function("return this")();c.exports = f;
  }), a.registerDynamic("1e0", ["1d3", "1d0"], !0, function (a, b, c) {
    var d = (this || self, a("1d3")),
        e = a("1d0"),
        f = d(e, "Set");c.exports = f;
  }), a.registerDynamic("216", [], !0, function (a, b, c) {
    function d() {}this || self;c.exports = d;
  }), a.registerDynamic("217", ["1e0", "216", "78"], !0, function (a, b, c) {
    var d = (this || self, a("1e0")),
        e = a("216"),
        f = a("78"),
        g = 1 / 0,
        h = d && 1 / f(new d([, -0]))[1] == g ? function (a) {
      return new d(a);
    } : e;c.exports = h;
  }), a.registerDynamic("78", [], !0, function (a, b, c) {
    function d(a) {
      var b = -1,
          c = Array(a.size);return a.forEach(function (a) {
        c[++b] = a;
      }), c;
    }this || self;c.exports = d;
  }), a.registerDynamic("218", ["72", "20e", "20f", "73", "217", "78"], !0, function (a, b, c) {
    function d(a, b, c) {
      var d = -1,
          l = f,
          m = a.length,
          n = !0,
          o = [],
          p = o;if (c) n = !1, l = g;else if (m >= k) {
        var q = b ? null : i(a);if (q) return j(q);n = !1, l = h, p = new e();
      } else p = b ? [] : o;a: for (; ++d < m;) {
        var r = a[d],
            s = b ? b(r) : r;if (r = c || 0 !== r ? r : 0, n && s === s) {
          for (var t = p.length; t--;) if (p[t] === s) continue a;b && p.push(s), o.push(r);
        } else l(p, s, c) || (p !== o && p.push(s), o.push(r));
      }return o;
    }var e = (this || self, a("72")),
        f = a("20e"),
        g = a("20f"),
        h = a("73"),
        i = a("217"),
        j = a("78"),
        k = 200;c.exports = d;
  }), a.registerDynamic("219", ["218"], !0, function (a, b, c) {
    function d(a) {
      return a && a.length ? e(a) : [];
    }var e = (this || self, a("218"));c.exports = d;
  }), a.registerDynamic("21a", ["1b0", "39", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("1b0"), c.exports = a("39").Symbol.for;
  }), a.registerDynamic("21b", ["21a"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("21a"), __esModule: !0 };
  }), a.registerDynamic("1bc", ["21b"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0, b.NOT_LOCAL_BINDING = b.BLOCK_SCOPED_SYMBOL = b.INHERIT_KEYS = b.UNARY_OPERATORS = b.STRING_UNARY_OPERATORS = b.NUMBER_UNARY_OPERATORS = b.BOOLEAN_UNARY_OPERATORS = b.BINARY_OPERATORS = b.NUMBER_BINARY_OPERATORS = b.BOOLEAN_BINARY_OPERATORS = b.COMPARISON_BINARY_OPERATORS = b.EQUALITY_BINARY_OPERATORS = b.BOOLEAN_NUMBER_BINARY_OPERATORS = b.UPDATE_OPERATORS = b.LOGICAL_OPERATORS = b.COMMENT_KEYS = b.FOR_INIT_KEYS = b.FLATTENABLE_KEYS = b.STATEMENT_OR_BLOCK_KEYS = void 0;var e = a("21b"),
        f = d(e),
        g = (b.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"], b.FLATTENABLE_KEYS = ["body", "expressions"], b.FOR_INIT_KEYS = ["left", "init"], b.COMMENT_KEYS = ["leadingComments", "trailingComments", "innerComments"], b.LOGICAL_OPERATORS = ["||", "&&"], b.UPDATE_OPERATORS = ["++", "--"], b.BOOLEAN_NUMBER_BINARY_OPERATORS = [">", "<", ">=", "<="]),
        h = b.EQUALITY_BINARY_OPERATORS = ["==", "===", "!=", "!=="],
        i = b.COMPARISON_BINARY_OPERATORS = [].concat(h, ["in", "instanceof"]),
        j = b.BOOLEAN_BINARY_OPERATORS = [].concat(i, g),
        k = b.NUMBER_BINARY_OPERATORS = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"],
        l = (b.BINARY_OPERATORS = ["+"].concat(k, j), b.BOOLEAN_UNARY_OPERATORS = ["delete", "!"]),
        m = b.NUMBER_UNARY_OPERATORS = ["+", "-", "++", "--", "~"],
        n = b.STRING_UNARY_OPERATORS = ["typeof"];b.UNARY_OPERATORS = ["void"].concat(l, m, n), b.INHERIT_KEYS = { optional: ["typeAnnotation", "typeParameters", "returnType"], force: ["start", "loc", "end"] }, b.BLOCK_SCOPED_SYMBOL = (0, f.default)("var used to be block scoped"), b.NOT_LOCAL_BINDING = (0, f.default)("should not be considered a local binding");
  }), a.registerDynamic("21c", ["11", "1bc", "21d"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }function e(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }var f = (this || self, a("11")),
        g = e(f),
        h = a("1bc"),
        i = a("21d"),
        j = d(i);(0, j.default)("ArrayExpression", { fields: { elements: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeOrValueType)("null", "Expression", "SpreadElement"))), default: [] } }, visitor: ["elements"], aliases: ["Expression"] }), (0, j.default)("AssignmentExpression", { fields: { operator: { validate: (0, i.assertValueType)("string") }, left: { validate: (0, i.assertNodeType)("LVal") }, right: { validate: (0, i.assertNodeType)("Expression") } }, builder: ["operator", "left", "right"], visitor: ["left", "right"], aliases: ["Expression"] }), (0, j.default)("BinaryExpression", { builder: ["operator", "left", "right"], fields: { operator: { validate: i.assertOneOf.apply(void 0, h.BINARY_OPERATORS) }, left: { validate: (0, i.assertNodeType)("Expression") }, right: { validate: (0, i.assertNodeType)("Expression") } }, visitor: ["left", "right"], aliases: ["Binary", "Expression"] }), (0, j.default)("Directive", { visitor: ["value"], fields: { value: { validate: (0, i.assertNodeType)("DirectiveLiteral") } } }), (0, j.default)("DirectiveLiteral", { builder: ["value"], fields: { value: { validate: (0, i.assertValueType)("string") } } }), (0, j.default)("BlockStatement", { builder: ["body", "directives"], visitor: ["directives", "body"], fields: { directives: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Directive"))), default: [] }, body: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Statement"))) } }, aliases: ["Scopable", "BlockParent", "Block", "Statement"] }), (0, j.default)("BreakStatement", { visitor: ["label"], fields: { label: { validate: (0, i.assertNodeType)("Identifier"), optional: !0 } }, aliases: ["Statement", "Terminatorless", "CompletionStatement"] }), (0, j.default)("CallExpression", { visitor: ["callee", "arguments"], fields: { callee: { validate: (0, i.assertNodeType)("Expression") }, arguments: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Expression", "SpreadElement"))) } }, aliases: ["Expression"] }), (0, j.default)("CatchClause", { visitor: ["param", "body"], fields: { param: { validate: (0, i.assertNodeType)("Identifier") }, body: { validate: (0, i.assertNodeType)("BlockStatement") } }, aliases: ["Scopable"] }), (0, j.default)("ConditionalExpression", { visitor: ["test", "consequent", "alternate"], fields: { test: { validate: (0, i.assertNodeType)("Expression") }, consequent: { validate: (0, i.assertNodeType)("Expression") }, alternate: { validate: (0, i.assertNodeType)("Expression") } }, aliases: ["Expression", "Conditional"] }), (0, j.default)("ContinueStatement", { visitor: ["label"], fields: { label: { validate: (0, i.assertNodeType)("Identifier"), optional: !0 } }, aliases: ["Statement", "Terminatorless", "CompletionStatement"] }), (0, j.default)("DebuggerStatement", { aliases: ["Statement"] }), (0, j.default)("DoWhileStatement", { visitor: ["test", "body"], fields: { test: { validate: (0, i.assertNodeType)("Expression") }, body: { validate: (0, i.assertNodeType)("Statement") } }, aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"] }), (0, j.default)("EmptyStatement", { aliases: ["Statement"] }), (0, j.default)("ExpressionStatement", { visitor: ["expression"], fields: { expression: { validate: (0, i.assertNodeType)("Expression") } }, aliases: ["Statement", "ExpressionWrapper"] }), (0, j.default)("File", { builder: ["program", "comments", "tokens"], visitor: ["program"], fields: { program: { validate: (0, i.assertNodeType)("Program") } } }), (0, j.default)("ForInStatement", { visitor: ["left", "right", "body"], aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"], fields: { left: { validate: (0, i.assertNodeType)("VariableDeclaration", "LVal") }, right: { validate: (0, i.assertNodeType)("Expression") }, body: { validate: (0, i.assertNodeType)("Statement") } } }), (0, j.default)("ForStatement", { visitor: ["init", "test", "update", "body"], aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"], fields: { init: { validate: (0, i.assertNodeType)("VariableDeclaration", "Expression"), optional: !0 }, test: { validate: (0, i.assertNodeType)("Expression"), optional: !0 }, update: { validate: (0, i.assertNodeType)("Expression"), optional: !0 }, body: { validate: (0, i.assertNodeType)("Statement") } } }), (0, j.default)("FunctionDeclaration", { builder: ["id", "params", "body", "generator", "async"], visitor: ["id", "params", "body", "returnType", "typeParameters"], fields: { id: { validate: (0, i.assertNodeType)("Identifier") }, params: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("LVal"))) }, body: { validate: (0, i.assertNodeType)("BlockStatement") }, generator: { default: !1, validate: (0, i.assertValueType)("boolean") }, async: { default: !1, validate: (0, i.assertValueType)("boolean") } }, aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"] }), (0, j.default)("FunctionExpression", { inherits: "FunctionDeclaration", aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"], fields: { id: { validate: (0, i.assertNodeType)("Identifier"), optional: !0 }, params: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("LVal"))) }, body: { validate: (0, i.assertNodeType)("BlockStatement") }, generator: { default: !1, validate: (0, i.assertValueType)("boolean") }, async: { default: !1, validate: (0, i.assertValueType)("boolean") } } }), (0, j.default)("Identifier", { builder: ["name"], visitor: ["typeAnnotation"], aliases: ["Expression", "LVal"], fields: { name: { validate: function (a, b, c) {
            g.isValidIdentifier(c);
          } }, decorators: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Decorator"))) } } }), (0, j.default)("IfStatement", { visitor: ["test", "consequent", "alternate"], aliases: ["Statement", "Conditional"], fields: { test: { validate: (0, i.assertNodeType)("Expression") }, consequent: { validate: (0, i.assertNodeType)("Statement") }, alternate: { optional: !0, validate: (0, i.assertNodeType)("Statement") } } }), (0, j.default)("LabeledStatement", { visitor: ["label", "body"], aliases: ["Statement"], fields: { label: { validate: (0, i.assertNodeType)("Identifier") }, body: { validate: (0, i.assertNodeType)("Statement") } } }), (0, j.default)("StringLiteral", { builder: ["value"], fields: { value: { validate: (0, i.assertValueType)("string") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), (0, j.default)("NumericLiteral", { builder: ["value"], deprecatedAlias: "NumberLiteral", fields: { value: { validate: (0, i.assertValueType)("number") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), (0, j.default)("NullLiteral", { aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), (0, j.default)("BooleanLiteral", { builder: ["value"], fields: { value: { validate: (0, i.assertValueType)("boolean") } }, aliases: ["Expression", "Pureish", "Literal", "Immutable"] }), (0, j.default)("RegExpLiteral", { builder: ["pattern", "flags"], deprecatedAlias: "RegexLiteral", aliases: ["Expression", "Literal"], fields: { pattern: { validate: (0, i.assertValueType)("string") }, flags: { validate: (0, i.assertValueType)("string"), default: "" } } }), (0, j.default)("LogicalExpression", { builder: ["operator", "left", "right"], visitor: ["left", "right"], aliases: ["Binary", "Expression"], fields: { operator: { validate: i.assertOneOf.apply(void 0, h.LOGICAL_OPERATORS) }, left: { validate: (0, i.assertNodeType)("Expression") }, right: { validate: (0, i.assertNodeType)("Expression") } } }), (0, j.default)("MemberExpression", { builder: ["object", "property", "computed"], visitor: ["object", "property"], aliases: ["Expression", "LVal"], fields: { object: { validate: (0, i.assertNodeType)("Expression") }, property: { validate: function (a, b, c) {
            var d = a.computed ? "Expression" : "Identifier";(0, i.assertNodeType)(d)(a, b, c);
          } }, computed: { default: !1 } } }), (0, j.default)("NewExpression", { visitor: ["callee", "arguments"], aliases: ["Expression"], fields: { callee: { validate: (0, i.assertNodeType)("Expression") }, arguments: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Expression", "SpreadElement"))) } } }), (0, j.default)("Program", { visitor: ["directives", "body"], builder: ["body", "directives"], fields: { directives: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Directive"))), default: [] }, body: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Statement"))) } }, aliases: ["Scopable", "BlockParent", "Block", "FunctionParent"] }), (0, j.default)("ObjectExpression", { visitor: ["properties"], aliases: ["Expression"], fields: { properties: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("ObjectMethod", "ObjectProperty", "SpreadProperty"))) } } }), (0, j.default)("ObjectMethod", { builder: ["kind", "key", "params", "body", "computed"], fields: { kind: { validate: (0, i.chain)((0, i.assertValueType)("string"), (0, i.assertOneOf)("method", "get", "set")), default: "method" }, computed: { validate: (0, i.assertValueType)("boolean"), default: !1 }, key: { validate: function (a, b, c) {
            var d = a.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];i.assertNodeType.apply(void 0, d)(a, b, c);
          } }, decorators: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Decorator"))) }, body: { validate: (0, i.assertNodeType)("BlockStatement") }, generator: { default: !1, validate: (0, i.assertValueType)("boolean") }, async: { default: !1, validate: (0, i.assertValueType)("boolean") } }, visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"], aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"] }), (0, j.default)("ObjectProperty", { builder: ["key", "value", "computed", "shorthand", "decorators"], fields: { computed: { validate: (0, i.assertValueType)("boolean"), default: !1 }, key: { validate: function (a, b, c) {
            var d = a.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];i.assertNodeType.apply(void 0, d)(a, b, c);
          } }, value: { validate: (0, i.assertNodeType)("Expression", "Pattern", "RestElement") }, shorthand: { validate: (0, i.assertValueType)("boolean"), default: !1 }, decorators: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Decorator"))), optional: !0 } }, visitor: ["key", "value", "decorators"], aliases: ["UserWhitespacable", "Property", "ObjectMember"] }), (0, j.default)("RestElement", { visitor: ["argument", "typeAnnotation"], aliases: ["LVal"], fields: { argument: { validate: (0, i.assertNodeType)("LVal") }, decorators: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Decorator"))) } } }), (0, j.default)("ReturnStatement", { visitor: ["argument"], aliases: ["Statement", "Terminatorless", "CompletionStatement"], fields: { argument: { validate: (0, i.assertNodeType)("Expression"), optional: !0 } } }), (0, j.default)("SequenceExpression", { visitor: ["expressions"], fields: { expressions: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Expression"))) } }, aliases: ["Expression"] }), (0, j.default)("SwitchCase", { visitor: ["test", "consequent"], fields: { test: { validate: (0, i.assertNodeType)("Expression"), optional: !0 }, consequent: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("Statement"))) } } }), (0, j.default)("SwitchStatement", { visitor: ["discriminant", "cases"], aliases: ["Statement", "BlockParent", "Scopable"], fields: { discriminant: { validate: (0, i.assertNodeType)("Expression") }, cases: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("SwitchCase"))) } } }), (0, j.default)("ThisExpression", { aliases: ["Expression"] }), (0, j.default)("ThrowStatement", { visitor: ["argument"], aliases: ["Statement", "Terminatorless", "CompletionStatement"], fields: { argument: { validate: (0, i.assertNodeType)("Expression") } } }), (0, j.default)("TryStatement", { visitor: ["block", "handler", "finalizer"], aliases: ["Statement"], fields: { body: { validate: (0, i.assertNodeType)("BlockStatement") }, handler: { optional: !0, handler: (0, i.assertNodeType)("BlockStatement") }, finalizer: { optional: !0, validate: (0, i.assertNodeType)("BlockStatement") } } }), (0, j.default)("UnaryExpression", { builder: ["operator", "argument", "prefix"], fields: { prefix: { default: !0 }, argument: { validate: (0, i.assertNodeType)("Expression") }, operator: { validate: i.assertOneOf.apply(void 0, h.UNARY_OPERATORS) } }, visitor: ["argument"], aliases: ["UnaryLike", "Expression"] }), (0, j.default)("UpdateExpression", { builder: ["operator", "argument", "prefix"], fields: { prefix: { default: !1 }, argument: { validate: (0, i.assertNodeType)("Expression") }, operator: { validate: i.assertOneOf.apply(void 0, h.UPDATE_OPERATORS) } }, visitor: ["argument"], aliases: ["Expression"] }), (0, j.default)("VariableDeclaration", { builder: ["kind", "declarations"], visitor: ["declarations"], aliases: ["Statement", "Declaration"], fields: { kind: { validate: (0, i.chain)((0, i.assertValueType)("string"), (0, i.assertOneOf)("var", "let", "const")) }, declarations: { validate: (0, i.chain)((0, i.assertValueType)("array"), (0, i.assertEach)((0, i.assertNodeType)("VariableDeclarator"))) } } }), (0, j.default)("VariableDeclarator", { visitor: ["id", "init"], fields: { id: { validate: (0, i.assertNodeType)("LVal") }, init: { optional: !0, validate: (0, i.assertNodeType)("Expression") } } }), (0, j.default)("WhileStatement", { visitor: ["test", "body"], aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"], fields: { test: { validate: (0, i.assertNodeType)("Expression") }, body: { validate: (0, i.assertNodeType)("BlockStatement", "Statement") } } }), (0, j.default)("WithStatement", { visitor: ["object", "body"], aliases: ["Statement"], fields: { object: { object: (0, i.assertNodeType)("Expression") }, body: { validate: (0, i.assertNodeType)("BlockStatement", "Statement") } } });
  }), a.registerDynamic("21e", ["21d"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }var e = (this || self, a("21d")),
        f = d(e);(0, f.default)("AssignmentPattern", { visitor: ["left", "right"], aliases: ["Pattern", "LVal"], fields: { left: { validate: (0, e.assertNodeType)("Identifier") }, right: { validate: (0, e.assertNodeType)("Expression") }, decorators: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Decorator"))) } } }), (0, f.default)("ArrayPattern", { visitor: ["elements", "typeAnnotation"], aliases: ["Pattern", "LVal"], fields: { elements: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Identifier", "Pattern", "RestElement"))) }, decorators: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Decorator"))) } } }), (0, f.default)("ArrowFunctionExpression", { builder: ["params", "body", "async"], visitor: ["params", "body", "returnType", "typeParameters"], aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"], fields: { params: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("LVal"))) }, body: { validate: (0, e.assertNodeType)("BlockStatement", "Expression") }, async: { validate: (0, e.assertValueType)("boolean"), default: !1 } } }), (0, f.default)("ClassBody", { visitor: ["body"], fields: { body: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("ClassMethod", "ClassProperty"))) } } }), (0, f.default)("ClassDeclaration", { builder: ["id", "superClass", "body", "decorators"], visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"], aliases: ["Scopable", "Class", "Statement", "Declaration", "Pureish"], fields: { id: { validate: (0, e.assertNodeType)("Identifier") }, body: { validate: (0, e.assertNodeType)("ClassBody") }, superClass: { optional: !0, validate: (0, e.assertNodeType)("Expression") }, decorators: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Decorator"))) } } }), (0, f.default)("ClassExpression", { inherits: "ClassDeclaration", aliases: ["Scopable", "Class", "Expression", "Pureish"], fields: { id: { optional: !0, validate: (0, e.assertNodeType)("Identifier") }, body: { validate: (0, e.assertNodeType)("ClassBody") }, superClass: { optional: !0, validate: (0, e.assertNodeType)("Expression") }, decorators: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Decorator"))) } } }), (0, f.default)("ExportAllDeclaration", { visitor: ["source"], aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"], fields: { source: { validate: (0, e.assertNodeType)("StringLiteral") } } }), (0, f.default)("ExportDefaultDeclaration", { visitor: ["declaration"], aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"], fields: { declaration: { validate: (0, e.assertNodeType)("FunctionDeclaration", "ClassDeclaration", "Expression") } } }), (0, f.default)("ExportNamedDeclaration", { visitor: ["declaration", "specifiers", "source"], aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"], fields: { declaration: { validate: (0, e.assertNodeType)("Declaration"), optional: !0 }, specifiers: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("ExportSpecifier"))) }, source: { validate: (0, e.assertNodeType)("StringLiteral"), optional: !0 } } }), (0, f.default)("ExportSpecifier", { visitor: ["local", "exported"], aliases: ["ModuleSpecifier"], fields: { local: { validate: (0, e.assertNodeType)("Identifier") }, exported: { validate: (0, e.assertNodeType)("Identifier") } } }), (0, f.default)("ForOfStatement", { visitor: ["left", "right", "body"], aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"], fields: { left: { validate: (0, e.assertNodeType)("VariableDeclaration", "LVal") }, right: { validate: (0, e.assertNodeType)("Expression") }, body: { validate: (0, e.assertNodeType)("Statement") } } }), (0, f.default)("ImportDeclaration", { visitor: ["specifiers", "source"], aliases: ["Statement", "Declaration", "ModuleDeclaration"], fields: { specifiers: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier"))) }, source: { validate: (0, e.assertNodeType)("StringLiteral") } } }), (0, f.default)("ImportDefaultSpecifier", { visitor: ["local"], aliases: ["ModuleSpecifier"], fields: { local: { validate: (0, e.assertNodeType)("Identifier") } } }), (0, f.default)("ImportNamespaceSpecifier", { visitor: ["local"], aliases: ["ModuleSpecifier"], fields: { local: { validate: (0, e.assertNodeType)("Identifier") } } }), (0, f.default)("ImportSpecifier", { visitor: ["local", "imported"], aliases: ["ModuleSpecifier"], fields: { local: { validate: (0, e.assertNodeType)("Identifier") }, imported: { validate: (0, e.assertNodeType)("Identifier") }, importKind: { validate: (0, e.assertOneOf)(null, "type", "typeof") } } }), (0, f.default)("MetaProperty", { visitor: ["meta", "property"], aliases: ["Expression"], fields: { meta: { validate: (0, e.assertValueType)("string") }, property: { validate: (0, e.assertValueType)("string") } } }), (0, f.default)("ClassMethod", { aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"], builder: ["kind", "key", "params", "body", "computed", "static"], visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"], fields: { kind: { validate: (0, e.chain)((0, e.assertValueType)("string"), (0, e.assertOneOf)("get", "set", "method", "constructor")), default: "method" }, computed: { default: !1, validate: (0, e.assertValueType)("boolean") }, static: { default: !1, validate: (0, e.assertValueType)("boolean") }, key: { validate: function (a, b, c) {
            var d = a.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];e.assertNodeType.apply(void 0, d)(a, b, c);
          } }, params: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("LVal"))) }, body: { validate: (0, e.assertNodeType)("BlockStatement") }, generator: { default: !1, validate: (0, e.assertValueType)("boolean") }, async: { default: !1, validate: (0, e.assertValueType)("boolean") } } }), (0, f.default)("ObjectPattern", { visitor: ["properties", "typeAnnotation"], aliases: ["Pattern", "LVal"], fields: { properties: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("RestProperty", "Property"))) }, decorators: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Decorator"))) } } }), (0, f.default)("SpreadElement", { visitor: ["argument"], aliases: ["UnaryLike"], fields: { argument: { validate: (0, e.assertNodeType)("Expression") } } }), (0, f.default)("Super", { aliases: ["Expression"] }), (0, f.default)("TaggedTemplateExpression", { visitor: ["tag", "quasi"], aliases: ["Expression"], fields: { tag: { validate: (0, e.assertNodeType)("Expression") }, quasi: { validate: (0, e.assertNodeType)("TemplateLiteral") } } }), (0, f.default)("TemplateElement", { builder: ["value", "tail"], fields: { value: {}, tail: { validate: (0, e.assertValueType)("boolean"), default: !1 } } }), (0, f.default)("TemplateLiteral", { visitor: ["quasis", "expressions"], aliases: ["Expression", "Literal"], fields: { quasis: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("TemplateElement"))) }, expressions: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("Expression"))) } } }), (0, f.default)("YieldExpression", { builder: ["argument", "delegate"], visitor: ["argument"], aliases: ["Expression", "Terminatorless"], fields: { delegate: { validate: (0, e.assertValueType)("boolean"), default: !1 }, argument: { optional: !0, validate: (0, e.assertNodeType)("Expression") } } });
  }), a.registerDynamic("21f", ["21d"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }var e = (this || self, a("21d")),
        f = d(e);(0, f.default)("AnyTypeAnnotation", { aliases: ["Flow", "FlowBaseAnnotation"], fields: {} }), (0, f.default)("ArrayTypeAnnotation", { visitor: ["elementType"], aliases: ["Flow"], fields: {} }), (0, f.default)("BooleanTypeAnnotation", { aliases: ["Flow", "FlowBaseAnnotation"], fields: {} }), (0, f.default)("BooleanLiteralTypeAnnotation", { aliases: ["Flow"], fields: {} }), (0, f.default)("NullLiteralTypeAnnotation", { aliases: ["Flow", "FlowBaseAnnotation"], fields: {} }), (0, f.default)("ClassImplements", { visitor: ["id", "typeParameters"], aliases: ["Flow"], fields: {} }), (0, f.default)("ClassProperty", { visitor: ["key", "value", "typeAnnotation", "decorators"], builder: ["key", "value", "typeAnnotation", "decorators", "computed"], aliases: ["Property"], fields: { computed: { validate: (0, e.assertValueType)("boolean"), default: !1 } } }), (0, f.default)("DeclareClass", { visitor: ["id", "typeParameters", "extends", "body"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: {} }), (0, f.default)("DeclareFunction", { visitor: ["id"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: {} }), (0, f.default)("DeclareInterface", { visitor: ["id", "typeParameters", "extends", "body"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: {} }), (0, f.default)("DeclareModule", { visitor: ["id", "body"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: {} }), (0, f.default)("DeclareModuleExports", { visitor: ["typeAnnotation"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: {} }), (0, f.default)("DeclareTypeAlias", { visitor: ["id", "typeParameters", "right"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: {} }), (0, f.default)("DeclareVariable", { visitor: ["id"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: {} }), (0, f.default)("ExistentialTypeParam", { aliases: ["Flow"] }), (0, f.default)("FunctionTypeAnnotation", { visitor: ["typeParameters", "params", "rest", "returnType"], aliases: ["Flow"], fields: {} }), (0, f.default)("FunctionTypeParam", { visitor: ["name", "typeAnnotation"], aliases: ["Flow"], fields: {} }), (0, f.default)("GenericTypeAnnotation", { visitor: ["id", "typeParameters"], aliases: ["Flow"], fields: {} }), (0, f.default)("InterfaceExtends", { visitor: ["id", "typeParameters"], aliases: ["Flow"], fields: {} }), (0, f.default)("InterfaceDeclaration", { visitor: ["id", "typeParameters", "extends", "body"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: {} }), (0, f.default)("IntersectionTypeAnnotation", { visitor: ["types"], aliases: ["Flow"], fields: {} }), (0, f.default)("MixedTypeAnnotation", { aliases: ["Flow", "FlowBaseAnnotation"] }), (0, f.default)("EmptyTypeAnnotation", { aliases: ["Flow", "FlowBaseAnnotation"] }), (0, f.default)("NullableTypeAnnotation", { visitor: ["typeAnnotation"], aliases: ["Flow"], fields: {} }), (0, f.default)("NumericLiteralTypeAnnotation", { aliases: ["Flow"], fields: {} }), (0, f.default)("NumberTypeAnnotation", { aliases: ["Flow", "FlowBaseAnnotation"], fields: {} }), (0, f.default)("StringLiteralTypeAnnotation", { aliases: ["Flow"], fields: {} }), (0, f.default)("StringTypeAnnotation", { aliases: ["Flow", "FlowBaseAnnotation"], fields: {} }), (0, f.default)("ThisTypeAnnotation", { aliases: ["Flow", "FlowBaseAnnotation"], fields: {} }), (0, f.default)("TupleTypeAnnotation", { visitor: ["types"], aliases: ["Flow"], fields: {} }), (0, f.default)("TypeofTypeAnnotation", { visitor: ["argument"], aliases: ["Flow"], fields: {} }), (0, f.default)("TypeAlias", { visitor: ["id", "typeParameters", "right"], aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"], fields: {} }), (0, f.default)("TypeAnnotation", { visitor: ["typeAnnotation"], aliases: ["Flow"], fields: {} }), (0, f.default)("TypeCastExpression", { visitor: ["expression", "typeAnnotation"], aliases: ["Flow", "ExpressionWrapper", "Expression"], fields: {} }), (0, f.default)("TypeParameter", { visitor: ["bound"], aliases: ["Flow"], fields: {} }), (0, f.default)("TypeParameterDeclaration", { visitor: ["params"], aliases: ["Flow"], fields: {} }), (0, f.default)("TypeParameterInstantiation", { visitor: ["params"], aliases: ["Flow"], fields: {} }), (0, f.default)("ObjectTypeAnnotation", { visitor: ["properties", "indexers", "callProperties"], aliases: ["Flow"], fields: {} }), (0, f.default)("ObjectTypeCallProperty", { visitor: ["value"], aliases: ["Flow", "UserWhitespacable"], fields: {} }), (0, f.default)("ObjectTypeIndexer", { visitor: ["id", "key", "value"], aliases: ["Flow", "UserWhitespacable"], fields: {} }), (0, f.default)("ObjectTypeProperty", { visitor: ["key", "value"], aliases: ["Flow", "UserWhitespacable"], fields: {} }), (0, f.default)("ObjectTypeSpreadProperty", { visitor: ["argument"], aliases: ["Flow", "UserWhitespacable"], fields: {} }), (0, f.default)("QualifiedTypeIdentifier", { visitor: ["id", "qualification"], aliases: ["Flow"], fields: {} }), (0, f.default)("UnionTypeAnnotation", { visitor: ["types"], aliases: ["Flow"], fields: {} }), (0, f.default)("VoidTypeAnnotation", { aliases: ["Flow", "FlowBaseAnnotation"], fields: {} });
  }), a.registerDynamic("220", ["21d"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }var e = (this || self, a("21d")),
        f = d(e);(0, f.default)("JSXAttribute", { visitor: ["name", "value"], aliases: ["JSX", "Immutable"], fields: { name: { validate: (0, e.assertNodeType)("JSXIdentifier", "JSXNamespacedName") }, value: { optional: !0, validate: (0, e.assertNodeType)("JSXElement", "StringLiteral", "JSXExpressionContainer") } } }), (0, f.default)("JSXClosingElement", { visitor: ["name"], aliases: ["JSX", "Immutable"], fields: { name: { validate: (0, e.assertNodeType)("JSXIdentifier", "JSXMemberExpression") } } }), (0, f.default)("JSXElement", { builder: ["openingElement", "closingElement", "children", "selfClosing"], visitor: ["openingElement", "children", "closingElement"], aliases: ["JSX", "Immutable", "Expression"], fields: { openingElement: { validate: (0, e.assertNodeType)("JSXOpeningElement") }, closingElement: { optional: !0, validate: (0, e.assertNodeType)("JSXClosingElement") }, children: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("JSXText", "JSXExpressionContainer", "JSXSpreadChild", "JSXElement"))) } } }), (0, f.default)("JSXEmptyExpression", { aliases: ["JSX", "Expression"] }), (0, f.default)("JSXExpressionContainer", { visitor: ["expression"], aliases: ["JSX", "Immutable"], fields: { expression: { validate: (0, e.assertNodeType)("Expression") } } }), (0, f.default)("JSXSpreadChild", { visitor: ["expression"], aliases: ["JSX", "Immutable"], fields: { expression: { validate: (0, e.assertNodeType)("Expression") } } }), (0, f.default)("JSXIdentifier", { builder: ["name"], aliases: ["JSX", "Expression"], fields: { name: { validate: (0, e.assertValueType)("string") } } }), (0, f.default)("JSXMemberExpression", { visitor: ["object", "property"], aliases: ["JSX", "Expression"], fields: { object: { validate: (0, e.assertNodeType)("JSXMemberExpression", "JSXIdentifier") }, property: { validate: (0, e.assertNodeType)("JSXIdentifier") } } }), (0, f.default)("JSXNamespacedName", { visitor: ["namespace", "name"], aliases: ["JSX"], fields: { namespace: { validate: (0, e.assertNodeType)("JSXIdentifier") }, name: { validate: (0, e.assertNodeType)("JSXIdentifier") } } }), (0, f.default)("JSXOpeningElement", { builder: ["name", "attributes", "selfClosing"], visitor: ["name", "attributes"], aliases: ["JSX", "Immutable"], fields: { name: { validate: (0, e.assertNodeType)("JSXIdentifier", "JSXMemberExpression") }, selfClosing: { default: !1, validate: (0, e.assertValueType)("boolean") }, attributes: { validate: (0, e.chain)((0, e.assertValueType)("array"), (0, e.assertEach)((0, e.assertNodeType)("JSXAttribute", "JSXSpreadAttribute"))) } } }), (0, f.default)("JSXSpreadAttribute", { visitor: ["argument"], aliases: ["JSX"], fields: { argument: { validate: (0, e.assertNodeType)("Expression") } } }), (0, f.default)("JSXText", { aliases: ["JSX", "Immutable"], builder: ["value"], fields: { value: { validate: (0, e.assertValueType)("string") } } });
  }), a.registerDynamic("221", ["21d"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }var e = (this || self, a("21d")),
        f = d(e);(0, f.default)("Noop", { visitor: [] }), (0, f.default)("ParenthesizedExpression", { visitor: ["expression"], aliases: ["Expression", "ExpressionWrapper"], fields: { expression: { validate: (0, e.assertNodeType)("Expression") } } });
  }), a.registerDynamic("222", ["21d"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }var e = (this || self, a("21d")),
        f = d(e);(0, f.default)("AwaitExpression", { builder: ["argument"], visitor: ["argument"], aliases: ["Expression", "Terminatorless"], fields: { argument: { validate: (0, e.assertNodeType)("Expression") } } }), (0, f.default)("ForAwaitStatement", { visitor: ["left", "right", "body"], aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"], fields: { left: { validate: (0, e.assertNodeType)("VariableDeclaration", "LVal") }, right: { validate: (0, e.assertNodeType)("Expression") }, body: { validate: (0, e.assertNodeType)("Statement") } } }), (0, f.default)("BindExpression", { visitor: ["object", "callee"], aliases: ["Expression"], fields: {} }), (0, f.default)("Import", { aliases: ["Expression"] }), (0, f.default)("Decorator", { visitor: ["expression"], fields: { expression: { validate: (0, e.assertNodeType)("Expression") } } }), (0, f.default)("DoExpression", { visitor: ["body"], aliases: ["Expression"], fields: { body: { validate: (0, e.assertNodeType)("BlockStatement") } } }), (0, f.default)("ExportDefaultSpecifier", { visitor: ["exported"], aliases: ["ModuleSpecifier"], fields: { exported: { validate: (0, e.assertNodeType)("Identifier") } } }), (0, f.default)("ExportNamespaceSpecifier", { visitor: ["exported"], aliases: ["ModuleSpecifier"], fields: { exported: { validate: (0, e.assertNodeType)("Identifier") } } }), (0, f.default)("RestProperty", { visitor: ["argument"], aliases: ["UnaryLike"], fields: { argument: { validate: (0, e.assertNodeType)("LVal") } } }), (0, f.default)("SpreadProperty", { visitor: ["argument"], aliases: ["UnaryLike"], fields: { argument: { validate: (0, e.assertNodeType)("Expression") } } });
  }), a.registerDynamic("223", ["21d", "21c", "21e", "21f", "220", "221", "222"], !0, function (a, b, c) {
    "use strict";
    this || self;a("21d"), a("21c"), a("21e"), a("21f"), a("220"), a("221"), a("222");
  }), a.registerDynamic("178", ["224", "16b", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("224")),
        e = a("16b")("toStringTag"),
        f = "Arguments" == d(function () {
      return arguments;
    }()),
        g = function (a, b) {
      try {
        return a[b];
      } catch (a) {}
    };c.exports = function (a) {
      var b, c, h;return void 0 === a ? "Undefined" : null === a ? "Null" : "string" == typeof (c = g(b = Object(a), e)) ? c : f ? d(b) : "Object" == (h = d(b)) && "function" == typeof b.callee ? "Arguments" : h;
    };
  }), a.registerDynamic("19c", ["178", "16b", "19a", "39", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("178")),
        e = a("16b")("iterator"),
        f = a("19a");c.exports = a("39").getIteratorMethod = function (a) {
      if (void 0 != a) return a[e] || a["@@iterator"] || f[d(a)];
    };
  }), a.registerDynamic("225", ["110", "19c", "39", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("110")),
        e = a("19c");c.exports = a("39").getIterator = function (a) {
      var b = e(a);if ("function" != typeof b) throw TypeError(a + " is not iterable!");return d(b.call(a));
    };
  }), a.registerDynamic("226", ["38", "17b", "225", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("38"), a("17b"), c.exports = a("225");
  }), a.registerDynamic("17", ["226"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("226"), __esModule: !0 };
  }), a.registerDynamic("227", ["39", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("39")),
        e = d.JSON || (d.JSON = { stringify: JSON.stringify });c.exports = function (a) {
      return e.stringify.apply(e, arguments);
    };
  }), a.registerDynamic("60", ["227"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("227"), __esModule: !0 };
  }), a.registerDynamic("228", ["229", "170", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("229")),
        e = a("170");c.exports = function (a) {
      return function (b, c) {
        var f,
            g,
            h = String(e(b)),
            i = d(c),
            j = h.length;return i < 0 || i >= j ? a ? "" : void 0 : (f = h.charCodeAt(i), f < 55296 || f > 56319 || i + 1 === j || (g = h.charCodeAt(i + 1)) < 56320 || g > 57343 ? a ? h.charAt(i) : f : a ? h.slice(i, i + 2) : g - 56320 + (f - 55296 << 10) + 65536);
      };
    };
  }), a.registerDynamic("17b", ["228", "172", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self, a("228")(!0));a("172")(String, "String", function (a) {
      this._t = String(a), this._i = 0;
    }, function () {
      var a,
          b = this._t,
          c = this._i;return c >= b.length ? { value: void 0, done: !0 } : (a = d(b, c), this._i += a.length, { value: a, done: !1 });
    });
  }), a.registerDynamic("22a", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = function () {};
  }), a.registerDynamic("173", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = function (a, b) {
      return { value: b, done: !!a };
    };
  }), a.registerDynamic("22b", ["16d", "22c", "1a0", "197", "16b", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self, a("16d")),
        e = a("22c"),
        f = a("1a0"),
        g = {};a("197")(g, a("16b")("iterator"), function () {
      return this;
    }), c.exports = function (a, b, c) {
      a.prototype = d(g, { next: e(1, c) }), f(a, b + " Iterator");
    };
  }), a.registerDynamic("192", ["170", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("170"));c.exports = function (a) {
      return Object(d(a));
    };
  }), a.registerDynamic("22d", ["196", "192", "22e", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("196")),
        e = a("192"),
        f = a("22e")("IE_PROTO"),
        g = Object.prototype;c.exports = Object.getPrototypeOf || function (a) {
      return a = e(a), d(a, f) ? a[f] : "function" == typeof a.constructor && a instanceof a.constructor ? a.constructor.prototype : a instanceof Object ? g : null;
    };
  }), a.registerDynamic("172", ["22f", "cb", "1a2", "197", "196", "19a", "22b", "1a0", "22d", "16b", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self, a("22f")),
        e = a("cb"),
        f = a("1a2"),
        g = a("197"),
        h = a("196"),
        i = a("19a"),
        j = a("22b"),
        k = a("1a0"),
        l = a("22d"),
        m = a("16b")("iterator"),
        n = !([].keys && "next" in [].keys()),
        o = "keys",
        p = "values",
        q = function () {
      return this;
    };c.exports = function (a, b, c, r, s, t, u) {
      j(c, b, r);var v,
          w,
          x,
          y = function (a) {
        if (!n && a in C) return C[a];switch (a) {case o:case p:
            return function () {
              return new c(this, a);
            };}return function () {
          return new c(this, a);
        };
      },
          z = b + " Iterator",
          A = s == p,
          B = !1,
          C = a.prototype,
          D = C[m] || C["@@iterator"] || s && C[s],
          E = D || y(s),
          F = s ? A ? y("entries") : E : void 0,
          G = "Array" == b ? C.entries || D : D;if (G && (x = l(G.call(new a()))) !== Object.prototype && (k(x, z, !0), d || h(x, m) || g(x, m, q)), A && D && D.name !== p && (B = !0, E = function () {
        return D.call(this);
      }), d && !u || !n && !B && C[m] || g(C, m, E), i[b] = E, i[z] = q, s) if (v = { values: A ? E : y(p), keys: t ? E : y(o), entries: F }, u) for (w in v) w in C || f(C, w, v[w]);else e(e.P + e.F * (n || B), b, v);return v;
    };
  }), a.registerDynamic("230", ["22a", "173", "19a", "231", "172", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self, a("22a")),
        e = a("173"),
        f = a("19a"),
        g = a("231");c.exports = a("172")(Array, "Array", function (a, b) {
      this._t = g(a), this._i = 0, this._k = b;
    }, function () {
      var a = this._t,
          b = this._k,
          c = this._i++;return !a || c >= a.length ? (this._t = void 0, e(1)) : "keys" == b ? e(0, c) : "values" == b ? e(0, a[c]) : e(0, [c, a[c]]);
    }, "values"), f.Arguments = f.Array, d("keys"), d("values"), d("entries");
  }), a.registerDynamic("19a", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = {};
  }), a.registerDynamic("38", ["230", "168", "197", "19a", "16b", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self);a("230");for (var d = a("168"), e = a("197"), f = a("19a"), g = a("16b")("toStringTag"), h = ["NodeList", "DOMTokenList", "MediaList", "StyleSheetList", "CSSRuleList"], i = 0; i < 5; i++) {
      var j = h[i],
          k = d[j],
          l = k && k.prototype;l && !l[g] && e(l, g, j), f[j] = f.Array;
    }
  }), a.registerDynamic("232", ["17b", "38", "233", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("17b"), a("38"), c.exports = a("233").f("iterator");
  }), a.registerDynamic("234", ["232"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("232"), __esModule: !0 };
  }), a.registerDynamic("235", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = function (a) {
      if ("function" != typeof a) throw TypeError(a + " is not a function!");return a;
    };
  }), a.registerDynamic("111", ["235", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("235"));c.exports = function (a, b, c) {
      if (d(a), void 0 === b) return a;switch (c) {case 1:
          return function (c) {
            return a.call(b, c);
          };case 2:
          return function (c, d) {
            return a.call(b, c, d);
          };case 3:
          return function (c, d, e) {
            return a.call(b, c, d, e);
          };}return function () {
        return a.apply(b, arguments);
      };
    };
  }), a.registerDynamic("cb", ["168", "39", "111", "197", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self),
        d = a("168"),
        e = a("39"),
        f = a("111"),
        g = a("197"),
        h = "prototype",
        i = function (a, b, c) {
      var j,
          k,
          l,
          m = a & i.F,
          n = a & i.G,
          o = a & i.S,
          p = a & i.P,
          q = a & i.B,
          r = a & i.W,
          s = n ? e : e[b] || (e[b] = {}),
          t = s[h],
          u = n ? d : o ? d[b] : (d[b] || {})[h];n && (c = b);for (j in c) (k = !m && u && void 0 !== u[j]) && j in s || (l = k ? u[j] : c[j], s[j] = n && "function" != typeof u[j] ? c[j] : q && k ? f(l, d) : r && u[j] == l ? function (a) {
        var b = function (b, c, d) {
          if (this instanceof a) {
            switch (arguments.length) {case 0:
                return new a();case 1:
                return new a(b);case 2:
                return new a(b, c);}return new a(b, c, d);
          }return a.apply(this, arguments);
        };return b[h] = a[h], b;
      }(l) : p && "function" == typeof l ? f(Function.call, l) : l, p && ((s.virtual || (s.virtual = {}))[j] = l, a & i.R && t && !t[j] && g(t, j, l)));
    };i.F = 1, i.G = 2, i.S = 4, i.P = 8, i.B = 16, i.W = 32, i.U = 64, i.R = 128, c.exports = i;
  }), a.registerDynamic("1a2", ["197", "c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = a("197");
  }), a.registerDynamic("174", ["236", "10f", "196", "169", "194", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("236")("meta")),
        e = a("10f"),
        f = a("196"),
        g = a("169").f,
        h = 0,
        i = Object.isExtensible || function () {
      return !0;
    },
        j = !a("194")(function () {
      return i(Object.preventExtensions({}));
    }),
        k = function (a) {
      g(a, d, { value: { i: "O" + ++h, w: {} } });
    },
        l = function (a, b) {
      if (!e(a)) return "symbol" == typeof a ? a : ("string" == typeof a ? "S" : "P") + a;if (!f(a, d)) {
        if (!i(a)) return "F";if (!b) return "E";k(a);
      }return a[d].i;
    },
        m = function (a, b) {
      if (!f(a, d)) {
        if (!i(a)) return !0;if (!b) return !1;k(a);
      }return a[d].w;
    },
        n = function (a) {
      return j && o.NEED && i(a) && !f(a, d) && k(a), a;
    },
        o = c.exports = { KEY: d, NEED: !1, fastKey: l, getWeak: m, onFreeze: n };
  }), a.registerDynamic("1a0", ["169", "196", "16b", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("169").f),
        e = a("196"),
        f = a("16b")("toStringTag");c.exports = function (a, b, c) {
      a && !e(a = c ? a : a.prototype, f) && d(a, f, { configurable: !0, value: b });
    };
  }), a.registerDynamic("237", ["18f", "231", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("18f")),
        e = a("231");c.exports = function (a, b) {
      for (var c, f = e(a), g = d(f), h = g.length, i = 0; h > i;) if (f[c = g[i++]] === b) return c;
    };
  }), a.registerDynamic("238", ["18f", "190", "191", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("18f")),
        e = a("190"),
        f = a("191");c.exports = function (a) {
      var b = d(a),
          c = e.f;if (c) for (var g, h = c(a), i = f.f, j = 0; h.length > j;) i.call(a, g = h[j++]) && b.push(g);return b;
    };
  }), a.registerDynamic("19e", ["224", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("224"));c.exports = Array.isArray || function (a) {
      return "Array" == d(a);
    };
  }), a.registerDynamic("239", ["169", "110", "18f", "16a", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("169")),
        e = a("110"),
        f = a("18f");c.exports = a("16a") ? Object.defineProperties : function (a, b) {
      e(a);for (var c, g = f(b), h = g.length, i = 0; h > i;) d.f(a, c = g[i++], b[c]);return a;
    };
  }), a.registerDynamic("23a", ["168", "c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = a("168").document && document.documentElement;
  }), a.registerDynamic("16d", ["110", "239", "23b", "22e", "23c", "23a", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("110")),
        e = a("239"),
        f = a("23b"),
        g = a("22e")("IE_PROTO"),
        h = function () {},
        i = "prototype",
        j = function () {
      var b,
          c = a("23c")("iframe"),
          d = f.length,
          e = "<",
          g = ">";for (c.style.display = "none", a("23a").appendChild(c), c.src = "javascript:", b = c.contentWindow.document, b.open(), b.write(e + "script" + g + "document.F=Object" + e + "/script" + g), b.close(), j = b.F; d--;) delete j[i][f[d]];return j();
    };c.exports = Object.create || function (a, b) {
      var c;return null !== a ? (h[i] = d(a), c = new h(), h[i] = null, c[g] = a) : c = j(), void 0 === b ? c : e(c, b);
    };
  }), a.registerDynamic("23d", ["231", "23e", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("231")),
        e = a("23e").f,
        f = {}.toString,
        g = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],
        h = function (a) {
      try {
        return e(a);
      } catch (a) {
        return g.slice();
      }
    };c.exports.f = function (a) {
      return g && "[object Window]" == f.call(a) ? h(a) : e(d(a));
    };
  }), a.registerDynamic("112", ["191", "22c", "231", "23f", "196", "240", "16a", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("191")),
        e = a("22c"),
        f = a("231"),
        g = a("23f"),
        h = a("196"),
        i = a("240"),
        j = Object.getOwnPropertyDescriptor;b.f = a("16a") ? j : function (a, b) {
      if (a = f(a), b = g(b, !0), i) try {
        return j(a, b);
      } catch (a) {}if (h(a, b)) return e(!d.f.call(a, b), a[b]);
    };
  }), a.registerDynamic("18f", ["241", "23b", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("241")),
        e = a("23b");c.exports = Object.keys || function (a) {
      return d(a, e);
    };
  }), a.registerDynamic("196", ["c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, {}.hasOwnProperty);c.exports = function (a, b) {
      return d.call(a, b);
    };
  }), a.registerDynamic("224", ["c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, {}.toString);c.exports = function (a) {
      return d.call(a).slice(8, -1);
    };
  }), a.registerDynamic("193", ["224", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("224"));c.exports = Object("z").propertyIsEnumerable(0) ? Object : function (a) {
      return "String" == d(a) ? a.split("") : Object(a);
    };
  }), a.registerDynamic("170", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = function (a) {
      if (void 0 == a) throw TypeError("Can't call method on  " + a);return a;
    };
  }), a.registerDynamic("231", ["193", "170", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("193")),
        e = a("170");c.exports = function (a) {
      return d(e(a));
    };
  }), a.registerDynamic("19b", ["229", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("229")),
        e = Math.min;c.exports = function (a) {
      return a > 0 ? e(d(a), 9007199254740991) : 0;
    };
  }), a.registerDynamic("229", ["c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, Math.ceil),
        e = Math.floor;c.exports = function (a) {
      return isNaN(a = +a) ? 0 : (a > 0 ? e : d)(a);
    };
  }), a.registerDynamic("242", ["229", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("229")),
        e = Math.max,
        f = Math.min;c.exports = function (a, b) {
      return a = d(a), a < 0 ? e(a + b, 0) : f(a, b);
    };
  }), a.registerDynamic("243", ["231", "19b", "242", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("231")),
        e = a("19b"),
        f = a("242");c.exports = function (a) {
      return function (b, c, g) {
        var h,
            i = d(b),
            j = e(i.length),
            k = f(g, j);if (a && c != c) {
          for (; j > k;) if ((h = i[k++]) != h) return !0;
        } else for (; j > k; k++) if ((a || k in i) && i[k] === c) return a || k || 0;return !a && -1;
      };
    };
  }), a.registerDynamic("22e", ["244", "236", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("244")("keys")),
        e = a("236");c.exports = function (a) {
      return d[a] || (d[a] = e(a));
    };
  }), a.registerDynamic("241", ["196", "231", "243", "22e", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("196")),
        e = a("231"),
        f = a("243")(!1),
        g = a("22e")("IE_PROTO");c.exports = function (a, b) {
      var c,
          h = e(a),
          i = 0,
          j = [];for (c in h) c != g && d(h, c) && j.push(c);for (; b.length > i;) d(h, c = b[i++]) && (~f(j, c) || j.push(c));return j;
    };
  }), a.registerDynamic("23b", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
  }), a.registerDynamic("23e", ["241", "23b", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("241")),
        e = a("23b").concat("length", "prototype");b.f = Object.getOwnPropertyNames || function (a) {
      return d(a, e);
    };
  }), a.registerDynamic("191", ["c"], !0, function (a, b, c) {
    a("c"), this || self;b.f = {}.propertyIsEnumerable;
  }), a.registerDynamic("190", ["c"], !0, function (a, b, c) {
    a("c"), this || self;b.f = Object.getOwnPropertySymbols;
  }), a.registerDynamic("22c", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = function (a, b) {
      return { enumerable: !(1 & a), configurable: !(2 & a), writable: !(4 & a), value: b };
    };
  }), a.registerDynamic("197", ["169", "22c", "16a", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("169")),
        e = a("22c");c.exports = a("16a") ? function (a, b, c) {
      return d.f(a, b, e(1, c));
    } : function (a, b, c) {
      return a[b] = c, a;
    };
  }), a.registerDynamic("1b0", ["168", "196", "16a", "cb", "1a2", "174", "194", "244", "1a0", "236", "16b", "233", "245", "237", "238", "19e", "110", "231", "23f", "22c", "16d", "23d", "112", "169", "18f", "23e", "191", "190", "22f", "197", "c"], !0, function (a, b, c) {
    "use strict";
    var d = (a("c"), this || self),
        d = a("168"),
        e = a("196"),
        f = a("16a"),
        g = a("cb"),
        h = a("1a2"),
        i = a("174").KEY,
        j = a("194"),
        k = a("244"),
        l = a("1a0"),
        m = a("236"),
        n = a("16b"),
        o = a("233"),
        p = a("245"),
        q = a("237"),
        r = a("238"),
        s = a("19e"),
        t = a("110"),
        u = a("231"),
        v = a("23f"),
        w = a("22c"),
        x = a("16d"),
        y = a("23d"),
        z = a("112"),
        A = a("169"),
        B = a("18f"),
        C = z.f,
        D = A.f,
        E = y.f,
        F = d.Symbol,
        G = d.JSON,
        H = G && G.stringify,
        I = "prototype",
        J = n("_hidden"),
        K = n("toPrimitive"),
        L = {}.propertyIsEnumerable,
        M = k("symbol-registry"),
        N = k("symbols"),
        O = k("op-symbols"),
        P = Object[I],
        Q = "function" == typeof F,
        R = d.QObject,
        S = !R || !R[I] || !R[I].findChild,
        T = f && j(function () {
      return 7 != x(D({}, "a", { get: function () {
          return D(this, "a", { value: 7 }).a;
        } })).a;
    }) ? function (a, b, c) {
      var d = C(P, b);d && delete P[b], D(a, b, c), d && a !== P && D(P, b, d);
    } : D,
        U = function (a) {
      var b = N[a] = x(F[I]);return b._k = a, b;
    },
        V = Q && "symbol" == typeof F.iterator ? function (a) {
      return "symbol" == typeof a;
    } : function (a) {
      return a instanceof F;
    },
        W = function (a, b, c) {
      return a === P && W(O, b, c), t(a), b = v(b, !0), t(c), e(N, b) ? (c.enumerable ? (e(a, J) && a[J][b] && (a[J][b] = !1), c = x(c, { enumerable: w(0, !1) })) : (e(a, J) || D(a, J, w(1, {})), a[J][b] = !0), T(a, b, c)) : D(a, b, c);
    },
        X = function (a, b) {
      t(a);for (var c, d = r(b = u(b)), e = 0, f = d.length; f > e;) W(a, c = d[e++], b[c]);return a;
    },
        Y = function (a, b) {
      return void 0 === b ? x(a) : X(x(a), b);
    },
        Z = function (a) {
      var b = L.call(this, a = v(a, !0));return !(this === P && e(N, a) && !e(O, a)) && (!(b || !e(this, a) || !e(N, a) || e(this, J) && this[J][a]) || b);
    },
        $ = function (a, b) {
      if (a = u(a), b = v(b, !0), a !== P || !e(N, b) || e(O, b)) {
        var c = C(a, b);return !c || !e(N, b) || e(a, J) && a[J][b] || (c.enumerable = !0), c;
      }
    },
        _ = function (a) {
      for (var b, c = E(u(a)), d = [], f = 0; c.length > f;) e(N, b = c[f++]) || b == J || b == i || d.push(b);return d;
    },
        aa = function (a) {
      for (var b, c = a === P, d = E(c ? O : u(a)), f = [], g = 0; d.length > g;) !e(N, b = d[g++]) || c && !e(P, b) || f.push(N[b]);return f;
    };Q || (F = function () {
      if (this instanceof F) throw TypeError("Symbol is not a constructor!");var a = m(arguments.length > 0 ? arguments[0] : void 0),
          b = function (c) {
        this === P && b.call(O, c), e(this, J) && e(this[J], a) && (this[J][a] = !1), T(this, a, w(1, c));
      };return f && S && T(P, a, { configurable: !0, set: b }), U(a);
    }, h(F[I], "toString", function () {
      return this._k;
    }), z.f = $, A.f = W, a("23e").f = y.f = _, a("191").f = Z, a("190").f = aa, f && !a("22f") && h(P, "propertyIsEnumerable", Z, !0), o.f = function (a) {
      return U(n(a));
    }), g(g.G + g.W + g.F * !Q, { Symbol: F });for (var ba = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), ca = 0; ba.length > ca;) n(ba[ca++]);for (var ba = B(n.store), ca = 0; ba.length > ca;) p(ba[ca++]);g(g.S + g.F * !Q, "Symbol", { for: function (a) {
        return e(M, a += "") ? M[a] : M[a] = F(a);
      }, keyFor: function (a) {
        if (V(a)) return q(M, a);throw TypeError(a + " is not a symbol!");
      }, useSetter: function () {
        S = !0;
      }, useSimple: function () {
        S = !1;
      } }), g(g.S + g.F * !Q, "Object", { create: Y, defineProperty: W, defineProperties: X, getOwnPropertyDescriptor: $, getOwnPropertyNames: _, getOwnPropertySymbols: aa }), G && g(g.S + g.F * (!Q || j(function () {
      var a = F();return "[null]" != H([a]) || "{}" != H({ a: a }) || "{}" != H(Object(a));
    })), "JSON", { stringify: function (a) {
        if (void 0 !== a && !V(a)) {
          for (var b, c, d = [a], e = 1; arguments.length > e;) d.push(arguments[e++]);return b = d[1], "function" == typeof b && (c = b), !c && s(b) || (b = function (a, b) {
            if (c && (b = c.call(this, a, b)), !V(b)) return b;
          }), d[1] = b, H.apply(G, d);
        }
      } }), F[I][K] || a("197")(F[I], K, F[I].valueOf), l(F, "Symbol"), l(Math, "Math", !0), l(d.JSON, "JSON", !0);
  }), a.registerDynamic("37", ["c"], !0, function (a, b, c) {
    a("c"), this || self;
  }), a.registerDynamic("246", ["245", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("245")("asyncIterator");
  }), a.registerDynamic("22f", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = !0;
  }), a.registerDynamic("244", ["168", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self),
        d = a("168"),
        e = "__core-js_shared__",
        f = d[e] || (d[e] = {});c.exports = function (a) {
      return f[a] || (f[a] = {});
    };
  }), a.registerDynamic("236", ["c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, 0),
        e = Math.random();c.exports = function (a) {
      return "Symbol(".concat(void 0 === a ? "" : a, ")_", (++d + e).toString(36));
    };
  }), a.registerDynamic("16b", ["244", "236", "168", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("244")("wks")),
        e = a("236"),
        f = a("168").Symbol,
        g = "function" == typeof f;(c.exports = function (a) {
      return d[a] || (d[a] = g && f[a] || (g ? f : e)("Symbol." + a));
    }).store = d;
  }), a.registerDynamic("233", ["16b", "c"], !0, function (a, b, c) {
    a("c"), this || self;b.f = a("16b");
  }), a.registerDynamic("110", ["10f", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("10f"));c.exports = function (a) {
      if (!d(a)) throw TypeError(a + " is not an object!");return a;
    };
  }), a.registerDynamic("168", ["c"], !0, function (a, b, c) {
    var d = (a("c"), this || self),
        d = c.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();"number" == typeof __g && (__g = d);
  }), a.registerDynamic("23c", ["10f", "168", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("10f")),
        e = a("168").document,
        f = d(e) && d(e.createElement);c.exports = function (a) {
      return f ? e.createElement(a) : {};
    };
  }), a.registerDynamic("240", ["16a", "194", "23c", "c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = !a("16a") && !a("194")(function () {
      return 7 != Object.defineProperty(a("23c")("div"), "a", { get: function () {
          return 7;
        } }).a;
    });
  }), a.registerDynamic("10f", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = function (a) {
      return "object" == typeof a ? null !== a : "function" == typeof a;
    };
  }), a.registerDynamic("23f", ["10f", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("10f"));c.exports = function (a, b) {
      if (!d(a)) return a;var c, e;if (b && "function" == typeof (c = a.toString) && !d(e = c.call(a))) return e;if ("function" == typeof (c = a.valueOf) && !d(e = c.call(a))) return e;if (!b && "function" == typeof (c = a.toString) && !d(e = c.call(a))) return e;throw TypeError("Can't convert object to primitive value");
    };
  }), a.registerDynamic("194", ["c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = function (a) {
      try {
        return !!a();
      } catch (a) {
        return !0;
      }
    };
  }), a.registerDynamic("16a", ["194", "c"], !0, function (a, b, c) {
    a("c"), this || self;c.exports = !a("194")(function () {
      return 7 != Object.defineProperty({}, "a", { get: function () {
          return 7;
        } }).a;
    });
  }), a.registerDynamic("169", ["110", "240", "23f", "16a", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, a("110")),
        e = a("240"),
        f = a("23f"),
        g = Object.defineProperty;b.f = a("16a") ? Object.defineProperty : function (a, b, c) {
      if (d(a), b = f(b, !0), d(c), e) try {
        return g(a, b, c);
      } catch (a) {}if ("get" in c || "set" in c) throw TypeError("Accessors not supported!");return "value" in c && (a[b] = c.value), a;
    };
  }), a.registerDynamic("245", ["168", "39", "22f", "233", "169", "c"], !0, function (a, b, c) {
    var d = (a("c"), this || self),
        d = a("168"),
        e = a("39"),
        f = a("22f"),
        g = a("233"),
        h = a("169").f;c.exports = function (a) {
      var b = e.Symbol || (e.Symbol = f ? {} : d.Symbol || {});"_" == a.charAt(0) || a in b || h(b, a, { value: g.f(a) });
    };
  }), a.registerDynamic("247", ["245", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("245")("observable");
  }), a.registerDynamic("39", ["c"], !0, function (a, b, c) {
    var d = (a("c"), this || self, c.exports = { version: "2.4.0" });"number" == typeof __e && (__e = d);
  }), a.registerDynamic("@system-env", [], !0, function () {
    return { default: !0 };
  }), a.registerDynamic("c", ["@system-env"], !0, function (a, b, c) {
    function d() {
      l = !1, h.length ? k = h.concat(k) : m = -1, k.length && e();
    }function e() {
      if (!l) {
        var a = setTimeout(d);l = !0;for (var b = k.length; b;) {
          for (h = k, k = []; ++m < b;) h && h[m].run();m = -1, b = k.length;
        }h = null, l = !1, clearTimeout(a);
      }
    }function f(a, b) {
      this.fun = a, this.array = b;
    }function g() {}var h,
        i = (this || self, a("@system-env").production),
        j = c.exports = {},
        k = [],
        l = !1,
        m = -1;j.nextTick = function (a) {
      var b = new Array(arguments.length - 1);if (arguments.length > 1) for (var c = 1; c < arguments.length; c++) b[c - 1] = arguments[c];k.push(new f(a, b)), 1 !== k.length || l || setTimeout(e, 0);
    }, f.prototype.run = function () {
      this.fun.apply(null, this.array);
    }, j.title = "browser", j.browser = !0, j.env = { NODE_ENV: i ? "production" : "development" }, j.argv = [], j.version = "", j.versions = {}, j.on = g, j.addListener = g, j.once = g, j.off = g, j.removeListener = g, j.removeAllListeners = g, j.emit = g, j.binding = function (a) {
      throw new Error("process.binding is not supported");
    }, j.cwd = function () {
      return "/";
    }, j.chdir = function (a) {
      throw new Error("process.chdir is not supported");
    }, j.umask = function () {
      return 0;
    };
  }), a.registerDynamic("248", ["1b0", "37", "246", "247", "39", "c"], !0, function (a, b, c) {
    a("c"), this || self;a("1b0"), a("37"), a("246"), a("247"), c.exports = a("39").Symbol;
  }), a.registerDynamic("d8", ["248"], !0, function (a, b, c) {
    this || self;c.exports = { default: a("248"), __esModule: !0 };
  }), a.registerDynamic("32", ["234", "d8"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      return a && a.__esModule ? a : { default: a };
    }this || self;b.__esModule = !0;var e = a("234"),
        f = d(e),
        g = a("d8"),
        h = d(g),
        i = "function" == typeof h.default && "symbol" == typeof f.default ? function (a) {
      return typeof a;
    } : function (a) {
      return a && "function" == typeof h.default && a.constructor === h.default && a !== h.default.prototype ? "symbol" : typeof a;
    };b.default = "function" == typeof h.default && "symbol" === i(f.default) ? function (a) {
      return void 0 === a ? "undefined" : i(a);
    } : function (a) {
      return a && "function" == typeof h.default && a.constructor === h.default && a !== h.default.prototype ? "symbol" : void 0 === a ? "undefined" : i(a);
    };
  }), a.registerDynamic("21d", ["17", "60", "32", "11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      return Array.isArray(a) ? "array" : null === a ? "null" : void 0 === a ? "undefined" : void 0 === a ? "undefined" : (0, s.default)(a);
    }function g(a) {
      function b(b, c, d) {
        if (Array.isArray(d)) for (var e = 0; e < d.length; e++) a(b, c + "[" + e + "]", d[e]);
      }return b.each = a, b;
    }function h() {
      function a(a, b, d) {
        if (c.indexOf(d) < 0) throw new TypeError("Property " + b + " expected value to be one of " + (0, q.default)(c) + " but got " + (0, q.default)(d));
      }for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];return a.oneOf = c, a;
    }function i() {
      function a(a, b, d) {
        for (var e = !1, f = c, g = Array.isArray(f), h = 0, f = g ? f : (0, o.default)(f);;) {
          var i;if (g) {
            if (h >= f.length) break;i = f[h++];
          } else {
            if (h = f.next(), h.done) break;i = h.value;
          }var j = i;if (u.is(j, d)) {
            e = !0;break;
          }
        }if (!e) throw new TypeError("Property " + b + " of " + a.type + " expected node to be of a type " + (0, q.default)(c) + " but instead got " + (0, q.default)(d && d.type));
      }for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];return a.oneOfNodeTypes = c, a;
    }function j() {
      function a(a, b, d) {
        for (var e = !1, g = c, h = Array.isArray(g), i = 0, g = h ? g : (0, o.default)(g);;) {
          var j;if (h) {
            if (i >= g.length) break;j = g[i++];
          } else {
            if (i = g.next(), i.done) break;j = i.value;
          }var k = j;if (f(d) === k || u.is(k, d)) {
            e = !0;break;
          }
        }if (!e) throw new TypeError("Property " + b + " of " + a.type + " expected node to be of a type " + (0, q.default)(c) + " but instead got " + (0, q.default)(d && d.type));
      }for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];return a.oneOfNodeOrValueTypes = c, a;
    }function k(a) {
      function b(b, c, d) {
        if (f(d) !== a) throw new TypeError("Property " + c + " expected type of " + a + " but got " + f(d));
      }return b.type = a, b;
    }function l() {
      function a() {
        for (var a = c, b = Array.isArray(a), d = 0, a = b ? a : (0, o.default)(a);;) {
          var e;if (b) {
            if (d >= a.length) break;e = a[d++];
          } else {
            if (d = a.next(), d.done) break;e = d.value;
          }e.apply(void 0, arguments);
        }
      }for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];return a.chainOf = c, a;
    }function m(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          c = b.inherits && A[b.inherits] || {};b.fields = b.fields || c.fields || {}, b.visitor = b.visitor || c.visitor || [], b.aliases = b.aliases || c.aliases || [], b.builder = b.builder || c.builder || b.visitor || [], b.deprecatedAlias && (z[b.deprecatedAlias] = a);for (var d = b.visitor.concat(b.builder), e = Array.isArray(d), g = 0, d = e ? d : (0, o.default)(d);;) {
        var h;if (e) {
          if (g >= d.length) break;h = d[g++];
        } else {
          if (g = d.next(), g.done) break;h = g.value;
        }var i = h;b.fields[i] = b.fields[i] || {};
      }for (var j in b.fields) {
        var l = b.fields[j];-1 === b.builder.indexOf(j) && (l.optional = !0), void 0 === l.default ? l.default = null : l.validate || (l.validate = k(f(l.default)));
      }v[a] = b.visitor, y[a] = b.builder, x[a] = b.fields, w[a] = b.aliases, A[a] = b;
    }this || self;b.__esModule = !0, b.DEPRECATED_KEYS = b.BUILDER_KEYS = b.NODE_FIELDS = b.ALIAS_KEYS = b.VISITOR_KEYS = void 0;var n = a("17"),
        o = e(n),
        p = a("60"),
        q = e(p),
        r = a("32"),
        s = e(r);b.assertEach = g, b.assertOneOf = h, b.assertNodeType = i, b.assertNodeOrValueType = j, b.assertValueType = k, b.chain = l, b.default = m;var t = a("11"),
        u = d(t),
        v = b.VISITOR_KEYS = {},
        w = b.ALIAS_KEYS = {},
        x = b.NODE_FIELDS = {},
        y = b.BUILDER_KEYS = {},
        z = b.DEPRECATED_KEYS = {},
        A = {};
  }), a.registerDynamic("249", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return !!a && /^[a-z]|\-/.test(a);
    }function f(a, b) {
      for (var c = a.value.split(/\r\n|\n|\r/), d = 0, e = 0; e < c.length; e++) c[e].match(/[^ \t]/) && (d = e);for (var f = "", g = 0; g < c.length; g++) {
        var h = c[g],
            j = 0 === g,
            k = g === c.length - 1,
            l = g === d,
            m = h.replace(/\t/g, " ");j || (m = m.replace(/^[ ]+/, "")), k || (m = m.replace(/[ ]+$/, "")), m && (l || (m += " "), f += m);
      }f && b.push(i.stringLiteral(f));
    }function g(a) {
      for (var b = [], c = 0; c < a.children.length; c++) {
        var d = a.children[c];i.isJSXText(d) ? f(d, b) : (i.isJSXExpressionContainer(d) && (d = d.expression), i.isJSXEmptyExpression(d) || b.push(d));
      }return b;
    }this || self;b.__esModule = !0, b.isReactComponent = void 0, b.isCompatTag = e, b.buildChildren = g;var h = a("11"),
        i = d(h);b.isReactComponent = i.buildMatchMemberExpression("React.Component");
  }), a.registerDynamic("11", ["1b1", "17", "15", "60", "1bc", "1b7", "1bb", "1c3", "1c4", "1c5", "d3", "219", "223", "21d", "249"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      var b = Z["is" + a];b || (b = Z["is" + a] = function (b, c) {
        return Z.is(a, b, c);
      }), Z["assert" + a] = function (c, d) {
        if (d = d || {}, !b(c, d)) throw new Error("Expected type " + (0, K.default)(a) + " with option " + (0, K.default)(d));
      };
    }function g(a, b, c) {
      return !!b && !!h(b.type, a) && (void 0 === c || Z.shallowEqual(b, c));
    }function h(a, b) {
      if (a === b) return !0;if (Z.ALIAS_KEYS[b]) return !1;var c = Z.FLIPPED_ALIAS_KEYS[b];if (c) {
        if (c[0] === a) return !0;for (var d = c, e = Array.isArray(d), f = 0, d = e ? d : (0, G.default)(d);;) {
          var g;if (e) {
            if (f >= d.length) break;g = d[f++];
          } else {
            if (f = d.next(), f.done) break;g = f.value;
          }if (a === g) return !0;
        }
      }return !1;
    }function i(a, b, c) {
      if (a) {
        var d = Z.NODE_FIELDS[a.type];if (d) {
          var e = d[b];e && e.validate && (e.optional && null == c || e.validate(a, b, c));
        }
      }
    }function j(a, b) {
      for (var c = (0, I.default)(b), d = c, e = Array.isArray(d), f = 0, d = e ? d : (0, G.default)(d);;) {
        var g;if (e) {
          if (f >= d.length) break;g = d[f++];
        } else {
          if (f = d.next(), f.done) break;g = f.value;
        }var h = g;if (a[h] !== b[h]) return !1;
      }return !0;
    }function k(a, b, c) {
      return a.object = Z.memberExpression(a.object, a.property, a.computed), a.property = b, a.computed = !!c, a;
    }function l(a, b) {
      return a.object = Z.memberExpression(b, a.object), a;
    }function m(a) {
      var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "body";return a[b] = Z.toBlock(a[b], a);
    }function n(a) {
      if (!a) return a;var b = {};for (var c in a) "_" !== c[0] && (b[c] = a[c]);return b;
    }function o(a) {
      var b = n(a);return delete b.loc, b;
    }function p(a) {
      if (!a) return a;var b = {};for (var c in a) if ("_" !== c[0]) {
        var d = a[c];d && (d.type ? d = Z.cloneDeep(d) : Array.isArray(d) && (d = d.map(Z.cloneDeep))), b[c] = d;
      }return b;
    }function q(a, b) {
      var c = a.split(".");return function (a) {
        if (!Z.isMemberExpression(a)) return !1;for (var d = [a], e = 0; d.length;) {
          var f = d.shift();if (b && e === c.length) return !0;if (Z.isIdentifier(f)) {
            if (c[e] !== f.name) return !1;
          } else {
            if (!Z.isStringLiteral(f)) {
              if (Z.isMemberExpression(f)) {
                if (f.computed && !Z.isStringLiteral(f.property)) return !1;d.push(f.object), d.push(f.property);continue;
              }return !1;
            }if (c[e] !== f.value) return !1;
          }if (++e > c.length) return !1;
        }return !0;
      };
    }function r(a) {
      for (var b = Z.COMMENT_KEYS, c = Array.isArray(b), d = 0, b = c ? b : (0, G.default)(b);;) {
        var e;if (c) {
          if (d >= b.length) break;e = b[d++];
        } else {
          if (d = b.next(), d.done) break;e = d.value;
        }delete a[e];
      }return a;
    }function s(a, b) {
      return t(a, b), u(a, b), v(a, b), a;
    }function t(a, b) {
      w("trailingComments", a, b);
    }function u(a, b) {
      w("leadingComments", a, b);
    }function v(a, b) {
      w("innerComments", a, b);
    }function w(a, b, c) {
      b && c && (b[a] = (0, V.default)([].concat(b[a], c[a]).filter(Boolean)));
    }function x(a, b) {
      if (!a || !b) return a;for (var c = Z.INHERIT_KEYS.optional, d = Array.isArray(c), e = 0, c = d ? c : (0, G.default)(c);;) {
        var f;if (d) {
          if (e >= c.length) break;f = c[e++];
        } else {
          if (e = c.next(), e.done) break;f = e.value;
        }var g = f;null == a[g] && (a[g] = b[g]);
      }for (var h in b) "_" === h[0] && (a[h] = b[h]);for (var i = Z.INHERIT_KEYS.force, j = Array.isArray(i), k = 0, i = j ? i : (0, G.default)(i);;) {
        var l;if (j) {
          if (k >= i.length) break;l = i[k++];
        } else {
          if (k = i.next(), k.done) break;l = k.value;
        }var m = l;a[m] = b[m];
      }return Z.inheritsComments(a, b), a;
    }function y(a) {
      if (!z(a)) throw new TypeError("Not a valid node " + (a && a.type));
    }function z(a) {
      return !(!a || !W.VISITOR_KEYS[a.type]);
    }function A(a, b, c) {
      if (a) {
        var d = Z.VISITOR_KEYS[a.type];if (d) {
          c = c || {}, b(a, c);for (var e = d, f = Array.isArray(e), g = 0, e = f ? e : (0, G.default)(e);;) {
            var h;if (f) {
              if (g >= e.length) break;h = e[g++];
            } else {
              if (g = e.next(), g.done) break;h = g.value;
            }var i = h,
                j = a[i];if (Array.isArray(j)) for (var k = j, l = Array.isArray(k), m = 0, k = l ? k : (0, G.default)(k);;) {
              var n;if (l) {
                if (m >= k.length) break;n = k[m++];
              } else {
                if (m = k.next(), m.done) break;n = m.value;
              }var o = n;A(o, b, c);
            } else A(j, b, c);
          }
        }
      }
    }function B(a, b) {
      b = b || {};for (var c = b.preserveComments ? ba : ca, d = c, e = Array.isArray(d), f = 0, d = e ? d : (0, G.default)(d);;) {
        var g;if (e) {
          if (f >= d.length) break;g = d[f++];
        } else {
          if (f = d.next(), f.done) break;g = f.value;
        }var h = g;null != a[h] && (a[h] = void 0);
      }for (var i in a) "_" === i[0] && null != a[i] && (a[i] = void 0);for (var j = (0, E.default)(a), k = j, l = Array.isArray(k), m = 0, k = l ? k : (0, G.default)(k);;) {
        var n;if (l) {
          if (m >= k.length) break;n = k[m++];
        } else {
          if (m = k.next(), m.done) break;n = m.value;
        }a[n] = null;
      }
    }function C(a, b) {
      return A(a, B, b), a;
    }this || self;b.__esModule = !0, b.createTypeAnnotationBasedOnTypeof = b.removeTypeDuplicates = b.createUnionTypeAnnotation = b.valueToNode = b.toBlock = b.toExpression = b.toStatement = b.toBindingIdentifierName = b.toIdentifier = b.toKeyAlias = b.toSequenceExpression = b.toComputedKey = b.isNodesEquivalent = b.isImmutable = b.isScope = b.isSpecifierDefault = b.isVar = b.isBlockScoped = b.isLet = b.isValidIdentifier = b.isReferenced = b.isBinding = b.getOuterBindingIdentifiers = b.getBindingIdentifiers = b.TYPES = b.react = b.DEPRECATED_KEYS = b.BUILDER_KEYS = b.NODE_FIELDS = b.ALIAS_KEYS = b.VISITOR_KEYS = b.NOT_LOCAL_BINDING = b.BLOCK_SCOPED_SYMBOL = b.INHERIT_KEYS = b.UNARY_OPERATORS = b.STRING_UNARY_OPERATORS = b.NUMBER_UNARY_OPERATORS = b.BOOLEAN_UNARY_OPERATORS = b.BINARY_OPERATORS = b.NUMBER_BINARY_OPERATORS = b.BOOLEAN_BINARY_OPERATORS = b.COMPARISON_BINARY_OPERATORS = b.EQUALITY_BINARY_OPERATORS = b.BOOLEAN_NUMBER_BINARY_OPERATORS = b.UPDATE_OPERATORS = b.LOGICAL_OPERATORS = b.COMMENT_KEYS = b.FOR_INIT_KEYS = b.FLATTENABLE_KEYS = b.STATEMENT_OR_BLOCK_KEYS = void 0;var D = a("1b1"),
        E = e(D),
        F = a("17"),
        G = e(F),
        H = a("15"),
        I = e(H),
        J = a("60"),
        K = e(J),
        L = a("1bc");Object.defineProperty(b, "STATEMENT_OR_BLOCK_KEYS", { enumerable: !0, get: function () {
        return L.STATEMENT_OR_BLOCK_KEYS;
      } }), Object.defineProperty(b, "FLATTENABLE_KEYS", { enumerable: !0, get: function () {
        return L.FLATTENABLE_KEYS;
      } }), Object.defineProperty(b, "FOR_INIT_KEYS", { enumerable: !0, get: function () {
        return L.FOR_INIT_KEYS;
      } }), Object.defineProperty(b, "COMMENT_KEYS", { enumerable: !0, get: function () {
        return L.COMMENT_KEYS;
      } }), Object.defineProperty(b, "LOGICAL_OPERATORS", { enumerable: !0, get: function () {
        return L.LOGICAL_OPERATORS;
      } }), Object.defineProperty(b, "UPDATE_OPERATORS", { enumerable: !0, get: function () {
        return L.UPDATE_OPERATORS;
      } }), Object.defineProperty(b, "BOOLEAN_NUMBER_BINARY_OPERATORS", { enumerable: !0, get: function () {
        return L.BOOLEAN_NUMBER_BINARY_OPERATORS;
      } }), Object.defineProperty(b, "EQUALITY_BINARY_OPERATORS", { enumerable: !0, get: function () {
        return L.EQUALITY_BINARY_OPERATORS;
      } }), Object.defineProperty(b, "COMPARISON_BINARY_OPERATORS", { enumerable: !0, get: function () {
        return L.COMPARISON_BINARY_OPERATORS;
      } }), Object.defineProperty(b, "BOOLEAN_BINARY_OPERATORS", { enumerable: !0, get: function () {
        return L.BOOLEAN_BINARY_OPERATORS;
      } }), Object.defineProperty(b, "NUMBER_BINARY_OPERATORS", { enumerable: !0, get: function () {
        return L.NUMBER_BINARY_OPERATORS;
      } }), Object.defineProperty(b, "BINARY_OPERATORS", { enumerable: !0, get: function () {
        return L.BINARY_OPERATORS;
      } }), Object.defineProperty(b, "BOOLEAN_UNARY_OPERATORS", { enumerable: !0, get: function () {
        return L.BOOLEAN_UNARY_OPERATORS;
      } }), Object.defineProperty(b, "NUMBER_UNARY_OPERATORS", { enumerable: !0, get: function () {
        return L.NUMBER_UNARY_OPERATORS;
      } }), Object.defineProperty(b, "STRING_UNARY_OPERATORS", { enumerable: !0, get: function () {
        return L.STRING_UNARY_OPERATORS;
      } }), Object.defineProperty(b, "UNARY_OPERATORS", { enumerable: !0, get: function () {
        return L.UNARY_OPERATORS;
      } }), Object.defineProperty(b, "INHERIT_KEYS", { enumerable: !0, get: function () {
        return L.INHERIT_KEYS;
      } }), Object.defineProperty(b, "BLOCK_SCOPED_SYMBOL", { enumerable: !0, get: function () {
        return L.BLOCK_SCOPED_SYMBOL;
      } }), Object.defineProperty(b, "NOT_LOCAL_BINDING", { enumerable: !0, get: function () {
        return L.NOT_LOCAL_BINDING;
      } }), b.is = g, b.isType = h, b.validate = i, b.shallowEqual = j, b.appendToMemberExpression = k, b.prependToMemberExpression = l, b.ensureBlock = m, b.clone = n, b.cloneWithoutLoc = o, b.cloneDeep = p, b.buildMatchMemberExpression = q, b.removeComments = r, b.inheritsComments = s, b.inheritTrailingComments = t, b.inheritLeadingComments = u, b.inheritInnerComments = v, b.inherits = x, b.assertNode = y, b.isNode = z, b.traverseFast = A, b.removeProperties = B, b.removePropertiesDeep = C;var M = a("1b7");Object.defineProperty(b, "getBindingIdentifiers", { enumerable: !0, get: function () {
        return M.getBindingIdentifiers;
      } }), Object.defineProperty(b, "getOuterBindingIdentifiers", { enumerable: !0, get: function () {
        return M.getOuterBindingIdentifiers;
      } });var N = a("1bb");Object.defineProperty(b, "isBinding", { enumerable: !0, get: function () {
        return N.isBinding;
      } }), Object.defineProperty(b, "isReferenced", { enumerable: !0, get: function () {
        return N.isReferenced;
      } }), Object.defineProperty(b, "isValidIdentifier", { enumerable: !0, get: function () {
        return N.isValidIdentifier;
      } }), Object.defineProperty(b, "isLet", { enumerable: !0, get: function () {
        return N.isLet;
      } }), Object.defineProperty(b, "isBlockScoped", { enumerable: !0, get: function () {
        return N.isBlockScoped;
      } }), Object.defineProperty(b, "isVar", { enumerable: !0, get: function () {
        return N.isVar;
      } }), Object.defineProperty(b, "isSpecifierDefault", { enumerable: !0, get: function () {
        return N.isSpecifierDefault;
      } }), Object.defineProperty(b, "isScope", { enumerable: !0, get: function () {
        return N.isScope;
      } }), Object.defineProperty(b, "isImmutable", { enumerable: !0, get: function () {
        return N.isImmutable;
      } }), Object.defineProperty(b, "isNodesEquivalent", { enumerable: !0, get: function () {
        return N.isNodesEquivalent;
      } });var O = a("1c3");Object.defineProperty(b, "toComputedKey", { enumerable: !0, get: function () {
        return O.toComputedKey;
      } }), Object.defineProperty(b, "toSequenceExpression", { enumerable: !0, get: function () {
        return O.toSequenceExpression;
      } }), Object.defineProperty(b, "toKeyAlias", { enumerable: !0, get: function () {
        return O.toKeyAlias;
      } }), Object.defineProperty(b, "toIdentifier", { enumerable: !0, get: function () {
        return O.toIdentifier;
      } }), Object.defineProperty(b, "toBindingIdentifierName", { enumerable: !0, get: function () {
        return O.toBindingIdentifierName;
      } }), Object.defineProperty(b, "toStatement", { enumerable: !0, get: function () {
        return O.toStatement;
      } }), Object.defineProperty(b, "toExpression", { enumerable: !0, get: function () {
        return O.toExpression;
      } }), Object.defineProperty(b, "toBlock", { enumerable: !0, get: function () {
        return O.toBlock;
      } }), Object.defineProperty(b, "valueToNode", { enumerable: !0, get: function () {
        return O.valueToNode;
      } });var P = a("1c4");Object.defineProperty(b, "createUnionTypeAnnotation", { enumerable: !0, get: function () {
        return P.createUnionTypeAnnotation;
      } }), Object.defineProperty(b, "removeTypeDuplicates", { enumerable: !0, get: function () {
        return P.removeTypeDuplicates;
      } }), Object.defineProperty(b, "createTypeAnnotationBasedOnTypeof", { enumerable: !0, get: function () {
        return P.createTypeAnnotationBasedOnTypeof;
      } });var Q = a("1c5"),
        R = e(Q),
        S = a("d3"),
        T = e(S),
        U = a("219"),
        V = e(U);a("223");var W = a("21d"),
        X = a("249"),
        Y = d(X),
        Z = b;b.VISITOR_KEYS = W.VISITOR_KEYS, b.ALIAS_KEYS = W.ALIAS_KEYS, b.NODE_FIELDS = W.NODE_FIELDS, b.BUILDER_KEYS = W.BUILDER_KEYS, b.DEPRECATED_KEYS = W.DEPRECATED_KEYS, b.react = Y;for (var $ in Z.VISITOR_KEYS) f($);Z.FLIPPED_ALIAS_KEYS = {}, (0, I.default)(Z.ALIAS_KEYS).forEach(function (a) {
      Z.ALIAS_KEYS[a].forEach(function (b) {
        (Z.FLIPPED_ALIAS_KEYS[b] = Z.FLIPPED_ALIAS_KEYS[b] || []).push(a);
      });
    }), (0, I.default)(Z.FLIPPED_ALIAS_KEYS).forEach(function (a) {
      Z[a.toUpperCase() + "_TYPES"] = Z.FLIPPED_ALIAS_KEYS[a], f(a);
    });b.TYPES = (0, I.default)(Z.VISITOR_KEYS).concat((0, I.default)(Z.FLIPPED_ALIAS_KEYS)).concat((0, I.default)(Z.DEPRECATED_KEYS));(0, I.default)(Z.BUILDER_KEYS).forEach(function (a) {
      function b() {
        if (arguments.length > c.length) throw new Error("t." + a + ": Too many arguments passed. Received " + arguments.length + " but can receive no more than " + c.length);var b = {};b.type = a;for (var d = 0, e = c, f = Array.isArray(e), g = 0, e = f ? e : (0, G.default)(e);;) {
          var h;if (f) {
            if (g >= e.length) break;h = e[g++];
          } else {
            if (g = e.next(), g.done) break;h = g.value;
          }var j = h,
              k = Z.NODE_FIELDS[a][j],
              l = arguments[d++];void 0 === l && (l = (0, T.default)(k.default)), b[j] = l;
        }for (var m in b) i(b, m, b[m]);return b;
      }var c = Z.BUILDER_KEYS[a];Z[a] = b, Z[a[0].toLowerCase() + a.slice(1)] = b;
    });var _ = function (a) {
      function b(b) {
        return function () {
          return console.trace("The node type " + a + " has been renamed to " + c), b.apply(this, arguments);
        };
      }var c = Z.DEPRECATED_KEYS[a];Z[a] = Z[a[0].toLowerCase() + a.slice(1)] = b(Z[c]), Z["is" + a] = b(Z["is" + c]), Z["assert" + a] = b(Z["assert" + c]);
    };for (var aa in Z.DEPRECATED_KEYS) _(aa);(0, R.default)(Z), (0, R.default)(Z.VISITOR_KEYS);var ba = ["tokens", "start", "end", "loc", "raw", "rawValue"],
        ca = Z.COMMENT_KEYS.concat(["comments"]).concat(ba);
  }), a.registerDynamic("1ad", ["11"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return h.memberExpression(h.identifier("regeneratorRuntime"), h.identifier(a), !1);
    }function f(a) {
      return a.isReferenced() || a.parentPath.isAssignmentExpression({ left: a.node });
    }this || self;b.__esModule = !0, b.runtimeProperty = e, b.isReference = f;var g = a("11"),
        h = d(g);
  }), a.registerDynamic("1ac", [], !0, function (a, b, c) {
    "use strict";
    function d(a, b, c) {
      if (l) try {
        l.call(k, a, b, { value: c });
      } catch (d) {
        a[b] = c;
      } else a[b] = c;
    }function e(a) {
      return a && (d(a, "call", a.call), d(a, "apply", a.apply)), a;
    }function f(a) {
      return m ? m.call(k, a) : (q.prototype = a || null, new q());
    }function g() {
      do {
        var a = h(p.call(o.call(r(), 36), 2));
      } while (n.call(s, a));return s[a] = a;
    }function h(a) {
      var b = {};return b[a] = !0, Object.keys(b)[0];
    }function i(a) {
      return f(null);
    }function j(a) {
      function b(b) {
        function c(c, d) {
          if (c === h) return d ? f = null : f || (f = a(b));
        }var f;d(b, e, c);
      }function c(a) {
        return n.call(a, e) || b(a), a[e](h);
      }var e = g(),
          h = f(null);return a = a || i, c.forget = function (a) {
        n.call(a, e) && a[e](h, !0);
      }, c;
    }var k = (this || self, Object),
        l = Object.defineProperty,
        m = Object.create;e(l), e(m);var n = e(Object.prototype.hasOwnProperty),
        o = e(Number.prototype.toString),
        p = e(String.prototype.slice),
        q = function () {},
        r = Math.random,
        s = f(null);b.makeUniqueKey = g;var t = Object.getOwnPropertyNames;Object.getOwnPropertyNames = function (a) {
      for (var b = t(a), c = 0, d = 0, e = b.length; c < e; ++c) n.call(s, b[c]) || (c > d && (b[d] = b[c]), ++d);return b.length = d, b;
    }, b.makeAccessor = j;
  }), a.registerDynamic("24a", ["1a8", "11", "1a6", "1a9", "1ae", "1ad", "1ac"], !0, function (a, b, c) {
    "use strict";
    function d(a) {
      if (a && a.__esModule) return a;var b = {};if (null != a) for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);return b.default = a, b;
    }function e(a) {
      return a && a.__esModule ? a : { default: a };
    }function f(a) {
      var b = a.node;if (l.assertFunction(b), b.id || (b.id = a.scope.parent.generateUidIdentifier("callee")), b.generator && l.isFunctionDeclaration(b)) {
        var c = a.findParent(function (a) {
          return a.isProgram() || a.isBlockStatement();
        });if (!c) return b.id;var d = g(c),
            e = d.declarations[0].id,
            f = d.declarations[0].init.callee.object;l.assertArrayExpression(f);var h = f.elements.length;return f.elements.push(b.id), l.memberExpression(e, l.numericLiteral(h), !0);
      }return b.id;
    }function g(a) {
      var b = a.node;j.default.ok(Array.isArray(b.body));var c = s(b);return c.decl ? c.decl : (c.decl = l.variableDeclaration("var", [l.variableDeclarator(a.scope.generateUidIdentifier("marked"), l.callExpression(l.memberExpression(l.arrayExpression([]), l.identifier("map"), !1), [r.runtimeProperty("mark")]))]), a.unshiftContainer("body", c.decl), c.decl);
    }function h(a, b) {
      var c = { didRenameArguments: !1, argsId: b };return a.traverse(t, c), c.didRenameArguments;
    }var i = (this || self, a("1a8")),
        j = e(i),
        k = a("11"),
        l = d(k),
        m = a("1a6"),
        n = a("1a9"),
        o = a("1ae"),
        p = e(o),
        q = a("1ad"),
        r = d(q),
        s = a("1ac").makeAccessor();b.visitor = { Function: { exit: function (a, b) {
          var c = a.node;if (c.generator) {
            if (c.async) {
              if (!1 === b.opts.asyncGenerators) return;
            } else if (!1 === b.opts.generators) return;
          } else {
            if (!c.async) return;if (!1 === b.opts.async) return;
          }a = (0, p.default)(a), c = a.node;var d = a.scope.generateUidIdentifier("context"),
              e = a.scope.generateUidIdentifier("args");a.ensureBlock();var g = a.get("body");c.async && g.traverse(v), g.traverse(u, { context: d });var i = [],
              j = [];g.get("body").forEach(function (a) {
            var b = a.node;l.isExpressionStatement(b) && l.isStringLiteral(b.expression) ? i.push(b) : b && null != b._blockHoist ? i.push(b) : j.push(b);
          }), i.length > 0 && (g.node.body = j);var k = f(a);l.assertIdentifier(c.id);var o = l.identifier(c.id.name + "$"),
              q = (0, m.hoist)(a);if (h(a, e)) {
            q = q || l.variableDeclaration("var", []);var s = l.identifier("arguments");s._shadowedFunctionLiteral = a, q.declarations.push(l.variableDeclarator(e, s));
          }var t = new n.Emitter(d);t.explode(a.get("body")), q && q.declarations.length > 0 && i.push(q);var w = [t.getContextFunction(o), c.generator ? k : l.nullLiteral(), l.thisExpression()],
              x = t.getTryLocsList();x && w.push(x);var y = l.callExpression(r.runtimeProperty(c.async ? "async" : "wrap"), w);i.push(l.returnStatement(y)), c.body = l.blockStatement(i);var z = g.node.directives;z && (c.body.directives = z);var A = c.generator;A && (c.generator = !1), c.async && (c.async = !1), A && l.isExpression(c) && a.replaceWith(l.callExpression(r.runtimeProperty("mark"), [c])), a.requeue();
        } } };var t = { "FunctionExpression|FunctionDeclaration": function (a) {
        a.skip();
      }, Identifier: function (a, b) {
        "arguments" === a.node.name && r.isReference(a) && (a.replaceWith(b.argsId), b.didRenameArguments = !0);
      } },
        u = { MetaProperty: function (a) {
        var b = a.node;"function" === b.meta.name && "sent" === b.property.name && a.replaceWith(l.memberExpression(this.context, l.identifier("_sent")));
      } },
        v = { Function: function (a) {
        a.skip();
      }, AwaitExpression: function (a) {
        var b = a.node.argument;a.replaceWith(l.yieldExpression(l.callExpression(r.runtimeProperty("awrap"), [b]), !1));
      } };
  }), a.registerDynamic("24b", ["24a"], !0, function (a, b, c) {
    "use strict";
    this || self;b.__esModule = !0, b.default = function () {
      return a("24a");
    };
  }), a.registerDynamic("24c", ["24b"], !0, function (a, b, c) {
    "use strict";
    this || self;c.exports = a("24b");
  }), a.register("a", ["de", "f1", "df", "e1", "e3", "e8", "e9", "f2", "108", "109", "10a", "10b", "10c", "10d", "11d", "11e", "11f", "120", "121", "122", "12f", "130", "131", "136", "137", "1a5", "24c"], function (a, b) {
    "use strict";
    var c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N;return { setters: [function (a) {
        c = a.default;
      }, function (a) {
        d = a.default;
      }, function (a) {
        e = a.default;
      }, function (a) {
        f = a.default;
      }, function (a) {
        g = a.default;
      }, function (a) {
        h = a.default;
      }, function (a) {
        i = a.default;
      }, function (a) {
        j = a.default;
      }, function (a) {
        k = a.default;
      }, function (a) {
        l = a.default;
      }, function (a) {
        m = a.default;
      }, function (a) {
        n = a.default;
      }, function (a) {
        o = a.default;
      }, function (a) {
        p = a.default;
      }, function (a) {
        q = a.default;
      }, function (a) {
        r = a.default;
      }, function (a) {
        s = a.default;
      }, function (a) {
        t = a.default;
      }, function (a) {
        u = a.default;
      }, function (a) {
        v = a.default;
      }, function (a) {
        w = a.default;
      }, function (a) {
        x = a.default;
      }, function (a) {
        y = a.default;
      }, function (a) {
        z = a.default;
      }, function (a) {
        A = a.default;
      }, function (a) {
        B = a.default;
      }, function (a) {
        C = a.default;
      }], execute: function () {
        a("babel", c), a("modulesRegister", D = { plugins: [d, e] }), a("modulesRegister", D), a("externalHelpers", E = { plugins: [f] }), a("externalHelpers", E), a("runtimeTransform", F = { plugins: [[g, { polyfill: !1 }]] }), a("runtimeTransform", F), a("pluginsStage1", G = h.plugins), a("pluginsStage2", H = i.plugins), a("pluginsStage3", I = j.plugins), a("pluginsReact", J = k.plugins), a("pluginsStage1", G), a("pluginsStage2", H), a("pluginsStage3", I), a("pluginsReact", J), K = [l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B], L = [C, { async: !1, asyncGenerators: !1 }], a("presetES2015", M = { plugins: [d].concat(K, [L]) }), a("presetES2015", M), a("presetES2015Register", N = { plugins: [d].concat(K, [e, L]) }), a("presetES2015Register", N);
      } };
  });
})(function (a) {
  System.registerDynamic("npm:systemjs-plugin-babel@0.0.25/systemjs-babel-browser.js", [], false, function ($__require, $__exports, $__module) {
    if (typeof a === "function") {
      return a.call(this);
    } else {
      return a;
    }
  });
});
System.registerDynamic("npm:systemjs-plugin-babel@0.0.25.json", [], true, function() {
  return {
    "main": "plugin-babel.js",
    "map": {
      "systemjs-babel-build": {
        "browser": "./systemjs-babel-browser.js",
        "default": "./systemjs-babel-browser.js"
      }
    },
    "meta": {
      "./plugin-babel.js": {
        "format": "cjs"
      }
    }
  };
});

System.registerDynamic('npm:systemjs-plugin-babel@0.0.25/plugin-babel.js', ['systemjs-babel-build'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  var babel = $__require('systemjs-babel-build').babel;

  // the SystemJS babel build includes standard presets
  var es2015 = $__require('systemjs-babel-build').presetES2015;
  var es2015Register = $__require('systemjs-babel-build').presetES2015Register;
  var modulesRegister = $__require('systemjs-babel-build').modulesRegister;
  var stage3 = $__require('systemjs-babel-build').pluginsStage3;
  var stage2 = $__require('systemjs-babel-build').pluginsStage2;
  var stage1 = $__require('systemjs-babel-build').pluginsStage1;
  var react = $__require('systemjs-babel-build').pluginsReact;

  var externalHelpers = $__require('systemjs-babel-build').externalHelpers;
  var runtimeTransform = $__require('systemjs-babel-build').runtimeTransform;

  var babelRuntimePath;
  var modularHelpersPath = System.decanonicalize('./babel-helpers/', module.id);
  var externalHelpersPath = System.decanonicalize('./babel-helpers.js', module.id);
  var regeneratorRuntimePath = System.decanonicalize('./regenerator-runtime.js', module.id);

  if (modularHelpersPath.substr(modularHelpersPath.length - 3, 3) == '.js') modularHelpersPath = modularHelpersPath.substr(0, modularHelpersPath.length - 3);

  // in builds we want to embed canonical names to helpers
  if (System.getCanonicalName) {
    modularHelpersPath = System.getCanonicalName(modularHelpersPath);
    externalHelpersPath = System.getCanonicalName(externalHelpersPath);
    regeneratorRuntimePath = System.getCanonicalName(regeneratorRuntimePath);
  }

  // disable SystemJS runtime detection
  SystemJS._loader.loadedTranspilerRuntime = true;

  function prepend(a, b) {
    for (var p in b) if (!(p in a)) a[p] = b[p];
    return a;
  }

  /*
   * babelOptions:
   *   modularRuntime: true / false (whether to use babel-runtime or babel/external-helpers respectively)
   *   sourceMaps: true / false (defaults to true)
   *   es2015: true / false (defaults to true)
   *   stage3: true / false (defaults to true)
   *   stage2: true / false (defaults to true)
   *   stage1: true / false (defaults to false)
   *   react: true / false (defaults to false)
   *   plugins: array of custom plugins (objects or module name strings)
   *   presets: array of custom presets (objects or module name strings)
   *   compact: as in Babel
   *   comments: as in Babel
   *
   * babelOptions can be set at SystemJS.babelOptions OR on the metadata object for a given module
   */
  var defaultBabelOptions = {
    modularRuntime: true,
    sourceMaps: true,
    es2015: true,
    stage3: true,
    stage2: true,
    stage1: false,
    react: false,
    compact: false,
    comments: true
  };

  exports.translate = function (load, traceOpts) {
    // we don't transpile anything other than CommonJS or ESM
    if (load.metadata.format == 'global' || load.metadata.format == 'amd' || load.metadata.format == 'json') throw new TypeError('plugin-babel cannot transpile ' + load.metadata.format + ' modules. Ensure "' + load.name + '" is configured not to use this loader.');

    var loader = this;
    var pluginLoader = loader.pluginLoader || loader;

    // we only output ES modules when running in the builder
    var outputESM = traceOpts ? traceOpts.outputESM : loader.builder;

    var babelOptions = {};

    if (load.metadata.babelOptions) prepend(babelOptions, load.metadata.babelOptions);

    if (loader.babelOptions) prepend(babelOptions, loader.babelOptions);

    prepend(babelOptions, defaultBabelOptions);

    // determine any plugins or preset strings which need to be imported as modules
    var pluginAndPresetModuleLoads = [];

    if (babelOptions.presets) babelOptions.presets.forEach(function (preset) {
      if (typeof preset == 'string') pluginAndPresetModuleLoads.push(pluginLoader['import'](preset, module.id));
    });

    if (babelOptions.plugins) babelOptions.plugins.forEach(function (plugin) {
      plugin = typeof plugin == 'string' ? plugin : Array.isArray(plugin) && typeof plugin[0] == 'string' && plugin[0];
      if (!plugin) return;
      pluginAndPresetModuleLoads.push(pluginLoader.import(plugin, module.id).then(function (m) {
        return m.default || m;
      }));
    });

    return Promise.all(pluginAndPresetModuleLoads).then(function (pluginAndPresetModules) {
      var curPluginOrPresetModule = 0;

      var presets = [];
      var plugins = [];

      if (babelOptions.modularRuntime) {
        if (load.metadata.format == 'cjs') throw new TypeError('plugin-babel does not support modular runtime for CJS module transpilations. Set babelOptions.modularRuntime: false if needed.');
        presets.push(runtimeTransform);
      } else {
        if (load.metadata.format == 'cjs') load.source = 'var babelHelpers = require("' + externalHelpersPath + '");' + load.source;else load.source = 'import babelHelpers from "' + externalHelpersPath + '";' + load.source;
        presets.push(externalHelpers);
      }

      if (babelOptions.es2015) presets.push(outputESM || load.metadata.format == 'cjs' ? es2015 : es2015Register);else if (!(outputESM || load.metadata.format == 'cjs')) presets.push(modulesRegister);

      if (babelOptions.stage3) presets.push({
        plugins: stage3
      });

      if (babelOptions.stage2) presets.push({
        plugins: stage2
      });

      if (babelOptions.stage1) presets.push({
        plugins: stage1
      });

      if (babelOptions.react) presets.push({
        plugins: react
      });

      if (babelOptions.presets) babelOptions.presets.forEach(function (preset) {
        if (typeof preset == 'string') presets.push(pluginAndPresetModules[curPluginOrPresetModule++]);else presets.push(preset);
      });

      if (babelOptions.plugins) babelOptions.plugins.forEach(function (plugin) {
        if (typeof plugin == 'string') plugins.push(pluginAndPresetModules[curPluginOrPresetModule++]);else if (Array.isArray(plugin) && typeof plugin[0] == 'string') plugins.push([pluginAndPresetModules[curPluginOrPresetModule++], plugin[1]]);else plugins.push(plugin);
      });

      var output = babel.transform(load.source, {
        babelrc: false,
        plugins: plugins,
        presets: presets,
        filename: load.address,
        sourceFileName: load.address,
        moduleIds: false,
        sourceMaps: traceOpts && traceOpts.sourceMaps || babelOptions.sourceMaps,
        inputSourceMap: load.metadata.sourceMap,
        compact: babelOptions.compact,
        comments: babelOptions.comments,
        code: true,
        ast: true,
        resolveModuleSource: function (m) {
          if (m.substr(0, 22) == 'babel-runtime/helpers/') {
            m = modularHelpersPath + m.substr(22) + '.js';
          } else if (m == 'babel-runtime/regenerator') {
            m = regeneratorRuntimePath;
          } else if (m.substr(0, 14) == 'babel-runtime/') {
            if (!babelRuntimePath) {
              babelRuntimePath = System.decanonicalize('babel-runtime/', module.id);
              if (babelRuntimePath[babelRuntimePath.length - 1] !== '/') babelRuntimePath += '/';
              if (babelRuntimePath.substr(babelRuntimePath.length - 3, 3) == '.js') babelRuntimePath = babelRuntimePath.substr(0, babelRuntimePath.length - 3);
              if (loader.getCanonicalName) babelRuntimePath = loader.getCanonicalName(babelRuntimePath);
              if (babelRuntimePath == 'babel-runtime/') throw new Error('The babel-runtime module must be mapped to support modular helpers and builtins. If using jspm run jspm install npm:babel-runtime.');
            }
            m = babelRuntimePath + m.substr(14) + '.js';
          }
          return m;
        }
      });

      // add babelHelpers as a dependency for non-modular runtime
      if (!babelOptions.modularRuntime) load.metadata.deps.push(externalHelpersPath);

      // set output module format
      // (in builder we output modules as esm)
      if (!load.metadata.format || load.metadata.format == 'detect' || load.metadata.format == 'esm') load.metadata.format = outputESM ? 'esm' : 'register';

      load.metadata.sourceMap = output.map;

      return output.code;
    });
  };
});
//# sourceMappingURL=babel-bundle.js.map